ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.lv_draw_sw_wait_for_finish,"ax",%progbits
  19              		.align	1
  20              		.global	lv_draw_sw_wait_for_finish
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_draw_sw_wait_for_finish:
  26              	.LVL0:
  27              	.LFB58:
  28              		.file 1 "lvgl/src/draw/sw/lv_draw_sw.c"
   1:lvgl/src/draw/sw/lv_draw_sw.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw.c ****  * @file lv_draw_sw.c
   3:lvgl/src/draw/sw/lv_draw_sw.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw.c **** #include "../lv_draw.h"
  10:lvgl/src/draw/sw/lv_draw_sw.c **** #include "lv_draw_sw.h"
  11:lvgl/src/draw/sw/lv_draw_sw.c **** 
  12:lvgl/src/draw/sw/lv_draw_sw.c **** /*********************
  13:lvgl/src/draw/sw/lv_draw_sw.c ****  *      DEFINES
  14:lvgl/src/draw/sw/lv_draw_sw.c ****  *********************/
  15:lvgl/src/draw/sw/lv_draw_sw.c **** 
  16:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  17:lvgl/src/draw/sw/lv_draw_sw.c ****  *      TYPEDEFS
  18:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
  19:lvgl/src/draw/sw/lv_draw_sw.c **** 
  20:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  21:lvgl/src/draw/sw/lv_draw_sw.c ****  *  STATIC PROTOTYPES
  22:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
  23:lvgl/src/draw/sw/lv_draw_sw.c **** 
  24:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  25:lvgl/src/draw/sw/lv_draw_sw.c ****  *  GLOBAL PROTOTYPES
  26:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
  27:lvgl/src/draw/sw/lv_draw_sw.c **** 
  28:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  29:lvgl/src/draw/sw/lv_draw_sw.c ****  *  STATIC VARIABLES
  30:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 2


  31:lvgl/src/draw/sw/lv_draw_sw.c **** 
  32:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  33:lvgl/src/draw/sw/lv_draw_sw.c ****  *      MACROS
  34:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
  35:lvgl/src/draw/sw/lv_draw_sw.c **** 
  36:lvgl/src/draw/sw/lv_draw_sw.c **** /**********************
  37:lvgl/src/draw/sw/lv_draw_sw.c ****  *   GLOBAL FUNCTIONS
  38:lvgl/src/draw/sw/lv_draw_sw.c ****  **********************/
  39:lvgl/src/draw/sw/lv_draw_sw.c **** 
  40:lvgl/src/draw/sw/lv_draw_sw.c **** void lv_draw_sw_init_ctx(lv_disp_drv_t * drv, lv_draw_ctx_t * draw_ctx)
  41:lvgl/src/draw/sw/lv_draw_sw.c **** {
  42:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
  43:lvgl/src/draw/sw/lv_draw_sw.c **** 
  44:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_draw_sw_ctx_t * draw_sw_ctx = (lv_draw_sw_ctx_t *) draw_ctx;
  45:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_memset_00(draw_sw_ctx, sizeof(lv_draw_sw_ctx_t));
  46:lvgl/src/draw/sw/lv_draw_sw.c **** 
  47:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_arc = lv_draw_sw_arc;
  48:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_rect = lv_draw_sw_rect;
  49:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_bg = lv_draw_sw_bg;
  50:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_letter = lv_draw_sw_letter;
  51:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_img_decoded = lv_draw_sw_img_decoded;
  52:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_line = lv_draw_sw_line;
  53:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_polygon = lv_draw_sw_polygon;
  54:lvgl/src/draw/sw/lv_draw_sw.c **** #if LV_DRAW_COMPLEX
  55:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_transform = lv_draw_sw_transform;
  56:lvgl/src/draw/sw/lv_draw_sw.c **** #endif
  57:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.wait_for_finish = lv_draw_sw_wait_for_finish;
  58:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.buffer_copy = lv_draw_sw_buffer_copy;
  59:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_init = lv_draw_sw_layer_create;
  60:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_adjust = lv_draw_sw_layer_adjust;
  61:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_blend = lv_draw_sw_layer_blend;
  62:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_destroy = lv_draw_sw_layer_destroy;
  63:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->blend = lv_draw_sw_blend_basic;
  64:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_ctx->layer_instance_size = sizeof(lv_draw_sw_layer_ctx_t);
  65:lvgl/src/draw/sw/lv_draw_sw.c **** }
  66:lvgl/src/draw/sw/lv_draw_sw.c **** 
  67:lvgl/src/draw/sw/lv_draw_sw.c **** void lv_draw_sw_deinit_ctx(lv_disp_drv_t * drv, lv_draw_ctx_t * draw_ctx)
  68:lvgl/src/draw/sw/lv_draw_sw.c **** {
  69:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
  70:lvgl/src/draw/sw/lv_draw_sw.c **** 
  71:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_draw_sw_ctx_t * draw_sw_ctx = (lv_draw_sw_ctx_t *) draw_ctx;
  72:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_memset_00(draw_sw_ctx, sizeof(lv_draw_sw_ctx_t));
  73:lvgl/src/draw/sw/lv_draw_sw.c **** }
  74:lvgl/src/draw/sw/lv_draw_sw.c **** 
  75:lvgl/src/draw/sw/lv_draw_sw.c **** void lv_draw_sw_wait_for_finish(lv_draw_ctx_t * draw_ctx)
  76:lvgl/src/draw/sw/lv_draw_sw.c **** {
  29              		.loc 1 76 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  77:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(draw_ctx);
  34              		.loc 1 77 5 view .LVU1
  78:lvgl/src/draw/sw/lv_draw_sw.c ****     /*Nothing to wait for*/
  79:lvgl/src/draw/sw/lv_draw_sw.c **** }
  35              		.loc 1 79 1 is_stmt 0 view .LVU2
  36 0000 7047     		bx	lr
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 3


  37              		.cfi_endproc
  38              	.LFE58:
  40              		.section	.text.lv_draw_sw_buffer_copy,"ax",%progbits
  41              		.align	1
  42              		.global	lv_draw_sw_buffer_copy
  43              		.syntax unified
  44              		.thumb
  45              		.thumb_func
  47              	lv_draw_sw_buffer_copy:
  48              	.LVL1:
  49              	.LFB59:
  80:lvgl/src/draw/sw/lv_draw_sw.c **** 
  81:lvgl/src/draw/sw/lv_draw_sw.c **** void lv_draw_sw_buffer_copy(lv_draw_ctx_t * draw_ctx,
  82:lvgl/src/draw/sw/lv_draw_sw.c ****                             void * dest_buf, lv_coord_t dest_stride, const lv_area_t * dest_area,
  83:lvgl/src/draw/sw/lv_draw_sw.c ****                             void * src_buf, lv_coord_t src_stride, const lv_area_t * src_area)
  84:lvgl/src/draw/sw/lv_draw_sw.c **** {
  50              		.loc 1 84 1 is_stmt 1 view -0
  51              		.cfi_startproc
  52              		@ args = 12, pretend = 0, frame = 0
  53              		@ frame_needed = 0, uses_anonymous_args = 0
  54              		.loc 1 84 1 is_stmt 0 view .LVU4
  55 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  56              		.cfi_def_cfa_offset 32
  57              		.cfi_offset 4, -32
  58              		.cfi_offset 5, -28
  59              		.cfi_offset 6, -24
  60              		.cfi_offset 7, -20
  61              		.cfi_offset 8, -16
  62              		.cfi_offset 9, -12
  63              		.cfi_offset 10, -8
  64              		.cfi_offset 14, -4
  65 0004 9146     		mov	r9, r2
  66 0006 9846     		mov	r8, r3
  67 0008 BDF924A0 		ldrsh	r10, [sp, #36]
  68 000c 0A98     		ldr	r0, [sp, #40]
  69              	.LVL2:
  85:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(draw_ctx);
  70              		.loc 1 85 5 is_stmt 1 view .LVU5
  86:lvgl/src/draw/sw/lv_draw_sw.c **** 
  87:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_color_t * dest_bufc =  dest_buf;
  71              		.loc 1 87 5 view .LVU6
  88:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_color_t * src_bufc =  src_buf;
  72              		.loc 1 88 5 view .LVU7
  89:lvgl/src/draw/sw/lv_draw_sw.c **** 
  90:lvgl/src/draw/sw/lv_draw_sw.c ****     /*Got the first pixel of each buffer*/
  91:lvgl/src/draw/sw/lv_draw_sw.c ****     dest_bufc += dest_stride * dest_area->y1;
  73              		.loc 1 91 5 view .LVU8
  74              		.loc 1 91 41 is_stmt 0 view .LVU9
  75 000e B3F90240 		ldrsh	r4, [r3, #2]
  76              	.LVL3:
  92:lvgl/src/draw/sw/lv_draw_sw.c ****     dest_bufc += dest_area->x1;
  77              		.loc 1 92 5 is_stmt 1 view .LVU10
  78              		.loc 1 92 27 is_stmt 0 view .LVU11
  79 0012 B3F90030 		ldrsh	r3, [r3]
  80              	.LVL4:
  81              		.loc 1 92 15 view .LVU12
  82 0016 04FB0236 		mla	r6, r4, r2, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 4


  83 001a 01EB8606 		add	r6, r1, r6, lsl #2
  84              	.LVL5:
  93:lvgl/src/draw/sw/lv_draw_sw.c **** 
  94:lvgl/src/draw/sw/lv_draw_sw.c ****     src_bufc += src_stride * src_area->y1;
  85              		.loc 1 94 5 is_stmt 1 view .LVU13
  86              		.loc 1 94 38 is_stmt 0 view .LVU14
  87 001e B0F90220 		ldrsh	r2, [r0, #2]
  88              	.LVL6:
  95:lvgl/src/draw/sw/lv_draw_sw.c ****     src_bufc += src_area->x1;
  89              		.loc 1 95 5 is_stmt 1 view .LVU15
  90              		.loc 1 95 25 is_stmt 0 view .LVU16
  91 0022 B0F90050 		ldrsh	r5, [r0]
  92              		.loc 1 95 14 view .LVU17
  93 0026 02FB0A52 		mla	r2, r2, r10, r5
  94              	.LVL7:
  95              		.loc 1 95 14 view .LVU18
  96 002a 089D     		ldr	r5, [sp, #32]
  97 002c 05EB8205 		add	r5, r5, r2, lsl #2
  98              	.LVL8:
  96:lvgl/src/draw/sw/lv_draw_sw.c **** 
  97:lvgl/src/draw/sw/lv_draw_sw.c ****     uint32_t line_length = lv_area_get_width(dest_area) * sizeof(lv_color_t);
  99              		.loc 1 97 5 is_stmt 1 view .LVU19
 100              	.LBB4:
 101              	.LBI4:
 102              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @file lv_area.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_AREA_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdbool.h>
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdint.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int32_t lv_coord_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #else
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int16_t lv_coord_t;
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      TYPEDEFS
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 5


  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Represents a point on the screen.
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x;
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y;
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_point_t;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Represents an area of the screen.*/
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x1;
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y1;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x2;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y2;
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_area_t;
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Alignments*/
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_MID,
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_CENTER,
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_dir_t;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 6


  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * GLOBAL PROTOTYPES
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Initialize an area
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x1 left coordinate of the area
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y1 top coordinate of the area
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x2 right coordinate of the area
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y2 bottom coordinate of the area
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Copy an area
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param dest pointer to the destination area
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param src pointer to the source area
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x1 = src->x1;
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** }
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Get the width of an area
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 103              		.loc 2 123 26 view .LVU20
 104              	.LBB5:
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 105              		.loc 2 125 5 view .LVU21
 106              		.loc 2 125 31 is_stmt 0 view .LVU22
 107 0030 B8F80470 		ldrh	r7, [r8, #4]
 108              		.loc 2 125 44 view .LVU23
 109 0034 9BB2     		uxth	r3, r3
 110              		.loc 2 125 36 view .LVU24
 111 0036 FF1A     		subs	r7, r7, r3
 112 0038 BFB2     		uxth	r7, r7
 113              		.loc 2 125 49 view .LVU25
 114 003a 0137     		adds	r7, r7, #1
 115              		.loc 2 125 12 view .LVU26
 116 003c 3FB2     		sxth	r7, r7
 117              	.LVL9:
 118              		.loc 2 125 12 view .LVU27
 119              	.LBE5:
 120              	.LBE4:
 121              		.loc 1 97 14 view .LVU28
 122 003e BF00     		lsls	r7, r7, #2
 123              	.LVL10:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 7


  98:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_coord_t y;
 124              		.loc 1 98 5 is_stmt 1 view .LVU29
  99:lvgl/src/draw/sw/lv_draw_sw.c ****     for(y = dest_area->y1; y <= dest_area->y2; y++) {
 125              		.loc 1 99 5 view .LVU30
 126              		.loc 1 99 5 is_stmt 0 view .LVU31
 127 0040 0AE0     		b	.L3
 128              	.LVL11:
 129              	.L4:
 100:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 130              		.loc 1 100 9 is_stmt 1 discriminator 3 view .LVU32
 131 0042 3A46     		mov	r2, r7
 132 0044 2946     		mov	r1, r5
 133 0046 3046     		mov	r0, r6
 134 0048 FFF7FEFF 		bl	lv_memcpy
 135              	.LVL12:
 101:lvgl/src/draw/sw/lv_draw_sw.c ****         dest_bufc += dest_stride;
 136              		.loc 1 101 9 discriminator 3 view .LVU33
 137              		.loc 1 101 19 is_stmt 0 discriminator 3 view .LVU34
 138 004c 06EB8906 		add	r6, r6, r9, lsl #2
 139              	.LVL13:
 102:lvgl/src/draw/sw/lv_draw_sw.c ****         src_bufc += src_stride;
 140              		.loc 1 102 9 is_stmt 1 discriminator 3 view .LVU35
 141              		.loc 1 102 18 is_stmt 0 discriminator 3 view .LVU36
 142 0050 05EB8A05 		add	r5, r5, r10, lsl #2
 143              	.LVL14:
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 144              		.loc 1 99 48 is_stmt 1 discriminator 3 view .LVU37
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 145              		.loc 1 99 49 is_stmt 0 discriminator 3 view .LVU38
 146 0054 0134     		adds	r4, r4, #1
 147              	.LVL15:
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 148              		.loc 1 99 49 discriminator 3 view .LVU39
 149 0056 24B2     		sxth	r4, r4
 150              	.LVL16:
 151              	.L3:
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 152              		.loc 1 99 28 is_stmt 1 discriminator 1 view .LVU40
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 153              		.loc 1 99 42 is_stmt 0 discriminator 1 view .LVU41
 154 0058 B8F90610 		ldrsh	r1, [r8, #6]
  99:lvgl/src/draw/sw/lv_draw_sw.c ****         lv_memcpy(dest_bufc, src_bufc, line_length);
 155              		.loc 1 99 5 discriminator 1 view .LVU42
 156 005c A142     		cmp	r1, r4
 157 005e F0DA     		bge	.L4
 103:lvgl/src/draw/sw/lv_draw_sw.c ****     }
 104:lvgl/src/draw/sw/lv_draw_sw.c **** }
 158              		.loc 1 104 1 view .LVU43
 159 0060 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 160              		.loc 1 104 1 view .LVU44
 161              		.cfi_endproc
 162              	.LFE59:
 164              		.section	.text.lv_draw_sw_init_ctx,"ax",%progbits
 165              		.align	1
 166              		.global	lv_draw_sw_init_ctx
 167              		.syntax unified
 168              		.thumb
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 8


 169              		.thumb_func
 171              	lv_draw_sw_init_ctx:
 172              	.LVL17:
 173              	.LFB56:
  41:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
 174              		.loc 1 41 1 is_stmt 1 view -0
 175              		.cfi_startproc
 176              		@ args = 0, pretend = 0, frame = 0
 177              		@ frame_needed = 0, uses_anonymous_args = 0
  41:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
 178              		.loc 1 41 1 is_stmt 0 view .LVU46
 179 0000 10B5     		push	{r4, lr}
 180              		.cfi_def_cfa_offset 8
 181              		.cfi_offset 4, -8
 182              		.cfi_offset 14, -4
 183 0002 0C46     		mov	r4, r1
  42:lvgl/src/draw/sw/lv_draw_sw.c **** 
 184              		.loc 1 42 5 is_stmt 1 view .LVU47
  44:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_memset_00(draw_sw_ctx, sizeof(lv_draw_sw_ctx_t));
 185              		.loc 1 44 5 view .LVU48
 186              	.LVL18:
  45:lvgl/src/draw/sw/lv_draw_sw.c **** 
 187              		.loc 1 45 5 view .LVU49
 188 0004 5821     		movs	r1, #88
 189              	.LVL19:
  45:lvgl/src/draw/sw/lv_draw_sw.c **** 
 190              		.loc 1 45 5 is_stmt 0 view .LVU50
 191 0006 2046     		mov	r0, r4
 192              	.LVL20:
  45:lvgl/src/draw/sw/lv_draw_sw.c **** 
 193              		.loc 1 45 5 view .LVU51
 194 0008 FFF7FEFF 		bl	lv_memset_00
 195              	.LVL21:
  47:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_rect = lv_draw_sw_rect;
 196              		.loc 1 47 5 is_stmt 1 view .LVU52
  47:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_rect = lv_draw_sw_rect;
 197              		.loc 1 47 37 is_stmt 0 view .LVU53
 198 000c 104B     		ldr	r3, .L8
 199 000e 6361     		str	r3, [r4, #20]
  48:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_bg = lv_draw_sw_bg;
 200              		.loc 1 48 5 is_stmt 1 view .LVU54
  48:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_bg = lv_draw_sw_bg;
 201              		.loc 1 48 38 is_stmt 0 view .LVU55
 202 0010 104B     		ldr	r3, .L8+4
 203 0012 2361     		str	r3, [r4, #16]
  49:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_letter = lv_draw_sw_letter;
 204              		.loc 1 49 5 is_stmt 1 view .LVU56
  49:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_letter = lv_draw_sw_letter;
 205              		.loc 1 49 36 is_stmt 0 view .LVU57
 206 0014 104B     		ldr	r3, .L8+8
 207 0016 2363     		str	r3, [r4, #48]
  50:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_img_decoded = lv_draw_sw_img_decoded;
 208              		.loc 1 50 5 is_stmt 1 view .LVU58
  50:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_img_decoded = lv_draw_sw_img_decoded;
 209              		.loc 1 50 40 is_stmt 0 view .LVU59
 210 0018 104B     		ldr	r3, .L8+12
 211 001a 2362     		str	r3, [r4, #32]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 9


  51:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_line = lv_draw_sw_line;
 212              		.loc 1 51 5 is_stmt 1 view .LVU60
  51:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_line = lv_draw_sw_line;
 213              		.loc 1 51 45 is_stmt 0 view .LVU61
 214 001c 104B     		ldr	r3, .L8+16
 215 001e A361     		str	r3, [r4, #24]
  52:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_polygon = lv_draw_sw_polygon;
 216              		.loc 1 52 5 is_stmt 1 view .LVU62
  52:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.draw_polygon = lv_draw_sw_polygon;
 217              		.loc 1 52 38 is_stmt 0 view .LVU63
 218 0020 104B     		ldr	r3, .L8+20
 219 0022 6362     		str	r3, [r4, #36]
  53:lvgl/src/draw/sw/lv_draw_sw.c **** #if LV_DRAW_COMPLEX
 220              		.loc 1 53 5 is_stmt 1 view .LVU64
  53:lvgl/src/draw/sw/lv_draw_sw.c **** #if LV_DRAW_COMPLEX
 221              		.loc 1 53 41 is_stmt 0 view .LVU65
 222 0024 104B     		ldr	r3, .L8+24
 223 0026 A362     		str	r3, [r4, #40]
  55:lvgl/src/draw/sw/lv_draw_sw.c **** #endif
 224              		.loc 1 55 5 is_stmt 1 view .LVU66
  55:lvgl/src/draw/sw/lv_draw_sw.c **** #endif
 225              		.loc 1 55 43 is_stmt 0 view .LVU67
 226 0028 104B     		ldr	r3, .L8+28
 227 002a E362     		str	r3, [r4, #44]
  57:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.buffer_copy = lv_draw_sw_buffer_copy;
 228              		.loc 1 57 5 is_stmt 1 view .LVU68
  57:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.buffer_copy = lv_draw_sw_buffer_copy;
 229              		.loc 1 57 44 is_stmt 0 view .LVU69
 230 002c 104B     		ldr	r3, .L8+32
 231 002e 6363     		str	r3, [r4, #52]
  58:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_init = lv_draw_sw_layer_create;
 232              		.loc 1 58 5 is_stmt 1 view .LVU70
  58:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_init = lv_draw_sw_layer_create;
 233              		.loc 1 58 40 is_stmt 0 view .LVU71
 234 0030 104B     		ldr	r3, .L8+36
 235 0032 A363     		str	r3, [r4, #56]
  59:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_adjust = lv_draw_sw_layer_adjust;
 236              		.loc 1 59 5 is_stmt 1 view .LVU72
  59:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_adjust = lv_draw_sw_layer_adjust;
 237              		.loc 1 59 39 is_stmt 0 view .LVU73
 238 0034 104B     		ldr	r3, .L8+40
 239 0036 E363     		str	r3, [r4, #60]
  60:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_blend = lv_draw_sw_layer_blend;
 240              		.loc 1 60 5 is_stmt 1 view .LVU74
  60:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_blend = lv_draw_sw_layer_blend;
 241              		.loc 1 60 41 is_stmt 0 view .LVU75
 242 0038 104B     		ldr	r3, .L8+44
 243 003a 2364     		str	r3, [r4, #64]
  61:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_destroy = lv_draw_sw_layer_destroy;
 244              		.loc 1 61 5 is_stmt 1 view .LVU76
  61:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->base_draw.layer_destroy = lv_draw_sw_layer_destroy;
 245              		.loc 1 61 40 is_stmt 0 view .LVU77
 246 003c 104B     		ldr	r3, .L8+48
 247 003e 6364     		str	r3, [r4, #68]
  62:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->blend = lv_draw_sw_blend_basic;
 248              		.loc 1 62 5 is_stmt 1 view .LVU78
  62:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_sw_ctx->blend = lv_draw_sw_blend_basic;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 10


 249              		.loc 1 62 42 is_stmt 0 view .LVU79
 250 0040 104B     		ldr	r3, .L8+52
 251 0042 A364     		str	r3, [r4, #72]
  63:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_ctx->layer_instance_size = sizeof(lv_draw_sw_layer_ctx_t);
 252              		.loc 1 63 5 is_stmt 1 view .LVU80
  63:lvgl/src/draw/sw/lv_draw_sw.c ****     draw_ctx->layer_instance_size = sizeof(lv_draw_sw_layer_ctx_t);
 253              		.loc 1 63 24 is_stmt 0 view .LVU81
 254 0044 104B     		ldr	r3, .L8+56
 255 0046 6365     		str	r3, [r4, #84]
  64:lvgl/src/draw/sw/lv_draw_sw.c **** }
 256              		.loc 1 64 5 is_stmt 1 view .LVU82
  64:lvgl/src/draw/sw/lv_draw_sw.c **** }
 257              		.loc 1 64 35 is_stmt 0 view .LVU83
 258 0048 2C23     		movs	r3, #44
 259 004a E364     		str	r3, [r4, #76]
  65:lvgl/src/draw/sw/lv_draw_sw.c **** 
 260              		.loc 1 65 1 view .LVU84
 261 004c 10BD     		pop	{r4, pc}
 262              	.LVL22:
 263              	.L9:
  65:lvgl/src/draw/sw/lv_draw_sw.c **** 
 264              		.loc 1 65 1 view .LVU85
 265 004e 00BF     		.align	2
 266              	.L8:
 267 0050 00000000 		.word	lv_draw_sw_arc
 268 0054 00000000 		.word	lv_draw_sw_rect
 269 0058 00000000 		.word	lv_draw_sw_bg
 270 005c 00000000 		.word	lv_draw_sw_letter
 271 0060 00000000 		.word	lv_draw_sw_img_decoded
 272 0064 00000000 		.word	lv_draw_sw_line
 273 0068 00000000 		.word	lv_draw_sw_polygon
 274 006c 00000000 		.word	lv_draw_sw_transform
 275 0070 00000000 		.word	lv_draw_sw_wait_for_finish
 276 0074 00000000 		.word	lv_draw_sw_buffer_copy
 277 0078 00000000 		.word	lv_draw_sw_layer_create
 278 007c 00000000 		.word	lv_draw_sw_layer_adjust
 279 0080 00000000 		.word	lv_draw_sw_layer_blend
 280 0084 00000000 		.word	lv_draw_sw_layer_destroy
 281 0088 00000000 		.word	lv_draw_sw_blend_basic
 282              		.cfi_endproc
 283              	.LFE56:
 285              		.section	.text.lv_draw_sw_deinit_ctx,"ax",%progbits
 286              		.align	1
 287              		.global	lv_draw_sw_deinit_ctx
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 292              	lv_draw_sw_deinit_ctx:
 293              	.LVL23:
 294              	.LFB57:
  68:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
 295              		.loc 1 68 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
  68:lvgl/src/draw/sw/lv_draw_sw.c ****     LV_UNUSED(drv);
 299              		.loc 1 68 1 is_stmt 0 view .LVU87
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 11


 300 0000 08B5     		push	{r3, lr}
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 304 0002 0846     		mov	r0, r1
 305              	.LVL24:
  69:lvgl/src/draw/sw/lv_draw_sw.c **** 
 306              		.loc 1 69 5 is_stmt 1 view .LVU88
  71:lvgl/src/draw/sw/lv_draw_sw.c ****     lv_memset_00(draw_sw_ctx, sizeof(lv_draw_sw_ctx_t));
 307              		.loc 1 71 5 view .LVU89
  72:lvgl/src/draw/sw/lv_draw_sw.c **** }
 308              		.loc 1 72 5 view .LVU90
 309 0004 5821     		movs	r1, #88
 310              	.LVL25:
  72:lvgl/src/draw/sw/lv_draw_sw.c **** }
 311              		.loc 1 72 5 is_stmt 0 view .LVU91
 312 0006 FFF7FEFF 		bl	lv_memset_00
 313              	.LVL26:
  73:lvgl/src/draw/sw/lv_draw_sw.c **** 
 314              		.loc 1 73 1 view .LVU92
 315 000a 08BD     		pop	{r3, pc}
 316              		.cfi_endproc
 317              	.LFE57:
 319              		.text
 320              	.Letext0:
 321              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 322              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 323              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 324              		.file 6 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 325              		.file 7 "lvgl/src/draw/sw/../../misc/lv_types.h"
 326              		.file 8 "lvgl/src/draw/sw/../../misc/lv_color.h"
 327              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 328              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 329              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 330              		.file 12 "lvgl/src/draw/sw/../lv_img_buf.h"
 331              		.file 13 "lvgl/src/draw/sw/../lv_draw_rect.h"
 332              		.file 14 "lvgl/src/draw/sw/../lv_draw_label.h"
 333              		.file 15 "lvgl/src/draw/sw/../lv_draw_img.h"
 334              		.file 16 "lvgl/src/draw/sw/../lv_draw_line.h"
 335              		.file 17 "lvgl/src/draw/sw/../lv_draw_arc.h"
 336              		.file 18 "lvgl/src/draw/sw/../lv_draw_mask.h"
 337              		.file 19 "lvgl/src/draw/sw/../lv_draw_layer.h"
 338              		.file 20 "lvgl/src/draw/sw/../lv_draw.h"
 339              		.file 21 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 340              		.file 22 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 341              		.file 23 "lvgl/src/draw/sw/lv_draw_sw.h"
 342              		.file 24 "lvgl/src/draw/sw/../../misc/lv_mem.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw.c
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:19     .text.lv_draw_sw_wait_for_finish:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:25     .text.lv_draw_sw_wait_for_finish:00000000 lv_draw_sw_wait_for_finish
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:41     .text.lv_draw_sw_buffer_copy:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:47     .text.lv_draw_sw_buffer_copy:00000000 lv_draw_sw_buffer_copy
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:165    .text.lv_draw_sw_init_ctx:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:171    .text.lv_draw_sw_init_ctx:00000000 lv_draw_sw_init_ctx
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:267    .text.lv_draw_sw_init_ctx:00000050 $d
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:286    .text.lv_draw_sw_deinit_ctx:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc5b8uAp.s:292    .text.lv_draw_sw_deinit_ctx:00000000 lv_draw_sw_deinit_ctx

UNDEFINED SYMBOLS
lv_memcpy
lv_memset_00
lv_draw_sw_arc
lv_draw_sw_rect
lv_draw_sw_bg
lv_draw_sw_letter
lv_draw_sw_img_decoded
lv_draw_sw_line
lv_draw_sw_polygon
lv_draw_sw_transform
lv_draw_sw_layer_create
lv_draw_sw_layer_adjust
lv_draw_sw_layer_blend
lv_draw_sw_layer_destroy
lv_draw_sw_blend_basic
