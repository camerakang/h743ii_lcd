ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_slider.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.is_slider_horizontal,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	is_slider_horizontal:
  25              	.LVL0:
  26              	.LFB182:
  27              		.file 1 "lvgl/src/widgets/lv_slider.c"
   1:lvgl/src/widgets/lv_slider.c **** /**
   2:lvgl/src/widgets/lv_slider.c ****  * @file lv_slider.c
   3:lvgl/src/widgets/lv_slider.c ****  *
   4:lvgl/src/widgets/lv_slider.c ****  */
   5:lvgl/src/widgets/lv_slider.c **** 
   6:lvgl/src/widgets/lv_slider.c **** /*********************
   7:lvgl/src/widgets/lv_slider.c ****  *      INCLUDES
   8:lvgl/src/widgets/lv_slider.c ****  *********************/
   9:lvgl/src/widgets/lv_slider.c **** #include "lv_slider.h"
  10:lvgl/src/widgets/lv_slider.c **** #if LV_USE_SLIDER != 0
  11:lvgl/src/widgets/lv_slider.c **** 
  12:lvgl/src/widgets/lv_slider.c **** #include "../misc/lv_assert.h"
  13:lvgl/src/widgets/lv_slider.c **** #include "../core/lv_group.h"
  14:lvgl/src/widgets/lv_slider.c **** #include "../core/lv_indev.h"
  15:lvgl/src/widgets/lv_slider.c **** #include "../draw/lv_draw.h"
  16:lvgl/src/widgets/lv_slider.c **** #include "../misc/lv_math.h"
  17:lvgl/src/widgets/lv_slider.c **** #include "../core/lv_disp.h"
  18:lvgl/src/widgets/lv_slider.c **** #include "lv_img.h"
  19:lvgl/src/widgets/lv_slider.c **** 
  20:lvgl/src/widgets/lv_slider.c **** /*********************
  21:lvgl/src/widgets/lv_slider.c ****  *      DEFINES
  22:lvgl/src/widgets/lv_slider.c ****  *********************/
  23:lvgl/src/widgets/lv_slider.c **** #define MY_CLASS &lv_slider_class
  24:lvgl/src/widgets/lv_slider.c **** 
  25:lvgl/src/widgets/lv_slider.c **** #define LV_SLIDER_KNOB_COORD(is_rtl, area) (is_rtl ? area.x1 : area.x2)
  26:lvgl/src/widgets/lv_slider.c **** 
  27:lvgl/src/widgets/lv_slider.c **** /**********************
  28:lvgl/src/widgets/lv_slider.c ****  *      TYPEDEFS
  29:lvgl/src/widgets/lv_slider.c ****  **********************/
  30:lvgl/src/widgets/lv_slider.c **** 
  31:lvgl/src/widgets/lv_slider.c **** /**********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 2


  32:lvgl/src/widgets/lv_slider.c ****  *  STATIC PROTOTYPES
  33:lvgl/src/widgets/lv_slider.c ****  **********************/
  34:lvgl/src/widgets/lv_slider.c **** static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  35:lvgl/src/widgets/lv_slider.c **** static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e);
  36:lvgl/src/widgets/lv_slider.c **** static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, const lv_coord_t knob_size, const 
  37:lvgl/src/widgets/lv_slider.c **** static void draw_knob(lv_event_t * e);
  38:lvgl/src/widgets/lv_slider.c **** static bool is_slider_horizontal(lv_obj_t * obj);
  39:lvgl/src/widgets/lv_slider.c **** 
  40:lvgl/src/widgets/lv_slider.c **** /**********************
  41:lvgl/src/widgets/lv_slider.c ****  *  STATIC VARIABLES
  42:lvgl/src/widgets/lv_slider.c ****  **********************/
  43:lvgl/src/widgets/lv_slider.c **** const lv_obj_class_t lv_slider_class = {
  44:lvgl/src/widgets/lv_slider.c ****     .constructor_cb = lv_slider_constructor,
  45:lvgl/src/widgets/lv_slider.c ****     .event_cb = lv_slider_event,
  46:lvgl/src/widgets/lv_slider.c ****     .editable = LV_OBJ_CLASS_EDITABLE_TRUE,
  47:lvgl/src/widgets/lv_slider.c ****     .group_def = LV_OBJ_CLASS_GROUP_DEF_TRUE,
  48:lvgl/src/widgets/lv_slider.c ****     .instance_size = sizeof(lv_slider_t),
  49:lvgl/src/widgets/lv_slider.c ****     .base_class = &lv_bar_class
  50:lvgl/src/widgets/lv_slider.c **** };
  51:lvgl/src/widgets/lv_slider.c **** 
  52:lvgl/src/widgets/lv_slider.c **** /**********************
  53:lvgl/src/widgets/lv_slider.c ****  *      MACROS
  54:lvgl/src/widgets/lv_slider.c ****  **********************/
  55:lvgl/src/widgets/lv_slider.c **** 
  56:lvgl/src/widgets/lv_slider.c **** /**********************
  57:lvgl/src/widgets/lv_slider.c ****  *   GLOBAL FUNCTIONS
  58:lvgl/src/widgets/lv_slider.c ****  **********************/
  59:lvgl/src/widgets/lv_slider.c **** 
  60:lvgl/src/widgets/lv_slider.c **** lv_obj_t * lv_slider_create(lv_obj_t * parent)
  61:lvgl/src/widgets/lv_slider.c **** {
  62:lvgl/src/widgets/lv_slider.c ****     LV_LOG_INFO("begin");
  63:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
  64:lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
  65:lvgl/src/widgets/lv_slider.c ****     return obj;
  66:lvgl/src/widgets/lv_slider.c **** }
  67:lvgl/src/widgets/lv_slider.c **** 
  68:lvgl/src/widgets/lv_slider.c **** bool lv_slider_is_dragged(const lv_obj_t * obj)
  69:lvgl/src/widgets/lv_slider.c **** {
  70:lvgl/src/widgets/lv_slider.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
  71:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
  72:lvgl/src/widgets/lv_slider.c **** 
  73:lvgl/src/widgets/lv_slider.c ****     return slider->dragging ? true : false;
  74:lvgl/src/widgets/lv_slider.c **** }
  75:lvgl/src/widgets/lv_slider.c **** 
  76:lvgl/src/widgets/lv_slider.c **** /**********************
  77:lvgl/src/widgets/lv_slider.c ****  *   STATIC FUNCTIONS
  78:lvgl/src/widgets/lv_slider.c ****  **********************/
  79:lvgl/src/widgets/lv_slider.c **** 
  80:lvgl/src/widgets/lv_slider.c **** static void lv_slider_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
  81:lvgl/src/widgets/lv_slider.c **** {
  82:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
  83:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
  84:lvgl/src/widgets/lv_slider.c **** 
  85:lvgl/src/widgets/lv_slider.c ****     /*Initialize the allocated 'slider'*/
  86:lvgl/src/widgets/lv_slider.c ****     slider->value_to_set = NULL;
  87:lvgl/src/widgets/lv_slider.c ****     slider->dragging = 0U;
  88:lvgl/src/widgets/lv_slider.c ****     slider->left_knob_focus = 0U;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 3


  89:lvgl/src/widgets/lv_slider.c **** 
  90:lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLL_CHAIN);
  91:lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
  92:lvgl/src/widgets/lv_slider.c ****     lv_obj_set_ext_click_area(obj, LV_DPX(8));
  93:lvgl/src/widgets/lv_slider.c **** }
  94:lvgl/src/widgets/lv_slider.c **** 
  95:lvgl/src/widgets/lv_slider.c **** static void lv_slider_event(const lv_obj_class_t * class_p, lv_event_t * e)
  96:lvgl/src/widgets/lv_slider.c **** {
  97:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
  98:lvgl/src/widgets/lv_slider.c **** 
  99:lvgl/src/widgets/lv_slider.c ****     lv_res_t res;
 100:lvgl/src/widgets/lv_slider.c **** 
 101:lvgl/src/widgets/lv_slider.c ****     /*Call the ancestor's event handler*/
 102:lvgl/src/widgets/lv_slider.c ****     res = lv_obj_event_base(MY_CLASS, e);
 103:lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 104:lvgl/src/widgets/lv_slider.c **** 
 105:lvgl/src/widgets/lv_slider.c ****     lv_event_code_t code = lv_event_get_code(e);
 106:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 107:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 108:lvgl/src/widgets/lv_slider.c ****     lv_slider_mode_t type = lv_slider_get_mode(obj);
 109:lvgl/src/widgets/lv_slider.c **** 
 110:lvgl/src/widgets/lv_slider.c ****     /*Advanced hit testing: react only on dragging the knob(s)*/
 111:lvgl/src/widgets/lv_slider.c ****     if(code == LV_EVENT_HIT_TEST) {
 112:lvgl/src/widgets/lv_slider.c ****         lv_hit_test_info_t * info = lv_event_get_param(e);
 113:lvgl/src/widgets/lv_slider.c ****         lv_coord_t ext_click_area = obj->spec_attr ? obj->spec_attr->ext_click_pad : 0;
 114:lvgl/src/widgets/lv_slider.c **** 
 115:lvgl/src/widgets/lv_slider.c ****         /*Ordinary slider: was the knob area hit?*/
 116:lvgl/src/widgets/lv_slider.c ****         lv_area_t a;
 117:lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&a, &slider->right_knob_area);
 118:lvgl/src/widgets/lv_slider.c ****         lv_area_increase(&a, ext_click_area, ext_click_area);
 119:lvgl/src/widgets/lv_slider.c ****         info->res = _lv_area_is_point_on(&a, info->point, 0);
 120:lvgl/src/widgets/lv_slider.c **** 
 121:lvgl/src/widgets/lv_slider.c ****         /*There's still a chance that there is a hit if there is another knob*/
 122:lvgl/src/widgets/lv_slider.c ****         if((info->res == false) && (type == LV_SLIDER_MODE_RANGE)) {
 123:lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 124:lvgl/src/widgets/lv_slider.c ****             lv_area_increase(&a, ext_click_area, ext_click_area);
 125:lvgl/src/widgets/lv_slider.c ****             info->res = _lv_area_is_point_on(&a, info->point, 0);
 126:lvgl/src/widgets/lv_slider.c ****         }
 127:lvgl/src/widgets/lv_slider.c ****     }
 128:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_PRESSED) {
 129:lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 130:lvgl/src/widgets/lv_slider.c **** 
 131:lvgl/src/widgets/lv_slider.c ****         lv_point_t p;
 132:lvgl/src/widgets/lv_slider.c ****         slider->dragging = true;
 133:lvgl/src/widgets/lv_slider.c ****         if(type == LV_SLIDER_MODE_NORMAL || type == LV_SLIDER_MODE_SYMMETRICAL) {
 134:lvgl/src/widgets/lv_slider.c ****             slider->value_to_set = &slider->bar.cur_value;
 135:lvgl/src/widgets/lv_slider.c ****         }
 136:lvgl/src/widgets/lv_slider.c ****         else if(type == LV_SLIDER_MODE_RANGE) {
 137:lvgl/src/widgets/lv_slider.c ****             lv_indev_get_point(lv_indev_get_act(), &p);
 138:lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 139:lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 140:lvgl/src/widgets/lv_slider.c **** 
 141:lvgl/src/widgets/lv_slider.c ****             lv_coord_t dist_left, dist_right;
 142:lvgl/src/widgets/lv_slider.c ****             if(hor) {
 143:lvgl/src/widgets/lv_slider.c ****                 if((base_dir != LV_BASE_DIR_RTL && p.x > slider->right_knob_area.x2) || (base_dir =
 144:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 145:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 4


 146:lvgl/src/widgets/lv_slider.c ****                 }
 147:lvgl/src/widgets/lv_slider.c ****                 else if((base_dir != LV_BASE_DIR_RTL && p.x < slider->left_knob_area.x1) || (base_d
 148:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 149:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 150:lvgl/src/widgets/lv_slider.c ****                 }
 151:lvgl/src/widgets/lv_slider.c ****                 else {
 152:lvgl/src/widgets/lv_slider.c ****                     /*Calculate the distance from each knob*/
 153:lvgl/src/widgets/lv_slider.c ****                     dist_left = LV_ABS((slider->left_knob_area.x1 + (slider->left_knob_area.x2 - sl
 154:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 155:lvgl/src/widgets/lv_slider.c **** 
 156:lvgl/src/widgets/lv_slider.c ****                     /*Use whichever one is closer*/
 157:lvgl/src/widgets/lv_slider.c ****                     if(dist_right < dist_left) {
 158:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 159:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 160:lvgl/src/widgets/lv_slider.c ****                     }
 161:lvgl/src/widgets/lv_slider.c ****                     else {
 162:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.start_value;
 163:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 164:lvgl/src/widgets/lv_slider.c ****                     }
 165:lvgl/src/widgets/lv_slider.c ****                 }
 166:lvgl/src/widgets/lv_slider.c ****             }
 167:lvgl/src/widgets/lv_slider.c ****             else {
 168:lvgl/src/widgets/lv_slider.c ****                 if(p.y < slider->right_knob_area.y1) {
 169:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 170:lvgl/src/widgets/lv_slider.c ****                 }
 171:lvgl/src/widgets/lv_slider.c ****                 else if(p.y > slider->left_knob_area.y2) {
 172:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 173:lvgl/src/widgets/lv_slider.c ****                 }
 174:lvgl/src/widgets/lv_slider.c ****                 else {
 175:lvgl/src/widgets/lv_slider.c ****                     /*Calculate the distance from each knob*/
 176:lvgl/src/widgets/lv_slider.c ****                     dist_left = LV_ABS((slider->left_knob_area.y1 + (slider->left_knob_area.y2 - sl
 177:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 178:lvgl/src/widgets/lv_slider.c **** 
 179:lvgl/src/widgets/lv_slider.c ****                     /*Use whichever one is closer*/
 180:lvgl/src/widgets/lv_slider.c ****                     if(dist_right < dist_left) {
 181:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 182:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 183:lvgl/src/widgets/lv_slider.c ****                     }
 184:lvgl/src/widgets/lv_slider.c ****                     else {
 185:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.start_value;
 186:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 187:lvgl/src/widgets/lv_slider.c ****                     }
 188:lvgl/src/widgets/lv_slider.c ****                 }
 189:lvgl/src/widgets/lv_slider.c ****             }
 190:lvgl/src/widgets/lv_slider.c ****         }
 191:lvgl/src/widgets/lv_slider.c ****     }
 192:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_PRESSING && slider->value_to_set != NULL) {
 193:lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 194:lvgl/src/widgets/lv_slider.c ****         if(lv_indev_get_type(indev) != LV_INDEV_TYPE_POINTER) return;
 195:lvgl/src/widgets/lv_slider.c **** 
 196:lvgl/src/widgets/lv_slider.c ****         lv_point_t p;
 197:lvgl/src/widgets/lv_slider.c ****         lv_indev_get_point(indev, &p);
 198:lvgl/src/widgets/lv_slider.c ****         int32_t new_value = 0;
 199:lvgl/src/widgets/lv_slider.c **** 
 200:lvgl/src/widgets/lv_slider.c ****         const int32_t range = slider->bar.max_value - slider->bar.min_value;
 201:lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 202:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 5


 203:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_right = lv_obj_get_style_pad_right(obj, LV_PART_MAIN);
 204:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t w = lv_obj_get_width(obj);
 205:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 206:lvgl/src/widgets/lv_slider.c **** 
 207:lvgl/src/widgets/lv_slider.c ****             if(lv_obj_get_style_base_dir(obj, LV_PART_MAIN) == LV_BASE_DIR_RTL) {
 208:lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 209:lvgl/src/widgets/lv_slider.c ****                 new_value = (obj->coords.x2 - bg_right) - p.x;
 210:lvgl/src/widgets/lv_slider.c ****             }
 211:lvgl/src/widgets/lv_slider.c ****             else {
 212:lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 213:lvgl/src/widgets/lv_slider.c ****                 new_value = p.x - (obj->coords.x1 + bg_left);
 214:lvgl/src/widgets/lv_slider.c ****             }
 215:lvgl/src/widgets/lv_slider.c ****             new_value = (new_value * range + indic_w / 2) / indic_w;
 216:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 217:lvgl/src/widgets/lv_slider.c ****         }
 218:lvgl/src/widgets/lv_slider.c ****         else {
 219:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_top = lv_obj_get_style_pad_top(obj, LV_PART_MAIN);
 220:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_MAIN);
 221:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t h = lv_obj_get_height(obj);
 222:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 223:lvgl/src/widgets/lv_slider.c **** 
 224:lvgl/src/widgets/lv_slider.c ****             /*Make the point relative to the indicator*/
 225:lvgl/src/widgets/lv_slider.c ****             new_value = p.y - (obj->coords.y2 + bg_bottom);
 226:lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 227:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 228:lvgl/src/widgets/lv_slider.c ****         }
 229:lvgl/src/widgets/lv_slider.c **** 
 230:lvgl/src/widgets/lv_slider.c ****         int32_t real_max_value = slider->bar.max_value;
 231:lvgl/src/widgets/lv_slider.c ****         int32_t real_min_value = slider->bar.min_value;
 232:lvgl/src/widgets/lv_slider.c ****         /*Figure out the min. and max. for this mode*/
 233:lvgl/src/widgets/lv_slider.c ****         if(slider->value_to_set == &slider->bar.start_value) {
 234:lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 235:lvgl/src/widgets/lv_slider.c ****         }
 236:lvgl/src/widgets/lv_slider.c ****         else {
 237:lvgl/src/widgets/lv_slider.c ****             real_min_value = slider->bar.start_value;
 238:lvgl/src/widgets/lv_slider.c ****         }
 239:lvgl/src/widgets/lv_slider.c **** 
 240:lvgl/src/widgets/lv_slider.c ****         new_value = LV_CLAMP(real_min_value, new_value, real_max_value);
 241:lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 242:lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 243:lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_start_value(obj, new_value, LV_ANIM_ON);
 244:lvgl/src/widgets/lv_slider.c ****             }
 245:lvgl/src/widgets/lv_slider.c ****             else {
 246:lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_value(obj, new_value, LV_ANIM_ON);
 247:lvgl/src/widgets/lv_slider.c ****             }
 248:lvgl/src/widgets/lv_slider.c ****             res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 249:lvgl/src/widgets/lv_slider.c ****             if(res != LV_RES_OK) return;
 250:lvgl/src/widgets/lv_slider.c ****         }
 251:lvgl/src/widgets/lv_slider.c **** 
 252:lvgl/src/widgets/lv_slider.c ****     }
 253:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_RELEASED || code == LV_EVENT_PRESS_LOST) {
 254:lvgl/src/widgets/lv_slider.c ****         slider->dragging = false;
 255:lvgl/src/widgets/lv_slider.c ****         slider->value_to_set = NULL;
 256:lvgl/src/widgets/lv_slider.c **** 
 257:lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 258:lvgl/src/widgets/lv_slider.c **** 
 259:lvgl/src/widgets/lv_slider.c ****         /*Leave edit mode if released. (No need to wait for LONG_PRESS)*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 6


 260:lvgl/src/widgets/lv_slider.c ****         lv_group_t * g   = lv_obj_get_group(obj);
 261:lvgl/src/widgets/lv_slider.c ****         bool editing     = lv_group_get_editing(g);
 262:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 263:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 264:lvgl/src/widgets/lv_slider.c ****             if(editing) {
 265:lvgl/src/widgets/lv_slider.c ****                 if(lv_slider_get_mode(obj) == LV_SLIDER_MODE_RANGE) {
 266:lvgl/src/widgets/lv_slider.c ****                     if(slider->left_knob_focus == 0) slider->left_knob_focus = 1;
 267:lvgl/src/widgets/lv_slider.c ****                     else {
 268:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 269:lvgl/src/widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 270:lvgl/src/widgets/lv_slider.c ****                     }
 271:lvgl/src/widgets/lv_slider.c ****                 }
 272:lvgl/src/widgets/lv_slider.c ****                 else {
 273:lvgl/src/widgets/lv_slider.c ****                     lv_group_set_editing(g, false);
 274:lvgl/src/widgets/lv_slider.c ****                 }
 275:lvgl/src/widgets/lv_slider.c ****             }
 276:lvgl/src/widgets/lv_slider.c ****         }
 277:lvgl/src/widgets/lv_slider.c **** 
 278:lvgl/src/widgets/lv_slider.c ****     }
 279:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_FOCUSED) {
 280:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 281:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 282:lvgl/src/widgets/lv_slider.c ****             slider->left_knob_focus = 0;
 283:lvgl/src/widgets/lv_slider.c ****         }
 284:lvgl/src/widgets/lv_slider.c ****     }
 285:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_SIZE_CHANGED) {
 286:lvgl/src/widgets/lv_slider.c ****         lv_obj_refresh_ext_draw_size(obj);
 287:lvgl/src/widgets/lv_slider.c ****     }
 288:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_REFR_EXT_DRAW_SIZE) {
 289:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 290:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 291:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 292:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
 293:lvgl/src/widgets/lv_slider.c **** 
 294:lvgl/src/widgets/lv_slider.c ****         /*The smaller size is the knob diameter*/
 295:lvgl/src/widgets/lv_slider.c ****         lv_coord_t zoom = lv_obj_get_style_transform_zoom(obj, LV_PART_KNOB);
 296:lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_w = lv_obj_get_style_transform_width(obj, LV_PART_KNOB);
 297:lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 298:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_size = LV_MIN(lv_obj_get_width(obj) + 2 * trans_w, lv_obj_get_height(obj) +
 299:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += LV_MAX(LV_MAX(knob_left, knob_right), LV_MAX(knob_bottom, knob_top));
 301:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 302:lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 303:lvgl/src/widgets/lv_slider.c **** 
 304:lvgl/src/widgets/lv_slider.c ****         /*Indic. size is handled by bar*/
 305:lvgl/src/widgets/lv_slider.c ****         lv_coord_t * s = lv_event_get_param(e);
 306:lvgl/src/widgets/lv_slider.c ****         *s  = LV_MAX(*s, knob_size);
 307:lvgl/src/widgets/lv_slider.c **** 
 308:lvgl/src/widgets/lv_slider.c ****     }
 309:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_KEY) {
 310:lvgl/src/widgets/lv_slider.c ****         char c = *((char *)lv_event_get_param(e));
 311:lvgl/src/widgets/lv_slider.c **** 
 312:lvgl/src/widgets/lv_slider.c ****         if(c == LV_KEY_RIGHT || c == LV_KEY_UP) {
 313:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) + 1, LV_
 314:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 315:lvgl/src/widgets/lv_slider.c ****         }
 316:lvgl/src/widgets/lv_slider.c ****         else if(c == LV_KEY_LEFT || c == LV_KEY_DOWN) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 7


 317:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) - 1, LV_
 318:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
 319:lvgl/src/widgets/lv_slider.c ****         }
 320:lvgl/src/widgets/lv_slider.c ****         else {
 321:lvgl/src/widgets/lv_slider.c ****             return;
 322:lvgl/src/widgets/lv_slider.c ****         }
 323:lvgl/src/widgets/lv_slider.c **** 
 324:lvgl/src/widgets/lv_slider.c ****         res = lv_event_send(obj, LV_EVENT_VALUE_CHANGED, NULL);
 325:lvgl/src/widgets/lv_slider.c ****         if(res != LV_RES_OK) return;
 326:lvgl/src/widgets/lv_slider.c ****     }
 327:lvgl/src/widgets/lv_slider.c ****     else if(code == LV_EVENT_DRAW_MAIN) {
 328:lvgl/src/widgets/lv_slider.c ****         draw_knob(e);
 329:lvgl/src/widgets/lv_slider.c ****     }
 330:lvgl/src/widgets/lv_slider.c **** }
 331:lvgl/src/widgets/lv_slider.c **** 
 332:lvgl/src/widgets/lv_slider.c **** static void draw_knob(lv_event_t * e)
 333:lvgl/src/widgets/lv_slider.c **** {
 334:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 335:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 336:lvgl/src/widgets/lv_slider.c ****     lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 337:lvgl/src/widgets/lv_slider.c **** 
 338:lvgl/src/widgets/lv_slider.c ****     const bool is_rtl = LV_BASE_DIR_RTL == lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 339:lvgl/src/widgets/lv_slider.c ****     const bool is_horizontal = is_slider_horizontal(obj);
 340:lvgl/src/widgets/lv_slider.c **** 
 341:lvgl/src/widgets/lv_slider.c ****     lv_area_t knob_area;
 342:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_size;
 343:lvgl/src/widgets/lv_slider.c ****     bool is_symmetrical = false;
 344:lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 345:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 346:lvgl/src/widgets/lv_slider.c **** 
 347:lvgl/src/widgets/lv_slider.c ****     if(is_horizontal) {
 348:lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_height(obj);
 349:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.x1 = slider->bar.indic_area.x1;
 350:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 351:lvgl/src/widgets/lv_slider.c ****     }
 352:lvgl/src/widgets/lv_slider.c ****     else {
 353:lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_width(obj);
 354:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.y1 = slider->bar.indic_area.y2;
 355:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 356:lvgl/src/widgets/lv_slider.c ****     }
 357:lvgl/src/widgets/lv_slider.c **** 
 358:lvgl/src/widgets/lv_slider.c ****     lv_draw_rect_dsc_t knob_rect_dsc;
 359:lvgl/src/widgets/lv_slider.c ****     lv_draw_rect_dsc_init(&knob_rect_dsc);
 360:lvgl/src/widgets/lv_slider.c ****     lv_obj_init_draw_rect_dsc(obj, LV_PART_KNOB, &knob_rect_dsc);
 361:lvgl/src/widgets/lv_slider.c ****     /* Update knob area with knob style */
 362:lvgl/src/widgets/lv_slider.c ****     position_knob(obj, &knob_area, knob_size, is_horizontal);
 363:lvgl/src/widgets/lv_slider.c ****     /* Update right knob area with calculated knob area */
 364:lvgl/src/widgets/lv_slider.c ****     lv_area_copy(&slider->right_knob_area, &knob_area);
 365:lvgl/src/widgets/lv_slider.c **** 
 366:lvgl/src/widgets/lv_slider.c ****     lv_obj_draw_part_dsc_t part_draw_dsc;
 367:lvgl/src/widgets/lv_slider.c ****     lv_obj_draw_dsc_init(&part_draw_dsc, draw_ctx);
 368:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.part = LV_PART_KNOB;
 369:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.class_p = MY_CLASS;
 370:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB;
 371:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.id = 0;
 372:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.draw_area = &slider->right_knob_area;
 373:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.rect_dsc = &knob_rect_dsc;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 8


 374:lvgl/src/widgets/lv_slider.c **** 
 375:lvgl/src/widgets/lv_slider.c ****     if(lv_slider_get_mode(obj) != LV_SLIDER_MODE_RANGE) {
 376:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 377:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 378:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 379:lvgl/src/widgets/lv_slider.c ****     }
 380:lvgl/src/widgets/lv_slider.c ****     else {
 381:lvgl/src/widgets/lv_slider.c ****         /*Save the draw part_draw_dsc. because it can be modified in the event*/
 382:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect_dsc_t knob_rect_dsc_tmp;
 383:lvgl/src/widgets/lv_slider.c ****         lv_memcpy(&knob_rect_dsc_tmp, &knob_rect_dsc, sizeof(lv_draw_rect_dsc_t));
 384:lvgl/src/widgets/lv_slider.c ****         /* Draw the right knob */
 385:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 386:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 387:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 388:lvgl/src/widgets/lv_slider.c **** 
 389:lvgl/src/widgets/lv_slider.c ****         /*Calculate the second knob area*/
 390:lvgl/src/widgets/lv_slider.c ****         if(is_horizontal) {
 391:lvgl/src/widgets/lv_slider.c ****             /*use !is_rtl to get the other knob*/
 392:lvgl/src/widgets/lv_slider.c ****             knob_area.x1 = LV_SLIDER_KNOB_COORD(!is_rtl, slider->bar.indic_area);
 393:lvgl/src/widgets/lv_slider.c ****         }
 394:lvgl/src/widgets/lv_slider.c ****         else {
 395:lvgl/src/widgets/lv_slider.c ****             knob_area.y1 = slider->bar.indic_area.y2;
 396:lvgl/src/widgets/lv_slider.c ****         }
 397:lvgl/src/widgets/lv_slider.c ****         position_knob(obj, &knob_area, knob_size, is_horizontal);
 398:lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&slider->left_knob_area, &knob_area);
 399:lvgl/src/widgets/lv_slider.c **** 
 400:lvgl/src/widgets/lv_slider.c ****         lv_memcpy(&knob_rect_dsc, &knob_rect_dsc_tmp, sizeof(lv_draw_rect_dsc_t));
 401:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB_LEFT;
 402:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.draw_area = &slider->left_knob_area;
 403:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.rect_dsc = &knob_rect_dsc;
 404:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.id = 1;
 405:lvgl/src/widgets/lv_slider.c **** 
 406:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 407:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->left_knob_area);
 408:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 409:lvgl/src/widgets/lv_slider.c ****     }
 410:lvgl/src/widgets/lv_slider.c **** }
 411:lvgl/src/widgets/lv_slider.c **** 
 412:lvgl/src/widgets/lv_slider.c **** static void position_knob(lv_obj_t * obj, lv_area_t * knob_area, const lv_coord_t knob_size, const 
 413:lvgl/src/widgets/lv_slider.c **** {
 414:lvgl/src/widgets/lv_slider.c ****     if(hor) {
 415:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
 416:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
 417:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 418:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 419:lvgl/src/widgets/lv_slider.c ****     }
 420:lvgl/src/widgets/lv_slider.c ****     else {
 421:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 -= (knob_size >> 1);
 422:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 423:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 424:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
 425:lvgl/src/widgets/lv_slider.c ****     }
 426:lvgl/src/widgets/lv_slider.c **** 
 427:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 428:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 429:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 430:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 9


 431:lvgl/src/widgets/lv_slider.c **** 
 432:lvgl/src/widgets/lv_slider.c ****     lv_coord_t transf_w = lv_obj_get_style_transform_width(obj, LV_PART_KNOB);
 433:lvgl/src/widgets/lv_slider.c ****     lv_coord_t transf_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 434:lvgl/src/widgets/lv_slider.c **** 
 435:lvgl/src/widgets/lv_slider.c ****     /*Apply the paddings on the knob area*/
 436:lvgl/src/widgets/lv_slider.c ****     knob_area->x1 -= knob_left + transf_w;
 437:lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
 439:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 440:lvgl/src/widgets/lv_slider.c **** }
 441:lvgl/src/widgets/lv_slider.c **** 
 442:lvgl/src/widgets/lv_slider.c **** static bool is_slider_horizontal(lv_obj_t * obj)
 443:lvgl/src/widgets/lv_slider.c **** {
  28              		.loc 1 443 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 443 1 is_stmt 0 view .LVU1
  33 0000 38B5     		push	{r3, r4, r5, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 3, -16
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 5, -8
  38              		.cfi_offset 14, -4
  39 0002 0546     		mov	r5, r0
 444:lvgl/src/widgets/lv_slider.c ****     return lv_obj_get_width(obj) >= lv_obj_get_height(obj);
  40              		.loc 1 444 5 is_stmt 1 view .LVU2
  41              		.loc 1 444 12 is_stmt 0 view .LVU3
  42 0004 FFF7FEFF 		bl	lv_obj_get_width
  43              	.LVL1:
  44              		.loc 1 444 12 view .LVU4
  45 0008 0446     		mov	r4, r0
  46              		.loc 1 444 37 view .LVU5
  47 000a 2846     		mov	r0, r5
  48 000c FFF7FEFF 		bl	lv_obj_get_height
  49              	.LVL2:
 445:lvgl/src/widgets/lv_slider.c **** }
  50              		.loc 1 445 1 view .LVU6
  51 0010 8442     		cmp	r4, r0
  52 0012 B4BF     		ite	lt
  53 0014 0020     		movlt	r0, #0
  54 0016 0120     		movge	r0, #1
  55 0018 38BD     		pop	{r3, r4, r5, pc}
  56              		.loc 1 445 1 view .LVU7
  57              		.cfi_endproc
  58              	.LFE182:
  60              		.section	.text.position_knob,"ax",%progbits
  61              		.align	1
  62              		.syntax unified
  63              		.thumb
  64              		.thumb_func
  66              	position_knob:
  67              	.LVL3:
  68              	.LFB181:
 413:lvgl/src/widgets/lv_slider.c ****     if(hor) {
  69              		.loc 1 413 1 is_stmt 1 view -0
  70              		.cfi_startproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 10


  71              		@ args = 0, pretend = 0, frame = 0
  72              		@ frame_needed = 0, uses_anonymous_args = 0
 413:lvgl/src/widgets/lv_slider.c ****     if(hor) {
  73              		.loc 1 413 1 is_stmt 0 view .LVU9
  74 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  75              		.cfi_def_cfa_offset 32
  76              		.cfi_offset 4, -32
  77              		.cfi_offset 5, -28
  78              		.cfi_offset 6, -24
  79              		.cfi_offset 7, -20
  80              		.cfi_offset 8, -16
  81              		.cfi_offset 9, -12
  82              		.cfi_offset 10, -8
  83              		.cfi_offset 14, -4
  84 0004 8246     		mov	r10, r0
  85 0006 0C46     		mov	r4, r1
 414:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
  86              		.loc 1 414 5 is_stmt 1 view .LVU10
 414:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 -= (knob_size >> 1);
  87              		.loc 1 414 7 is_stmt 0 view .LVU11
  88 0008 002B     		cmp	r3, #0
  89 000a 52D0     		beq	.L4
 415:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
  90              		.loc 1 415 9 is_stmt 1 view .LVU12
 415:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
  91              		.loc 1 415 23 is_stmt 0 view .LVU13
  92 000c 0888     		ldrh	r0, [r1]
  93              	.LVL4:
 415:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
  94              		.loc 1 415 23 view .LVU14
  95 000e A0EB6200 		sub	r0, r0, r2, asr #1
  96 0012 81B2     		uxth	r1, r0
  97              	.LVL5:
 415:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = knob_area->x1 + knob_size - 1;
  98              		.loc 1 415 23 view .LVU15
  99 0014 2180     		strh	r1, [r4]	@ movhi
 416:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 100              		.loc 1 416 9 is_stmt 1 view .LVU16
 416:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 101              		.loc 1 416 39 is_stmt 0 view .LVU17
 102 0016 1144     		add	r1, r1, r2
 103 0018 89B2     		uxth	r1, r1
 416:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 104              		.loc 1 416 51 view .LVU18
 105 001a 0139     		subs	r1, r1, #1
 416:lvgl/src/widgets/lv_slider.c ****         knob_area->y1 = obj->coords.y1;
 106              		.loc 1 416 23 view .LVU19
 107 001c A180     		strh	r1, [r4, #4]	@ movhi
 417:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 108              		.loc 1 417 9 is_stmt 1 view .LVU20
 417:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 109              		.loc 1 417 36 is_stmt 0 view .LVU21
 110 001e BAF91630 		ldrsh	r3, [r10, #22]
 111              	.LVL6:
 417:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = obj->coords.y2;
 112              		.loc 1 417 23 view .LVU22
 113 0022 6380     		strh	r3, [r4, #2]	@ movhi
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 11


 418:lvgl/src/widgets/lv_slider.c ****     }
 114              		.loc 1 418 9 is_stmt 1 view .LVU23
 418:lvgl/src/widgets/lv_slider.c ****     }
 115              		.loc 1 418 36 is_stmt 0 view .LVU24
 116 0024 BAF91A30 		ldrsh	r3, [r10, #26]
 418:lvgl/src/widgets/lv_slider.c ****     }
 117              		.loc 1 418 23 view .LVU25
 118 0028 E380     		strh	r3, [r4, #6]	@ movhi
 119              	.L5:
 427:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 120              		.loc 1 427 5 is_stmt 1 view .LVU26
 121              	.LVL7:
 122              	.LBB77:
 123              	.LBI77:
 124              		.file 2 "lvgl/src/widgets/../core/lv_obj_style_gen.h"
   1:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   3:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
   6:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
   7:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
   9:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  12:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  13:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  15:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  18:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  19:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  21:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  24:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  25:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  27:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  30:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  31:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  33:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  36:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  37:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  39:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  42:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 12


  43:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  45:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  48:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  49:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  51:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  54:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  55:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  57:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  60:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  61:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  63:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  66:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  67:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  69:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  72:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  73:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  75:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  78:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  79:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  81:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  84:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  85:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  87:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  90:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  91:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_x(const struct _lv_obj_t * obj, uint32_t 
  92:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  93:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_X);
  94:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
  96:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
  97:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_y(const struct _lv_obj_t * obj, uint32_t 
  98:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
  99:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_Y);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 13


 100:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 102:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 103:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 104:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 108:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 109:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 110:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 114:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 115:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 125              		.loc 2 115 26 view .LVU27
 126              	.LBB78:
 116:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 117:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 127              		.loc 2 117 5 view .LVU28
 128              		.loc 2 117 26 is_stmt 0 view .LVU29
 129 002a 1222     		movs	r2, #18
 130              	.LVL8:
 131              		.loc 2 117 26 view .LVU30
 132 002c 4FF44031 		mov	r1, #196608
 133 0030 5046     		mov	r0, r10
 134 0032 FFF7FEFF 		bl	lv_obj_get_style_prop
 135              	.LVL9:
 136 0036 8046     		mov	r8, r0
 137              	.LVL10:
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 138              		.loc 2 118 5 is_stmt 1 view .LVU31
 139              		.loc 2 118 5 is_stmt 0 view .LVU32
 140              	.LBE78:
 141              	.LBE77:
 428:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 142              		.loc 1 428 5 is_stmt 1 view .LVU33
 143              	.LBB79:
 144              	.LBI79:
 119:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 120:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 121:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 145              		.loc 2 121 26 view .LVU34
 146              	.LBB80:
 122:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 147              		.loc 2 123 5 view .LVU35
 148              		.loc 2 123 26 is_stmt 0 view .LVU36
 149 0038 1322     		movs	r2, #19
 150 003a 4FF44031 		mov	r1, #196608
 151 003e 5046     		mov	r0, r10
 152 0040 FFF7FEFF 		bl	lv_obj_get_style_prop
 153              	.LVL11:
 154 0044 8146     		mov	r9, r0
 155              	.LVL12:
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 14


 156              		.loc 2 124 5 is_stmt 1 view .LVU37
 157              		.loc 2 124 5 is_stmt 0 view .LVU38
 158              	.LBE80:
 159              	.LBE79:
 429:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
 160              		.loc 1 429 5 is_stmt 1 view .LVU39
 161              	.LBB81:
 162              	.LBI81:
 103:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 163              		.loc 2 103 26 view .LVU40
 164              	.LBB82:
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 165              		.loc 2 105 5 view .LVU41
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 166              		.loc 2 105 26 is_stmt 0 view .LVU42
 167 0046 1022     		movs	r2, #16
 168 0048 4FF44031 		mov	r1, #196608
 169 004c 5046     		mov	r0, r10
 170 004e FFF7FEFF 		bl	lv_obj_get_style_prop
 171              	.LVL13:
 172 0052 0646     		mov	r6, r0
 173              	.LVL14:
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 174              		.loc 2 106 5 is_stmt 1 view .LVU43
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 175              		.loc 2 106 5 is_stmt 0 view .LVU44
 176              	.LBE82:
 177              	.LBE81:
 430:lvgl/src/widgets/lv_slider.c **** 
 178              		.loc 1 430 5 is_stmt 1 view .LVU45
 179              	.LBB83:
 180              	.LBI83:
 109:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 181              		.loc 2 109 26 view .LVU46
 182              	.LBB84:
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 183              		.loc 2 111 5 view .LVU47
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 184              		.loc 2 111 26 is_stmt 0 view .LVU48
 185 0054 1122     		movs	r2, #17
 186 0056 4FF44031 		mov	r1, #196608
 187 005a 5046     		mov	r0, r10
 188 005c FFF7FEFF 		bl	lv_obj_get_style_prop
 189              	.LVL15:
 190 0060 0746     		mov	r7, r0
 191              	.LVL16:
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 192              		.loc 2 112 5 is_stmt 1 view .LVU49
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 193              		.loc 2 112 5 is_stmt 0 view .LVU50
 194              	.LBE84:
 195              	.LBE83:
 432:lvgl/src/widgets/lv_slider.c ****     lv_coord_t transf_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 196              		.loc 1 432 5 is_stmt 1 view .LVU51
 197              	.LBB85:
 198              	.LBI85:
  55:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 15


 199              		.loc 2 55 26 view .LVU52
 200              	.LBB86:
  57:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 201              		.loc 2 57 5 view .LVU53
  57:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 202              		.loc 2 57 26 is_stmt 0 view .LVU54
 203 0062 6922     		movs	r2, #105
 204 0064 4FF44031 		mov	r1, #196608
 205 0068 5046     		mov	r0, r10
 206 006a FFF7FEFF 		bl	lv_obj_get_style_prop
 207              	.LVL17:
 208 006e 0546     		mov	r5, r0
 209              	.LVL18:
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 210              		.loc 2 58 5 is_stmt 1 view .LVU55
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 211              		.loc 2 58 5 is_stmt 0 view .LVU56
 212              	.LBE86:
 213              	.LBE85:
 433:lvgl/src/widgets/lv_slider.c **** 
 214              		.loc 1 433 5 is_stmt 1 view .LVU57
 215              	.LBB87:
 216              	.LBI87:
  61:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 217              		.loc 2 61 26 view .LVU58
 218              	.LBB88:
  63:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 219              		.loc 2 63 5 view .LVU59
  63:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 220              		.loc 2 63 26 is_stmt 0 view .LVU60
 221 0070 6A22     		movs	r2, #106
 222 0072 4FF44031 		mov	r1, #196608
 223 0076 5046     		mov	r0, r10
 224 0078 FFF7FEFF 		bl	lv_obj_get_style_prop
 225              	.LVL19:
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 226              		.loc 2 64 5 is_stmt 1 view .LVU61
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 227              		.loc 2 64 5 is_stmt 0 view .LVU62
 228              	.LBE88:
 229              	.LBE87:
 436:lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 230              		.loc 1 436 5 is_stmt 1 view .LVU63
 436:lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 231              		.loc 1 436 32 is_stmt 0 view .LVU64
 232 007c ABB2     		uxth	r3, r5
 233 007e 9844     		add	r8, r8, r3
 234              	.LVL20:
 436:lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 235              		.loc 1 436 32 view .LVU65
 236 0080 1FFA88F8 		uxth	r8, r8
 436:lvgl/src/widgets/lv_slider.c ****     knob_area->x2 += knob_right + transf_w;
 237              		.loc 1 436 19 view .LVU66
 238 0084 2288     		ldrh	r2, [r4]
 239 0086 A2EB0808 		sub	r8, r2, r8
 240 008a A4F80080 		strh	r8, [r4]	@ movhi
 437:lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 16


 241              		.loc 1 437 5 is_stmt 1 view .LVU67
 437:lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
 242              		.loc 1 437 33 is_stmt 0 view .LVU68
 243 008e 4B44     		add	r3, r3, r9
 437:lvgl/src/widgets/lv_slider.c ****     knob_area->y1 -= knob_top + transf_h;
 244              		.loc 1 437 19 view .LVU69
 245 0090 A288     		ldrh	r2, [r4, #4]
 246 0092 12FA83F3 		uxtah	r3, r2, r3
 247 0096 A380     		strh	r3, [r4, #4]	@ movhi
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 248              		.loc 1 438 5 is_stmt 1 view .LVU70
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 249              		.loc 1 438 31 is_stmt 0 view .LVU71
 250 0098 80B2     		uxth	r0, r0
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 251              		.loc 1 438 31 view .LVU72
 252 009a 0644     		add	r6, r6, r0
 253              	.LVL21:
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 254              		.loc 1 438 31 view .LVU73
 255 009c B6B2     		uxth	r6, r6
 438:lvgl/src/widgets/lv_slider.c ****     knob_area->y2 += knob_bottom + transf_h;
 256              		.loc 1 438 19 view .LVU74
 257 009e 6388     		ldrh	r3, [r4, #2]
 258 00a0 9E1B     		subs	r6, r3, r6
 259 00a2 6680     		strh	r6, [r4, #2]	@ movhi
 439:lvgl/src/widgets/lv_slider.c **** }
 260              		.loc 1 439 5 is_stmt 1 view .LVU75
 439:lvgl/src/widgets/lv_slider.c **** }
 261              		.loc 1 439 34 is_stmt 0 view .LVU76
 262 00a4 3844     		add	r0, r0, r7
 263              	.LVL22:
 439:lvgl/src/widgets/lv_slider.c **** }
 264              		.loc 1 439 19 view .LVU77
 265 00a6 E788     		ldrh	r7, [r4, #6]
 266              	.LVL23:
 439:lvgl/src/widgets/lv_slider.c **** }
 267              		.loc 1 439 19 view .LVU78
 268 00a8 17FA80F0 		uxtah	r0, r7, r0
 269 00ac E080     		strh	r0, [r4, #6]	@ movhi
 440:lvgl/src/widgets/lv_slider.c **** 
 270              		.loc 1 440 1 view .LVU79
 271 00ae BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 272              	.LVL24:
 273              	.L4:
 421:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 274              		.loc 1 421 9 is_stmt 1 view .LVU80
 421:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 275              		.loc 1 421 23 is_stmt 0 view .LVU81
 276 00b2 4988     		ldrh	r1, [r1, #2]
 277              	.LVL25:
 421:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
 278              		.loc 1 421 23 view .LVU82
 279 00b4 A1EB6201 		sub	r1, r1, r2, asr #1
 280 00b8 8BB2     		uxth	r3, r1
 281              	.LVL26:
 421:lvgl/src/widgets/lv_slider.c ****         knob_area->y2 = knob_area->y1 + knob_size - 1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 17


 282              		.loc 1 421 23 view .LVU83
 283 00ba 6380     		strh	r3, [r4, #2]	@ movhi
 422:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 284              		.loc 1 422 9 is_stmt 1 view .LVU84
 422:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 285              		.loc 1 422 39 is_stmt 0 view .LVU85
 286 00bc 1344     		add	r3, r3, r2
 287 00be 9BB2     		uxth	r3, r3
 422:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 288              		.loc 1 422 51 view .LVU86
 289 00c0 013B     		subs	r3, r3, #1
 422:lvgl/src/widgets/lv_slider.c ****         knob_area->x1 = obj->coords.x1;
 290              		.loc 1 422 23 view .LVU87
 291 00c2 E380     		strh	r3, [r4, #6]	@ movhi
 423:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
 292              		.loc 1 423 9 is_stmt 1 view .LVU88
 423:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
 293              		.loc 1 423 36 is_stmt 0 view .LVU89
 294 00c4 B0F91430 		ldrsh	r3, [r0, #20]
 423:lvgl/src/widgets/lv_slider.c ****         knob_area->x2 = obj->coords.x2;
 295              		.loc 1 423 23 view .LVU90
 296 00c8 2380     		strh	r3, [r4]	@ movhi
 424:lvgl/src/widgets/lv_slider.c ****     }
 297              		.loc 1 424 9 is_stmt 1 view .LVU91
 424:lvgl/src/widgets/lv_slider.c ****     }
 298              		.loc 1 424 36 is_stmt 0 view .LVU92
 299 00ca B0F91830 		ldrsh	r3, [r0, #24]
 424:lvgl/src/widgets/lv_slider.c ****     }
 300              		.loc 1 424 23 view .LVU93
 301 00ce A380     		strh	r3, [r4, #4]	@ movhi
 302 00d0 ABE7     		b	.L5
 303              		.cfi_endproc
 304              	.LFE181:
 306              		.section	.text.lv_slider_constructor,"ax",%progbits
 307              		.align	1
 308              		.syntax unified
 309              		.thumb
 310              		.thumb_func
 312              	lv_slider_constructor:
 313              	.LVL27:
 314              	.LFB178:
  81:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 315              		.loc 1 81 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
  81:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 319              		.loc 1 81 1 is_stmt 0 view .LVU95
 320 0000 38B5     		push	{r3, r4, r5, lr}
 321              		.cfi_def_cfa_offset 16
 322              		.cfi_offset 3, -16
 323              		.cfi_offset 4, -12
 324              		.cfi_offset 5, -8
 325              		.cfi_offset 14, -4
 326 0002 0C46     		mov	r4, r1
  82:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 327              		.loc 1 82 5 is_stmt 1 view .LVU96
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 18


  83:lvgl/src/widgets/lv_slider.c **** 
 328              		.loc 1 83 5 view .LVU97
 329              	.LVL28:
  86:lvgl/src/widgets/lv_slider.c ****     slider->dragging = 0U;
 330              		.loc 1 86 5 view .LVU98
  86:lvgl/src/widgets/lv_slider.c ****     slider->dragging = 0U;
 331              		.loc 1 86 26 is_stmt 0 view .LVU99
 332 0004 0025     		movs	r5, #0
 333 0006 0D67     		str	r5, [r1, #112]
  87:lvgl/src/widgets/lv_slider.c ****     slider->left_knob_focus = 0U;
 334              		.loc 1 87 5 is_stmt 1 view .LVU100
  87:lvgl/src/widgets/lv_slider.c ****     slider->left_knob_focus = 0U;
 335              		.loc 1 87 22 is_stmt 0 view .LVU101
 336 0008 91F87430 		ldrb	r3, [r1, #116]	@ zero_extendqisi2
 337 000c 65F30003 		bfi	r3, r5, #0, #1
 338 0010 81F87430 		strb	r3, [r1, #116]
  88:lvgl/src/widgets/lv_slider.c **** 
 339              		.loc 1 88 5 is_stmt 1 view .LVU102
  88:lvgl/src/widgets/lv_slider.c **** 
 340              		.loc 1 88 29 is_stmt 0 view .LVU103
 341 0014 DBB2     		uxtb	r3, r3
 342 0016 65F34103 		bfi	r3, r5, #1, #1
 343 001a 81F87430 		strb	r3, [r1, #116]
  90:lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
 344              		.loc 1 90 5 is_stmt 1 view .LVU104
 345 001e 4FF44071 		mov	r1, #768
 346              	.LVL29:
  90:lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
 347              		.loc 1 90 5 is_stmt 0 view .LVU105
 348 0022 2046     		mov	r0, r4
 349              	.LVL30:
  90:lvgl/src/widgets/lv_slider.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_SCROLLABLE);
 350              		.loc 1 90 5 view .LVU106
 351 0024 FFF7FEFF 		bl	lv_obj_clear_flag
 352              	.LVL31:
  91:lvgl/src/widgets/lv_slider.c ****     lv_obj_set_ext_click_area(obj, LV_DPX(8));
 353              		.loc 1 91 5 is_stmt 1 view .LVU107
 354 0028 1021     		movs	r1, #16
 355 002a 2046     		mov	r0, r4
 356 002c FFF7FEFF 		bl	lv_obj_clear_flag
 357              	.LVL32:
  92:lvgl/src/widgets/lv_slider.c **** }
 358              		.loc 1 92 5 view .LVU108
  92:lvgl/src/widgets/lv_slider.c **** }
 359              		.loc 1 92 36 is_stmt 0 view .LVU109
 360 0030 2846     		mov	r0, r5
 361 0032 FFF7FEFF 		bl	lv_disp_get_dpi
 362              	.LVL33:
  92:lvgl/src/widgets/lv_slider.c **** }
 363              		.loc 1 92 5 view .LVU110
 364 0036 1D28     		cmp	r0, #29
 365 0038 04DC     		bgt	.L11
 366 003a 0121     		movs	r1, #1
 367              	.L8:
  92:lvgl/src/widgets/lv_slider.c **** }
 368              		.loc 1 92 5 discriminator 4 view .LVU111
 369 003c 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 19


 370 003e FFF7FEFF 		bl	lv_obj_set_ext_click_area
 371              	.LVL34:
  93:lvgl/src/widgets/lv_slider.c **** 
 372              		.loc 1 93 1 discriminator 4 view .LVU112
 373 0042 38BD     		pop	{r3, r4, r5, pc}
 374              	.LVL35:
 375              	.L11:
  92:lvgl/src/widgets/lv_slider.c **** }
 376              		.loc 1 92 36 discriminator 1 view .LVU113
 377 0044 2846     		mov	r0, r5
 378 0046 FFF7FEFF 		bl	lv_disp_get_dpi
 379              	.LVL36:
 380 004a 0A30     		adds	r0, r0, #10
 381 004c 034B     		ldr	r3, .L12
 382 004e 83FB0023 		smull	r2, r3, r3, r0
 383 0052 C117     		asrs	r1, r0, #31
 384 0054 C1EBE301 		rsb	r1, r1, r3, asr #3
  92:lvgl/src/widgets/lv_slider.c **** }
 385              		.loc 1 92 5 discriminator 1 view .LVU114
 386 0058 09B2     		sxth	r1, r1
 387 005a EFE7     		b	.L8
 388              	.L13:
 389              		.align	2
 390              	.L12:
 391 005c 67666666 		.word	1717986919
 392              		.cfi_endproc
 393              	.LFE178:
 395              		.section	.text.draw_knob,"ax",%progbits
 396              		.align	1
 397              		.syntax unified
 398              		.thumb
 399              		.thumb_func
 401              	draw_knob:
 402              	.LVL37:
 403              	.LFB180:
 333:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 404              		.loc 1 333 1 is_stmt 1 view -0
 405              		.cfi_startproc
 406              		@ args = 0, pretend = 0, frame = 240
 407              		@ frame_needed = 0, uses_anonymous_args = 0
 333:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 408              		.loc 1 333 1 is_stmt 0 view .LVU116
 409 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 410              		.cfi_def_cfa_offset 32
 411              		.cfi_offset 4, -32
 412              		.cfi_offset 5, -28
 413              		.cfi_offset 6, -24
 414              		.cfi_offset 7, -20
 415              		.cfi_offset 8, -16
 416              		.cfi_offset 9, -12
 417              		.cfi_offset 10, -8
 418              		.cfi_offset 14, -4
 419 0004 BCB0     		sub	sp, sp, #240
 420              		.cfi_def_cfa_offset 272
 421 0006 0546     		mov	r5, r0
 334:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 422              		.loc 1 334 5 is_stmt 1 view .LVU117
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 20


 334:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 423              		.loc 1 334 22 is_stmt 0 view .LVU118
 424 0008 FFF7FEFF 		bl	lv_event_get_target
 425              	.LVL38:
 334:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 426              		.loc 1 334 22 view .LVU119
 427 000c 0446     		mov	r4, r0
 428              	.LVL39:
 335:lvgl/src/widgets/lv_slider.c ****     lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 429              		.loc 1 335 5 is_stmt 1 view .LVU120
 336:lvgl/src/widgets/lv_slider.c **** 
 430              		.loc 1 336 5 view .LVU121
 336:lvgl/src/widgets/lv_slider.c **** 
 431              		.loc 1 336 32 is_stmt 0 view .LVU122
 432 000e 2846     		mov	r0, r5
 433              	.LVL40:
 336:lvgl/src/widgets/lv_slider.c **** 
 434              		.loc 1 336 32 view .LVU123
 435 0010 FFF7FEFF 		bl	lv_event_get_draw_ctx
 436              	.LVL41:
 437 0014 0646     		mov	r6, r0
 438              	.LVL42:
 338:lvgl/src/widgets/lv_slider.c ****     const bool is_horizontal = is_slider_horizontal(obj);
 439              		.loc 1 338 5 is_stmt 1 view .LVU124
 440              	.LBB98:
 441              	.LBI98:
 125:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 126:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 127:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 128:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 129:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 130:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 132:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 133:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 134:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 135:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 136:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 137:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 138:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 139:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 140:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 141:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 142:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 143:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 144:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 145:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 146:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 147:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 148:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 149:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 150:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 151:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 152:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 153:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 154:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 155:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 21


 156:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 157:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 158:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 159:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 160:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 161:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 162:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 163:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 164:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 165:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 166:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 167:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 168:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 169:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 170:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 171:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 172:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 173:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 174:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 175:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 176:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 177:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 178:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 179:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 180:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 181:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
 182:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 183:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 184:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 185:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 186:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 187:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_grad_dsc_t * lv_obj_get_style_bg_grad(const struct _lv_obj_t * obj, uint32_t
 188:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 189:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD);
 190:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_grad_dsc_t *)v.ptr;
 191:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 192:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 193:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_dither_mode_t lv_obj_get_style_bg_dither_mode(const struct _lv_obj_t * obj, uint32
 194:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 195:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_DITHER_MODE);
 196:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_dither_mode_t)v.num;
 197:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 198:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 199:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 200:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 201:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 202:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 203:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 204:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 205:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 206:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 207:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 208:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 209:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 210:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 211:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 212:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 22


 213:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 214:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 215:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 216:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 217:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 218:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 219:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 220:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 221:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 222:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 223:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 224:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 225:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 226:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 227:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 228:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 229:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 230:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 231:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
 232:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 233:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 234:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 235:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 236:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 237:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 238:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 239:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 240:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 241:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 242:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 243:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 244:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 245:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 246:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 247:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 248:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 249:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 250:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 251:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 252:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 253:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
 254:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 255:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 256:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 257:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 258:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 259:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 260:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 261:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 262:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 263:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 264:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 265:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 266:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 267:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 268:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 269:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 23


 270:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 271:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part
 272:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 273:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_WIDTH);
 274:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 275:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 276:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 277:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part
 278:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 279:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR);
 280:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 281:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 282:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 283:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint
 284:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 285:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 286:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 287:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 288:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 289:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
 290:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 291:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_OPA);
 292:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 293:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 294:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 295:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
 296:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 297:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_PAD);
 298:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 300:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 301:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
 302:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 303:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_WIDTH);
 304:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 305:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 306:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 307:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
 308:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 309:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_X);
 310:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 311:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 312:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 313:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
 314:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 315:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_Y);
 316:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 317:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 318:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 319:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part
 320:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 321:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_SPREAD);
 322:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 323:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 324:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 325:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
 326:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 24


 327:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR);
 328:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 329:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 330:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 331:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint3
 332:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 333:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 334:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 335:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 336:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 337:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
 338:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 339:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OPA);
 340:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 341:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 342:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 343:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 344:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 345:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_OPA);
 346:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 347:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 348:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 349:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
 350:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 351:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR);
 352:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 353:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 354:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 355:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32
 356:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 357:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 358:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 359:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 360:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 361:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part
 362:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 363:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_OPA);
 364:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 365:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 366:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 367:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
 368:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 369:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_WIDTH);
 370:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 371:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 372:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 373:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t pa
 374:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 375:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_WIDTH);
 376:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 377:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 378:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 379:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part
 380:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 381:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_GAP);
 382:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 383:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 25


 384:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 385:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
 386:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 387:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_ROUNDED);
 388:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 389:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 390:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 391:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
 392:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 393:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR);
 394:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 395:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 396:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 397:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_
 398:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 399:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 400:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 401:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 402:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 403:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
 404:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 405:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_OPA);
 406:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 407:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 408:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 409:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
 410:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 411:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_WIDTH);
 412:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 413:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 414:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 415:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
 416:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 417:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_ROUNDED);
 418:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 419:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 420:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 421:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
 422:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 423:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR);
 424:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 425:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 426:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 427:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t
 428:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 429:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 430:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 431:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 432:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 433:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
 434:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 435:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_OPA);
 436:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 437:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 438:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 439:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part
 440:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 26


 441:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_IMG_SRC);
 442:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 443:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 444:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 445:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 446:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 447:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 448:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 449:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 450:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 451:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 452:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 453:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 454:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return v.color;
 455:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 456:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 457:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 458:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 459:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
 460:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 461:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 462:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 463:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
 464:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 465:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
 466:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 467:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 468:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 469:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t 
 470:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 471:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LETTER_SPACE);
 472:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 473:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 474:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 475:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t pa
 476:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 477:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LINE_SPACE);
 478:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 479:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 480:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 481:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t pa
 482:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 483:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_DECOR);
 484:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_text_decor_t)v.num;
 485:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 486:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 487:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t pa
 488:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 489:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_ALIGN);
 490:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_text_align_t)v.num;
 491:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 492:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 493:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
 494:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 495:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_RADIUS);
 496:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 497:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 27


 498:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 499:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
 500:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 501:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_CLIP_CORNER);
 502:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (bool)v.num;
 503:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 504:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 505:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
 506:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 507:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA);
 508:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 509:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 510:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 511:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa_layered(const struct _lv_obj_t * obj, uint32_t part)
 512:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 513:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA_LAYERED);
 514:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 515:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 516:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 517:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_
 518:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 519:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_DSC);
 520:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_color_filter_dsc_t *)v.ptr;
 521:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 522:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 523:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t par
 524:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 525:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_OPA);
 526:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 527:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 528:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 529:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_anim_t * lv_obj_get_style_anim(const struct _lv_obj_t * obj, uint32_t part)
 530:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 531:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM);
 532:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_anim_t *)v.ptr;
 533:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 534:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 535:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
 536:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 537:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_TIME);
 538:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 539:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 540:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 541:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
 542:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 543:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_SPEED);
 544:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 545:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 546:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 547:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t 
 548:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 549:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSITION);
 550:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (const lv_style_transition_dsc_t *)v.ptr;
 551:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 552:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 553:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t pa
 554:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 28


 555:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BLEND_MODE);
 556:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_blend_mode_t)v.num;
 557:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 558:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 559:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline uint16_t lv_obj_get_style_layout(const struct _lv_obj_t * obj, uint32_t part)
 560:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 561:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LAYOUT);
 562:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (uint16_t)v.num;
 563:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 564:lvgl/src/widgets/../core/lv_obj_style_gen.h **** 
 565:lvgl/src/widgets/../core/lv_obj_style_gen.h **** static inline lv_base_dir_t lv_obj_get_style_base_dir(const struct _lv_obj_t * obj, uint32_t part)
 442              		.loc 2 565 29 view .LVU125
 443              	.LBB99:
 566:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BASE_DIR);
 444              		.loc 2 567 5 view .LVU126
 445              		.loc 2 567 26 is_stmt 0 view .LVU127
 446 0016 1622     		movs	r2, #22
 447 0018 0021     		movs	r1, #0
 448 001a 2046     		mov	r0, r4
 449              	.LVL43:
 450              		.loc 2 567 26 view .LVU128
 451 001c FFF7FEFF 		bl	lv_obj_get_style_prop
 452              	.LVL44:
 568:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 453              		.loc 2 568 5 is_stmt 1 view .LVU129
 454              		.loc 2 568 12 is_stmt 0 view .LVU130
 455 0020 5FFA80F8 		uxtb	r8, r0
 456              	.LVL45:
 457              		.loc 2 568 12 view .LVU131
 458              	.LBE99:
 459              	.LBE98:
 339:lvgl/src/widgets/lv_slider.c **** 
 460              		.loc 1 339 5 is_stmt 1 view .LVU132
 339:lvgl/src/widgets/lv_slider.c **** 
 461              		.loc 1 339 32 is_stmt 0 view .LVU133
 462 0024 2046     		mov	r0, r4
 463 0026 FFF7FEFF 		bl	is_slider_horizontal
 464              	.LVL46:
 465 002a 0546     		mov	r5, r0
 466              	.LVL47:
 341:lvgl/src/widgets/lv_slider.c ****     lv_coord_t knob_size;
 467              		.loc 1 341 5 is_stmt 1 view .LVU134
 342:lvgl/src/widgets/lv_slider.c ****     bool is_symmetrical = false;
 468              		.loc 1 342 5 view .LVU135
 343:lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 469              		.loc 1 343 5 view .LVU136
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 470              		.loc 1 344 5 view .LVU137
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 471              		.loc 1 344 25 is_stmt 0 view .LVU138
 472 002c 94F85C30 		ldrb	r3, [r4, #92]	@ zero_extendqisi2
 473 0030 03F00303 		and	r3, r3, #3
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 474              		.loc 1 344 7 view .LVU139
 475 0034 012B     		cmp	r3, #1
 476 0036 66D0     		beq	.L34
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 29


 343:lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 477              		.loc 1 343 10 view .LVU140
 478 0038 4FF00009 		mov	r9, #0
 479              	.L15:
 480              	.LVL48:
 347:lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_height(obj);
 481              		.loc 1 347 5 is_stmt 1 view .LVU141
 347:lvgl/src/widgets/lv_slider.c ****         knob_size = lv_obj_get_height(obj);
 482              		.loc 1 347 7 is_stmt 0 view .LVU142
 483 003c 002D     		cmp	r5, #0
 484 003e 79D0     		beq	.L16
 348:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.x1 = slider->bar.indic_area.x1;
 485              		.loc 1 348 9 is_stmt 1 view .LVU143
 348:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.x1 = slider->bar.indic_area.x1;
 486              		.loc 1 348 21 is_stmt 0 view .LVU144
 487 0040 2046     		mov	r0, r4
 488 0042 FFF7FEFF 		bl	lv_obj_get_height
 489              	.LVL49:
 490 0046 0746     		mov	r7, r0
 491              	.LVL50:
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 492              		.loc 1 349 9 is_stmt 1 view .LVU145
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 493              		.loc 1 349 11 is_stmt 0 view .LVU146
 494 0048 B9F1000F 		cmp	r9, #0
 495 004c 02D0     		beq	.L17
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 496              		.loc 1 349 41 discriminator 1 view .LVU147
 497 004e 636A     		ldr	r3, [r4, #36]
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 498              		.loc 1 349 27 discriminator 1 view .LVU148
 499 0050 002B     		cmp	r3, #0
 500 0052 67DB     		blt	.L35
 501              	.L17:
 350:lvgl/src/widgets/lv_slider.c ****     }
 502              		.loc 1 350 14 is_stmt 1 view .LVU149
 350:lvgl/src/widgets/lv_slider.c ****     }
 503              		.loc 1 350 27 is_stmt 0 view .LVU150
 504 0054 B8F1010F 		cmp	r8, #1
 505 0058 69D0     		beq	.L36
 350:lvgl/src/widgets/lv_slider.c ****     }
 506              		.loc 1 350 27 discriminator 2 view .LVU151
 507 005a B4F93830 		ldrsh	r3, [r4, #56]
 508              	.L20:
 350:lvgl/src/widgets/lv_slider.c ****     }
 509              		.loc 1 350 27 discriminator 4 view .LVU152
 510 005e ADF8E830 		strh	r3, [sp, #232]	@ movhi
 511              	.L18:
 358:lvgl/src/widgets/lv_slider.c ****     lv_draw_rect_dsc_init(&knob_rect_dsc);
 512              		.loc 1 358 5 is_stmt 1 view .LVU153
 359:lvgl/src/widgets/lv_slider.c ****     lv_obj_init_draw_rect_dsc(obj, LV_PART_KNOB, &knob_rect_dsc);
 513              		.loc 1 359 5 view .LVU154
 514 0062 0DF1980A 		add	r10, sp, #152
 515 0066 5046     		mov	r0, r10
 516 0068 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 517              	.LVL51:
 360:lvgl/src/widgets/lv_slider.c ****     /* Update knob area with knob style */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 30


 518              		.loc 1 360 5 view .LVU155
 519 006c 5246     		mov	r2, r10
 520 006e 4FF44031 		mov	r1, #196608
 521 0072 2046     		mov	r0, r4
 522 0074 FFF7FEFF 		bl	lv_obj_init_draw_rect_dsc
 523              	.LVL52:
 362:lvgl/src/widgets/lv_slider.c ****     /* Update right knob area with calculated knob area */
 524              		.loc 1 362 5 view .LVU156
 525 0078 2B46     		mov	r3, r5
 526 007a 3A46     		mov	r2, r7
 527 007c 3AA9     		add	r1, sp, #232
 528 007e 2046     		mov	r0, r4
 529 0080 FFF7FEFF 		bl	position_knob
 530              	.LVL53:
 364:lvgl/src/widgets/lv_slider.c **** 
 531              		.loc 1 364 5 view .LVU157
 532 0084 04F16809 		add	r9, r4, #104
 533              	.LVL54:
 534              	.LBB100:
 535              	.LBI100:
 536              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @file lv_area.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_AREA_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdbool.h>
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdint.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int32_t lv_coord_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #else
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int16_t lv_coord_t;
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      TYPEDEFS
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Represents a point on the screen.
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 31


  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x;
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y;
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_point_t;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Represents an area of the screen.*/
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x1;
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y1;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x2;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y2;
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_area_t;
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Alignments*/
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_MID,
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_CENTER,
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_dir_t;
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * GLOBAL PROTOTYPES
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 32


  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Initialize an area
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x1 left coordinate of the area
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y1 top coordinate of the area
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x2 right coordinate of the area
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y2 bottom coordinate of the area
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Copy an area
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param dest pointer to the destination area
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param src pointer to the source area
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 537              		.loc 3 110 20 view .LVU158
 538              	.LBB101:
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x1 = src->x1;
 539              		.loc 3 112 5 view .LVU159
 540              		.loc 3 112 19 is_stmt 0 view .LVU160
 541 0088 BDF9E830 		ldrsh	r3, [sp, #232]
 542              		.loc 3 112 14 view .LVU161
 543 008c A4F86830 		strh	r3, [r4, #104]	@ movhi
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 544              		.loc 3 113 5 is_stmt 1 view .LVU162
 545              		.loc 3 113 19 is_stmt 0 view .LVU163
 546 0090 BDF9EA30 		ldrsh	r3, [sp, #234]
 547              		.loc 3 113 14 view .LVU164
 548 0094 A4F86A30 		strh	r3, [r4, #106]	@ movhi
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 549              		.loc 3 114 5 is_stmt 1 view .LVU165
 550              		.loc 3 114 19 is_stmt 0 view .LVU166
 551 0098 BDF9EC30 		ldrsh	r3, [sp, #236]
 552              		.loc 3 114 14 view .LVU167
 553 009c A4F86C30 		strh	r3, [r4, #108]	@ movhi
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 554              		.loc 3 115 5 is_stmt 1 view .LVU168
 555              		.loc 3 115 19 is_stmt 0 view .LVU169
 556 00a0 BDF9EE30 		ldrsh	r3, [sp, #238]
 557              		.loc 3 115 14 view .LVU170
 558 00a4 A4F86E30 		strh	r3, [r4, #110]	@ movhi
 559              	.LVL55:
 560              		.loc 3 115 14 view .LVU171
 561              	.LBE101:
 562              	.LBE100:
 366:lvgl/src/widgets/lv_slider.c ****     lv_obj_draw_dsc_init(&part_draw_dsc, draw_ctx);
 563              		.loc 1 366 5 is_stmt 1 view .LVU172
 367:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.part = LV_PART_KNOB;
 564              		.loc 1 367 5 view .LVU173
 565 00a8 3146     		mov	r1, r6
 566 00aa 14A8     		add	r0, sp, #80
 567 00ac FFF7FEFF 		bl	lv_obj_draw_dsc_init
 568              	.LVL56:
 368:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.class_p = MY_CLASS;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 33


 569              		.loc 1 368 5 view .LVU174
 368:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.class_p = MY_CLASS;
 570              		.loc 1 368 24 is_stmt 0 view .LVU175
 571 00b0 4FF44033 		mov	r3, #196608
 572 00b4 2193     		str	r3, [sp, #132]
 369:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB;
 573              		.loc 1 369 5 is_stmt 1 view .LVU176
 369:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB;
 574              		.loc 1 369 27 is_stmt 0 view .LVU177
 575 00b6 554B     		ldr	r3, .L40
 576 00b8 1593     		str	r3, [sp, #84]
 370:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.id = 0;
 577              		.loc 1 370 5 is_stmt 1 view .LVU178
 370:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.id = 0;
 578              		.loc 1 370 24 is_stmt 0 view .LVU179
 579 00ba 0023     		movs	r3, #0
 580 00bc 1693     		str	r3, [sp, #88]
 371:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.draw_area = &slider->right_knob_area;
 581              		.loc 1 371 5 is_stmt 1 view .LVU180
 371:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.draw_area = &slider->right_knob_area;
 582              		.loc 1 371 22 is_stmt 0 view .LVU181
 583 00be 2293     		str	r3, [sp, #136]
 372:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.rect_dsc = &knob_rect_dsc;
 584              		.loc 1 372 5 is_stmt 1 view .LVU182
 372:lvgl/src/widgets/lv_slider.c ****     part_draw_dsc.rect_dsc = &knob_rect_dsc;
 585              		.loc 1 372 29 is_stmt 0 view .LVU183
 586 00c0 CDF85C90 		str	r9, [sp, #92]
 373:lvgl/src/widgets/lv_slider.c **** 
 587              		.loc 1 373 5 is_stmt 1 view .LVU184
 373:lvgl/src/widgets/lv_slider.c **** 
 588              		.loc 1 373 28 is_stmt 0 view .LVU185
 589 00c4 CDF860A0 		str	r10, [sp, #96]
 375:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 590              		.loc 1 375 5 is_stmt 1 view .LVU186
 591              	.LVL57:
 592              	.LBB102:
 593              	.LBI102:
 594              		.file 4 "lvgl/src/widgets/lv_slider.h"
   1:lvgl/src/widgets/lv_slider.h **** /**
   2:lvgl/src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:lvgl/src/widgets/lv_slider.h ****  *
   4:lvgl/src/widgets/lv_slider.h ****  */
   5:lvgl/src/widgets/lv_slider.h **** 
   6:lvgl/src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:lvgl/src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:lvgl/src/widgets/lv_slider.h **** 
   9:lvgl/src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:lvgl/src/widgets/lv_slider.h **** extern "C" {
  11:lvgl/src/widgets/lv_slider.h **** #endif
  12:lvgl/src/widgets/lv_slider.h **** 
  13:lvgl/src/widgets/lv_slider.h **** /*********************
  14:lvgl/src/widgets/lv_slider.h ****  *      INCLUDES
  15:lvgl/src/widgets/lv_slider.h ****  *********************/
  16:lvgl/src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/widgets/lv_slider.h **** 
  18:lvgl/src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:lvgl/src/widgets/lv_slider.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 34


  20:lvgl/src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:lvgl/src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:lvgl/src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:lvgl/src/widgets/lv_slider.h **** #endif
  24:lvgl/src/widgets/lv_slider.h **** 
  25:lvgl/src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:lvgl/src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:lvgl/src/widgets/lv_slider.h **** 
  28:lvgl/src/widgets/lv_slider.h **** /*********************
  29:lvgl/src/widgets/lv_slider.h ****  *      DEFINES
  30:lvgl/src/widgets/lv_slider.h ****  *********************/
  31:lvgl/src/widgets/lv_slider.h **** 
  32:lvgl/src/widgets/lv_slider.h **** /**********************
  33:lvgl/src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:lvgl/src/widgets/lv_slider.h ****  **********************/
  35:lvgl/src/widgets/lv_slider.h **** 
  36:lvgl/src/widgets/lv_slider.h **** enum {
  37:lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:lvgl/src/widgets/lv_slider.h **** };
  41:lvgl/src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:lvgl/src/widgets/lv_slider.h **** 
  43:lvgl/src/widgets/lv_slider.h **** typedef struct {
  44:lvgl/src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:lvgl/src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:lvgl/src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:lvgl/src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:lvgl/src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:lvgl/src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:lvgl/src/widgets/lv_slider.h **** } lv_slider_t;
  51:lvgl/src/widgets/lv_slider.h **** 
  52:lvgl/src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:lvgl/src/widgets/lv_slider.h **** 
  54:lvgl/src/widgets/lv_slider.h **** /**
  55:lvgl/src/widgets/lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:lvgl/src/widgets/lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:lvgl/src/widgets/lv_slider.h ****  */
  58:lvgl/src/widgets/lv_slider.h **** typedef enum {
  59:lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:lvgl/src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:lvgl/src/widgets/lv_slider.h **** } lv_slider_draw_part_type_t;
  62:lvgl/src/widgets/lv_slider.h **** 
  63:lvgl/src/widgets/lv_slider.h **** /**********************
  64:lvgl/src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  65:lvgl/src/widgets/lv_slider.h ****  **********************/
  66:lvgl/src/widgets/lv_slider.h **** 
  67:lvgl/src/widgets/lv_slider.h **** /**
  68:lvgl/src/widgets/lv_slider.h ****  * Create a slider object
  69:lvgl/src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:lvgl/src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  71:lvgl/src/widgets/lv_slider.h ****  */
  72:lvgl/src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:lvgl/src/widgets/lv_slider.h **** 
  74:lvgl/src/widgets/lv_slider.h **** /*=====================
  75:lvgl/src/widgets/lv_slider.h ****  * Setter functions
  76:lvgl/src/widgets/lv_slider.h ****  *====================*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 35


  77:lvgl/src/widgets/lv_slider.h **** 
  78:lvgl/src/widgets/lv_slider.h **** /**
  79:lvgl/src/widgets/lv_slider.h ****  * Set a new value on the slider
  80:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  81:lvgl/src/widgets/lv_slider.h ****  * @param value     the new value
  82:lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:lvgl/src/widgets/lv_slider.h ****  */
  84:lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:lvgl/src/widgets/lv_slider.h **** {
  86:lvgl/src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:lvgl/src/widgets/lv_slider.h **** }
  88:lvgl/src/widgets/lv_slider.h **** 
  89:lvgl/src/widgets/lv_slider.h **** /**
  90:lvgl/src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  91:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  92:lvgl/src/widgets/lv_slider.h ****  * @param value     new value
  93:lvgl/src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:lvgl/src/widgets/lv_slider.h ****  */
  95:lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:lvgl/src/widgets/lv_slider.h **** {
  97:lvgl/src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:lvgl/src/widgets/lv_slider.h **** }
  99:lvgl/src/widgets/lv_slider.h **** 
 100:lvgl/src/widgets/lv_slider.h **** /**
 101:lvgl/src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
 103:lvgl/src/widgets/lv_slider.h ****  * @param min       minimum value
 104:lvgl/src/widgets/lv_slider.h ****  * @param max       maximum value
 105:lvgl/src/widgets/lv_slider.h ****  */
 106:lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 107:lvgl/src/widgets/lv_slider.h **** {
 108:lvgl/src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 109:lvgl/src/widgets/lv_slider.h **** }
 110:lvgl/src/widgets/lv_slider.h **** 
 111:lvgl/src/widgets/lv_slider.h **** /**
 112:lvgl/src/widgets/lv_slider.h ****  * Set the mode of slider.
 113:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 114:lvgl/src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 115:lvgl/src/widgets/lv_slider.h ****  */
 116:lvgl/src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 117:lvgl/src/widgets/lv_slider.h **** {
 118:lvgl/src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 119:lvgl/src/widgets/lv_slider.h **** }
 120:lvgl/src/widgets/lv_slider.h **** 
 121:lvgl/src/widgets/lv_slider.h **** /*=====================
 122:lvgl/src/widgets/lv_slider.h ****  * Getter functions
 123:lvgl/src/widgets/lv_slider.h ****  *====================*/
 124:lvgl/src/widgets/lv_slider.h **** 
 125:lvgl/src/widgets/lv_slider.h **** /**
 126:lvgl/src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 127:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 128:lvgl/src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 129:lvgl/src/widgets/lv_slider.h ****  */
 130:lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
 131:lvgl/src/widgets/lv_slider.h **** {
 132:lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
 133:lvgl/src/widgets/lv_slider.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 36


 134:lvgl/src/widgets/lv_slider.h **** 
 135:lvgl/src/widgets/lv_slider.h **** /**
 136:lvgl/src/widgets/lv_slider.h ****  * Get the value of the left knob of a slider
 137:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 138:lvgl/src/widgets/lv_slider.h ****  * @return          the value of the left knob of the slider
 139:lvgl/src/widgets/lv_slider.h ****  */
 140:lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_left_value(const lv_obj_t * obj)
 141:lvgl/src/widgets/lv_slider.h **** {
 142:lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_start_value(obj);
 143:lvgl/src/widgets/lv_slider.h **** }
 144:lvgl/src/widgets/lv_slider.h **** 
 145:lvgl/src/widgets/lv_slider.h **** /**
 146:lvgl/src/widgets/lv_slider.h ****  * Get the minimum value of a slider
 147:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 148:lvgl/src/widgets/lv_slider.h ****  * @return          the minimum value of the slider
 149:lvgl/src/widgets/lv_slider.h ****  */
 150:lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_min_value(const lv_obj_t * obj)
 151:lvgl/src/widgets/lv_slider.h **** {
 152:lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_min_value(obj);
 153:lvgl/src/widgets/lv_slider.h **** }
 154:lvgl/src/widgets/lv_slider.h **** 
 155:lvgl/src/widgets/lv_slider.h **** /**
 156:lvgl/src/widgets/lv_slider.h ****  * Get the maximum value of a slider
 157:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 158:lvgl/src/widgets/lv_slider.h ****  * @return          the maximum value of the slider
 159:lvgl/src/widgets/lv_slider.h ****  */
 160:lvgl/src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_max_value(const lv_obj_t * obj)
 161:lvgl/src/widgets/lv_slider.h **** {
 162:lvgl/src/widgets/lv_slider.h ****     return lv_bar_get_max_value(obj);
 163:lvgl/src/widgets/lv_slider.h **** }
 164:lvgl/src/widgets/lv_slider.h **** 
 165:lvgl/src/widgets/lv_slider.h **** /**
 166:lvgl/src/widgets/lv_slider.h ****  * Give the slider is being dragged or not
 167:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 168:lvgl/src/widgets/lv_slider.h ****  * @return          true: drag in progress false: not dragged
 169:lvgl/src/widgets/lv_slider.h ****  */
 170:lvgl/src/widgets/lv_slider.h **** bool lv_slider_is_dragged(const lv_obj_t * obj);
 171:lvgl/src/widgets/lv_slider.h **** 
 172:lvgl/src/widgets/lv_slider.h **** /**
 173:lvgl/src/widgets/lv_slider.h ****  * Get the mode of the slider.
 174:lvgl/src/widgets/lv_slider.h ****  * @param obj       pointer to a bar object
 175:lvgl/src/widgets/lv_slider.h ****  * @return          see ::lv_slider_mode_t
 176:lvgl/src/widgets/lv_slider.h ****  */
 177:lvgl/src/widgets/lv_slider.h **** static inline lv_slider_mode_t lv_slider_get_mode(lv_obj_t * slider)
 595              		.loc 4 177 32 view .LVU187
 596              	.LBB103:
 178:lvgl/src/widgets/lv_slider.h **** {
 179:lvgl/src/widgets/lv_slider.h ****     lv_bar_mode_t mode = lv_bar_get_mode(slider);
 597              		.loc 4 179 5 view .LVU188
 598              		.loc 4 179 26 is_stmt 0 view .LVU189
 599 00c8 2046     		mov	r0, r4
 600 00ca FFF7FEFF 		bl	lv_bar_get_mode
 601              	.LVL58:
 602 00ce 8446     		mov	ip, r0
 603              	.LVL59:
 180:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 604              		.loc 4 180 5 is_stmt 1 view .LVU190
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 37


 605              		.loc 4 180 7 is_stmt 0 view .LVU191
 606 00d0 0128     		cmp	r0, #1
 607 00d2 03D0     		beq	.L22
 181:lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 608              		.loc 4 181 10 is_stmt 1 view .LVU192
 609              		.loc 4 181 12 is_stmt 0 view .LVU193
 610 00d4 0228     		cmp	r0, #2
 611 00d6 01D0     		beq	.L22
 182:lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 612              		.loc 4 182 17 view .LVU194
 613 00d8 4FF0000C 		mov	ip, #0
 614              	.L22:
 615              	.LVL60:
 616              		.loc 4 182 17 view .LVU195
 617              	.LBE103:
 618              	.LBE102:
 375:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_BEGIN, &part_draw_dsc);
 619              		.loc 1 375 7 view .LVU196
 620 00dc BCF1020F 		cmp	ip, #2
 621 00e0 3CD0     		beq	.L23
 376:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 622              		.loc 1 376 9 is_stmt 1 view .LVU197
 623 00e2 14AA     		add	r2, sp, #80
 624 00e4 1A21     		movs	r1, #26
 625 00e6 2046     		mov	r0, r4
 626 00e8 FFF7FEFF 		bl	lv_event_send
 627              	.LVL61:
 377:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 628              		.loc 1 377 9 view .LVU198
 629 00ec 4A46     		mov	r2, r9
 630 00ee 26A9     		add	r1, sp, #152
 631 00f0 3046     		mov	r0, r6
 632 00f2 FFF7FEFF 		bl	lv_draw_rect
 633              	.LVL62:
 378:lvgl/src/widgets/lv_slider.c ****     }
 634              		.loc 1 378 9 view .LVU199
 635 00f6 14AA     		add	r2, sp, #80
 636 00f8 1B21     		movs	r1, #27
 637 00fa 2046     		mov	r0, r4
 638 00fc FFF7FEFF 		bl	lv_event_send
 639              	.LVL63:
 640              	.L14:
 410:lvgl/src/widgets/lv_slider.c **** 
 641              		.loc 1 410 1 is_stmt 0 view .LVU200
 642 0100 3CB0     		add	sp, sp, #240
 643              		.cfi_remember_state
 644              		.cfi_def_cfa_offset 32
 645              		@ sp needed
 646 0102 BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 647              	.LVL64:
 648              	.L34:
 649              		.cfi_restore_state
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 650              		.loc 1 344 66 discriminator 1 view .LVU201
 651 0106 A36A     		ldr	r3, [r4, #40]
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 652              		.loc 1 344 52 discriminator 1 view .LVU202
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 38


 653 0108 002B     		cmp	r3, #0
 654 010a 02DB     		blt	.L37
 343:lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 655              		.loc 1 343 10 view .LVU203
 656 010c 4FF00009 		mov	r9, #0
 657 0110 94E7     		b	.L15
 658              	.L37:
 345:lvgl/src/widgets/lv_slider.c **** 
 659              		.loc 1 345 19 discriminator 2 view .LVU204
 660 0112 E36A     		ldr	r3, [r4, #44]
 344:lvgl/src/widgets/lv_slider.c ****        slider->bar.max_value > 0) is_symmetrical = true;
 661              		.loc 1 344 81 discriminator 2 view .LVU205
 662 0114 002B     		cmp	r3, #0
 663 0116 02DD     		ble	.L38
 345:lvgl/src/widgets/lv_slider.c **** 
 664              		.loc 1 345 50 view .LVU206
 665 0118 4FF00109 		mov	r9, #1
 666 011c 8EE7     		b	.L15
 667              	.L38:
 343:lvgl/src/widgets/lv_slider.c ****     if(slider->bar.mode == LV_BAR_MODE_SYMMETRICAL && slider->bar.min_value < 0 &&
 668              		.loc 1 343 10 view .LVU207
 669 011e 4FF00009 		mov	r9, #0
 670 0122 8BE7     		b	.L15
 671              	.LVL65:
 672              	.L35:
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 673              		.loc 1 349 57 is_stmt 1 discriminator 2 view .LVU208
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 674              		.loc 1 349 94 is_stmt 0 discriminator 2 view .LVU209
 675 0124 B4F93430 		ldrsh	r3, [r4, #52]
 349:lvgl/src/widgets/lv_slider.c ****         else knob_area.x1 = LV_SLIDER_KNOB_COORD(is_rtl, slider->bar.indic_area);
 676              		.loc 1 349 70 discriminator 2 view .LVU210
 677 0128 ADF8E830 		strh	r3, [sp, #232]	@ movhi
 678 012c 99E7     		b	.L18
 679              	.L36:
 350:lvgl/src/widgets/lv_slider.c ****     }
 680              		.loc 1 350 27 discriminator 1 view .LVU211
 681 012e B4F93430 		ldrsh	r3, [r4, #52]
 682 0132 94E7     		b	.L20
 683              	.LVL66:
 684              	.L16:
 353:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.y1 = slider->bar.indic_area.y2;
 685              		.loc 1 353 9 is_stmt 1 view .LVU212
 353:lvgl/src/widgets/lv_slider.c ****         if(is_symmetrical && slider->bar.cur_value < 0) knob_area.y1 = slider->bar.indic_area.y2;
 686              		.loc 1 353 21 is_stmt 0 view .LVU213
 687 0134 2046     		mov	r0, r4
 688 0136 FFF7FEFF 		bl	lv_obj_get_width
 689              	.LVL67:
 690 013a 0746     		mov	r7, r0
 691              	.LVL68:
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 692              		.loc 1 354 9 is_stmt 1 view .LVU214
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 693              		.loc 1 354 11 is_stmt 0 view .LVU215
 694 013c B9F1000F 		cmp	r9, #0
 695 0140 02D0     		beq	.L21
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 39


 696              		.loc 1 354 41 discriminator 1 view .LVU216
 697 0142 636A     		ldr	r3, [r4, #36]
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 698              		.loc 1 354 27 discriminator 1 view .LVU217
 699 0144 002B     		cmp	r3, #0
 700 0146 04DB     		blt	.L39
 701              	.L21:
 355:lvgl/src/widgets/lv_slider.c ****     }
 702              		.loc 1 355 14 is_stmt 1 view .LVU218
 355:lvgl/src/widgets/lv_slider.c ****     }
 703              		.loc 1 355 51 is_stmt 0 view .LVU219
 704 0148 B4F93630 		ldrsh	r3, [r4, #54]
 355:lvgl/src/widgets/lv_slider.c ****     }
 705              		.loc 1 355 27 view .LVU220
 706 014c ADF8EA30 		strh	r3, [sp, #234]	@ movhi
 707 0150 87E7     		b	.L18
 708              	.L39:
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 709              		.loc 1 354 57 is_stmt 1 discriminator 2 view .LVU221
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 710              		.loc 1 354 94 is_stmt 0 discriminator 2 view .LVU222
 711 0152 B4F93A30 		ldrsh	r3, [r4, #58]
 354:lvgl/src/widgets/lv_slider.c ****         else knob_area.y1 = slider->bar.indic_area.y1;
 712              		.loc 1 354 70 discriminator 2 view .LVU223
 713 0156 ADF8EA30 		strh	r3, [sp, #234]	@ movhi
 714 015a 82E7     		b	.L18
 715              	.LVL69:
 716              	.L23:
 717              	.LBB104:
 382:lvgl/src/widgets/lv_slider.c ****         lv_memcpy(&knob_rect_dsc_tmp, &knob_rect_dsc, sizeof(lv_draw_rect_dsc_t));
 718              		.loc 1 382 9 is_stmt 1 view .LVU224
 383:lvgl/src/widgets/lv_slider.c ****         /* Draw the right knob */
 719              		.loc 1 383 9 view .LVU225
 720 015c 5022     		movs	r2, #80
 721 015e 26A9     		add	r1, sp, #152
 722 0160 6846     		mov	r0, sp
 723 0162 FFF7FEFF 		bl	lv_memcpy
 724              	.LVL70:
 385:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->right_knob_area);
 725              		.loc 1 385 9 view .LVU226
 726 0166 14AA     		add	r2, sp, #80
 727 0168 1A21     		movs	r1, #26
 728 016a 2046     		mov	r0, r4
 729 016c FFF7FEFF 		bl	lv_event_send
 730              	.LVL71:
 386:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 731              		.loc 1 386 9 view .LVU227
 732 0170 4A46     		mov	r2, r9
 733 0172 26A9     		add	r1, sp, #152
 734 0174 3046     		mov	r0, r6
 735 0176 FFF7FEFF 		bl	lv_draw_rect
 736              	.LVL72:
 387:lvgl/src/widgets/lv_slider.c **** 
 737              		.loc 1 387 9 view .LVU228
 738 017a 14AA     		add	r2, sp, #80
 739 017c 1B21     		movs	r1, #27
 740 017e 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 40


 741 0180 FFF7FEFF 		bl	lv_event_send
 742              	.LVL73:
 390:lvgl/src/widgets/lv_slider.c ****             /*use !is_rtl to get the other knob*/
 743              		.loc 1 390 9 view .LVU229
 390:lvgl/src/widgets/lv_slider.c ****             /*use !is_rtl to get the other knob*/
 744              		.loc 1 390 11 is_stmt 0 view .LVU230
 745 0184 002D     		cmp	r5, #0
 746 0186 3CD0     		beq	.L25
 392:lvgl/src/widgets/lv_slider.c ****         }
 747              		.loc 1 392 13 is_stmt 1 view .LVU231
 392:lvgl/src/widgets/lv_slider.c ****         }
 748              		.loc 1 392 26 is_stmt 0 view .LVU232
 749 0188 B8F1010F 		cmp	r8, #1
 750 018c 36D0     		beq	.L26
 392:lvgl/src/widgets/lv_slider.c ****         }
 751              		.loc 1 392 26 discriminator 1 view .LVU233
 752 018e B4F93430 		ldrsh	r3, [r4, #52]
 753              	.L27:
 392:lvgl/src/widgets/lv_slider.c ****         }
 754              		.loc 1 392 26 discriminator 4 view .LVU234
 755 0192 ADF8E830 		strh	r3, [sp, #232]	@ movhi
 756              	.L28:
 397:lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&slider->left_knob_area, &knob_area);
 757              		.loc 1 397 9 is_stmt 1 view .LVU235
 758 0196 2B46     		mov	r3, r5
 759 0198 3A46     		mov	r2, r7
 760 019a 3AA9     		add	r1, sp, #232
 761 019c 2046     		mov	r0, r4
 762 019e FFF7FEFF 		bl	position_knob
 763              	.LVL74:
 398:lvgl/src/widgets/lv_slider.c **** 
 764              		.loc 1 398 9 view .LVU236
 765 01a2 04F16007 		add	r7, r4, #96
 766              	.LVL75:
 767              	.LBB105:
 768              	.LBI105:
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 769              		.loc 3 110 20 view .LVU237
 770              	.LBB106:
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 771              		.loc 3 112 5 view .LVU238
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 772              		.loc 3 112 19 is_stmt 0 view .LVU239
 773 01a6 BDF9E830 		ldrsh	r3, [sp, #232]
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 774              		.loc 3 112 14 view .LVU240
 775 01aa A4F86030 		strh	r3, [r4, #96]	@ movhi
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 776              		.loc 3 113 5 is_stmt 1 view .LVU241
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 777              		.loc 3 113 19 is_stmt 0 view .LVU242
 778 01ae BDF9EA30 		ldrsh	r3, [sp, #234]
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 779              		.loc 3 113 14 view .LVU243
 780 01b2 A4F86230 		strh	r3, [r4, #98]	@ movhi
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 781              		.loc 3 114 5 is_stmt 1 view .LVU244
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 41


 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 782              		.loc 3 114 19 is_stmt 0 view .LVU245
 783 01b6 BDF9EC30 		ldrsh	r3, [sp, #236]
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 784              		.loc 3 114 14 view .LVU246
 785 01ba A4F86430 		strh	r3, [r4, #100]	@ movhi
 786              		.loc 3 115 5 is_stmt 1 view .LVU247
 787              		.loc 3 115 19 is_stmt 0 view .LVU248
 788 01be BDF9EE30 		ldrsh	r3, [sp, #238]
 789              		.loc 3 115 14 view .LVU249
 790 01c2 A4F86630 		strh	r3, [r4, #102]	@ movhi
 791              	.LVL76:
 792              		.loc 3 115 14 view .LVU250
 793              	.LBE106:
 794              	.LBE105:
 400:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB_LEFT;
 795              		.loc 1 400 9 is_stmt 1 view .LVU251
 796 01c6 26AD     		add	r5, sp, #152
 797              	.LVL77:
 400:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.type = LV_SLIDER_DRAW_PART_KNOB_LEFT;
 798              		.loc 1 400 9 is_stmt 0 view .LVU252
 799 01c8 5022     		movs	r2, #80
 800 01ca 6946     		mov	r1, sp
 801 01cc 2846     		mov	r0, r5
 802 01ce FFF7FEFF 		bl	lv_memcpy
 803              	.LVL78:
 401:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.draw_area = &slider->left_knob_area;
 804              		.loc 1 401 9 is_stmt 1 view .LVU253
 401:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.draw_area = &slider->left_knob_area;
 805              		.loc 1 401 28 is_stmt 0 view .LVU254
 806 01d2 0123     		movs	r3, #1
 807 01d4 1693     		str	r3, [sp, #88]
 402:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.rect_dsc = &knob_rect_dsc;
 808              		.loc 1 402 9 is_stmt 1 view .LVU255
 402:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.rect_dsc = &knob_rect_dsc;
 809              		.loc 1 402 33 is_stmt 0 view .LVU256
 810 01d6 1797     		str	r7, [sp, #92]
 403:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.id = 1;
 811              		.loc 1 403 9 is_stmt 1 view .LVU257
 403:lvgl/src/widgets/lv_slider.c ****         part_draw_dsc.id = 1;
 812              		.loc 1 403 32 is_stmt 0 view .LVU258
 813 01d8 1895     		str	r5, [sp, #96]
 404:lvgl/src/widgets/lv_slider.c **** 
 814              		.loc 1 404 9 is_stmt 1 view .LVU259
 404:lvgl/src/widgets/lv_slider.c **** 
 815              		.loc 1 404 26 is_stmt 0 view .LVU260
 816 01da 2293     		str	r3, [sp, #136]
 406:lvgl/src/widgets/lv_slider.c ****         lv_draw_rect(draw_ctx, &knob_rect_dsc, &slider->left_knob_area);
 817              		.loc 1 406 9 is_stmt 1 view .LVU261
 818 01dc 14AA     		add	r2, sp, #80
 819 01de 1A21     		movs	r1, #26
 820 01e0 2046     		mov	r0, r4
 821 01e2 FFF7FEFF 		bl	lv_event_send
 822              	.LVL79:
 407:lvgl/src/widgets/lv_slider.c ****         lv_event_send(obj, LV_EVENT_DRAW_PART_END, &part_draw_dsc);
 823              		.loc 1 407 9 view .LVU262
 824 01e6 3A46     		mov	r2, r7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 42


 825 01e8 2946     		mov	r1, r5
 826 01ea 3046     		mov	r0, r6
 827 01ec FFF7FEFF 		bl	lv_draw_rect
 828              	.LVL80:
 408:lvgl/src/widgets/lv_slider.c ****     }
 829              		.loc 1 408 9 view .LVU263
 830 01f0 14AA     		add	r2, sp, #80
 831 01f2 1B21     		movs	r1, #27
 832 01f4 2046     		mov	r0, r4
 833 01f6 FFF7FEFF 		bl	lv_event_send
 834              	.LVL81:
 835              	.LBE104:
 410:lvgl/src/widgets/lv_slider.c **** 
 836              		.loc 1 410 1 is_stmt 0 view .LVU264
 837 01fa 81E7     		b	.L14
 838              	.LVL82:
 839              	.L26:
 840              	.LBB107:
 392:lvgl/src/widgets/lv_slider.c ****         }
 841              		.loc 1 392 26 discriminator 2 view .LVU265
 842 01fc B4F93830 		ldrsh	r3, [r4, #56]
 843 0200 C7E7     		b	.L27
 844              	.L25:
 395:lvgl/src/widgets/lv_slider.c ****         }
 845              		.loc 1 395 13 is_stmt 1 view .LVU266
 395:lvgl/src/widgets/lv_slider.c ****         }
 846              		.loc 1 395 50 is_stmt 0 view .LVU267
 847 0202 B4F93A30 		ldrsh	r3, [r4, #58]
 395:lvgl/src/widgets/lv_slider.c ****         }
 848              		.loc 1 395 26 view .LVU268
 849 0206 ADF8EA30 		strh	r3, [sp, #234]	@ movhi
 850 020a C4E7     		b	.L28
 851              	.L41:
 852              		.align	2
 853              	.L40:
 854 020c 00000000 		.word	.LANCHOR0
 855              	.LBE107:
 856              		.cfi_endproc
 857              	.LFE180:
 859              		.section	.text.lv_slider_event,"ax",%progbits
 860              		.align	1
 861              		.syntax unified
 862              		.thumb
 863              		.thumb_func
 865              	lv_slider_event:
 866              	.LVL83:
 867              	.LFB179:
  96:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 868              		.loc 1 96 1 is_stmt 1 view -0
 869              		.cfi_startproc
 870              		@ args = 0, pretend = 0, frame = 24
 871              		@ frame_needed = 0, uses_anonymous_args = 0
  96:lvgl/src/widgets/lv_slider.c ****     LV_UNUSED(class_p);
 872              		.loc 1 96 1 is_stmt 0 view .LVU270
 873 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 874              		.cfi_def_cfa_offset 36
 875              		.cfi_offset 4, -36
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 43


 876              		.cfi_offset 5, -32
 877              		.cfi_offset 6, -28
 878              		.cfi_offset 7, -24
 879              		.cfi_offset 8, -20
 880              		.cfi_offset 9, -16
 881              		.cfi_offset 10, -12
 882              		.cfi_offset 11, -8
 883              		.cfi_offset 14, -4
 884 0004 87B0     		sub	sp, sp, #28
 885              		.cfi_def_cfa_offset 64
 886 0006 0C46     		mov	r4, r1
  97:lvgl/src/widgets/lv_slider.c **** 
 887              		.loc 1 97 5 is_stmt 1 view .LVU271
  99:lvgl/src/widgets/lv_slider.c **** 
 888              		.loc 1 99 5 view .LVU272
 102:lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 889              		.loc 1 102 5 view .LVU273
 102:lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 890              		.loc 1 102 11 is_stmt 0 view .LVU274
 891 0008 9F48     		ldr	r0, .L110
 892              	.LVL84:
 102:lvgl/src/widgets/lv_slider.c ****     if(res != LV_RES_OK) return;
 893              		.loc 1 102 11 view .LVU275
 894 000a FFF7FEFF 		bl	lv_obj_event_base
 895              	.LVL85:
 103:lvgl/src/widgets/lv_slider.c **** 
 896              		.loc 1 103 5 is_stmt 1 view .LVU276
 103:lvgl/src/widgets/lv_slider.c **** 
 897              		.loc 1 103 7 is_stmt 0 view .LVU277
 898 000e 0128     		cmp	r0, #1
 899 0010 02D0     		beq	.L93
 900              	.LVL86:
 901              	.L42:
 330:lvgl/src/widgets/lv_slider.c **** 
 902              		.loc 1 330 1 view .LVU278
 903 0012 07B0     		add	sp, sp, #28
 904              		.cfi_remember_state
 905              		.cfi_def_cfa_offset 36
 906              		@ sp needed
 907 0014 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 908              	.LVL87:
 909              	.L93:
 910              		.cfi_restore_state
 105:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 911              		.loc 1 105 5 is_stmt 1 view .LVU279
 105:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 912              		.loc 1 105 28 is_stmt 0 view .LVU280
 913 0018 2046     		mov	r0, r4
 914              	.LVL88:
 105:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_event_get_target(e);
 915              		.loc 1 105 28 view .LVU281
 916 001a FFF7FEFF 		bl	lv_event_get_code
 917              	.LVL89:
 918 001e 0646     		mov	r6, r0
 919              	.LVL90:
 106:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 920              		.loc 1 106 5 is_stmt 1 view .LVU282
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 44


 106:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 921              		.loc 1 106 22 is_stmt 0 view .LVU283
 922 0020 2046     		mov	r0, r4
 923 0022 FFF7FEFF 		bl	lv_event_get_target
 924              	.LVL91:
 925 0026 0546     		mov	r5, r0
 926              	.LVL92:
 107:lvgl/src/widgets/lv_slider.c ****     lv_slider_mode_t type = lv_slider_get_mode(obj);
 927              		.loc 1 107 5 is_stmt 1 view .LVU284
 108:lvgl/src/widgets/lv_slider.c **** 
 928              		.loc 1 108 5 view .LVU285
 929              	.LBB168:
 930              	.LBI168:
 177:lvgl/src/widgets/lv_slider.h **** {
 931              		.loc 4 177 32 view .LVU286
 932              	.LBB169:
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 933              		.loc 4 179 5 view .LVU287
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 934              		.loc 4 179 26 is_stmt 0 view .LVU288
 935 0028 FFF7FEFF 		bl	lv_bar_get_mode
 936              	.LVL93:
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 937              		.loc 4 179 26 view .LVU289
 938 002c 0746     		mov	r7, r0
 939              	.LVL94:
 180:lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 940              		.loc 4 180 5 is_stmt 1 view .LVU290
 180:lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 941              		.loc 4 180 7 is_stmt 0 view .LVU291
 942 002e 0128     		cmp	r0, #1
 943 0030 02D0     		beq	.L44
 181:lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 944              		.loc 4 181 10 is_stmt 1 view .LVU292
 181:lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 945              		.loc 4 181 12 is_stmt 0 view .LVU293
 946 0032 0228     		cmp	r0, #2
 947 0034 00D0     		beq	.L44
 948              		.loc 4 182 17 view .LVU294
 949 0036 0027     		movs	r7, #0
 950              	.L44:
 951              	.LVL95:
 952              		.loc 4 182 17 view .LVU295
 953              	.LBE169:
 954              	.LBE168:
 111:lvgl/src/widgets/lv_slider.c ****         lv_hit_test_info_t * info = lv_event_get_param(e);
 955              		.loc 1 111 5 is_stmt 1 view .LVU296
 111:lvgl/src/widgets/lv_slider.c ****         lv_hit_test_info_t * info = lv_event_get_param(e);
 956              		.loc 1 111 7 is_stmt 0 view .LVU297
 957 0038 112E     		cmp	r6, #17
 958 003a 1BD0     		beq	.L94
 128:lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 959              		.loc 1 128 10 is_stmt 1 view .LVU298
 128:lvgl/src/widgets/lv_slider.c ****         lv_obj_invalidate(obj);
 960              		.loc 1 128 12 is_stmt 0 view .LVU299
 961 003c 012E     		cmp	r6, #1
 962 003e 5FD0     		beq	.L95
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 45


 192:lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 963              		.loc 1 192 10 is_stmt 1 view .LVU300
 192:lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 964              		.loc 1 192 12 is_stmt 0 view .LVU301
 965 0040 022E     		cmp	r6, #2
 966 0042 00F02381 		beq	.L96
 967              	.L62:
 253:lvgl/src/widgets/lv_slider.c ****         slider->dragging = false;
 968              		.loc 1 253 10 is_stmt 1 view .LVU302
 253:lvgl/src/widgets/lv_slider.c ****         slider->dragging = false;
 969              		.loc 1 253 12 is_stmt 0 view .LVU303
 970 0046 032E     		cmp	r6, #3
 971 0048 18BF     		it	ne
 972 004a 082E     		cmpne	r6, #8
 973 004c 00F0BE81 		beq	.L97
 279:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 974              		.loc 1 279 10 is_stmt 1 view .LVU304
 279:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 975              		.loc 1 279 12 is_stmt 0 view .LVU305
 976 0050 0E2E     		cmp	r6, #14
 977 0052 00F0FB81 		beq	.L98
 285:lvgl/src/widgets/lv_slider.c ****         lv_obj_refresh_ext_draw_size(obj);
 978              		.loc 1 285 10 is_stmt 1 view .LVU306
 285:lvgl/src/widgets/lv_slider.c ****         lv_obj_refresh_ext_draw_size(obj);
 979              		.loc 1 285 12 is_stmt 0 view .LVU307
 980 0056 292E     		cmp	r6, #41
 981 0058 00F00882 		beq	.L99
 288:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 982              		.loc 1 288 10 is_stmt 1 view .LVU308
 288:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_left = lv_obj_get_style_pad_left(obj, LV_PART_KNOB);
 983              		.loc 1 288 12 is_stmt 0 view .LVU309
 984 005c 132E     		cmp	r6, #19
 985 005e 00F00982 		beq	.L100
 309:lvgl/src/widgets/lv_slider.c ****         char c = *((char *)lv_event_get_param(e));
 986              		.loc 1 309 10 is_stmt 1 view .LVU310
 309:lvgl/src/widgets/lv_slider.c ****         char c = *((char *)lv_event_get_param(e));
 987              		.loc 1 309 12 is_stmt 0 view .LVU311
 988 0062 0D2E     		cmp	r6, #13
 989 0064 00F08182 		beq	.L101
 327:lvgl/src/widgets/lv_slider.c ****         draw_knob(e);
 990              		.loc 1 327 10 is_stmt 1 view .LVU312
 327:lvgl/src/widgets/lv_slider.c ****         draw_knob(e);
 991              		.loc 1 327 12 is_stmt 0 view .LVU313
 992 0068 152E     		cmp	r6, #21
 993 006a D2D1     		bne	.L42
 328:lvgl/src/widgets/lv_slider.c ****     }
 994              		.loc 1 328 9 is_stmt 1 view .LVU314
 995 006c 2046     		mov	r0, r4
 996 006e FFF7FEFF 		bl	draw_knob
 997              	.LVL96:
 998 0072 CEE7     		b	.L42
 999              	.L94:
 1000              	.LBB170:
 112:lvgl/src/widgets/lv_slider.c ****         lv_coord_t ext_click_area = obj->spec_attr ? obj->spec_attr->ext_click_pad : 0;
 1001              		.loc 1 112 9 view .LVU315
 112:lvgl/src/widgets/lv_slider.c ****         lv_coord_t ext_click_area = obj->spec_attr ? obj->spec_attr->ext_click_pad : 0;
 1002              		.loc 1 112 37 is_stmt 0 view .LVU316
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 46


 1003 0074 2046     		mov	r0, r4
 1004 0076 FFF7FEFF 		bl	lv_event_get_param
 1005              	.LVL97:
 1006 007a 0446     		mov	r4, r0
 1007              	.LVL98:
 113:lvgl/src/widgets/lv_slider.c **** 
 1008              		.loc 1 113 9 is_stmt 1 view .LVU317
 113:lvgl/src/widgets/lv_slider.c **** 
 1009              		.loc 1 113 40 is_stmt 0 view .LVU318
 1010 007c AB68     		ldr	r3, [r5, #8]
 113:lvgl/src/widgets/lv_slider.c **** 
 1011              		.loc 1 113 20 view .LVU319
 1012 007e 002B     		cmp	r3, #0
 1013 0080 3CD0     		beq	.L90
 113:lvgl/src/widgets/lv_slider.c **** 
 1014              		.loc 1 113 20 discriminator 1 view .LVU320
 1015 0082 B3F91460 		ldrsh	r6, [r3, #20]
 1016              	.LVL99:
 1017              	.L46:
 116:lvgl/src/widgets/lv_slider.c ****         lv_area_copy(&a, &slider->right_knob_area);
 1018              		.loc 1 116 9 is_stmt 1 discriminator 4 view .LVU321
 117:lvgl/src/widgets/lv_slider.c ****         lv_area_increase(&a, ext_click_area, ext_click_area);
 1019              		.loc 1 117 9 discriminator 4 view .LVU322
 1020              	.LBB171:
 1021              	.LBI171:
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 1022              		.loc 3 110 20 discriminator 4 view .LVU323
 1023              	.LBB172:
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1024              		.loc 3 112 5 discriminator 4 view .LVU324
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1025              		.loc 3 112 19 is_stmt 0 discriminator 4 view .LVU325
 1026 0086 B5F96830 		ldrsh	r3, [r5, #104]
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1027              		.loc 3 112 14 discriminator 4 view .LVU326
 1028 008a ADF81030 		strh	r3, [sp, #16]	@ movhi
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1029              		.loc 3 113 5 is_stmt 1 discriminator 4 view .LVU327
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1030              		.loc 3 113 19 is_stmt 0 discriminator 4 view .LVU328
 1031 008e B5F96A30 		ldrsh	r3, [r5, #106]
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1032              		.loc 3 113 14 discriminator 4 view .LVU329
 1033 0092 ADF81230 		strh	r3, [sp, #18]	@ movhi
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1034              		.loc 3 114 5 is_stmt 1 discriminator 4 view .LVU330
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1035              		.loc 3 114 19 is_stmt 0 discriminator 4 view .LVU331
 1036 0096 B5F96C30 		ldrsh	r3, [r5, #108]
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1037              		.loc 3 114 14 discriminator 4 view .LVU332
 1038 009a ADF81430 		strh	r3, [sp, #20]	@ movhi
 1039              		.loc 3 115 5 is_stmt 1 discriminator 4 view .LVU333
 1040              		.loc 3 115 19 is_stmt 0 discriminator 4 view .LVU334
 1041 009e B5F96E30 		ldrsh	r3, [r5, #110]
 1042              		.loc 3 115 14 discriminator 4 view .LVU335
 1043 00a2 ADF81630 		strh	r3, [sp, #22]	@ movhi
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 47


 1044              	.LVL100:
 1045              		.loc 3 115 14 discriminator 4 view .LVU336
 1046              	.LBE172:
 1047              	.LBE171:
 118:lvgl/src/widgets/lv_slider.c ****         info->res = _lv_area_is_point_on(&a, info->point, 0);
 1048              		.loc 1 118 9 is_stmt 1 discriminator 4 view .LVU337
 1049 00a6 3246     		mov	r2, r6
 1050 00a8 3146     		mov	r1, r6
 1051 00aa 04A8     		add	r0, sp, #16
 1052              	.LVL101:
 118:lvgl/src/widgets/lv_slider.c ****         info->res = _lv_area_is_point_on(&a, info->point, 0);
 1053              		.loc 1 118 9 is_stmt 0 discriminator 4 view .LVU338
 1054 00ac FFF7FEFF 		bl	lv_area_increase
 1055              	.LVL102:
 119:lvgl/src/widgets/lv_slider.c **** 
 1056              		.loc 1 119 9 is_stmt 1 discriminator 4 view .LVU339
 119:lvgl/src/widgets/lv_slider.c **** 
 1057              		.loc 1 119 21 is_stmt 0 discriminator 4 view .LVU340
 1058 00b0 0022     		movs	r2, #0
 1059 00b2 2168     		ldr	r1, [r4]
 1060 00b4 04A8     		add	r0, sp, #16
 1061 00b6 FFF7FEFF 		bl	_lv_area_is_point_on
 1062              	.LVL103:
 119:lvgl/src/widgets/lv_slider.c **** 
 1063              		.loc 1 119 19 discriminator 4 view .LVU341
 1064 00ba 2071     		strb	r0, [r4, #4]
 122:lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 1065              		.loc 1 122 9 is_stmt 1 discriminator 4 view .LVU342
 122:lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 1066              		.loc 1 122 11 is_stmt 0 discriminator 4 view .LVU343
 1067 00bc 0028     		cmp	r0, #0
 1068 00be A8D1     		bne	.L42
 122:lvgl/src/widgets/lv_slider.c ****             lv_area_copy(&a, &slider->left_knob_area);
 1069              		.loc 1 122 33 discriminator 1 view .LVU344
 1070 00c0 022F     		cmp	r7, #2
 1071 00c2 A6D1     		bne	.L42
 123:lvgl/src/widgets/lv_slider.c ****             lv_area_increase(&a, ext_click_area, ext_click_area);
 1072              		.loc 1 123 13 is_stmt 1 view .LVU345
 1073              	.LVL104:
 1074              	.LBB173:
 1075              	.LBI173:
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 1076              		.loc 3 110 20 view .LVU346
 1077              	.LBB174:
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1078              		.loc 3 112 5 view .LVU347
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1079              		.loc 3 112 19 is_stmt 0 view .LVU348
 1080 00c4 B5F96030 		ldrsh	r3, [r5, #96]
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
 1081              		.loc 3 112 14 view .LVU349
 1082 00c8 ADF81030 		strh	r3, [sp, #16]	@ movhi
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1083              		.loc 3 113 5 is_stmt 1 view .LVU350
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1084              		.loc 3 113 19 is_stmt 0 view .LVU351
 1085 00cc B5F96230 		ldrsh	r3, [r5, #98]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 48


 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 1086              		.loc 3 113 14 view .LVU352
 1087 00d0 ADF81230 		strh	r3, [sp, #18]	@ movhi
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1088              		.loc 3 114 5 is_stmt 1 view .LVU353
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1089              		.loc 3 114 19 is_stmt 0 view .LVU354
 1090 00d4 B5F96430 		ldrsh	r3, [r5, #100]
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 1091              		.loc 3 114 14 view .LVU355
 1092 00d8 ADF81430 		strh	r3, [sp, #20]	@ movhi
 1093              		.loc 3 115 5 is_stmt 1 view .LVU356
 1094              		.loc 3 115 19 is_stmt 0 view .LVU357
 1095 00dc B5F96630 		ldrsh	r3, [r5, #102]
 1096              		.loc 3 115 14 view .LVU358
 1097 00e0 ADF81630 		strh	r3, [sp, #22]	@ movhi
 1098              	.LVL105:
 1099              		.loc 3 115 14 view .LVU359
 1100              	.LBE174:
 1101              	.LBE173:
 124:lvgl/src/widgets/lv_slider.c ****             info->res = _lv_area_is_point_on(&a, info->point, 0);
 1102              		.loc 1 124 13 is_stmt 1 view .LVU360
 1103 00e4 3246     		mov	r2, r6
 1104 00e6 3146     		mov	r1, r6
 1105 00e8 04A8     		add	r0, sp, #16
 1106 00ea FFF7FEFF 		bl	lv_area_increase
 1107              	.LVL106:
 125:lvgl/src/widgets/lv_slider.c ****         }
 1108              		.loc 1 125 13 view .LVU361
 125:lvgl/src/widgets/lv_slider.c ****         }
 1109              		.loc 1 125 25 is_stmt 0 view .LVU362
 1110 00ee 0022     		movs	r2, #0
 1111 00f0 2168     		ldr	r1, [r4]
 1112 00f2 04A8     		add	r0, sp, #16
 1113 00f4 FFF7FEFF 		bl	_lv_area_is_point_on
 1114              	.LVL107:
 125:lvgl/src/widgets/lv_slider.c ****         }
 1115              		.loc 1 125 23 view .LVU363
 1116 00f8 2071     		strb	r0, [r4, #4]
 1117 00fa 8AE7     		b	.L42
 1118              	.LVL108:
 1119              	.L90:
 113:lvgl/src/widgets/lv_slider.c **** 
 1120              		.loc 1 113 20 view .LVU364
 1121 00fc 0026     		movs	r6, #0
 1122              	.LVL109:
 113:lvgl/src/widgets/lv_slider.c **** 
 1123              		.loc 1 113 20 view .LVU365
 1124 00fe C2E7     		b	.L46
 1125              	.LVL110:
 1126              	.L95:
 113:lvgl/src/widgets/lv_slider.c **** 
 1127              		.loc 1 113 20 view .LVU366
 1128              	.LBE170:
 1129              	.LBB175:
 129:lvgl/src/widgets/lv_slider.c **** 
 1130              		.loc 1 129 9 is_stmt 1 view .LVU367
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 49


 1131 0100 2846     		mov	r0, r5
 1132 0102 FFF7FEFF 		bl	lv_obj_invalidate
 1133              	.LVL111:
 131:lvgl/src/widgets/lv_slider.c ****         slider->dragging = true;
 1134              		.loc 1 131 9 view .LVU368
 132:lvgl/src/widgets/lv_slider.c ****         if(type == LV_SLIDER_MODE_NORMAL || type == LV_SLIDER_MODE_SYMMETRICAL) {
 1135              		.loc 1 132 9 view .LVU369
 132:lvgl/src/widgets/lv_slider.c ****         if(type == LV_SLIDER_MODE_NORMAL || type == LV_SLIDER_MODE_SYMMETRICAL) {
 1136              		.loc 1 132 26 is_stmt 0 view .LVU370
 1137 0106 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1138 010a 43F00103 		orr	r3, r3, #1
 1139 010e 85F87430 		strb	r3, [r5, #116]
 133:lvgl/src/widgets/lv_slider.c ****             slider->value_to_set = &slider->bar.cur_value;
 1140              		.loc 1 133 9 is_stmt 1 view .LVU371
 133:lvgl/src/widgets/lv_slider.c ****             slider->value_to_set = &slider->bar.cur_value;
 1141              		.loc 1 133 11 is_stmt 0 view .LVU372
 1142 0112 012F     		cmp	r7, #1
 1143 0114 55D9     		bls	.L102
 136:lvgl/src/widgets/lv_slider.c ****             lv_indev_get_point(lv_indev_get_act(), &p);
 1144              		.loc 1 136 14 is_stmt 1 view .LVU373
 136:lvgl/src/widgets/lv_slider.c ****             lv_indev_get_point(lv_indev_get_act(), &p);
 1145              		.loc 1 136 16 is_stmt 0 view .LVU374
 1146 0116 022F     		cmp	r7, #2
 1147 0118 7FF47BAF 		bne	.L42
 1148              	.LBB176:
 137:lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 1149              		.loc 1 137 13 is_stmt 1 view .LVU375
 137:lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 1150              		.loc 1 137 32 is_stmt 0 view .LVU376
 1151 011c FFF7FEFF 		bl	lv_indev_get_act
 1152              	.LVL112:
 137:lvgl/src/widgets/lv_slider.c ****             bool hor = lv_obj_get_width(obj) >= lv_obj_get_height(obj);
 1153              		.loc 1 137 13 view .LVU377
 1154 0120 04A9     		add	r1, sp, #16
 1155 0122 FFF7FEFF 		bl	lv_indev_get_point
 1156              	.LVL113:
 138:lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 1157              		.loc 1 138 13 is_stmt 1 view .LVU378
 138:lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 1158              		.loc 1 138 24 is_stmt 0 view .LVU379
 1159 0126 2846     		mov	r0, r5
 1160 0128 FFF7FEFF 		bl	lv_obj_get_width
 1161              	.LVL114:
 1162 012c 0646     		mov	r6, r0
 1163              	.LVL115:
 138:lvgl/src/widgets/lv_slider.c ****             lv_base_dir_t base_dir = lv_obj_get_style_base_dir(obj, LV_PART_MAIN);
 1164              		.loc 1 138 49 view .LVU380
 1165 012e 2846     		mov	r0, r5
 1166 0130 FFF7FEFF 		bl	lv_obj_get_height
 1167              	.LVL116:
 1168 0134 0446     		mov	r4, r0
 1169              	.LVL117:
 139:lvgl/src/widgets/lv_slider.c **** 
 1170              		.loc 1 139 13 is_stmt 1 view .LVU381
 1171              	.LBB177:
 1172              	.LBI177:
 565:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 50


 1173              		.loc 2 565 29 view .LVU382
 1174              	.LBB178:
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1175              		.loc 2 567 5 view .LVU383
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1176              		.loc 2 567 26 is_stmt 0 view .LVU384
 1177 0136 1622     		movs	r2, #22
 1178 0138 0021     		movs	r1, #0
 1179 013a 2846     		mov	r0, r5
 1180 013c FFF7FEFF 		bl	lv_obj_get_style_prop
 1181              	.LVL118:
 1182              		.loc 2 568 5 is_stmt 1 view .LVU385
 1183              		.loc 2 568 12 is_stmt 0 view .LVU386
 1184 0140 C3B2     		uxtb	r3, r0
 1185              	.LVL119:
 1186              		.loc 2 568 12 view .LVU387
 1187              	.LBE178:
 1188              	.LBE177:
 141:lvgl/src/widgets/lv_slider.c ****             if(hor) {
 1189              		.loc 1 141 13 is_stmt 1 view .LVU388
 142:lvgl/src/widgets/lv_slider.c ****                 if((base_dir != LV_BASE_DIR_RTL && p.x > slider->right_knob_area.x2) || (base_dir =
 1190              		.loc 1 142 13 view .LVU389
 142:lvgl/src/widgets/lv_slider.c ****                 if((base_dir != LV_BASE_DIR_RTL && p.x > slider->right_knob_area.x2) || (base_dir =
 1191              		.loc 1 142 15 is_stmt 0 view .LVU390
 1192 0142 A642     		cmp	r6, r4
 1193 0144 5FDB     		blt	.L51
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1194              		.loc 1 143 17 is_stmt 1 view .LVU391
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1195              		.loc 1 143 19 is_stmt 0 view .LVU392
 1196 0146 012B     		cmp	r3, #1
 1197 0148 05D0     		beq	.L52
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1198              		.loc 1 143 53 discriminator 1 view .LVU393
 1199 014a BDF91010 		ldrsh	r1, [sp, #16]
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1200              		.loc 1 143 81 discriminator 1 view .LVU394
 1201 014e B5F96C20 		ldrsh	r2, [r5, #108]
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1202              		.loc 1 143 49 discriminator 1 view .LVU395
 1203 0152 9142     		cmp	r1, r2
 1204 0154 3FDC     		bgt	.L53
 1205              	.L52:
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1206              		.loc 1 143 86 discriminator 3 view .LVU396
 1207 0156 012B     		cmp	r3, #1
 1208 0158 37D0     		beq	.L103
 1209              	.L54:
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1210              		.loc 1 147 22 is_stmt 1 view .LVU397
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1211              		.loc 1 147 24 is_stmt 0 view .LVU398
 1212 015a 012B     		cmp	r3, #1
 1213 015c 05D0     		beq	.L55
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1214              		.loc 1 147 58 discriminator 1 view .LVU399
 1215 015e BDF91010 		ldrsh	r1, [sp, #16]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 51


 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1216              		.loc 1 147 85 discriminator 1 view .LVU400
 1217 0162 B5F96020 		ldrsh	r2, [r5, #96]
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1218              		.loc 1 147 54 discriminator 1 view .LVU401
 1219 0166 9142     		cmp	r1, r2
 1220 0168 3FDB     		blt	.L56
 1221              	.L55:
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1222              		.loc 1 147 90 discriminator 3 view .LVU402
 1223 016a 012B     		cmp	r3, #1
 1224 016c 37D0     		beq	.L104
 1225              	.LVL120:
 1226              	.L57:
 153:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 1227              		.loc 1 153 21 is_stmt 1 view .LVU403
 153:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 1228              		.loc 1 153 33 is_stmt 0 view .LVU404
 1229 016e B5F96030 		ldrsh	r3, [r5, #96]
 1230 0172 B5F96420 		ldrsh	r2, [r5, #100]
 1231 0176 D21A     		subs	r2, r2, r3
 1232 0178 02EBD272 		add	r2, r2, r2, lsr #31
 1233 017c 03EB6202 		add	r2, r3, r2, asr #1
 1234 0180 BDF91000 		ldrsh	r0, [sp, #16]
 1235              	.LVL121:
 153:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 1236              		.loc 1 153 33 view .LVU405
 1237 0184 121A     		subs	r2, r2, r0
 1238 0186 002A     		cmp	r2, #0
 1239 0188 B8BF     		it	lt
 1240 018a 5242     		rsblt	r2, r2, #0
 153:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.x1 + (slider->right_knob_area.x2 -
 1241              		.loc 1 153 31 view .LVU406
 1242 018c 12B2     		sxth	r2, r2
 1243              	.LVL122:
 154:lvgl/src/widgets/lv_slider.c **** 
 1244              		.loc 1 154 21 is_stmt 1 view .LVU407
 154:lvgl/src/widgets/lv_slider.c **** 
 1245              		.loc 1 154 34 is_stmt 0 view .LVU408
 1246 018e B5F96830 		ldrsh	r3, [r5, #104]
 1247 0192 B5F96C10 		ldrsh	r1, [r5, #108]
 1248 0196 C91A     		subs	r1, r1, r3
 1249 0198 01EBD171 		add	r1, r1, r1, lsr #31
 1250 019c 03EB6103 		add	r3, r3, r1, asr #1
 1251 01a0 1B1A     		subs	r3, r3, r0
 1252 01a2 002B     		cmp	r3, #0
 1253 01a4 B8BF     		it	lt
 1254 01a6 5B42     		rsblt	r3, r3, #0
 154:lvgl/src/widgets/lv_slider.c **** 
 1255              		.loc 1 154 32 view .LVU409
 1256 01a8 1BB2     		sxth	r3, r3
 1257              	.LVL123:
 157:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 1258              		.loc 1 157 21 is_stmt 1 view .LVU410
 157:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 1259              		.loc 1 157 23 is_stmt 0 view .LVU411
 1260 01aa 9A42     		cmp	r2, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 52


 1261 01ac 21DD     		ble	.L58
 158:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1262              		.loc 1 158 25 is_stmt 1 view .LVU412
 158:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1263              		.loc 1 158 48 is_stmt 0 view .LVU413
 1264 01ae 05F12403 		add	r3, r5, #36
 1265              	.LVL124:
 158:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1266              		.loc 1 158 46 view .LVU414
 1267 01b2 2B67     		str	r3, [r5, #112]
 159:lvgl/src/widgets/lv_slider.c ****                     }
 1268              		.loc 1 159 25 is_stmt 1 view .LVU415
 159:lvgl/src/widgets/lv_slider.c ****                     }
 1269              		.loc 1 159 49 is_stmt 0 view .LVU416
 1270 01b4 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1271 01b8 6FF34103 		bfc	r3, #1, #1
 1272 01bc 85F87430 		strb	r3, [r5, #116]
 1273 01c0 27E7     		b	.L42
 1274              	.LVL125:
 1275              	.L102:
 159:lvgl/src/widgets/lv_slider.c ****                     }
 1276              		.loc 1 159 49 view .LVU417
 1277              	.LBE176:
 134:lvgl/src/widgets/lv_slider.c ****         }
 1278              		.loc 1 134 13 is_stmt 1 view .LVU418
 134:lvgl/src/widgets/lv_slider.c ****         }
 1279              		.loc 1 134 36 is_stmt 0 view .LVU419
 1280 01c2 05F12403 		add	r3, r5, #36
 134:lvgl/src/widgets/lv_slider.c ****         }
 1281              		.loc 1 134 34 view .LVU420
 1282 01c6 2B67     		str	r3, [r5, #112]
 1283 01c8 23E7     		b	.L42
 1284              	.LVL126:
 1285              	.L103:
 1286              	.LBB179:
 144:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1287              		.loc 1 144 91 discriminator 4 view .LVU421
 1288 01ca BDF91010 		ldrsh	r1, [sp, #16]
 144:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1289              		.loc 1 144 119 discriminator 4 view .LVU422
 1290 01ce B5F96820 		ldrsh	r2, [r5, #104]
 143:lvgl/src/widgets/lv_slider.c ****                                                                                          p.x < slid
 1291              		.loc 1 143 118 discriminator 4 view .LVU423
 1292 01d2 9142     		cmp	r1, r2
 1293 01d4 C1DA     		bge	.L54
 1294              	.L53:
 145:lvgl/src/widgets/lv_slider.c ****                 }
 1295              		.loc 1 145 21 is_stmt 1 view .LVU424
 145:lvgl/src/widgets/lv_slider.c ****                 }
 1296              		.loc 1 145 44 is_stmt 0 view .LVU425
 1297 01d6 05F12403 		add	r3, r5, #36
 1298              	.LVL127:
 145:lvgl/src/widgets/lv_slider.c ****                 }
 1299              		.loc 1 145 42 view .LVU426
 1300 01da 2B67     		str	r3, [r5, #112]
 1301 01dc 19E7     		b	.L42
 1302              	.LVL128:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 53


 1303              	.L104:
 148:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1304              		.loc 1 148 95 discriminator 4 view .LVU427
 1305 01de BDF91020 		ldrsh	r2, [sp, #16]
 148:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1306              		.loc 1 148 122 discriminator 4 view .LVU428
 1307 01e2 B5F96430 		ldrsh	r3, [r5, #100]
 1308              	.LVL129:
 147:lvgl/src/widgets/lv_slider.c ****                                                                                              p.x > 
 1309              		.loc 1 147 122 discriminator 4 view .LVU429
 1310 01e6 9A42     		cmp	r2, r3
 1311 01e8 C1DD     		ble	.L57
 1312              	.L56:
 149:lvgl/src/widgets/lv_slider.c ****                 }
 1313              		.loc 1 149 21 is_stmt 1 view .LVU430
 149:lvgl/src/widgets/lv_slider.c ****                 }
 1314              		.loc 1 149 44 is_stmt 0 view .LVU431
 1315 01ea 05F13003 		add	r3, r5, #48
 149:lvgl/src/widgets/lv_slider.c ****                 }
 1316              		.loc 1 149 42 view .LVU432
 1317 01ee 2B67     		str	r3, [r5, #112]
 1318 01f0 0FE7     		b	.L42
 1319              	.LVL130:
 1320              	.L58:
 162:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1321              		.loc 1 162 25 is_stmt 1 view .LVU433
 162:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1322              		.loc 1 162 48 is_stmt 0 view .LVU434
 1323 01f2 05F13003 		add	r3, r5, #48
 1324              	.LVL131:
 162:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1325              		.loc 1 162 46 view .LVU435
 1326 01f6 2B67     		str	r3, [r5, #112]
 163:lvgl/src/widgets/lv_slider.c ****                     }
 1327              		.loc 1 163 25 is_stmt 1 view .LVU436
 163:lvgl/src/widgets/lv_slider.c ****                     }
 1328              		.loc 1 163 49 is_stmt 0 view .LVU437
 1329 01f8 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1330 01fc 43F00203 		orr	r3, r3, #2
 1331 0200 85F87430 		strb	r3, [r5, #116]
 1332 0204 05E7     		b	.L42
 1333              	.LVL132:
 1334              	.L51:
 168:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1335              		.loc 1 168 17 is_stmt 1 view .LVU438
 168:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1336              		.loc 1 168 21 is_stmt 0 view .LVU439
 1337 0206 BDF91210 		ldrsh	r1, [sp, #18]
 168:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1338              		.loc 1 168 49 view .LVU440
 1339 020a B5F96A30 		ldrsh	r3, [r5, #106]
 1340              	.LVL133:
 168:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.cur_value;
 1341              		.loc 1 168 19 view .LVU441
 1342 020e 9942     		cmp	r1, r3
 1343 0210 03DA     		bge	.L59
 169:lvgl/src/widgets/lv_slider.c ****                 }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 54


 1344              		.loc 1 169 21 is_stmt 1 view .LVU442
 169:lvgl/src/widgets/lv_slider.c ****                 }
 1345              		.loc 1 169 44 is_stmt 0 view .LVU443
 1346 0212 05F12403 		add	r3, r5, #36
 169:lvgl/src/widgets/lv_slider.c ****                 }
 1347              		.loc 1 169 42 view .LVU444
 1348 0216 2B67     		str	r3, [r5, #112]
 1349 0218 FBE6     		b	.L42
 1350              	.L59:
 171:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1351              		.loc 1 171 22 is_stmt 1 view .LVU445
 171:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1352              		.loc 1 171 53 is_stmt 0 view .LVU446
 1353 021a B5F96600 		ldrsh	r0, [r5, #102]
 1354              	.LVL134:
 171:lvgl/src/widgets/lv_slider.c ****                     slider->value_to_set = &slider->bar.start_value;
 1355              		.loc 1 171 24 view .LVU447
 1356 021e 8142     		cmp	r1, r0
 1357 0220 03DD     		ble	.L60
 172:lvgl/src/widgets/lv_slider.c ****                 }
 1358              		.loc 1 172 21 is_stmt 1 view .LVU448
 172:lvgl/src/widgets/lv_slider.c ****                 }
 1359              		.loc 1 172 44 is_stmt 0 view .LVU449
 1360 0222 05F13003 		add	r3, r5, #48
 172:lvgl/src/widgets/lv_slider.c ****                 }
 1361              		.loc 1 172 42 view .LVU450
 1362 0226 2B67     		str	r3, [r5, #112]
 1363 0228 F3E6     		b	.L42
 1364              	.L60:
 176:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 1365              		.loc 1 176 21 is_stmt 1 view .LVU451
 176:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 1366              		.loc 1 176 33 is_stmt 0 view .LVU452
 1367 022a B5F96220 		ldrsh	r2, [r5, #98]
 1368 022e 801A     		subs	r0, r0, r2
 1369 0230 00EBD070 		add	r0, r0, r0, lsr #31
 1370 0234 02EB6002 		add	r2, r2, r0, asr #1
 1371 0238 521A     		subs	r2, r2, r1
 1372 023a 002A     		cmp	r2, #0
 1373 023c B8BF     		it	lt
 1374 023e 5242     		rsblt	r2, r2, #0
 176:lvgl/src/widgets/lv_slider.c ****                     dist_right = LV_ABS((slider->right_knob_area.y1 + (slider->right_knob_area.y2 -
 1375              		.loc 1 176 31 view .LVU453
 1376 0240 12B2     		sxth	r2, r2
 1377              	.LVL135:
 177:lvgl/src/widgets/lv_slider.c **** 
 1378              		.loc 1 177 21 is_stmt 1 view .LVU454
 177:lvgl/src/widgets/lv_slider.c **** 
 1379              		.loc 1 177 34 is_stmt 0 view .LVU455
 1380 0242 B5F96E00 		ldrsh	r0, [r5, #110]
 1381 0246 C01A     		subs	r0, r0, r3
 1382 0248 00EBD070 		add	r0, r0, r0, lsr #31
 1383 024c 03EB6003 		add	r3, r3, r0, asr #1
 1384 0250 5B1A     		subs	r3, r3, r1
 1385 0252 002B     		cmp	r3, #0
 1386 0254 B8BF     		it	lt
 1387 0256 5B42     		rsblt	r3, r3, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 55


 177:lvgl/src/widgets/lv_slider.c **** 
 1388              		.loc 1 177 32 view .LVU456
 1389 0258 1BB2     		sxth	r3, r3
 1390              	.LVL136:
 180:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 1391              		.loc 1 180 21 is_stmt 1 view .LVU457
 180:lvgl/src/widgets/lv_slider.c ****                         slider->value_to_set = &slider->bar.cur_value;
 1392              		.loc 1 180 23 is_stmt 0 view .LVU458
 1393 025a 9A42     		cmp	r2, r3
 1394 025c 09DD     		ble	.L61
 181:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1395              		.loc 1 181 25 is_stmt 1 view .LVU459
 181:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1396              		.loc 1 181 48 is_stmt 0 view .LVU460
 1397 025e 05F12403 		add	r3, r5, #36
 1398              	.LVL137:
 181:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 0;
 1399              		.loc 1 181 46 view .LVU461
 1400 0262 2B67     		str	r3, [r5, #112]
 182:lvgl/src/widgets/lv_slider.c ****                     }
 1401              		.loc 1 182 25 is_stmt 1 view .LVU462
 182:lvgl/src/widgets/lv_slider.c ****                     }
 1402              		.loc 1 182 49 is_stmt 0 view .LVU463
 1403 0264 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1404 0268 6FF34103 		bfc	r3, #1, #1
 1405 026c 85F87430 		strb	r3, [r5, #116]
 1406 0270 CFE6     		b	.L42
 1407              	.LVL138:
 1408              	.L61:
 185:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1409              		.loc 1 185 25 is_stmt 1 view .LVU464
 185:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1410              		.loc 1 185 48 is_stmt 0 view .LVU465
 1411 0272 05F13003 		add	r3, r5, #48
 1412              	.LVL139:
 185:lvgl/src/widgets/lv_slider.c ****                         slider->left_knob_focus = 1;
 1413              		.loc 1 185 46 view .LVU466
 1414 0276 2B67     		str	r3, [r5, #112]
 186:lvgl/src/widgets/lv_slider.c ****                     }
 1415              		.loc 1 186 25 is_stmt 1 view .LVU467
 186:lvgl/src/widgets/lv_slider.c ****                     }
 1416              		.loc 1 186 49 is_stmt 0 view .LVU468
 1417 0278 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1418 027c 43F00203 		orr	r3, r3, #2
 1419 0280 85F87430 		strb	r3, [r5, #116]
 1420 0284 C5E6     		b	.L42
 1421              	.L111:
 1422 0286 00BF     		.align	2
 1423              	.L110:
 1424 0288 00000000 		.word	.LANCHOR0
 1425              	.LVL140:
 1426              	.L96:
 186:lvgl/src/widgets/lv_slider.c ****                     }
 1427              		.loc 1 186 49 view .LVU469
 1428              	.LBE179:
 1429              	.LBE175:
 192:lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 56


 1430              		.loc 1 192 48 discriminator 1 view .LVU470
 1431 028c 2B6F     		ldr	r3, [r5, #112]
 192:lvgl/src/widgets/lv_slider.c ****         lv_indev_t * indev = lv_indev_get_act();
 1432              		.loc 1 192 39 discriminator 1 view .LVU471
 1433 028e 002B     		cmp	r3, #0
 1434 0290 3FF4D9AE 		beq	.L62
 1435              	.LBB180:
 193:lvgl/src/widgets/lv_slider.c ****         if(lv_indev_get_type(indev) != LV_INDEV_TYPE_POINTER) return;
 1436              		.loc 1 193 9 is_stmt 1 view .LVU472
 193:lvgl/src/widgets/lv_slider.c ****         if(lv_indev_get_type(indev) != LV_INDEV_TYPE_POINTER) return;
 1437              		.loc 1 193 30 is_stmt 0 view .LVU473
 1438 0294 FFF7FEFF 		bl	lv_indev_get_act
 1439              	.LVL141:
 1440 0298 0446     		mov	r4, r0
 1441              	.LVL142:
 194:lvgl/src/widgets/lv_slider.c **** 
 1442              		.loc 1 194 9 is_stmt 1 view .LVU474
 194:lvgl/src/widgets/lv_slider.c **** 
 1443              		.loc 1 194 12 is_stmt 0 view .LVU475
 1444 029a FFF7FEFF 		bl	lv_indev_get_type
 1445              	.LVL143:
 194:lvgl/src/widgets/lv_slider.c **** 
 1446              		.loc 1 194 11 view .LVU476
 1447 029e 0128     		cmp	r0, #1
 1448 02a0 7FF4B7AE 		bne	.L42
 196:lvgl/src/widgets/lv_slider.c ****         lv_indev_get_point(indev, &p);
 1449              		.loc 1 196 9 is_stmt 1 view .LVU477
 197:lvgl/src/widgets/lv_slider.c ****         int32_t new_value = 0;
 1450              		.loc 1 197 9 view .LVU478
 1451 02a4 04A9     		add	r1, sp, #16
 1452 02a6 2046     		mov	r0, r4
 1453 02a8 FFF7FEFF 		bl	lv_indev_get_point
 1454              	.LVL144:
 198:lvgl/src/widgets/lv_slider.c **** 
 1455              		.loc 1 198 9 view .LVU479
 200:lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 1456              		.loc 1 200 9 view .LVU480
 200:lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 1457              		.loc 1 200 42 is_stmt 0 view .LVU481
 1458 02ac EE6A     		ldr	r6, [r5, #44]
 1459              	.LVL145:
 200:lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 1460              		.loc 1 200 66 view .LVU482
 1461 02ae AB6A     		ldr	r3, [r5, #40]
 200:lvgl/src/widgets/lv_slider.c ****         if(is_slider_horizontal(obj)) {
 1462              		.loc 1 200 23 view .LVU483
 1463 02b0 F61A     		subs	r6, r6, r3
 1464              	.LVL146:
 201:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 1465              		.loc 1 201 9 is_stmt 1 view .LVU484
 201:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 1466              		.loc 1 201 12 is_stmt 0 view .LVU485
 1467 02b2 2846     		mov	r0, r5
 1468 02b4 FFF7FEFF 		bl	is_slider_horizontal
 1469              	.LVL147:
 201:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_left = lv_obj_get_style_pad_left(obj, LV_PART_MAIN);
 1470              		.loc 1 201 11 view .LVU486
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 57


 1471 02b8 0028     		cmp	r0, #0
 1472 02ba 57D0     		beq	.L64
 1473              	.LBB181:
 202:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_right = lv_obj_get_style_pad_right(obj, LV_PART_MAIN);
 1474              		.loc 1 202 13 is_stmt 1 view .LVU487
 1475              	.LVL148:
 1476              	.LBB182:
 1477              	.LBI182:
 115:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1478              		.loc 2 115 26 view .LVU488
 1479              	.LBB183:
 117:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1480              		.loc 2 117 5 view .LVU489
 117:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1481              		.loc 2 117 26 is_stmt 0 view .LVU490
 1482 02bc 1222     		movs	r2, #18
 1483 02be 0021     		movs	r1, #0
 1484 02c0 2846     		mov	r0, r5
 1485 02c2 FFF7FEFF 		bl	lv_obj_get_style_prop
 1486              	.LVL149:
 1487 02c6 0446     		mov	r4, r0
 1488              	.LVL150:
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1489              		.loc 2 118 5 is_stmt 1 view .LVU491
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1490              		.loc 2 118 12 is_stmt 0 view .LVU492
 1491 02c8 07B2     		sxth	r7, r0
 1492              	.LVL151:
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1493              		.loc 2 118 12 view .LVU493
 1494              	.LBE183:
 1495              	.LBE182:
 203:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t w = lv_obj_get_width(obj);
 1496              		.loc 1 203 13 is_stmt 1 view .LVU494
 1497              	.LBB184:
 1498              	.LBI184:
 121:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1499              		.loc 2 121 26 view .LVU495
 1500              	.LBB185:
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1501              		.loc 2 123 5 view .LVU496
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1502              		.loc 2 123 26 is_stmt 0 view .LVU497
 1503 02ca 1322     		movs	r2, #19
 1504 02cc 0021     		movs	r1, #0
 1505 02ce 2846     		mov	r0, r5
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1506              		.loc 2 123 26 view .LVU498
 1507 02d0 FFF7FEFF 		bl	lv_obj_get_style_prop
 1508              	.LVL152:
 1509 02d4 8146     		mov	r9, r0
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1510              		.loc 2 124 5 is_stmt 1 view .LVU499
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1511              		.loc 2 124 12 is_stmt 0 view .LVU500
 1512 02d6 0FFA80F8 		sxth	r8, r0
 1513              	.LVL153:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 58


 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1514              		.loc 2 124 12 view .LVU501
 1515              	.LBE185:
 1516              	.LBE184:
 204:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 1517              		.loc 1 204 13 is_stmt 1 view .LVU502
 204:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 1518              		.loc 1 204 34 is_stmt 0 view .LVU503
 1519 02da 2846     		mov	r0, r5
 204:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_w = w - bg_left - bg_right;
 1520              		.loc 1 204 34 view .LVU504
 1521 02dc FFF7FEFF 		bl	lv_obj_get_width
 1522              	.LVL154:
 205:lvgl/src/widgets/lv_slider.c **** 
 1523              		.loc 1 205 13 is_stmt 1 view .LVU505
 205:lvgl/src/widgets/lv_slider.c **** 
 1524              		.loc 1 205 42 is_stmt 0 view .LVU506
 1525 02e0 041B     		subs	r4, r0, r4
 1526              	.LVL155:
 205:lvgl/src/widgets/lv_slider.c **** 
 1527              		.loc 1 205 42 view .LVU507
 1528 02e2 A4B2     		uxth	r4, r4
 1529              	.LVL156:
 205:lvgl/src/widgets/lv_slider.c **** 
 1530              		.loc 1 205 52 view .LVU508
 1531 02e4 A4EB0904 		sub	r4, r4, r9
 205:lvgl/src/widgets/lv_slider.c **** 
 1532              		.loc 1 205 30 view .LVU509
 1533 02e8 24B2     		sxth	r4, r4
 1534              	.LVL157:
 207:lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
 1535              		.loc 1 207 13 is_stmt 1 view .LVU510
 1536              	.LBB186:
 1537              	.LBI186:
 565:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1538              		.loc 2 565 29 view .LVU511
 1539              	.LBB187:
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1540              		.loc 2 567 5 view .LVU512
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1541              		.loc 2 567 26 is_stmt 0 view .LVU513
 1542 02ea 1622     		movs	r2, #22
 1543 02ec 0021     		movs	r1, #0
 1544 02ee 2846     		mov	r0, r5
 1545              	.LVL158:
 567:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_base_dir_t)v.num;
 1546              		.loc 2 567 26 view .LVU514
 1547 02f0 FFF7FEFF 		bl	lv_obj_get_style_prop
 1548              	.LVL159:
 1549              		.loc 2 568 5 is_stmt 1 view .LVU515
 1550              		.loc 2 568 12 is_stmt 0 view .LVU516
 1551 02f4 C3B2     		uxtb	r3, r0
 1552              	.LVL160:
 1553              		.loc 2 568 12 view .LVU517
 1554              	.LBE187:
 1555              	.LBE186:
 207:lvgl/src/widgets/lv_slider.c ****                 /*Make the point relative to the indicator*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 59


 1556              		.loc 1 207 15 view .LVU518
 1557 02f6 012B     		cmp	r3, #1
 1558 02f8 2ED0     		beq	.L105
 213:lvgl/src/widgets/lv_slider.c ****             }
 1559              		.loc 1 213 17 is_stmt 1 view .LVU519
 213:lvgl/src/widgets/lv_slider.c ****             }
 1560              		.loc 1 213 30 is_stmt 0 view .LVU520
 1561 02fa BDF91010 		ldrsh	r1, [sp, #16]
 213:lvgl/src/widgets/lv_slider.c ****             }
 1562              		.loc 1 213 47 view .LVU521
 1563 02fe B5F91430 		ldrsh	r3, [r5, #20]
 213:lvgl/src/widgets/lv_slider.c ****             }
 1564              		.loc 1 213 51 view .LVU522
 1565 0302 1F44     		add	r7, r7, r3
 1566              	.LVL161:
 213:lvgl/src/widgets/lv_slider.c ****             }
 1567              		.loc 1 213 27 view .LVU523
 1568 0304 C91B     		subs	r1, r1, r7
 1569              	.LVL162:
 1570              	.L66:
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1571              		.loc 1 215 13 is_stmt 1 view .LVU524
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1572              		.loc 1 215 36 is_stmt 0 view .LVU525
 1573 0306 06FB01F1 		mul	r1, r6, r1
 1574              	.LVL163:
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1575              		.loc 1 215 54 view .LVU526
 1576 030a 2346     		mov	r3, r4
 1577 030c 002C     		cmp	r4, #0
 1578 030e 2BDB     		blt	.L106
 1579              	.L67:
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1580              		.loc 1 215 44 view .LVU527
 1581 0310 01EB6301 		add	r1, r1, r3, asr #1
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1582              		.loc 1 215 23 view .LVU528
 1583 0314 91FBF4F4 		sdiv	r4, r1, r4
 1584              	.LVL164:
 216:lvgl/src/widgets/lv_slider.c ****         }
 1585              		.loc 1 216 13 is_stmt 1 view .LVU529
 216:lvgl/src/widgets/lv_slider.c ****         }
 1586              		.loc 1 216 37 is_stmt 0 view .LVU530
 1587 0318 A96A     		ldr	r1, [r5, #40]
 216:lvgl/src/widgets/lv_slider.c ****         }
 1588              		.loc 1 216 23 view .LVU531
 1589 031a 2144     		add	r1, r1, r4
 1590              	.LVL165:
 1591              	.L68:
 216:lvgl/src/widgets/lv_slider.c ****         }
 1592              		.loc 1 216 23 view .LVU532
 1593              	.LBE181:
 230:lvgl/src/widgets/lv_slider.c ****         int32_t real_min_value = slider->bar.min_value;
 1594              		.loc 1 230 9 is_stmt 1 view .LVU533
 230:lvgl/src/widgets/lv_slider.c ****         int32_t real_min_value = slider->bar.min_value;
 1595              		.loc 1 230 17 is_stmt 0 view .LVU534
 1596 031c EC6A     		ldr	r4, [r5, #44]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 60


 1597              	.LVL166:
 231:lvgl/src/widgets/lv_slider.c ****         /*Figure out the min. and max. for this mode*/
 1598              		.loc 1 231 9 is_stmt 1 view .LVU535
 231:lvgl/src/widgets/lv_slider.c ****         /*Figure out the min. and max. for this mode*/
 1599              		.loc 1 231 17 is_stmt 0 view .LVU536
 1600 031e A86A     		ldr	r0, [r5, #40]
 1601              	.LVL167:
 233:lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 1602              		.loc 1 233 9 is_stmt 1 view .LVU537
 233:lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 1603              		.loc 1 233 18 is_stmt 0 view .LVU538
 1604 0320 2B6F     		ldr	r3, [r5, #112]
 233:lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 1605              		.loc 1 233 36 view .LVU539
 1606 0322 05F13002 		add	r2, r5, #48
 233:lvgl/src/widgets/lv_slider.c ****             real_max_value = slider->bar.cur_value;
 1607              		.loc 1 233 11 view .LVU540
 1608 0326 9342     		cmp	r3, r2
 1609 0328 49D0     		beq	.L107
 237:lvgl/src/widgets/lv_slider.c ****         }
 1610              		.loc 1 237 13 is_stmt 1 view .LVU541
 237:lvgl/src/widgets/lv_slider.c ****         }
 1611              		.loc 1 237 28 is_stmt 0 view .LVU542
 1612 032a 286B     		ldr	r0, [r5, #48]
 1613              	.LVL168:
 1614              	.L71:
 240:lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 1615              		.loc 1 240 9 is_stmt 1 view .LVU543
 240:lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 1616              		.loc 1 240 21 is_stmt 0 view .LVU544
 1617 032c A142     		cmp	r1, r4
 1618 032e A8BF     		it	ge
 1619 0330 2146     		movge	r1, r4
 1620              	.LVL169:
 240:lvgl/src/widgets/lv_slider.c ****         if(*slider->value_to_set != new_value) {
 1621              		.loc 1 240 19 view .LVU545
 1622 0332 8142     		cmp	r1, r0
 1623 0334 B8BF     		it	lt
 1624 0336 0146     		movlt	r1, r0
 1625              	.LVL170:
 241:lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 1626              		.loc 1 241 9 is_stmt 1 view .LVU546
 241:lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 1627              		.loc 1 241 12 is_stmt 0 view .LVU547
 1628 0338 1868     		ldr	r0, [r3]
 1629              	.LVL171:
 241:lvgl/src/widgets/lv_slider.c ****             if(slider->value_to_set == &slider->bar.start_value) {
 1630              		.loc 1 241 11 view .LVU548
 1631 033a 8842     		cmp	r0, r1
 1632 033c 3FF469AE 		beq	.L42
 242:lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_start_value(obj, new_value, LV_ANIM_ON);
 1633              		.loc 1 242 13 is_stmt 1 view .LVU549
 242:lvgl/src/widgets/lv_slider.c ****                 lv_bar_set_start_value(obj, new_value, LV_ANIM_ON);
 1634              		.loc 1 242 15 is_stmt 0 view .LVU550
 1635 0340 9342     		cmp	r3, r2
 1636 0342 3ED0     		beq	.L108
 246:lvgl/src/widgets/lv_slider.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 61


 1637              		.loc 1 246 17 is_stmt 1 view .LVU551
 1638 0344 0122     		movs	r2, #1
 1639 0346 2846     		mov	r0, r5
 1640 0348 FFF7FEFF 		bl	lv_bar_set_value
 1641              	.LVL172:
 1642              	.L74:
 248:lvgl/src/widgets/lv_slider.c ****             if(res != LV_RES_OK) return;
 1643              		.loc 1 248 13 view .LVU552
 248:lvgl/src/widgets/lv_slider.c ****             if(res != LV_RES_OK) return;
 1644              		.loc 1 248 19 is_stmt 0 view .LVU553
 1645 034c 0022     		movs	r2, #0
 1646 034e 1C21     		movs	r1, #28
 1647 0350 2846     		mov	r0, r5
 1648 0352 FFF7FEFF 		bl	lv_event_send
 1649              	.LVL173:
 249:lvgl/src/widgets/lv_slider.c ****         }
 1650              		.loc 1 249 13 is_stmt 1 view .LVU554
 1651 0356 5CE6     		b	.L42
 1652              	.LVL174:
 1653              	.L105:
 1654              	.LBB188:
 209:lvgl/src/widgets/lv_slider.c ****             }
 1655              		.loc 1 209 17 view .LVU555
 209:lvgl/src/widgets/lv_slider.c ****             }
 1656              		.loc 1 209 41 is_stmt 0 view .LVU556
 1657 0358 B5F91810 		ldrsh	r1, [r5, #24]
 209:lvgl/src/widgets/lv_slider.c ****             }
 1658              		.loc 1 209 45 view .LVU557
 1659 035c A1EB0801 		sub	r1, r1, r8
 209:lvgl/src/widgets/lv_slider.c ****             }
 1660              		.loc 1 209 60 view .LVU558
 1661 0360 BDF91030 		ldrsh	r3, [sp, #16]
 209:lvgl/src/widgets/lv_slider.c ****             }
 1662              		.loc 1 209 27 view .LVU559
 1663 0364 C91A     		subs	r1, r1, r3
 1664              	.LVL175:
 209:lvgl/src/widgets/lv_slider.c ****             }
 1665              		.loc 1 209 27 view .LVU560
 1666 0366 CEE7     		b	.L66
 1667              	.LVL176:
 1668              	.L106:
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1669              		.loc 1 215 54 view .LVU561
 1670 0368 631C     		adds	r3, r4, #1
 1671 036a D1E7     		b	.L67
 1672              	.LVL177:
 1673              	.L64:
 215:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1674              		.loc 1 215 54 view .LVU562
 1675              	.LBE188:
 1676              	.LBB189:
 219:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t bg_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_MAIN);
 1677              		.loc 1 219 13 is_stmt 1 view .LVU563
 1678              	.LBB190:
 1679              	.LBI190:
 103:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1680              		.loc 2 103 26 view .LVU564
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 62


 1681              	.LBB191:
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1682              		.loc 2 105 5 view .LVU565
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1683              		.loc 2 105 26 is_stmt 0 view .LVU566
 1684 036c 1022     		movs	r2, #16
 1685 036e 0021     		movs	r1, #0
 1686 0370 2846     		mov	r0, r5
 1687 0372 FFF7FEFF 		bl	lv_obj_get_style_prop
 1688              	.LVL178:
 1689 0376 8046     		mov	r8, r0
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1690              		.loc 2 106 5 is_stmt 1 view .LVU567
 1691              	.LVL179:
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1692              		.loc 2 106 5 is_stmt 0 view .LVU568
 1693              	.LBE191:
 1694              	.LBE190:
 220:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t h = lv_obj_get_height(obj);
 1695              		.loc 1 220 13 is_stmt 1 view .LVU569
 1696              	.LBB192:
 1697              	.LBI192:
 109:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1698              		.loc 2 109 26 view .LVU570
 1699              	.LBB193:
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1700              		.loc 2 111 5 view .LVU571
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1701              		.loc 2 111 26 is_stmt 0 view .LVU572
 1702 0378 1122     		movs	r2, #17
 1703 037a 0021     		movs	r1, #0
 1704 037c 2846     		mov	r0, r5
 1705 037e FFF7FEFF 		bl	lv_obj_get_style_prop
 1706              	.LVL180:
 1707 0382 0746     		mov	r7, r0
 1708              	.LVL181:
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1709              		.loc 2 112 5 is_stmt 1 view .LVU573
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1710              		.loc 2 112 12 is_stmt 0 view .LVU574
 1711 0384 04B2     		sxth	r4, r0
 1712              	.LVL182:
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1713              		.loc 2 112 12 view .LVU575
 1714              	.LBE193:
 1715              	.LBE192:
 221:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 1716              		.loc 1 221 13 is_stmt 1 view .LVU576
 221:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 1717              		.loc 1 221 34 is_stmt 0 view .LVU577
 1718 0386 2846     		mov	r0, r5
 221:lvgl/src/widgets/lv_slider.c ****             const lv_coord_t indic_h = h - bg_bottom - bg_top;
 1719              		.loc 1 221 34 view .LVU578
 1720 0388 FFF7FEFF 		bl	lv_obj_get_height
 1721              	.LVL183:
 222:lvgl/src/widgets/lv_slider.c **** 
 1722              		.loc 1 222 13 is_stmt 1 view .LVU579
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 63


 222:lvgl/src/widgets/lv_slider.c **** 
 1723              		.loc 1 222 42 is_stmt 0 view .LVU580
 1724 038c C31B     		subs	r3, r0, r7
 1725 038e 9BB2     		uxth	r3, r3
 222:lvgl/src/widgets/lv_slider.c **** 
 1726              		.loc 1 222 54 view .LVU581
 1727 0390 A3EB0803 		sub	r3, r3, r8
 222:lvgl/src/widgets/lv_slider.c **** 
 1728              		.loc 1 222 30 view .LVU582
 1729 0394 1BB2     		sxth	r3, r3
 1730              	.LVL184:
 225:lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 1731              		.loc 1 225 13 is_stmt 1 view .LVU583
 225:lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 1732              		.loc 1 225 26 is_stmt 0 view .LVU584
 1733 0396 BDF91220 		ldrsh	r2, [sp, #18]
 225:lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 1734              		.loc 1 225 43 view .LVU585
 1735 039a B5F91A10 		ldrsh	r1, [r5, #26]
 225:lvgl/src/widgets/lv_slider.c ****             new_value = (-new_value * range + indic_h / 2) / indic_h;
 1736              		.loc 1 225 47 view .LVU586
 1737 039e 2144     		add	r1, r1, r4
 1738              	.LVL185:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1739              		.loc 1 226 13 is_stmt 1 view .LVU587
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1740              		.loc 1 226 26 is_stmt 0 view .LVU588
 1741 03a0 891A     		subs	r1, r1, r2
 1742              	.LVL186:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1743              		.loc 1 226 37 view .LVU589
 1744 03a2 06FB01F1 		mul	r1, r6, r1
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1745              		.loc 1 226 55 view .LVU590
 1746 03a6 1A46     		mov	r2, r3
 1747              	.LVL187:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1748              		.loc 1 226 55 view .LVU591
 1749 03a8 002B     		cmp	r3, #0
 1750 03aa 06DB     		blt	.L109
 1751              	.L69:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1752              		.loc 1 226 45 view .LVU592
 1753 03ac 01EB6201 		add	r1, r1, r2, asr #1
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1754              		.loc 1 226 23 view .LVU593
 1755 03b0 91FBF3F3 		sdiv	r3, r1, r3
 1756              	.LVL188:
 227:lvgl/src/widgets/lv_slider.c ****         }
 1757              		.loc 1 227 13 is_stmt 1 view .LVU594
 227:lvgl/src/widgets/lv_slider.c ****         }
 1758              		.loc 1 227 37 is_stmt 0 view .LVU595
 1759 03b4 A96A     		ldr	r1, [r5, #40]
 227:lvgl/src/widgets/lv_slider.c ****         }
 1760              		.loc 1 227 23 view .LVU596
 1761 03b6 1944     		add	r1, r1, r3
 1762              	.LVL189:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 64


 227:lvgl/src/widgets/lv_slider.c ****         }
 1763              		.loc 1 227 23 view .LVU597
 1764 03b8 B0E7     		b	.L68
 1765              	.LVL190:
 1766              	.L109:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1767              		.loc 1 226 55 view .LVU598
 1768 03ba 5A1C     		adds	r2, r3, #1
 1769 03bc F6E7     		b	.L69
 1770              	.LVL191:
 1771              	.L107:
 226:lvgl/src/widgets/lv_slider.c ****             new_value += slider->bar.min_value;
 1772              		.loc 1 226 55 view .LVU599
 1773              	.LBE189:
 234:lvgl/src/widgets/lv_slider.c ****         }
 1774              		.loc 1 234 13 is_stmt 1 view .LVU600
 234:lvgl/src/widgets/lv_slider.c ****         }
 1775              		.loc 1 234 28 is_stmt 0 view .LVU601
 1776 03be 6C6A     		ldr	r4, [r5, #36]
 1777              	.LVL192:
 234:lvgl/src/widgets/lv_slider.c ****         }
 1778              		.loc 1 234 28 view .LVU602
 1779 03c0 B4E7     		b	.L71
 1780              	.LVL193:
 1781              	.L108:
 243:lvgl/src/widgets/lv_slider.c ****             }
 1782              		.loc 1 243 17 is_stmt 1 view .LVU603
 1783 03c2 0122     		movs	r2, #1
 1784 03c4 2846     		mov	r0, r5
 1785 03c6 FFF7FEFF 		bl	lv_bar_set_start_value
 1786              	.LVL194:
 243:lvgl/src/widgets/lv_slider.c ****             }
 1787              		.loc 1 243 17 is_stmt 0 view .LVU604
 1788 03ca BFE7     		b	.L74
 1789              	.LVL195:
 1790              	.L97:
 243:lvgl/src/widgets/lv_slider.c ****             }
 1791              		.loc 1 243 17 view .LVU605
 1792              	.LBE180:
 1793              	.LBB194:
 254:lvgl/src/widgets/lv_slider.c ****         slider->value_to_set = NULL;
 1794              		.loc 1 254 9 is_stmt 1 view .LVU606
 254:lvgl/src/widgets/lv_slider.c ****         slider->value_to_set = NULL;
 1795              		.loc 1 254 26 is_stmt 0 view .LVU607
 1796 03cc 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1797 03d0 6FF30003 		bfc	r3, #0, #1
 1798 03d4 85F87430 		strb	r3, [r5, #116]
 255:lvgl/src/widgets/lv_slider.c **** 
 1799              		.loc 1 255 9 is_stmt 1 view .LVU608
 255:lvgl/src/widgets/lv_slider.c **** 
 1800              		.loc 1 255 30 is_stmt 0 view .LVU609
 1801 03d8 0023     		movs	r3, #0
 1802 03da 2B67     		str	r3, [r5, #112]
 257:lvgl/src/widgets/lv_slider.c **** 
 1803              		.loc 1 257 9 is_stmt 1 view .LVU610
 1804 03dc 2846     		mov	r0, r5
 1805 03de FFF7FEFF 		bl	lv_obj_invalidate
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 65


 1806              	.LVL196:
 260:lvgl/src/widgets/lv_slider.c ****         bool editing     = lv_group_get_editing(g);
 1807              		.loc 1 260 9 view .LVU611
 260:lvgl/src/widgets/lv_slider.c ****         bool editing     = lv_group_get_editing(g);
 1808              		.loc 1 260 28 is_stmt 0 view .LVU612
 1809 03e2 2846     		mov	r0, r5
 1810 03e4 FFF7FEFF 		bl	lv_obj_get_group
 1811              	.LVL197:
 1812 03e8 0646     		mov	r6, r0
 1813              	.LVL198:
 261:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 1814              		.loc 1 261 9 is_stmt 1 view .LVU613
 261:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 1815              		.loc 1 261 28 is_stmt 0 view .LVU614
 1816 03ea FFF7FEFF 		bl	lv_group_get_editing
 1817              	.LVL199:
 261:lvgl/src/widgets/lv_slider.c ****         lv_indev_type_t indev_type = lv_indev_get_type(lv_indev_get_act());
 1818              		.loc 1 261 28 view .LVU615
 1819 03ee 0446     		mov	r4, r0
 1820              	.LVL200:
 262:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 1821              		.loc 1 262 9 is_stmt 1 view .LVU616
 262:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 1822              		.loc 1 262 56 is_stmt 0 view .LVU617
 1823 03f0 FFF7FEFF 		bl	lv_indev_get_act
 1824              	.LVL201:
 262:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER) {
 1825              		.loc 1 262 38 view .LVU618
 1826 03f4 FFF7FEFF 		bl	lv_indev_get_type
 1827              	.LVL202:
 263:lvgl/src/widgets/lv_slider.c ****             if(editing) {
 1828              		.loc 1 263 9 is_stmt 1 view .LVU619
 263:lvgl/src/widgets/lv_slider.c ****             if(editing) {
 1829              		.loc 1 263 11 is_stmt 0 view .LVU620
 1830 03f8 0428     		cmp	r0, #4
 1831 03fa 7FF40AAE 		bne	.L42
 264:lvgl/src/widgets/lv_slider.c ****                 if(lv_slider_get_mode(obj) == LV_SLIDER_MODE_RANGE) {
 1832              		.loc 1 264 13 is_stmt 1 view .LVU621
 264:lvgl/src/widgets/lv_slider.c ****                 if(lv_slider_get_mode(obj) == LV_SLIDER_MODE_RANGE) {
 1833              		.loc 1 264 15 is_stmt 0 view .LVU622
 1834 03fe 002C     		cmp	r4, #0
 1835 0400 3FF407AE 		beq	.L42
 265:lvgl/src/widgets/lv_slider.c ****                     if(slider->left_knob_focus == 0) slider->left_knob_focus = 1;
 1836              		.loc 1 265 17 is_stmt 1 view .LVU623
 1837              	.LVL203:
 1838              	.LBB195:
 1839              	.LBI195:
 177:lvgl/src/widgets/lv_slider.h **** {
 1840              		.loc 4 177 32 view .LVU624
 1841              	.LBB196:
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 1842              		.loc 4 179 5 view .LVU625
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
 1843              		.loc 4 179 26 is_stmt 0 view .LVU626
 1844 0404 2846     		mov	r0, r5
 1845              	.LVL204:
 179:lvgl/src/widgets/lv_slider.h ****     if(mode == LV_BAR_MODE_SYMMETRICAL) return LV_SLIDER_MODE_SYMMETRICAL;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 66


 1846              		.loc 4 179 26 view .LVU627
 1847 0406 FFF7FEFF 		bl	lv_bar_get_mode
 1848              	.LVL205:
 180:lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 1849              		.loc 4 180 5 is_stmt 1 view .LVU628
 180:lvgl/src/widgets/lv_slider.h ****     else if(mode == LV_BAR_MODE_RANGE) return LV_SLIDER_MODE_RANGE;
 1850              		.loc 4 180 7 is_stmt 0 view .LVU629
 1851 040a 0128     		cmp	r0, #1
 1852 040c 02D0     		beq	.L76
 181:lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 1853              		.loc 4 181 10 is_stmt 1 view .LVU630
 181:lvgl/src/widgets/lv_slider.h ****     else return LV_SLIDER_MODE_NORMAL;
 1854              		.loc 4 181 12 is_stmt 0 view .LVU631
 1855 040e 0228     		cmp	r0, #2
 1856 0410 00D0     		beq	.L76
 1857              		.loc 4 182 17 view .LVU632
 1858 0412 0020     		movs	r0, #0
 1859              	.LVL206:
 1860              	.L76:
 1861              		.loc 4 182 17 view .LVU633
 1862              	.LBE196:
 1863              	.LBE195:
 265:lvgl/src/widgets/lv_slider.c ****                     if(slider->left_knob_focus == 0) slider->left_knob_focus = 1;
 1864              		.loc 1 265 19 view .LVU634
 1865 0414 0228     		cmp	r0, #2
 1866 0416 14D1     		bne	.L77
 266:lvgl/src/widgets/lv_slider.c ****                     else {
 1867              		.loc 1 266 21 is_stmt 1 view .LVU635
 266:lvgl/src/widgets/lv_slider.c ****                     else {
 1868              		.loc 1 266 48 is_stmt 0 view .LVU636
 1869 0418 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 266:lvgl/src/widgets/lv_slider.c ****                     else {
 1870              		.loc 1 266 23 view .LVU637
 1871 041c 13F0020F 		tst	r3, #2
 1872 0420 04D1     		bne	.L78
 266:lvgl/src/widgets/lv_slider.c ****                     else {
 1873              		.loc 1 266 54 is_stmt 1 discriminator 1 view .LVU638
 266:lvgl/src/widgets/lv_slider.c ****                     else {
 1874              		.loc 1 266 78 is_stmt 0 discriminator 1 view .LVU639
 1875 0422 43F00203 		orr	r3, r3, #2
 1876 0426 85F87430 		strb	r3, [r5, #116]
 1877 042a F2E5     		b	.L42
 1878              	.L78:
 268:lvgl/src/widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 1879              		.loc 1 268 25 is_stmt 1 view .LVU640
 268:lvgl/src/widgets/lv_slider.c ****                         lv_group_set_editing(g, false);
 1880              		.loc 1 268 49 is_stmt 0 view .LVU641
 1881 042c 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1882 0430 6FF34103 		bfc	r3, #1, #1
 1883 0434 85F87430 		strb	r3, [r5, #116]
 269:lvgl/src/widgets/lv_slider.c ****                     }
 1884              		.loc 1 269 25 is_stmt 1 view .LVU642
 1885 0438 0021     		movs	r1, #0
 1886 043a 3046     		mov	r0, r6
 1887 043c FFF7FEFF 		bl	lv_group_set_editing
 1888              	.LVL207:
 1889 0440 E7E5     		b	.L42
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 67


 1890              	.L77:
 273:lvgl/src/widgets/lv_slider.c ****                 }
 1891              		.loc 1 273 21 view .LVU643
 1892 0442 0021     		movs	r1, #0
 1893 0444 3046     		mov	r0, r6
 1894 0446 FFF7FEFF 		bl	lv_group_set_editing
 1895              	.LVL208:
 1896 044a E2E5     		b	.L42
 1897              	.LVL209:
 1898              	.L98:
 273:lvgl/src/widgets/lv_slider.c ****                 }
 1899              		.loc 1 273 21 is_stmt 0 view .LVU644
 1900              	.LBE194:
 1901              	.LBB197:
 280:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1902              		.loc 1 280 9 is_stmt 1 view .LVU645
 280:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1903              		.loc 1 280 56 is_stmt 0 view .LVU646
 1904 044c FFF7FEFF 		bl	lv_indev_get_act
 1905              	.LVL210:
 280:lvgl/src/widgets/lv_slider.c ****         if(indev_type == LV_INDEV_TYPE_ENCODER || indev_type == LV_INDEV_TYPE_KEYPAD) {
 1906              		.loc 1 280 38 view .LVU647
 1907 0450 FFF7FEFF 		bl	lv_indev_get_type
 1908              	.LVL211:
 281:lvgl/src/widgets/lv_slider.c ****             slider->left_knob_focus = 0;
 1909              		.loc 1 281 9 is_stmt 1 view .LVU648
 281:lvgl/src/widgets/lv_slider.c ****             slider->left_knob_focus = 0;
 1910              		.loc 1 281 11 is_stmt 0 view .LVU649
 1911 0454 0228     		cmp	r0, #2
 1912 0456 18BF     		it	ne
 1913 0458 0428     		cmpne	r0, #4
 1914 045a 7FF4DAAD 		bne	.L42
 282:lvgl/src/widgets/lv_slider.c ****         }
 1915              		.loc 1 282 13 is_stmt 1 view .LVU650
 282:lvgl/src/widgets/lv_slider.c ****         }
 1916              		.loc 1 282 37 is_stmt 0 view .LVU651
 1917 045e 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 1918 0462 6FF34103 		bfc	r3, #1, #1
 1919 0466 85F87430 		strb	r3, [r5, #116]
 1920 046a D2E5     		b	.L42
 1921              	.LVL212:
 1922              	.L99:
 282:lvgl/src/widgets/lv_slider.c ****         }
 1923              		.loc 1 282 37 view .LVU652
 1924              	.LBE197:
 286:lvgl/src/widgets/lv_slider.c ****     }
 1925              		.loc 1 286 9 is_stmt 1 view .LVU653
 1926 046c 2846     		mov	r0, r5
 1927 046e FFF7FEFF 		bl	lv_obj_refresh_ext_draw_size
 1928              	.LVL213:
 1929 0472 CEE5     		b	.L42
 1930              	.L100:
 1931              	.LBB198:
 289:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_right = lv_obj_get_style_pad_right(obj, LV_PART_KNOB);
 1932              		.loc 1 289 9 view .LVU654
 1933              	.LVL214:
 1934              	.LBB199:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 68


 1935              	.LBI199:
 115:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1936              		.loc 2 115 26 view .LVU655
 1937              	.LBB200:
 117:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1938              		.loc 2 117 5 view .LVU656
 117:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1939              		.loc 2 117 26 is_stmt 0 view .LVU657
 1940 0474 1222     		movs	r2, #18
 1941 0476 4FF44031 		mov	r1, #196608
 1942 047a 2846     		mov	r0, r5
 1943 047c FFF7FEFF 		bl	lv_obj_get_style_prop
 1944              	.LVL215:
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1945              		.loc 2 118 5 is_stmt 1 view .LVU658
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1946              		.loc 2 118 12 is_stmt 0 view .LVU659
 1947 0480 03B2     		sxth	r3, r0
 1948 0482 0193     		str	r3, [sp, #4]
 1949              	.LVL216:
 118:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1950              		.loc 2 118 12 view .LVU660
 1951              	.LBE200:
 1952              	.LBE199:
 290:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_top = lv_obj_get_style_pad_top(obj, LV_PART_KNOB);
 1953              		.loc 1 290 9 is_stmt 1 view .LVU661
 1954              	.LBB201:
 1955              	.LBI201:
 121:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1956              		.loc 2 121 26 view .LVU662
 1957              	.LBB202:
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1958              		.loc 2 123 5 view .LVU663
 123:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1959              		.loc 2 123 26 is_stmt 0 view .LVU664
 1960 0484 1322     		movs	r2, #19
 1961 0486 4FF44031 		mov	r1, #196608
 1962 048a 2846     		mov	r0, r5
 1963 048c FFF7FEFF 		bl	lv_obj_get_style_prop
 1964              	.LVL217:
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1965              		.loc 2 124 5 is_stmt 1 view .LVU665
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1966              		.loc 2 124 12 is_stmt 0 view .LVU666
 1967 0490 07B2     		sxth	r7, r0
 1968              	.LVL218:
 124:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1969              		.loc 2 124 12 view .LVU667
 1970              	.LBE202:
 1971              	.LBE201:
 291:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_bottom = lv_obj_get_style_pad_bottom(obj, LV_PART_KNOB);
 1972              		.loc 1 291 9 is_stmt 1 view .LVU668
 1973              	.LBB203:
 1974              	.LBI203:
 103:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1975              		.loc 2 103 26 view .LVU669
 1976              	.LBB204:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 69


 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1977              		.loc 2 105 5 view .LVU670
 105:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1978              		.loc 2 105 26 is_stmt 0 view .LVU671
 1979 0492 1022     		movs	r2, #16
 1980 0494 4FF44031 		mov	r1, #196608
 1981 0498 2846     		mov	r0, r5
 1982 049a FFF7FEFF 		bl	lv_obj_get_style_prop
 1983              	.LVL219:
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1984              		.loc 2 106 5 is_stmt 1 view .LVU672
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1985              		.loc 2 106 12 is_stmt 0 view .LVU673
 1986 049e 0FFA80FA 		sxth	r10, r0
 1987              	.LVL220:
 106:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 1988              		.loc 2 106 12 view .LVU674
 1989              	.LBE204:
 1990              	.LBE203:
 292:lvgl/src/widgets/lv_slider.c **** 
 1991              		.loc 1 292 9 is_stmt 1 view .LVU675
 1992              	.LBB205:
 1993              	.LBI205:
 109:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 1994              		.loc 2 109 26 view .LVU676
 1995              	.LBB206:
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1996              		.loc 2 111 5 view .LVU677
 111:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1997              		.loc 2 111 26 is_stmt 0 view .LVU678
 1998 04a2 1122     		movs	r2, #17
 1999 04a4 4FF44031 		mov	r1, #196608
 2000 04a8 2846     		mov	r0, r5
 2001 04aa FFF7FEFF 		bl	lv_obj_get_style_prop
 2002              	.LVL221:
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2003              		.loc 2 112 5 is_stmt 1 view .LVU679
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2004              		.loc 2 112 12 is_stmt 0 view .LVU680
 2005 04ae 06B2     		sxth	r6, r0
 2006              	.LVL222:
 112:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2007              		.loc 2 112 12 view .LVU681
 2008              	.LBE206:
 2009              	.LBE205:
 295:lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_w = lv_obj_get_style_transform_width(obj, LV_PART_KNOB);
 2010              		.loc 1 295 9 is_stmt 1 view .LVU682
 2011              	.LBB207:
 2012              	.LBI207:
  79:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 2013              		.loc 2 79 26 view .LVU683
 2014              	.LBB208:
  81:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2015              		.loc 2 81 5 view .LVU684
  81:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2016              		.loc 2 81 26 is_stmt 0 view .LVU685
 2017 04b0 6D22     		movs	r2, #109
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 70


 2018 04b2 4FF44031 		mov	r1, #196608
 2019 04b6 2846     		mov	r0, r5
 2020 04b8 FFF7FEFF 		bl	lv_obj_get_style_prop
 2021              	.LVL223:
  82:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2022              		.loc 2 82 5 is_stmt 1 view .LVU686
  82:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2023              		.loc 2 82 12 is_stmt 0 view .LVU687
 2024 04bc 0FFA80FB 		sxth	fp, r0
 2025              	.LVL224:
  82:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2026              		.loc 2 82 12 view .LVU688
 2027              	.LBE208:
 2028              	.LBE207:
 296:lvgl/src/widgets/lv_slider.c ****         lv_coord_t trans_h = lv_obj_get_style_transform_height(obj, LV_PART_KNOB);
 2029              		.loc 1 296 9 is_stmt 1 view .LVU689
 2030              	.LBB209:
 2031              	.LBI209:
  55:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 2032              		.loc 2 55 26 view .LVU690
 2033              	.LBB210:
  57:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2034              		.loc 2 57 5 view .LVU691
  57:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2035              		.loc 2 57 26 is_stmt 0 view .LVU692
 2036 04c0 6922     		movs	r2, #105
 2037 04c2 4FF44031 		mov	r1, #196608
 2038 04c6 2846     		mov	r0, r5
 2039 04c8 FFF7FEFF 		bl	lv_obj_get_style_prop
 2040              	.LVL225:
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2041              		.loc 2 58 5 is_stmt 1 view .LVU693
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2042              		.loc 2 58 12 is_stmt 0 view .LVU694
 2043 04cc 0FFA80F9 		sxth	r9, r0
 2044              	.LVL226:
  58:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2045              		.loc 2 58 12 view .LVU695
 2046              	.LBE210:
 2047              	.LBE209:
 297:lvgl/src/widgets/lv_slider.c ****         lv_coord_t knob_size = LV_MIN(lv_obj_get_width(obj) + 2 * trans_w, lv_obj_get_height(obj) +
 2048              		.loc 1 297 9 is_stmt 1 view .LVU696
 2049              	.LBB211:
 2050              	.LBI211:
  61:lvgl/src/widgets/../core/lv_obj_style_gen.h **** {
 2051              		.loc 2 61 26 view .LVU697
 2052              	.LBB212:
  63:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2053              		.loc 2 63 5 view .LVU698
  63:lvgl/src/widgets/../core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2054              		.loc 2 63 26 is_stmt 0 view .LVU699
 2055 04d0 6A22     		movs	r2, #106
 2056 04d2 4FF44031 		mov	r1, #196608
 2057 04d6 2846     		mov	r0, r5
 2058 04d8 FFF7FEFF 		bl	lv_obj_get_style_prop
 2059              	.LVL227:
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 71


 2060              		.loc 2 64 5 is_stmt 1 view .LVU700
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2061              		.loc 2 64 12 is_stmt 0 view .LVU701
 2062 04dc 0FFA80F8 		sxth	r8, r0
 2063              	.LVL228:
  64:lvgl/src/widgets/../core/lv_obj_style_gen.h **** }
 2064              		.loc 2 64 12 view .LVU702
 2065              	.LBE212:
 2066              	.LBE211:
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2067              		.loc 1 298 9 is_stmt 1 view .LVU703
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2068              		.loc 1 298 32 is_stmt 0 view .LVU704
 2069 04e0 2846     		mov	r0, r5
 2070 04e2 FFF7FEFF 		bl	lv_obj_get_width
 2071              	.LVL229:
 2072 04e6 4FEA4903 		lsl	r3, r9, #1
 2073 04ea 0293     		str	r3, [sp, #8]
 2074 04ec 00EB4909 		add	r9, r0, r9, lsl #1
 2075              	.LVL230:
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2076              		.loc 1 298 32 view .LVU705
 2077 04f0 2846     		mov	r0, r5
 2078 04f2 FFF7FEFF 		bl	lv_obj_get_height
 2079              	.LVL231:
 2080 04f6 4FEA4802 		lsl	r2, r8, #1
 2081 04fa 0392     		str	r2, [sp, #12]
 2082 04fc 00EB4808 		add	r8, r0, r8, lsl #1
 2083              	.LVL232:
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2084              		.loc 1 298 20 view .LVU706
 2085 0500 C145     		cmp	r9, r8
 2086 0502 2ADA     		bge	.L82
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2087              		.loc 1 298 32 discriminator 1 view .LVU707
 2088 0504 2846     		mov	r0, r5
 2089 0506 FFF7FEFF 		bl	lv_obj_get_width
 2090              	.LVL233:
 2091 050a 029B     		ldr	r3, [sp, #8]
 2092 050c 0344     		add	r3, r3, r0
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2093              		.loc 1 298 20 discriminator 1 view .LVU708
 2094 050e 43F34F03 		sbfx	r3, r3, #1, #16
 2095              	.L83:
 2096              	.LVL234:
 299:lvgl/src/widgets/lv_slider.c ****         knob_size += LV_MAX(LV_MAX(knob_left, knob_right), LV_MAX(knob_bottom, knob_top));
 2097              		.loc 1 299 9 is_stmt 1 discriminator 4 view .LVU709
 299:lvgl/src/widgets/lv_slider.c ****         knob_size += LV_MAX(LV_MAX(knob_left, knob_right), LV_MAX(knob_bottom, knob_top));
 2098              		.loc 1 299 32 is_stmt 0 discriminator 4 view .LVU710
 2099 0512 0BFB03FB 		mul	fp, fp, r3
 2100              	.LVL235:
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2101              		.loc 1 300 9 is_stmt 1 discriminator 4 view .LVU711
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2102              		.loc 1 300 22 is_stmt 0 discriminator 4 view .LVU712
 2103 0516 5645     		cmp	r6, r10
 2104 0518 B8BF     		it	lt
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 72


 2105 051a 5646     		movlt	r6, r10
 2106              	.LVL236:
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2107              		.loc 1 300 22 discriminator 4 view .LVU713
 2108 051c 019B     		ldr	r3, [sp, #4]
 2109 051e 9F42     		cmp	r7, r3
 2110 0520 B8BF     		it	lt
 2111 0522 1F46     		movlt	r7, r3
 2112              	.LVL237:
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2113              		.loc 1 300 22 discriminator 4 view .LVU714
 2114 0524 BE42     		cmp	r6, r7
 2115 0526 B8BF     		it	lt
 2116 0528 3E46     		movlt	r6, r7
 2117 052a B6B2     		uxth	r6, r6
 300:lvgl/src/widgets/lv_slider.c ****         knob_size += 2;         /*For rounding error*/
 2118              		.loc 1 300 19 discriminator 4 view .LVU715
 2119 052c 06EB2B26 		add	r6, r6, fp, asr #8
 2120 0530 B6B2     		uxth	r6, r6
 2121              	.LVL238:
 301:lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 2122              		.loc 1 301 9 is_stmt 1 discriminator 4 view .LVU716
 301:lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 2123              		.loc 1 301 19 is_stmt 0 discriminator 4 view .LVU717
 2124 0532 0236     		adds	r6, r6, #2
 2125              	.LVL239:
 301:lvgl/src/widgets/lv_slider.c ****         knob_size += lv_obj_calculate_ext_draw_size(obj, LV_PART_KNOB);
 2126              		.loc 1 301 19 discriminator 4 view .LVU718
 2127 0534 B6B2     		uxth	r6, r6
 2128              	.LVL240:
 302:lvgl/src/widgets/lv_slider.c **** 
 2129              		.loc 1 302 9 is_stmt 1 discriminator 4 view .LVU719
 302:lvgl/src/widgets/lv_slider.c **** 
 2130              		.loc 1 302 22 is_stmt 0 discriminator 4 view .LVU720
 2131 0536 4FF44031 		mov	r1, #196608
 2132 053a 2846     		mov	r0, r5
 2133 053c FFF7FEFF 		bl	lv_obj_calculate_ext_draw_size
 2134              	.LVL241:
 302:lvgl/src/widgets/lv_slider.c **** 
 2135              		.loc 1 302 19 discriminator 4 view .LVU721
 2136 0540 16FA80F5 		uxtah	r5, r6, r0
 2137              	.LVL242:
 302:lvgl/src/widgets/lv_slider.c **** 
 2138              		.loc 1 302 19 discriminator 4 view .LVU722
 2139 0544 2DB2     		sxth	r5, r5
 2140              	.LVL243:
 305:lvgl/src/widgets/lv_slider.c ****         *s  = LV_MAX(*s, knob_size);
 2141              		.loc 1 305 9 is_stmt 1 discriminator 4 view .LVU723
 305:lvgl/src/widgets/lv_slider.c ****         *s  = LV_MAX(*s, knob_size);
 2142              		.loc 1 305 26 is_stmt 0 discriminator 4 view .LVU724
 2143 0546 2046     		mov	r0, r4
 2144 0548 FFF7FEFF 		bl	lv_event_get_param
 2145              	.LVL244:
 306:lvgl/src/widgets/lv_slider.c **** 
 2146              		.loc 1 306 9 is_stmt 1 discriminator 4 view .LVU725
 306:lvgl/src/widgets/lv_slider.c **** 
 2147              		.loc 1 306 15 is_stmt 0 discriminator 4 view .LVU726
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 73


 2148 054c B0F90030 		ldrsh	r3, [r0]
 2149 0550 9D42     		cmp	r5, r3
 2150 0552 B8BF     		it	lt
 2151 0554 1D46     		movlt	r5, r3
 2152              	.LVL245:
 306:lvgl/src/widgets/lv_slider.c **** 
 2153              		.loc 1 306 13 discriminator 4 view .LVU727
 2154 0556 0580     		strh	r5, [r0]	@ movhi
 2155              	.LBE198:
 2156 0558 5BE5     		b	.L42
 2157              	.LVL246:
 2158              	.L82:
 2159              	.LBB213:
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2160              		.loc 1 298 32 discriminator 2 view .LVU728
 2161 055a 2846     		mov	r0, r5
 2162 055c FFF7FEFF 		bl	lv_obj_get_height
 2163              	.LVL247:
 2164 0560 039B     		ldr	r3, [sp, #12]
 2165 0562 0344     		add	r3, r3, r0
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2166              		.loc 1 298 20 discriminator 2 view .LVU729
 2167 0564 43F34F03 		sbfx	r3, r3, #1, #16
 2168 0568 D3E7     		b	.L83
 2169              	.LVL248:
 2170              	.L101:
 298:lvgl/src/widgets/lv_slider.c ****         knob_size = (knob_size * zoom) >> 8;
 2171              		.loc 1 298 20 discriminator 2 view .LVU730
 2172              	.LBE213:
 2173              	.LBB214:
 310:lvgl/src/widgets/lv_slider.c **** 
 2174              		.loc 1 310 9 is_stmt 1 view .LVU731
 310:lvgl/src/widgets/lv_slider.c **** 
 2175              		.loc 1 310 28 is_stmt 0 view .LVU732
 2176 056a 2046     		mov	r0, r4
 2177 056c FFF7FEFF 		bl	lv_event_get_param
 2178              	.LVL249:
 310:lvgl/src/widgets/lv_slider.c **** 
 2179              		.loc 1 310 14 view .LVU733
 2180 0570 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 2181              	.LVL250:
 312:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) + 1, LV_
 2182              		.loc 1 312 9 is_stmt 1 view .LVU734
 312:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) + 1, LV_
 2183              		.loc 1 312 11 is_stmt 0 view .LVU735
 2184 0572 112B     		cmp	r3, #17
 2185 0574 18BF     		it	ne
 2186 0576 132B     		cmpne	r3, #19
 2187 0578 1BD1     		bne	.L85
 313:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 2188              		.loc 1 313 13 is_stmt 1 view .LVU736
 313:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 2189              		.loc 1 313 16 is_stmt 0 view .LVU737
 2190 057a 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 2191              	.LVL251:
 313:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 2192              		.loc 1 313 15 view .LVU738
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 74


 2193 057e 13F0020F 		tst	r3, #2
 2194 0582 0DD1     		bne	.L86
 313:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) + 1, LV_ANIM_ON);
 2195              		.loc 1 313 42 is_stmt 1 view .LVU739
 2196              	.LVL252:
 2197              	.LBB215:
 2198              	.LBI215:
 130:lvgl/src/widgets/lv_slider.h **** {
 2199              		.loc 4 130 23 view .LVU740
 2200              	.LBB216:
 132:lvgl/src/widgets/lv_slider.h **** }
 2201              		.loc 4 132 5 view .LVU741
 132:lvgl/src/widgets/lv_slider.h **** }
 2202              		.loc 4 132 12 is_stmt 0 view .LVU742
 2203 0584 2846     		mov	r0, r5
 2204              	.LVL253:
 132:lvgl/src/widgets/lv_slider.h **** }
 2205              		.loc 4 132 12 view .LVU743
 2206 0586 FFF7FEFF 		bl	lv_bar_get_value
 2207              	.LVL254:
 132:lvgl/src/widgets/lv_slider.h **** }
 2208              		.loc 4 132 12 view .LVU744
 2209              	.LBE216:
 2210              	.LBE215:
 2211              	.LBB217:
 2212              	.LBI217:
  84:lvgl/src/widgets/lv_slider.h **** {
 2213              		.loc 4 84 20 is_stmt 1 view .LVU745
 2214              	.LBB218:
  86:lvgl/src/widgets/lv_slider.h **** }
 2215              		.loc 4 86 5 view .LVU746
 2216 058a 0122     		movs	r2, #1
 2217 058c 8118     		adds	r1, r0, r2
 2218              	.LVL255:
  86:lvgl/src/widgets/lv_slider.h **** }
 2219              		.loc 4 86 5 is_stmt 0 view .LVU747
 2220 058e 2846     		mov	r0, r5
 2221 0590 FFF7FEFF 		bl	lv_bar_set_value
 2222              	.LVL256:
 2223              	.L87:
  86:lvgl/src/widgets/lv_slider.h **** }
 2224              		.loc 4 86 5 view .LVU748
 2225              	.LBE218:
 2226              	.LBE217:
 324:lvgl/src/widgets/lv_slider.c ****         if(res != LV_RES_OK) return;
 2227              		.loc 1 324 9 is_stmt 1 view .LVU749
 324:lvgl/src/widgets/lv_slider.c ****         if(res != LV_RES_OK) return;
 2228              		.loc 1 324 15 is_stmt 0 view .LVU750
 2229 0594 0022     		movs	r2, #0
 2230 0596 1C21     		movs	r1, #28
 2231 0598 2846     		mov	r0, r5
 2232 059a FFF7FEFF 		bl	lv_event_send
 2233              	.LVL257:
 325:lvgl/src/widgets/lv_slider.c ****     }
 2234              		.loc 1 325 9 is_stmt 1 view .LVU751
 2235 059e 38E5     		b	.L42
 2236              	.LVL258:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 75


 2237              	.L86:
 314:lvgl/src/widgets/lv_slider.c ****         }
 2238              		.loc 1 314 18 view .LVU752
 2239              	.LBB219:
 2240              	.LBI219:
 140:lvgl/src/widgets/lv_slider.h **** {
 2241              		.loc 4 140 23 view .LVU753
 2242              	.LBB220:
 142:lvgl/src/widgets/lv_slider.h **** }
 2243              		.loc 4 142 5 view .LVU754
 142:lvgl/src/widgets/lv_slider.h **** }
 2244              		.loc 4 142 12 is_stmt 0 view .LVU755
 2245 05a0 2846     		mov	r0, r5
 2246              	.LVL259:
 142:lvgl/src/widgets/lv_slider.h **** }
 2247              		.loc 4 142 12 view .LVU756
 2248 05a2 FFF7FEFF 		bl	lv_bar_get_start_value
 2249              	.LVL260:
 142:lvgl/src/widgets/lv_slider.h **** }
 2250              		.loc 4 142 12 view .LVU757
 2251              	.LBE220:
 2252              	.LBE219:
 2253              	.LBB221:
 2254              	.LBI221:
  95:lvgl/src/widgets/lv_slider.h **** {
 2255              		.loc 4 95 20 is_stmt 1 view .LVU758
 2256              	.LBB222:
  97:lvgl/src/widgets/lv_slider.h **** }
 2257              		.loc 4 97 5 view .LVU759
 2258 05a6 0122     		movs	r2, #1
 2259 05a8 8118     		adds	r1, r0, r2
 2260              	.LVL261:
  97:lvgl/src/widgets/lv_slider.h **** }
 2261              		.loc 4 97 5 is_stmt 0 view .LVU760
 2262 05aa 2846     		mov	r0, r5
 2263 05ac FFF7FEFF 		bl	lv_bar_set_start_value
 2264              	.LVL262:
  98:lvgl/src/widgets/lv_slider.h **** 
 2265              		.loc 4 98 1 view .LVU761
 2266 05b0 F0E7     		b	.L87
 2267              	.LVL263:
 2268              	.L85:
  98:lvgl/src/widgets/lv_slider.h **** 
 2269              		.loc 4 98 1 view .LVU762
 2270              	.LBE222:
 2271              	.LBE221:
 316:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) - 1, LV_
 2272              		.loc 1 316 14 is_stmt 1 view .LVU763
 316:lvgl/src/widgets/lv_slider.c ****             if(!slider->left_knob_focus) lv_slider_set_value(obj, lv_slider_get_value(obj) - 1, LV_
 2273              		.loc 1 316 16 is_stmt 0 view .LVU764
 2274 05b2 122B     		cmp	r3, #18
 2275 05b4 18BF     		it	ne
 2276 05b6 142B     		cmpne	r3, #20
 2277 05b8 7FF42BAD 		bne	.L42
 317:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
 2278              		.loc 1 317 13 is_stmt 1 view .LVU765
 317:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 76


 2279              		.loc 1 317 16 is_stmt 0 view .LVU766
 2280 05bc 95F87430 		ldrb	r3, [r5, #116]	@ zero_extendqisi2
 2281              	.LVL264:
 317:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
 2282              		.loc 1 317 15 view .LVU767
 2283 05c0 13F0020F 		tst	r3, #2
 2284 05c4 08D1     		bne	.L88
 317:lvgl/src/widgets/lv_slider.c ****             else lv_slider_set_left_value(obj, lv_slider_get_left_value(obj) - 1, LV_ANIM_ON);
 2285              		.loc 1 317 42 is_stmt 1 view .LVU768
 2286              	.LVL265:
 2287              	.LBB223:
 2288              	.LBI223:
 130:lvgl/src/widgets/lv_slider.h **** {
 2289              		.loc 4 130 23 view .LVU769
 2290              	.LBB224:
 132:lvgl/src/widgets/lv_slider.h **** }
 2291              		.loc 4 132 5 view .LVU770
 132:lvgl/src/widgets/lv_slider.h **** }
 2292              		.loc 4 132 12 is_stmt 0 view .LVU771
 2293 05c6 2846     		mov	r0, r5
 2294              	.LVL266:
 132:lvgl/src/widgets/lv_slider.h **** }
 2295              		.loc 4 132 12 view .LVU772
 2296 05c8 FFF7FEFF 		bl	lv_bar_get_value
 2297              	.LVL267:
 132:lvgl/src/widgets/lv_slider.h **** }
 2298              		.loc 4 132 12 view .LVU773
 2299              	.LBE224:
 2300              	.LBE223:
 2301              	.LBB225:
 2302              	.LBI225:
  84:lvgl/src/widgets/lv_slider.h **** {
 2303              		.loc 4 84 20 is_stmt 1 view .LVU774
 2304              	.LBB226:
  86:lvgl/src/widgets/lv_slider.h **** }
 2305              		.loc 4 86 5 view .LVU775
 2306 05cc 0122     		movs	r2, #1
 2307 05ce 411E     		subs	r1, r0, #1
 2308              	.LVL268:
  86:lvgl/src/widgets/lv_slider.h **** }
 2309              		.loc 4 86 5 is_stmt 0 view .LVU776
 2310 05d0 2846     		mov	r0, r5
 2311 05d2 FFF7FEFF 		bl	lv_bar_set_value
 2312              	.LVL269:
  87:lvgl/src/widgets/lv_slider.h **** 
 2313              		.loc 4 87 1 view .LVU777
 2314 05d6 DDE7     		b	.L87
 2315              	.LVL270:
 2316              	.L88:
  87:lvgl/src/widgets/lv_slider.h **** 
 2317              		.loc 4 87 1 view .LVU778
 2318              	.LBE226:
 2319              	.LBE225:
 318:lvgl/src/widgets/lv_slider.c ****         }
 2320              		.loc 1 318 18 is_stmt 1 view .LVU779
 2321              	.LBB227:
 2322              	.LBI227:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 77


 140:lvgl/src/widgets/lv_slider.h **** {
 2323              		.loc 4 140 23 view .LVU780
 2324              	.LBB228:
 142:lvgl/src/widgets/lv_slider.h **** }
 2325              		.loc 4 142 5 view .LVU781
 142:lvgl/src/widgets/lv_slider.h **** }
 2326              		.loc 4 142 12 is_stmt 0 view .LVU782
 2327 05d8 2846     		mov	r0, r5
 2328              	.LVL271:
 142:lvgl/src/widgets/lv_slider.h **** }
 2329              		.loc 4 142 12 view .LVU783
 2330 05da FFF7FEFF 		bl	lv_bar_get_start_value
 2331              	.LVL272:
 142:lvgl/src/widgets/lv_slider.h **** }
 2332              		.loc 4 142 12 view .LVU784
 2333              	.LBE228:
 2334              	.LBE227:
 2335              	.LBB229:
 2336              	.LBI229:
  95:lvgl/src/widgets/lv_slider.h **** {
 2337              		.loc 4 95 20 is_stmt 1 view .LVU785
 2338              	.LBB230:
  97:lvgl/src/widgets/lv_slider.h **** }
 2339              		.loc 4 97 5 view .LVU786
 2340 05de 0122     		movs	r2, #1
 2341 05e0 411E     		subs	r1, r0, #1
 2342              	.LVL273:
  97:lvgl/src/widgets/lv_slider.h **** }
 2343              		.loc 4 97 5 is_stmt 0 view .LVU787
 2344 05e2 2846     		mov	r0, r5
 2345 05e4 FFF7FEFF 		bl	lv_bar_set_start_value
 2346              	.LVL274:
  98:lvgl/src/widgets/lv_slider.h **** 
 2347              		.loc 4 98 1 view .LVU788
 2348 05e8 D4E7     		b	.L87
 2349              	.LBE230:
 2350              	.LBE229:
 2351              	.LBE214:
 2352              		.cfi_endproc
 2353              	.LFE179:
 2355 05ea 00BF     		.section	.text.lv_slider_create,"ax",%progbits
 2356              		.align	1
 2357              		.global	lv_slider_create
 2358              		.syntax unified
 2359              		.thumb
 2360              		.thumb_func
 2362              	lv_slider_create:
 2363              	.LVL275:
 2364              	.LFB176:
  61:lvgl/src/widgets/lv_slider.c ****     LV_LOG_INFO("begin");
 2365              		.loc 1 61 1 is_stmt 1 view -0
 2366              		.cfi_startproc
 2367              		@ args = 0, pretend = 0, frame = 0
 2368              		@ frame_needed = 0, uses_anonymous_args = 0
  61:lvgl/src/widgets/lv_slider.c ****     LV_LOG_INFO("begin");
 2369              		.loc 1 61 1 is_stmt 0 view .LVU790
 2370 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 78


 2371              		.cfi_def_cfa_offset 8
 2372              		.cfi_offset 4, -8
 2373              		.cfi_offset 14, -4
 2374 0002 0146     		mov	r1, r0
  62:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2375              		.loc 1 62 5 is_stmt 1 view .LVU791
  62:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2376              		.loc 1 62 5 view .LVU792
  62:lvgl/src/widgets/lv_slider.c ****     lv_obj_t * obj = lv_obj_class_create_obj(MY_CLASS, parent);
 2377              		.loc 1 62 5 view .LVU793
  63:lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
 2378              		.loc 1 63 5 view .LVU794
  63:lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
 2379              		.loc 1 63 22 is_stmt 0 view .LVU795
 2380 0004 0348     		ldr	r0, .L114
 2381              	.LVL276:
  63:lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
 2382              		.loc 1 63 22 view .LVU796
 2383 0006 FFF7FEFF 		bl	lv_obj_class_create_obj
 2384              	.LVL277:
  63:lvgl/src/widgets/lv_slider.c ****     lv_obj_class_init_obj(obj);
 2385              		.loc 1 63 22 view .LVU797
 2386 000a 0446     		mov	r4, r0
 2387              	.LVL278:
  64:lvgl/src/widgets/lv_slider.c ****     return obj;
 2388              		.loc 1 64 5 is_stmt 1 view .LVU798
 2389 000c FFF7FEFF 		bl	lv_obj_class_init_obj
 2390              	.LVL279:
  65:lvgl/src/widgets/lv_slider.c **** }
 2391              		.loc 1 65 5 view .LVU799
  66:lvgl/src/widgets/lv_slider.c **** 
 2392              		.loc 1 66 1 is_stmt 0 view .LVU800
 2393 0010 2046     		mov	r0, r4
 2394 0012 10BD     		pop	{r4, pc}
 2395              	.LVL280:
 2396              	.L115:
  66:lvgl/src/widgets/lv_slider.c **** 
 2397              		.loc 1 66 1 view .LVU801
 2398              		.align	2
 2399              	.L114:
 2400 0014 00000000 		.word	.LANCHOR0
 2401              		.cfi_endproc
 2402              	.LFE176:
 2404              		.section	.text.lv_slider_is_dragged,"ax",%progbits
 2405              		.align	1
 2406              		.global	lv_slider_is_dragged
 2407              		.syntax unified
 2408              		.thumb
 2409              		.thumb_func
 2411              	lv_slider_is_dragged:
 2412              	.LVL281:
 2413              	.LFB177:
  69:lvgl/src/widgets/lv_slider.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 2414              		.loc 1 69 1 is_stmt 1 view -0
 2415              		.cfi_startproc
 2416              		@ args = 0, pretend = 0, frame = 0
 2417              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 79


 2418              		@ link register save eliminated.
  70:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 2419              		.loc 1 70 5 view .LVU803
  70:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 2420              		.loc 1 70 5 view .LVU804
  70:lvgl/src/widgets/lv_slider.c ****     lv_slider_t * slider = (lv_slider_t *)obj;
 2421              		.loc 1 70 5 view .LVU805
  71:lvgl/src/widgets/lv_slider.c **** 
 2422              		.loc 1 71 5 view .LVU806
  73:lvgl/src/widgets/lv_slider.c **** }
 2423              		.loc 1 73 5 view .LVU807
  73:lvgl/src/widgets/lv_slider.c **** }
 2424              		.loc 1 73 29 is_stmt 0 view .LVU808
 2425 0000 90F87400 		ldrb	r0, [r0, #116]	@ zero_extendqisi2
 2426              	.LVL282:
  74:lvgl/src/widgets/lv_slider.c **** 
 2427              		.loc 1 74 1 view .LVU809
 2428 0004 00F00100 		and	r0, r0, #1
 2429 0008 7047     		bx	lr
 2430              		.cfi_endproc
 2431              	.LFE177:
 2433              		.global	lv_slider_class
 2434              		.section	.rodata.lv_slider_class,"a"
 2435              		.align	2
 2436              		.set	.LANCHOR0,. + 0
 2439              	lv_slider_class:
 2440 0000 00000000 		.word	lv_bar_class
 2441 0004 00000000 		.word	lv_slider_constructor
 2442 0008 00000000 		.space	8
 2442      00000000 
 2443 0010 00000000 		.word	lv_slider_event
 2444 0014 00000000 		.space	4
 2445 0018 85       		.byte	133
 2446 0019 07       		.byte	7
 2447 001a 00       		.byte	0
 2448 001b 00       		.space	1
 2449              		.text
 2450              	.Letext0:
 2451              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 2452              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 2453              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 2454              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\font\\lv_font.h"
 2455              		.file 9 "lvgl/src/widgets/../core/../misc/lv_types.h"
 2456              		.file 10 "lvgl/src/widgets/../core/../misc/lv_color.h"
 2457              		.file 11 "lvgl/src/widgets/../core/../misc/lv_anim.h"
 2458              		.file 12 "lvgl/src/widgets/../core/../misc/lv_txt.h"
 2459              		.file 13 "lvgl/src/widgets/../core/../misc/lv_bidi.h"
 2460              		.file 14 "lvgl/src/widgets/../core/../misc/lv_style.h"
 2461              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_img_buf.h"
 2462              		.file 16 "lvgl/src/widgets/../core/lv_obj.h"
 2463              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_rect.h"
 2464              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_label.h"
 2465              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_img.h"
 2466              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_line.h"
 2467              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_arc.h"
 2468              		.file 22 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_layer.h"
 2469              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 80


 2470              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 2471              		.file 25 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_timer.h"
 2472              		.file 26 "lvgl/src/widgets/../core/../hal/lv_hal_disp.h"
 2473              		.file 27 "lvgl/src/widgets/../core/lv_theme.h"
 2474              		.file 28 "lvgl/src/widgets/../core/../hal/lv_hal_indev.h"
 2475              		.file 29 "lvgl/src/widgets/../core/lv_group.h"
 2476              		.file 30 "lvgl/src/widgets/../core/lv_obj_scroll.h"
 2477              		.file 31 "lvgl/src/widgets/../core/lv_obj_style.h"
 2478              		.file 32 "lvgl/src/widgets/../core/lv_obj_draw.h"
 2479              		.file 33 "lvgl/src/widgets/../core/lv_obj_class.h"
 2480              		.file 34 "lvgl/src/widgets/../core/lv_event.h"
 2481              		.file 35 "lvgl/src/widgets/lv_bar.h"
 2482              		.file 36 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
 2483              		.file 37 "lvgl/src/widgets/../core/../misc/lv_mem.h"
 2484              		.file 38 "lvgl/src/widgets/../core/lv_indev.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 81


DEFINED SYMBOLS
                            *ABS*:00000000 lv_slider.c
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:19     .text.is_slider_horizontal:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:24     .text.is_slider_horizontal:00000000 is_slider_horizontal
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:61     .text.position_knob:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:66     .text.position_knob:00000000 position_knob
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:307    .text.lv_slider_constructor:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:312    .text.lv_slider_constructor:00000000 lv_slider_constructor
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:391    .text.lv_slider_constructor:0000005c $d
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:396    .text.draw_knob:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:401    .text.draw_knob:00000000 draw_knob
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:854    .text.draw_knob:0000020c $d
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:860    .text.lv_slider_event:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:865    .text.lv_slider_event:00000000 lv_slider_event
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:1424   .text.lv_slider_event:00000288 $d
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:1431   .text.lv_slider_event:0000028c $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2356   .text.lv_slider_create:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2362   .text.lv_slider_create:00000000 lv_slider_create
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2400   .text.lv_slider_create:00000014 $d
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2405   .text.lv_slider_is_dragged:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2411   .text.lv_slider_is_dragged:00000000 lv_slider_is_dragged
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2439   .rodata.lv_slider_class:00000000 lv_slider_class
C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s:2435   .rodata.lv_slider_class:00000000 $d

UNDEFINED SYMBOLS
lv_obj_get_width
lv_obj_get_height
lv_obj_get_style_prop
lv_obj_clear_flag
lv_disp_get_dpi
lv_obj_set_ext_click_area
lv_event_get_target
lv_event_get_draw_ctx
lv_draw_rect_dsc_init
lv_obj_init_draw_rect_dsc
lv_obj_draw_dsc_init
lv_bar_get_mode
lv_event_send
lv_draw_rect
lv_memcpy
lv_obj_event_base
lv_event_get_code
lv_event_get_param
lv_area_increase
_lv_area_is_point_on
lv_obj_invalidate
lv_indev_get_act
lv_indev_get_point
lv_indev_get_type
lv_bar_set_value
lv_bar_set_start_value
lv_obj_get_group
lv_group_get_editing
lv_group_set_editing
lv_obj_refresh_ext_draw_size
lv_obj_calculate_ext_draw_size
lv_bar_get_value
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccUoDZN0.s 			page 82


lv_bar_get_start_value
lv_obj_class_create_obj
lv_obj_class_init_obj
lv_bar_class
