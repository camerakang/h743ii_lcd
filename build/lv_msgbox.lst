ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_msgbox.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.lv_msgbox_create.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 00       		.ascii	"\000"
  22 0001 000000   		.align	2
  23              	.LC1:
  24 0004 EF808D00 		.ascii	"\357\200\215\000"
  25              		.section	.text.lv_msgbox_create,"ax",%progbits
  26              		.align	1
  27              		.global	lv_msgbox_create
  28              		.syntax unified
  29              		.thumb
  30              		.thumb_func
  32              	lv_msgbox_create:
  33              	.LVL0:
  34              	.LFB204:
  35              		.file 1 "lvgl/src/extra/widgets/msgbox/lv_msgbox.c"
   1:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**
   2:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  * @file lv_msgbox.c
   3:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *
   4:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  */
   5:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
   6:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /*********************
   7:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *      INCLUDES
   8:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *********************/
   9:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** #include "lv_msgbox.h"
  10:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** #if LV_USE_MSGBOX
  11:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  12:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** #include "../../../misc/lv_assert.h"
  13:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  14:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /*********************
  15:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *      DEFINES
  16:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *********************/
  17:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** #define LV_MSGBOX_FLAG_AUTO_PARENT  LV_OBJ_FLAG_WIDGET_1        /*Mark that the parent was automati
  18:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** #define MY_CLASS    &lv_msgbox_class
  19:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  20:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
  21:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *      TYPEDEFS
  22:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
  23:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 2


  24:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
  25:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *  STATIC PROTOTYPES
  26:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
  27:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** static void msgbox_close_click_event_cb(lv_event_t * e);
  28:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  29:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
  30:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *  STATIC VARIABLES
  31:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
  32:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_class = {
  33:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  34:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_DPI_DEF * 2,
  35:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_SIZE_CONTENT,
  36:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_msgbox_t)
  37:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** };
  38:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  39:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_content_class = {
  40:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  41:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  42:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_SIZE_CONTENT,
  43:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t)
  44:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** };
  45:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  46:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** const lv_obj_class_t lv_msgbox_backdrop_class = {
  47:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .base_class = &lv_obj_class,
  48:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .width_def = LV_PCT(100),
  49:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .height_def = LV_PCT(100),
  50:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     .instance_size = sizeof(lv_obj_t)
  51:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** };
  52:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  53:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
  54:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *      MACROS
  55:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
  56:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  57:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
  58:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *   GLOBAL FUNCTIONS
  59:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
  60:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  61:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_create(lv_obj_t * parent, const char * title, const char * txt, const char * b
  62:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****                             bool add_close_btn)
  63:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
  36              		.loc 1 63 1 view -0
  37              		.cfi_startproc
  38              		@ args = 4, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40              		.loc 1 63 1 is_stmt 0 view .LVU1
  41 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  42              		.cfi_def_cfa_offset 32
  43              		.cfi_offset 3, -32
  44              		.cfi_offset 4, -28
  45              		.cfi_offset 5, -24
  46              		.cfi_offset 6, -20
  47              		.cfi_offset 7, -16
  48              		.cfi_offset 8, -12
  49              		.cfi_offset 9, -8
  50              		.cfi_offset 14, -4
  51 0004 0E46     		mov	r6, r1
  52 0006 1746     		mov	r7, r2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 3


  53 0008 1D46     		mov	r5, r3
  54 000a 9DF82080 		ldrb	r8, [sp, #32]	@ zero_extendqisi2
  64:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_LOG_INFO("begin");
  55              		.loc 1 64 5 is_stmt 1 view .LVU2
  56              		.loc 1 64 5 view .LVU3
  57              		.loc 1 64 5 view .LVU4
  65:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     bool auto_parent = false;
  58              		.loc 1 65 5 view .LVU5
  59              	.LVL1:
  66:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(parent == NULL) {
  60              		.loc 1 66 5 view .LVU6
  61              		.loc 1 66 7 is_stmt 0 view .LVU7
  62 000e 0028     		cmp	r0, #0
  63 0010 44D0     		beq	.L32
  64 0012 0446     		mov	r4, r0
  65:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     bool auto_parent = false;
  65              		.loc 1 65 10 view .LVU8
  66 0014 4FF00009 		mov	r9, #0
  67              	.LVL2:
  68              	.L2:
  67:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         auto_parent = true;
  68:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
  70:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
  71:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_clear_flag(parent, LV_OBJ_FLAG_IGNORE_LAYOUT);
  72:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(parent, LV_PCT(100), LV_PCT(100));
  73:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
  74:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  75:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * obj = lv_obj_class_create_obj(&lv_msgbox_class, parent);
  69              		.loc 1 75 5 is_stmt 1 view .LVU9
  70              		.loc 1 75 22 is_stmt 0 view .LVU10
  71 0018 2146     		mov	r1, r4
  72 001a 8F48     		ldr	r0, .L39
  73 001c FFF7FEFF 		bl	lv_obj_class_create_obj
  74              	.LVL3:
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(obj);
  75              		.loc 1 76 5 is_stmt 1 view .LVU11
  76              		.loc 1 76 5 view .LVU12
  77 0020 0446     		mov	r4, r0
  78              	.LVL4:
  79              		.loc 1 76 5 is_stmt 0 view .LVU13
  80 0022 0028     		cmp	r0, #0
  81 0024 55D0     		beq	.L6
  82              		.loc 1 76 5 is_stmt 1 view .LVU14
  83              		.loc 1 76 26 view .LVU15
  77:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
  84              		.loc 1 77 5 view .LVU16
  78:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(obj);
  85              		.loc 1 78 5 view .LVU17
  86 0026 FFF7FEFF 		bl	lv_obj_class_init_obj
  87              	.LVL5:
  79:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
  88              		.loc 1 79 5 view .LVU18
  80:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  81:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(auto_parent) lv_obj_add_flag(obj, LV_MSGBOX_FLAG_AUTO_PARENT);
  89              		.loc 1 81 5 view .LVU19
  90              		.loc 1 81 7 is_stmt 0 view .LVU20
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 4


  91 002a B9F1000F 		cmp	r9, #0
  92 002e 51D1     		bne	.L33
  93              	.L7:
  82:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  83:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_set_flex_flow(obj, LV_FLEX_FLOW_ROW_WRAP);
  94              		.loc 1 83 5 is_stmt 1 view .LVU21
  95 0030 0421     		movs	r1, #4
  96 0032 2046     		mov	r0, r4
  97 0034 FFF7FEFF 		bl	lv_obj_set_flex_flow
  98              	.LVL6:
  84:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  85:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     bool has_title = title && strlen(title) > 0;
  99              		.loc 1 85 5 view .LVU22
 100              		.loc 1 85 28 is_stmt 0 view .LVU23
 101 0038 002E     		cmp	r6, #0
 102 003a 51D0     		beq	.L24
 103              		.loc 1 85 45 discriminator 1 view .LVU24
 104 003c 3378     		ldrb	r3, [r6]	@ zero_extendqisi2
 105              		.loc 1 85 28 discriminator 1 view .LVU25
 106 003e 002B     		cmp	r3, #0
 107 0040 51D1     		bne	.L25
 108              		.loc 1 85 28 view .LVU26
 109 0042 4FF00009 		mov	r9, #0
 110              	.LVL7:
 111              	.L8:
  86:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  87:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     /*When a close button is required, we need the empty label as spacer to push the button to the 
  88:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(add_close_btn || has_title) {
 112              		.loc 1 88 5 is_stmt 1 discriminator 6 view .LVU27
 113              		.loc 1 88 7 is_stmt 0 discriminator 6 view .LVU28
 114 0046 59EA0803 		orrs	r3, r9, r8
 115 004a 4FD1     		bne	.L34
 116              	.LVL8:
 117              	.L9:
  89:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         mbox->title = lv_label_create(obj);
  90:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->title, has_title ? title : "");
  91:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_long_mode(mbox->title, LV_LABEL_LONG_SCROLL_CIRCULAR);
  92:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         if(add_close_btn) lv_obj_set_flex_grow(mbox->title, 1);
  93:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         else lv_obj_set_width(mbox->title, LV_PCT(100));
  94:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
  95:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
  96:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(add_close_btn) {
 118              		.loc 1 96 5 is_stmt 1 view .LVU29
 119              		.loc 1 96 7 is_stmt 0 view .LVU30
 120 004c B8F1000F 		cmp	r8, #0
 121 0050 69D1     		bne	.L35
 122              	.L12:
  97:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         mbox->close_btn = lv_btn_create(obj);
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_ext_click_area(mbox->close_btn, LV_DPX(10));
  99:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 100:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_t * label = lv_label_create(mbox->close_btn);
 101:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(label, LV_SYMBOL_CLOSE);
 102:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(mbox->close_btn, LV_PART_MAIN);
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_coord_t close_btn_size = lv_font_get_line_height(font) + LV_DPX(10);
 104:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 105:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);
 106:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 5


 107:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 108:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     mbox->content = lv_obj_class_create_obj(&lv_msgbox_content_class, obj);
 123              		.loc 1 108 5 is_stmt 1 view .LVU31
 124              		.loc 1 108 21 is_stmt 0 view .LVU32
 125 0052 2146     		mov	r1, r4
 126 0054 8148     		ldr	r0, .L39+4
 127 0056 FFF7FEFF 		bl	lv_obj_class_create_obj
 128              	.LVL9:
 129              		.loc 1 108 19 view .LVU33
 130 005a E062     		str	r0, [r4, #44]
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_MALLOC(mbox->content);
 131              		.loc 1 109 5 is_stmt 1 view .LVU34
 132              		.loc 1 109 5 view .LVU35
 133 005c 0028     		cmp	r0, #0
 134 005e 00F0BC80 		beq	.L16
 135              		.loc 1 109 5 view .LVU36
 136              		.loc 1 109 36 view .LVU37
 110:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 137              		.loc 1 110 5 view .LVU38
 111:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_class_init_obj(mbox->content);
 138              		.loc 1 111 5 view .LVU39
 139 0062 FFF7FEFF 		bl	lv_obj_class_init_obj
 140              	.LVL10:
 112:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 113:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     bool has_txt = txt && strlen(txt) > 0;
 141              		.loc 1 113 5 view .LVU40
 142              		.loc 1 113 24 is_stmt 0 view .LVU41
 143 0066 002F     		cmp	r7, #0
 144 0068 00F0B880 		beq	.L29
 145              		.loc 1 113 39 discriminator 1 view .LVU42
 146 006c 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 147              		.loc 1 113 24 discriminator 1 view .LVU43
 148 006e 002B     		cmp	r3, #0
 149 0070 40F0B680 		bne	.L30
 150              	.L17:
 151              	.LVL11:
 114:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(has_txt) {
 152              		.loc 1 114 5 is_stmt 1 discriminator 6 view .LVU44
 153              		.loc 1 114 7 is_stmt 0 discriminator 6 view .LVU45
 154 0074 002B     		cmp	r3, #0
 155 0076 40F0B580 		bne	.L36
 156              	.LVL12:
 157              	.L18:
 115:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         mbox->text = lv_label_create(mbox->content);
 116:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->text, txt);
 117:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_long_mode(mbox->text, LV_LABEL_LONG_WRAP);
 118:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_width(mbox->text, lv_pct(100));
 119:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 120:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 121:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(btn_txts) {
 158              		.loc 1 121 5 is_stmt 1 view .LVU46
 159              		.loc 1 121 7 is_stmt 0 view .LVU47
 160 007a 002D     		cmp	r5, #0
 161 007c 00F0E980 		beq	.L1
 162              	.LBB28:
 122:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         mbox->btns = lv_btnmatrix_create(obj);
 163              		.loc 1 122 9 is_stmt 1 view .LVU48
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 6


 164              		.loc 1 122 22 is_stmt 0 view .LVU49
 165 0080 2046     		mov	r0, r4
 166 0082 FFF7FEFF 		bl	lv_btnmatrix_create
 167              	.LVL13:
 168              		.loc 1 122 20 view .LVU50
 169 0086 6063     		str	r0, [r4, #52]
 123:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_btnmatrix_set_map(mbox->btns, btn_txts);
 170              		.loc 1 123 9 is_stmt 1 view .LVU51
 171 0088 2946     		mov	r1, r5
 172 008a FFF7FEFF 		bl	lv_btnmatrix_set_map
 173              	.LVL14:
 124:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_btnmatrix_set_btn_ctrl_all(mbox->btns, LV_BTNMATRIX_CTRL_CLICK_TRIG | LV_BTNMATRIX_CTRL_
 174              		.loc 1 124 9 view .LVU52
 175 008e 4FF40871 		mov	r1, #544
 176 0092 606B     		ldr	r0, [r4, #52]
 177 0094 FFF7FEFF 		bl	lv_btnmatrix_set_btn_ctrl_all
 178              	.LVL15:
 125:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 126:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         uint32_t btn_cnt = 0;
 179              		.loc 1 126 9 view .LVU53
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         while(btn_txts[btn_cnt] && btn_txts[btn_cnt][0] != '\0') {
 180              		.loc 1 127 9 view .LVU54
 126:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         while(btn_txts[btn_cnt] && btn_txts[btn_cnt][0] != '\0') {
 181              		.loc 1 126 18 is_stmt 0 view .LVU55
 182 0098 0026     		movs	r6, #0
 183              		.loc 1 127 14 view .LVU56
 184 009a B5E0     		b	.L20
 185              	.LVL16:
 186              	.L32:
 187              		.loc 1 127 14 view .LVU57
 188              	.LBE28:
  67:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
 189              		.loc 1 67 9 is_stmt 1 view .LVU58
  68:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 190              		.loc 1 68 9 view .LVU59
 191              	.LBB33:
 192              	.LBI33:
 193              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 7


  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 8


  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 9


 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** }
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the top layer  of the default display
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 10


 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_layer_top(void)
 194              		.loc 2 191 26 view .LVU60
 195              	.LBB34:
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_layer_top(lv_disp_get_default());
 196              		.loc 2 193 5 view .LVU61
 197              		.loc 2 193 12 is_stmt 0 view .LVU62
 198 009c FFF7FEFF 		bl	lv_disp_get_default
 199              	.LVL17:
 200              		.loc 2 193 12 view .LVU63
 201 00a0 FFF7FEFF 		bl	lv_disp_get_layer_top
 202              	.LVL18:
 203 00a4 0146     		mov	r1, r0
 204              	.LBE34:
 205              	.LBE33:
  68:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         LV_ASSERT_MALLOC(parent);
 206              		.loc 1 68 18 view .LVU64
 207 00a6 6E48     		ldr	r0, .L39+8
 208 00a8 FFF7FEFF 		bl	lv_obj_class_create_obj
 209              	.LVL19:
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 210              		.loc 1 69 9 is_stmt 1 view .LVU65
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 211              		.loc 1 69 9 view .LVU66
 212 00ac 0446     		mov	r4, r0
 213 00ae 78B1     		cbz	r0, .L4
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 214              		.loc 1 69 9 discriminator 2 view .LVU67
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 215              		.loc 1 69 33 discriminator 2 view .LVU68
  70:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_clear_flag(parent, LV_OBJ_FLAG_IGNORE_LAYOUT);
 216              		.loc 1 70 9 discriminator 2 view .LVU69
 217 00b0 FFF7FEFF 		bl	lv_obj_class_init_obj
 218              	.LVL20:
  71:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(parent, LV_PCT(100), LV_PCT(100));
 219              		.loc 1 71 9 discriminator 2 view .LVU70
 220 00b4 4FF40031 		mov	r1, #131072
 221 00b8 2046     		mov	r0, r4
 222 00ba FFF7FEFF 		bl	lv_obj_clear_flag
 223              	.LVL21:
  72:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 224              		.loc 1 72 9 discriminator 2 view .LVU71
 225 00be 42F26402 		movw	r2, #8292
 226 00c2 1146     		mov	r1, r2
 227 00c4 2046     		mov	r0, r4
 228 00c6 FFF7FEFF 		bl	lv_obj_set_size
 229              	.LVL22:
  67:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         parent = lv_obj_class_create_obj(&lv_msgbox_backdrop_class, lv_layer_top());
 230              		.loc 1 67 21 is_stmt 0 discriminator 2 view .LVU72
 231 00ca 4FF00109 		mov	r9, #1
 232 00ce A3E7     		b	.L2
 233              	.LVL23:
 234              	.L4:
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 235              		.loc 1 69 9 is_stmt 1 discriminator 1 view .LVU73
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 236              		.loc 1 69 9 discriminator 1 view .LVU74
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 11


  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 237              		.loc 1 69 9 discriminator 1 view .LVU75
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 238              		.loc 1 69 9 discriminator 1 view .LVU76
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 239              		.loc 1 69 9 discriminator 1 view .LVU77
  69:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_class_init_obj(parent);
 240              		.loc 1 69 9 discriminator 1 view .LVU78
 241 00d0 FEE7     		b	.L4
 242              	.LVL24:
 243              	.L6:
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 244              		.loc 1 76 5 discriminator 2 view .LVU79
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 245              		.loc 1 76 5 discriminator 2 view .LVU80
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 246              		.loc 1 76 5 discriminator 2 view .LVU81
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 247              		.loc 1 76 5 discriminator 2 view .LVU82
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 248              		.loc 1 76 5 discriminator 2 view .LVU83
  76:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(obj == NULL) return NULL;
 249              		.loc 1 76 5 discriminator 2 view .LVU84
 250 00d2 FEE7     		b	.L6
 251              	.LVL25:
 252              	.L33:
  81:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 253              		.loc 1 81 21 discriminator 1 view .LVU85
 254 00d4 4FF00071 		mov	r1, #33554432
 255 00d8 2046     		mov	r0, r4
 256 00da FFF7FEFF 		bl	lv_obj_add_flag
 257              	.LVL26:
 258 00de A7E7     		b	.L7
 259              	.L24:
  85:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 260              		.loc 1 85 28 is_stmt 0 view .LVU86
 261 00e0 4FF00009 		mov	r9, #0
 262              	.LVL27:
  85:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 263              		.loc 1 85 28 view .LVU87
 264 00e4 AFE7     		b	.L8
 265              	.LVL28:
 266              	.L25:
  85:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 267              		.loc 1 85 28 view .LVU88
 268 00e6 4FF00109 		mov	r9, #1
 269              	.LVL29:
  85:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 270              		.loc 1 85 28 view .LVU89
 271 00ea ACE7     		b	.L8
 272              	.LVL30:
 273              	.L34:
  89:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->title, has_title ? title : "");
 274              		.loc 1 89 9 is_stmt 1 view .LVU90
  89:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->title, has_title ? title : "");
 275              		.loc 1 89 23 is_stmt 0 view .LVU91
 276 00ec 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 12


 277 00ee FFF7FEFF 		bl	lv_label_create
 278              	.LVL31:
  89:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->title, has_title ? title : "");
 279              		.loc 1 89 21 view .LVU92
 280 00f2 6062     		str	r0, [r4, #36]
  90:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_long_mode(mbox->title, LV_LABEL_LONG_SCROLL_CIRCULAR);
 281              		.loc 1 90 9 is_stmt 1 view .LVU93
 282 00f4 B9F1000F 		cmp	r9, #0
 283 00f8 00D1     		bne	.L10
 284 00fa 5A4E     		ldr	r6, .L39+12
 285              	.LVL32:
 286              	.L10:
  90:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_long_mode(mbox->title, LV_LABEL_LONG_SCROLL_CIRCULAR);
 287              		.loc 1 90 9 is_stmt 0 discriminator 4 view .LVU94
 288 00fc 3146     		mov	r1, r6
 289 00fe FFF7FEFF 		bl	lv_label_set_text
 290              	.LVL33:
  91:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         if(add_close_btn) lv_obj_set_flex_grow(mbox->title, 1);
 291              		.loc 1 91 9 is_stmt 1 discriminator 4 view .LVU95
 292 0102 0321     		movs	r1, #3
 293 0104 606A     		ldr	r0, [r4, #36]
 294 0106 FFF7FEFF 		bl	lv_label_set_long_mode
 295              	.LVL34:
  92:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         else lv_obj_set_width(mbox->title, LV_PCT(100));
 296              		.loc 1 92 9 discriminator 4 view .LVU96
  92:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         else lv_obj_set_width(mbox->title, LV_PCT(100));
 297              		.loc 1 92 11 is_stmt 0 discriminator 4 view .LVU97
 298 010a B8F1000F 		cmp	r8, #0
 299 010e 04D0     		beq	.L11
  92:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         else lv_obj_set_width(mbox->title, LV_PCT(100));
 300              		.loc 1 92 27 is_stmt 1 discriminator 1 view .LVU98
 301 0110 0121     		movs	r1, #1
 302 0112 606A     		ldr	r0, [r4, #36]
 303 0114 FFF7FEFF 		bl	lv_obj_set_flex_grow
 304              	.LVL35:
 305 0118 98E7     		b	.L9
 306              	.L11:
  93:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 307              		.loc 1 93 14 view .LVU99
 308 011a 42F26401 		movw	r1, #8292
 309 011e 606A     		ldr	r0, [r4, #36]
 310 0120 FFF7FEFF 		bl	lv_obj_set_width
 311              	.LVL36:
 312 0124 92E7     		b	.L9
 313              	.L35:
 314              	.LBB35:
  97:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_ext_click_area(mbox->close_btn, LV_DPX(10));
 315              		.loc 1 97 9 view .LVU100
  97:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_ext_click_area(mbox->close_btn, LV_DPX(10));
 316              		.loc 1 97 27 is_stmt 0 view .LVU101
 317 0126 2046     		mov	r0, r4
 318 0128 FFF7FEFF 		bl	lv_btn_create
 319              	.LVL37:
 320 012c 0646     		mov	r6, r0
  97:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_ext_click_area(mbox->close_btn, LV_DPX(10));
 321              		.loc 1 97 25 view .LVU102
 322 012e A062     		str	r0, [r4, #40]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 13


  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 323              		.loc 1 98 9 is_stmt 1 view .LVU103
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 324              		.loc 1 98 52 is_stmt 0 view .LVU104
 325 0130 0020     		movs	r0, #0
 326 0132 FFF7FEFF 		bl	lv_disp_get_dpi
 327              	.LVL38:
 328 0136 00EB8000 		add	r0, r0, r0, lsl #2
 329 013a 4300     		lsls	r3, r0, #1
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 330              		.loc 1 98 9 view .LVU105
 331 013c EF2B     		cmp	r3, #239
 332 013e 2EDC     		bgt	.L37
 333 0140 0121     		movs	r1, #1
 334              	.L13:
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 335              		.loc 1 98 9 discriminator 4 view .LVU106
 336 0142 3046     		mov	r0, r6
 337 0144 FFF7FEFF 		bl	lv_obj_set_ext_click_area
 338              	.LVL39:
  99:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_t * label = lv_label_create(mbox->close_btn);
 339              		.loc 1 99 9 is_stmt 1 discriminator 4 view .LVU107
 340 0148 0023     		movs	r3, #0
 341 014a 0722     		movs	r2, #7
 342 014c 4649     		ldr	r1, .L39+16
 343 014e A06A     		ldr	r0, [r4, #40]
 344 0150 FFF7FEFF 		bl	lv_obj_add_event_cb
 345              	.LVL40:
 100:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(label, LV_SYMBOL_CLOSE);
 346              		.loc 1 100 9 discriminator 4 view .LVU108
 100:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(label, LV_SYMBOL_CLOSE);
 347              		.loc 1 100 28 is_stmt 0 discriminator 4 view .LVU109
 348 0154 A06A     		ldr	r0, [r4, #40]
 349 0156 FFF7FEFF 		bl	lv_label_create
 350              	.LVL41:
 351 015a 8046     		mov	r8, r0
 352              	.LVL42:
 101:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(mbox->close_btn, LV_PART_MAIN);
 353              		.loc 1 101 9 is_stmt 1 discriminator 4 view .LVU110
 354 015c 4349     		ldr	r1, .L39+20
 355 015e FFF7FEFF 		bl	lv_label_set_text
 356              	.LVL43:
 102:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_coord_t close_btn_size = lv_font_get_line_height(font) + LV_DPX(10);
 357              		.loc 1 102 9 discriminator 4 view .LVU111
 358              	.LBB36:
 359              	.LBI36:
 360              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style_gen.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 14


  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 15


  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_x(const struct _lv_obj_t * obj, uint32_t 
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_X);
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_y(const struct _lv_obj_t * obj, uint32_t 
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_Y);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 16


 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 17


 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline const lv_grad_dsc_t * lv_obj_get_style_bg_grad(const struct _lv_obj_t * obj, uint32_t
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD);
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const lv_grad_dsc_t *)v.ptr;
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_dither_mode_t lv_obj_get_style_bg_dither_mode(const struct _lv_obj_t * obj, uint32
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_DITHER_MODE);
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_dither_mode_t)v.num;
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const void *)v.ptr;
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 228:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (bool)v.num;
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 234:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 238:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 18


 239:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
 254:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 264:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (bool)v.num;
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 270:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 271:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part
 272:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 273:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_WIDTH);
 274:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 275:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 276:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 277:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part
 278:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 279:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR);
 280:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 281:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 282:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 283:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint
 284:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 285:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 286:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 287:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 288:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 289:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
 290:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 291:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_OPA);
 292:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 293:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 294:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 295:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 19


 296:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 297:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_PAD);
 298:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 300:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 301:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
 302:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 303:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_WIDTH);
 304:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 305:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 306:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 307:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
 308:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 309:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_X);
 310:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 311:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 312:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 313:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
 314:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 315:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_Y);
 316:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 317:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 318:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 319:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part
 320:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 321:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_SPREAD);
 322:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 323:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 324:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 325:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
 326:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 327:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR);
 328:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 329:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 330:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 331:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint3
 332:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 333:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 334:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 335:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 336:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 337:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
 338:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 339:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OPA);
 340:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 341:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 342:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 343:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 344:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 345:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_OPA);
 346:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 347:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 348:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 349:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
 350:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 351:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR);
 352:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 20


 353:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 354:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 355:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32
 356:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 357:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 358:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 359:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 360:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 361:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part
 362:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 363:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_OPA);
 364:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 365:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 366:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 367:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
 368:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 369:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_WIDTH);
 370:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 371:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 372:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 373:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t pa
 374:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 375:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_WIDTH);
 376:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 377:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 378:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 379:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part
 380:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 381:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_GAP);
 382:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 383:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 384:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 385:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
 386:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 387:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_ROUNDED);
 388:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (bool)v.num;
 389:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 390:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 391:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
 392:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 393:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR);
 394:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 395:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 396:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 397:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_
 398:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 399:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 400:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 401:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 402:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 403:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
 404:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 405:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_OPA);
 406:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 407:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 408:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 409:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 21


 410:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 411:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_WIDTH);
 412:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 413:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 414:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 415:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
 416:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 417:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_ROUNDED);
 418:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (bool)v.num;
 419:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 420:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 421:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
 422:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 423:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR);
 424:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 425:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 426:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 427:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t
 428:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 429:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 430:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 431:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 432:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 433:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
 434:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 435:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_OPA);
 436:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 437:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 438:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 439:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part
 440:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 441:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_IMG_SRC);
 442:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const void *)v.ptr;
 443:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 444:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 445:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 446:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 447:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 448:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 449:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 450:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 451:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 452:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 453:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 454:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return v.color;
 455:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 456:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 457:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 458:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 459:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
 460:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 461:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** }
 462:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** 
 463:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
 361              		.loc 3 463 33 discriminator 4 view .LVU112
 362              	.LBB37:
 464:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 22


 465:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
 363              		.loc 3 465 5 discriminator 4 view .LVU113
 364              		.loc 3 465 26 is_stmt 0 discriminator 4 view .LVU114
 365 0162 5722     		movs	r2, #87
 366 0164 0021     		movs	r1, #0
 367 0166 A06A     		ldr	r0, [r4, #40]
 368 0168 FFF7FEFF 		bl	lv_obj_get_style_prop
 369              	.LVL44:
 466:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 370              		.loc 3 466 5 is_stmt 1 discriminator 4 view .LVU115
 371              		.loc 3 466 5 is_stmt 0 discriminator 4 view .LVU116
 372              	.LBE37:
 373              	.LBE36:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 374              		.loc 1 103 9 is_stmt 1 discriminator 4 view .LVU117
 375              	.LBB38:
 376              	.LBI38:
 377              		.file 4 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\font\\lv_font.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @file lv_font.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #ifndef LV_FONT_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #define LV_FONT_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include <stdint.h>
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include <stddef.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include <stdbool.h>
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include "lv_symbol_def.h"
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #include "../misc/lv_area.h"
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /*********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *      DEFINES
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /* imgfont identifier */
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #define LV_IMGFONT_BPP 9
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**********************
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *      TYPEDEFS
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  **********************/
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /*------------------
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * General types
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *-----------------*/
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** struct _lv_font_t;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 23


  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /** Describes the properties of a glyph.*/
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** typedef struct {
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     const struct _lv_font_t *
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****         resolved_font; /**< Pointer to a font where the glyph was actually found after handling fal
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint16_t adv_w; /**< The glyph needs this space. Draw the next glyph after this width.*/
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint16_t box_w; /**< Width of the glyph's bounding box*/
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint16_t box_h; /**< Height of the glyph's bounding box*/
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     int16_t ofs_x;  /**< x offset of the bounding box*/
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     int16_t ofs_y;  /**< y offset of the bounding box*/
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint8_t bpp: 4;  /**< Bit-per-pixel: 1, 2, 4, 8*/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint8_t is_placeholder: 1; /** Glyph is missing. But placeholder will still be displayed */
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** } lv_font_glyph_dsc_t;
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /** The bitmaps might be upscaled by 3 to achieve subpixel rendering.*/
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** enum {
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_NONE,
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_HOR,
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_VER,
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     LV_FONT_SUBPX_BOTH,
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** };
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** typedef uint8_t lv_font_subpx_t;
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /** Describe the properties of a font*/
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** typedef struct _lv_font_t {
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     /** Get a glyph's descriptor from a font*/
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     bool (*get_glyph_dsc)(const struct _lv_font_t *, lv_font_glyph_dsc_t *, uint32_t letter, uint32
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     /** Get a glyph's bitmap from a font*/
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     const uint8_t * (*get_glyph_bitmap)(const struct _lv_font_t *, uint32_t);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     /*Pointer to the font in a font pack (must have the same line height)*/
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     lv_coord_t line_height;         /**< The real line height where any text fits*/
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     lv_coord_t base_line;           /**< Base line measured from the top of the line_height*/
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     uint8_t subpx  : 2;             /**< An element of `lv_font_subpx_t`*/
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     int8_t underline_position;      /**< Distance between the top of the underline and base line (<
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     int8_t underline_thickness;     /**< Thickness of the underline*/
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     const void * dsc;               /**< Store implementation specific or run_time data or caching 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     const struct _lv_font_t * fallback;   /**< Fallback font for missing glyph. Resolved recursivel
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #if LV_USE_USER_DATA
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     void * user_data;               /**< Custom user data for font.*/
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** #endif
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** } lv_font_t;
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**********************
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * GLOBAL PROTOTYPES
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  **********************/
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * Return with the bitmap of a font.
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param font_p pointer to a font
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param letter a UNICODE character code
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @return pointer to the bitmap of the letter
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  */
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** const uint8_t * lv_font_get_glyph_bitmap(const lv_font_t * font_p, uint32_t letter);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 24


  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * Get the descriptor of a glyph
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param font_p pointer to font
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param dsc_out store the result descriptor here
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param letter a UNICODE letter code
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @return true: descriptor is successfully loaded into `dsc_out`.
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  *         false: the letter was not found, no data is loaded to `dsc_out`
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  */
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** bool lv_font_get_glyph_dsc(const lv_font_t * font_p, lv_font_glyph_dsc_t * dsc_out, uint32_t letter
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****                            uint32_t letter_next);
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * Get the width of a glyph with kerning
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param font pointer to a font
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param letter a UNICODE letter
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param letter_next the next letter after `letter`. Used for kerning
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @return the width of the glyph
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  */
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** uint16_t lv_font_get_glyph_width(const lv_font_t * font, uint32_t letter, uint32_t letter_next);
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** 
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** /**
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * Get the line height of a font. All characters fit into this height
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @param font_p pointer to a font
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  * @return the height of a font
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****  */
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** static inline lv_coord_t lv_font_get_line_height(const lv_font_t * font_p)
 378              		.loc 4 124 26 discriminator 4 view .LVU118
 379              	.LBB39:
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** {
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h ****     return font_p->line_height;
 380              		.loc 4 126 5 discriminator 4 view .LVU119
 381              		.loc 4 126 18 is_stmt 0 discriminator 4 view .LVU120
 382 016c B0F90860 		ldrsh	r6, [r0, #8]
 383              	.LVL45:
 384              		.loc 4 126 18 discriminator 4 view .LVU121
 385              	.LBE39:
 386              	.LBE38:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 387              		.loc 1 103 37 discriminator 4 view .LVU122
 388 0170 B6B2     		uxth	r6, r6
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 389              		.loc 1 103 69 discriminator 4 view .LVU123
 390 0172 0020     		movs	r0, #0
 391              	.LVL46:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 392              		.loc 1 103 69 discriminator 4 view .LVU124
 393 0174 FFF7FEFF 		bl	lv_disp_get_dpi
 394              	.LVL47:
 395 0178 00EB8000 		add	r0, r0, r0, lsl #2
 396 017c 4300     		lsls	r3, r0, #1
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 397              		.loc 1 103 67 discriminator 4 view .LVU125
 398 017e EF2B     		cmp	r3, #239
 399 0180 1CDC     		bgt	.L38
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 25


 400              		.loc 1 103 67 view .LVU126
 401 0182 0121     		movs	r1, #1
 402              	.L14:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 403              		.loc 1 103 67 discriminator 4 view .LVU127
 404 0184 3144     		add	r1, r1, r6
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 405              		.loc 1 103 20 discriminator 4 view .LVU128
 406 0186 09B2     		sxth	r1, r1
 407              	.LVL48:
 104:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_align(label, LV_ALIGN_CENTER, 0, 0);
 408              		.loc 1 104 9 is_stmt 1 discriminator 4 view .LVU129
 409 0188 0A46     		mov	r2, r1
 410 018a A06A     		ldr	r0, [r4, #40]
 411 018c FFF7FEFF 		bl	lv_obj_set_size
 412              	.LVL49:
 105:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 413              		.loc 1 105 9 discriminator 4 view .LVU130
 414 0190 0023     		movs	r3, #0
 415 0192 1A46     		mov	r2, r3
 416 0194 0921     		movs	r1, #9
 417 0196 4046     		mov	r0, r8
 418 0198 FFF7FEFF 		bl	lv_obj_align
 419              	.LVL50:
 420 019c 59E7     		b	.L12
 421              	.LVL51:
 422              	.L37:
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 423              		.loc 1 98 52 is_stmt 0 discriminator 1 view .LVU131
 424 019e 0020     		movs	r0, #0
 425 01a0 FFF7FEFF 		bl	lv_disp_get_dpi
 426              	.LVL52:
 427 01a4 00EB8000 		add	r0, r0, r0, lsl #2
 428 01a8 4300     		lsls	r3, r0, #1
 429 01aa 5033     		adds	r3, r3, #80
 430 01ac 304A     		ldr	r2, .L39+24
 431 01ae 82FB0312 		smull	r1, r2, r2, r3
 432 01b2 D917     		asrs	r1, r3, #31
 433 01b4 C1EBA211 		rsb	r1, r1, r2, asr #6
  98:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_event_cb(mbox->close_btn, msgbox_close_click_event_cb, LV_EVENT_CLICKED, NULL);
 434              		.loc 1 98 9 discriminator 1 view .LVU132
 435 01b8 09B2     		sxth	r1, r1
 436 01ba C2E7     		b	.L13
 437              	.LVL53:
 438              	.L38:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 439              		.loc 1 103 69 discriminator 1 view .LVU133
 440 01bc 0020     		movs	r0, #0
 441 01be FFF7FEFF 		bl	lv_disp_get_dpi
 442              	.LVL54:
 443 01c2 00EB8000 		add	r0, r0, r0, lsl #2
 444 01c6 4300     		lsls	r3, r0, #1
 445 01c8 5033     		adds	r3, r3, #80
 446 01ca 294A     		ldr	r2, .L39+24
 447 01cc 82FB0312 		smull	r1, r2, r2, r3
 448 01d0 D917     		asrs	r1, r3, #31
 449 01d2 C1EBA211 		rsb	r1, r1, r2, asr #6
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 26


 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 450              		.loc 1 103 67 discriminator 1 view .LVU134
 451 01d6 89B2     		uxth	r1, r1
 452 01d8 D4E7     		b	.L14
 453              	.LVL55:
 454              	.L16:
 103:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->close_btn, close_btn_size, close_btn_size);
 455              		.loc 1 103 67 discriminator 1 view .LVU135
 456              	.LBE35:
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 457              		.loc 1 109 5 is_stmt 1 discriminator 3 view .LVU136
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 458              		.loc 1 109 5 discriminator 3 view .LVU137
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 459              		.loc 1 109 5 discriminator 3 view .LVU138
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 460              		.loc 1 109 5 discriminator 3 view .LVU139
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 461              		.loc 1 109 5 discriminator 3 view .LVU140
 109:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(mbox->content == NULL) return NULL;
 462              		.loc 1 109 5 discriminator 3 view .LVU141
 463 01da FEE7     		b	.L16
 464              	.L29:
 113:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(has_txt) {
 465              		.loc 1 113 24 is_stmt 0 view .LVU142
 466 01dc 0023     		movs	r3, #0
 467 01de 49E7     		b	.L17
 468              	.L30:
 113:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(has_txt) {
 469              		.loc 1 113 24 view .LVU143
 470 01e0 0123     		movs	r3, #1
 471 01e2 47E7     		b	.L17
 472              	.LVL56:
 473              	.L36:
 115:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->text, txt);
 474              		.loc 1 115 9 is_stmt 1 view .LVU144
 115:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->text, txt);
 475              		.loc 1 115 22 is_stmt 0 view .LVU145
 476 01e4 E06A     		ldr	r0, [r4, #44]
 477 01e6 FFF7FEFF 		bl	lv_label_create
 478              	.LVL57:
 115:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_text(mbox->text, txt);
 479              		.loc 1 115 20 view .LVU146
 480 01ea 2063     		str	r0, [r4, #48]
 116:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_label_set_long_mode(mbox->text, LV_LABEL_LONG_WRAP);
 481              		.loc 1 116 9 is_stmt 1 view .LVU147
 482 01ec 3946     		mov	r1, r7
 483 01ee FFF7FEFF 		bl	lv_label_set_text
 484              	.LVL58:
 117:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_width(mbox->text, lv_pct(100));
 485              		.loc 1 117 9 view .LVU148
 486 01f2 0021     		movs	r1, #0
 487 01f4 206B     		ldr	r0, [r4, #48]
 488 01f6 FFF7FEFF 		bl	lv_label_set_long_mode
 489              	.LVL59:
 118:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 490              		.loc 1 118 9 view .LVU149
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 27


 491              		.file 5 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @file lv_area.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifndef LV_AREA_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_AREA_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdbool.h>
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #include <stdint.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int32_t lv_coord_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #else
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef int16_t lv_coord_t;
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      TYPEDEFS
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Represents a point on the screen.
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x;
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y;
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_point_t;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Represents an area of the screen.*/
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef struct {
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x1;
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y1;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t x2;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     lv_coord_t y2;
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** } lv_area_t;
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /** Alignments*/
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_MID,
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 28


  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_CENTER,
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_align_t;
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** enum {
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** };
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** typedef uint8_t lv_dir_t;
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * GLOBAL PROTOTYPES
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Initialize an area
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x1 left coordinate of the area
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y1 top coordinate of the area
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x2 right coordinate of the area
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y2 bottom coordinate of the area
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Copy an area
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param dest pointer to the destination area
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param src pointer to the source area
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x1 = src->x1;
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y1 = src->y1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 29


 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->x2 = src->x2;
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     dest->y2 = src->y2;
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** }
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Get the width of an area
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** }
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Get the height of an area
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** }
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Set the width of an area
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param w the new width of the area (w == 1 makes x1 == x2)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_set_width(lv_area_t * area_p, lv_coord_t w);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Set the height of an area
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param h the new height of the area (h == 1 makes y1 == y2)
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_set_height(lv_area_t * area_p, lv_coord_t h);
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Set the position of an area (width and height will be kept)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x the new x coordinate of the area
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param y the new y coordinate of the area
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void _lv_area_set_pos(lv_area_t * area_p, lv_coord_t x, lv_coord_t y);
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Return with area of an area (x * y)
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param area_p pointer to an area
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return size of area
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** uint32_t lv_area_get_size(const lv_area_t * area_p);
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_increase(lv_area_t * area, lv_coord_t w_extra, lv_coord_t h_extra);
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_move(lv_area_t * area, lv_coord_t x_ofs, lv_coord_t y_ofs);
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 30


 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Get the common parts of two areas
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param res_p pointer to an area, the result will be stored her
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to the first area
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to the second area
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return false: the two area has NO common parts, res_p is invalid
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_intersect(lv_area_t * res_p, const lv_area_t * a1_p, const lv_area_t * a2_p);
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Get resulting sub areas after removing the common parts of two areas from the first area
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param res_p pointer to an array of areas with a count of 4, the resulting areas will be stored 
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to the first area
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to the second area
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return number of results (max 4) or -1 if no intersect
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** int8_t _lv_area_diff(lv_area_t * res_p, const lv_area_t * a1_p, const lv_area_t * a2_p);
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Join two areas into a third which involves the other two
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param res_p pointer to an area, the result will be stored here
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to the first area
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to the second area
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void _lv_area_join(lv_area_t * a_res_p, const lv_area_t * a1_p, const lv_area_t * a2_p);
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Check if a point is on an area
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a_p pointer to an area
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param p_p pointer to a point
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param radius radius of area (e.g. for rounded rectangle)
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return false:the point is out of the area
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_is_point_on(const lv_area_t * a_p, const lv_point_t * p_p, lv_coord_t radius);
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Check if two area has common parts
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a1_p pointer to an area.
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a2_p pointer to an other area
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return false: a1_p and a2_p has no common parts
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_is_on(const lv_area_t * a1_p, const lv_area_t * a2_p);
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Check if an area is fully on an other
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param ain_p pointer to an area which could be in 'aholder_p'
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param aholder_p pointer to an area which could involve 'ain_p'
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param radius radius of `aholder_p` (e.g. for rounded rectangle)
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return true: `ain_p` is fully inside `aholder_p`
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_is_in(const lv_area_t * ain_p, const lv_area_t * aholder_p, lv_coord_t radius);
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Check if an area is fully out of an other
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param aout_p pointer to an area which could be in 'aholder_p'
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param aholder_p pointer to an area which could involve 'ain_p'
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param radius radius of `aholder_p` (e.g. for rounded rectangle)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 31


 228:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return true: `aout_p` is fully outside `aholder_p`
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_is_out(const lv_area_t * aout_p, const lv_area_t * aholder_p, lv_coord_t radius);
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Check if 2 area is the same
 234:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param a pointer to an area
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param b pointer to another area
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** bool _lv_area_is_equal(const lv_area_t * a, const lv_area_t * b);
 238:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 239:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Align an area to an other
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param base an are where the other will be aligned
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param to_align the area to align
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param align `LV_ALIGN_...`
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_area_align(const lv_area_t * base, lv_area_t * to_align, lv_align_t align, lv_coord_t ofs_x
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** void lv_point_transform(lv_point_t * p, int32_t angle, int32_t zoom, const lv_point_t * pivot);
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**********************
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  *      MACROS
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  **********************/
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #if LV_USE_LARGE_COORD
 254:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SHIFT    (29U)
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #else
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SHIFT    (13U)
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #endif
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_MASK     (3 << _LV_COORD_TYPE_SHIFT)
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE(x)       ((x) & _LV_COORD_TYPE_MASK)  /*Extract type specifiers*/
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_PLAIN(x)      ((x) & ~_LV_COORD_TYPE_MASK) /*Remove type specifiers*/
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_PX       (0 << _LV_COORD_TYPE_SHIFT)
 264:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_SPEC     (1 << _LV_COORD_TYPE_SHIFT)
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define _LV_COORD_TYPE_PX_NEG   (3 << _LV_COORD_TYPE_SHIFT)
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_PX(x)       (_LV_COORD_TYPE(x) == _LV_COORD_TYPE_PX || \
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****                                  _LV_COORD_TYPE(x) == _LV_COORD_TYPE_PX_NEG ? true : false)
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_SPEC(x)     (_LV_COORD_TYPE(x) == _LV_COORD_TYPE_SPEC ? true : false)
 270:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 271:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_SET_SPEC(x)    ((x) | _LV_COORD_TYPE_SPEC)
 272:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 273:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*Special coordinates*/
 274:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_PCT(x)               (x < 0 ? LV_COORD_SET_SPEC(1000 - (x)) : LV_COORD_SET_SPEC(x))
 275:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_IS_PCT(x)      ((LV_COORD_IS_SPEC(x) && _LV_COORD_PLAIN(x) <= 2000) ? true : false
 276:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_GET_PCT(x)     (_LV_COORD_PLAIN(x) > 1000 ? 1000 - _LV_COORD_PLAIN(x) : _LV_COORD_
 277:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_SIZE_CONTENT         LV_COORD_SET_SPEC(2001)
 278:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 279:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_SIZE_CONTENT);
 280:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 281:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /*Max coordinate value*/
 282:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_MAX            ((1 << _LV_COORD_TYPE_SHIFT) - 1)
 283:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** #define LV_COORD_MIN            (-LV_COORD_MAX)
 284:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 32


 285:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MAX);
 286:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** LV_EXPORT_CONST_INT(LV_COORD_MIN);
 287:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** 
 288:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** /**
 289:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Convert a percentage value to `lv_coord_t`.
 290:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * Percentage values are stored in special range
 291:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @param x the percentage (0..1000)
 292:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  * @return a coordinate that stores the percentage
 293:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****  */
 294:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** static inline lv_coord_t lv_pct(lv_coord_t x)
 295:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h **** {
 296:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_area.h ****     return LV_PCT(x);
 492              		.loc 5 296 5 view .LVU150
 118:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 493              		.loc 1 118 9 is_stmt 0 view .LVU151
 494 01fa 42F26401 		movw	r1, #8292
 495 01fe 206B     		ldr	r0, [r4, #48]
 496 0200 FFF7FEFF 		bl	lv_obj_set_width
 497              	.LVL60:
 498 0204 39E7     		b	.L18
 499              	.LVL61:
 500              	.L22:
 501              	.LBB40:
 128:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 502              		.loc 1 128 13 is_stmt 1 view .LVU152
 503              		.loc 1 128 20 is_stmt 0 view .LVU153
 504 0206 0136     		adds	r6, r6, #1
 505              	.LVL62:
 506              	.L20:
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 507              		.loc 1 127 14 is_stmt 1 view .LVU154
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 508              		.loc 1 127 23 is_stmt 0 view .LVU155
 509 0208 55F82630 		ldr	r3, [r5, r6, lsl #2]
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 510              		.loc 1 127 14 view .LVU156
 511 020c 13B1     		cbz	r3, .L21
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 512              		.loc 1 127 53 discriminator 1 view .LVU157
 513 020e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 127:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****             btn_cnt++;
 514              		.loc 1 127 33 discriminator 1 view .LVU158
 515 0210 002B     		cmp	r3, #0
 516 0212 F8D1     		bne	.L22
 517              	.L21:
 129:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         }
 130:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 131:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         const lv_font_t * font = lv_obj_get_style_text_font(mbox->btns, LV_PART_ITEMS);
 518              		.loc 1 131 9 is_stmt 1 view .LVU159
 519              	.LVL63:
 520              	.LBB29:
 521              	.LBI29:
 463:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h **** {
 522              		.loc 3 463 33 view .LVU160
 523              	.LBB30:
 465:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 524              		.loc 3 465 5 view .LVU161
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 33


 465:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 525              		.loc 3 465 26 is_stmt 0 view .LVU162
 526 0214 5722     		movs	r2, #87
 527 0216 4FF4A021 		mov	r1, #327680
 528 021a 606B     		ldr	r0, [r4, #52]
 529 021c FFF7FEFF 		bl	lv_obj_get_style_prop
 530              	.LVL64:
 531              		.loc 3 466 5 is_stmt 1 view .LVU163
 532              		.loc 3 466 5 is_stmt 0 view .LVU164
 533              	.LBE30:
 534              	.LBE29:
 132:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_coord_t btn_h = lv_font_get_line_height(font) + LV_DPI_DEF / 10;
 535              		.loc 1 132 9 is_stmt 1 view .LVU165
 536              	.LBB31:
 537              	.LBI31:
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\font\lv_font.h **** {
 538              		.loc 4 124 26 view .LVU166
 539              	.LBB32:
 540              		.loc 4 126 5 view .LVU167
 541              		.loc 4 126 18 is_stmt 0 view .LVU168
 542 0220 B0F90820 		ldrsh	r2, [r0, #8]
 543              	.LVL65:
 544              		.loc 4 126 18 view .LVU169
 545              	.LBE32:
 546              	.LBE31:
 547              		.loc 1 132 28 view .LVU170
 548 0224 92B2     		uxth	r2, r2
 549              		.loc 1 132 58 view .LVU171
 550 0226 0D32     		adds	r2, r2, #13
 551              	.LVL66:
 133:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_size(mbox->btns, btn_cnt * (2 * LV_DPI_DEF / 3), btn_h);
 552              		.loc 1 133 9 is_stmt 1 view .LVU172
 553 0228 06EB8601 		add	r1, r6, r6, lsl #2
 554 022c 01EB0111 		add	r1, r1, r1, lsl #4
 555 0230 3144     		add	r1, r1, r6
 556 0232 12B2     		sxth	r2, r2
 557              		.loc 1 133 9 is_stmt 0 view .LVU173
 558 0234 09B2     		sxth	r1, r1
 559 0236 606B     		ldr	r0, [r4, #52]
 560              	.LVL67:
 561              		.loc 1 133 9 view .LVU174
 562 0238 FFF7FEFF 		bl	lv_obj_set_size
 563              	.LVL68:
 134:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_set_style_max_width(mbox->btns, lv_pct(100), 0);
 564              		.loc 1 134 9 is_stmt 1 view .LVU175
 565              		.loc 1 134 9 is_stmt 0 view .LVU176
 566              	.LBE40:
 567              		.loc 5 296 5 is_stmt 1 view .LVU177
 568              	.LBB41:
 569              		.loc 1 134 9 is_stmt 0 view .LVU178
 570 023c 0022     		movs	r2, #0
 571 023e 42F26401 		movw	r1, #8292
 572 0242 606B     		ldr	r0, [r4, #52]
 573 0244 FFF7FEFF 		bl	lv_obj_set_style_max_width
 574              	.LVL69:
 135:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****         lv_obj_add_flag(mbox->btns, LV_OBJ_FLAG_EVENT_BUBBLE);    /*To see the event directly on th
 575              		.loc 1 135 9 is_stmt 1 view .LVU179
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 34


 576 0248 4FF48041 		mov	r1, #16384
 577 024c 606B     		ldr	r0, [r4, #52]
 578 024e FFF7FEFF 		bl	lv_obj_add_flag
 579              	.LVL70:
 580              	.LBE41:
 136:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     }
 137:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 138:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return obj;
 581              		.loc 1 138 5 view .LVU180
 582              	.L1:
 139:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 583              		.loc 1 139 1 is_stmt 0 view .LVU181
 584 0252 2046     		mov	r0, r4
 585 0254 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 586              	.LVL71:
 587              	.L40:
 588              		.loc 1 139 1 view .LVU182
 589              		.align	2
 590              	.L39:
 591 0258 00000000 		.word	.LANCHOR1
 592 025c 00000000 		.word	.LANCHOR2
 593 0260 00000000 		.word	.LANCHOR0
 594 0264 00000000 		.word	.LC0
 595 0268 00000000 		.word	msgbox_close_click_event_cb
 596 026c 04000000 		.word	.LC1
 597 0270 67666666 		.word	1717986919
 598              		.cfi_endproc
 599              	.LFE204:
 601              		.section	.text.lv_msgbox_get_title,"ax",%progbits
 602              		.align	1
 603              		.global	lv_msgbox_get_title
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 608              	lv_msgbox_get_title:
 609              	.LVL72:
 610              	.LFB205:
 140:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 141:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_title(lv_obj_t * obj)
 142:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 611              		.loc 1 142 1 is_stmt 1 view -0
 612              		.cfi_startproc
 613              		@ args = 0, pretend = 0, frame = 0
 614              		@ frame_needed = 0, uses_anonymous_args = 0
 615              		@ link register save eliminated.
 143:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 616              		.loc 1 143 5 view .LVU184
 617              		.loc 1 143 5 view .LVU185
 618              		.loc 1 143 5 view .LVU186
 144:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 619              		.loc 1 144 5 view .LVU187
 145:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return mbox->title;
 620              		.loc 1 145 5 view .LVU188
 146:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 621              		.loc 1 146 1 is_stmt 0 view .LVU189
 622 0000 406A     		ldr	r0, [r0, #36]
 623              	.LVL73:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 35


 624              		.loc 1 146 1 view .LVU190
 625 0002 7047     		bx	lr
 626              		.cfi_endproc
 627              	.LFE205:
 629              		.section	.text.lv_msgbox_get_close_btn,"ax",%progbits
 630              		.align	1
 631              		.global	lv_msgbox_get_close_btn
 632              		.syntax unified
 633              		.thumb
 634              		.thumb_func
 636              	lv_msgbox_get_close_btn:
 637              	.LVL74:
 638              	.LFB206:
 147:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 148:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_close_btn(lv_obj_t * obj)
 149:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 639              		.loc 1 149 1 is_stmt 1 view -0
 640              		.cfi_startproc
 641              		@ args = 0, pretend = 0, frame = 0
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              		@ link register save eliminated.
 150:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 644              		.loc 1 150 5 view .LVU192
 645              		.loc 1 150 5 view .LVU193
 646              		.loc 1 150 5 view .LVU194
 151:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 647              		.loc 1 151 5 view .LVU195
 152:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return mbox->close_btn;
 648              		.loc 1 152 5 view .LVU196
 153:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 649              		.loc 1 153 1 is_stmt 0 view .LVU197
 650 0000 806A     		ldr	r0, [r0, #40]
 651              	.LVL75:
 652              		.loc 1 153 1 view .LVU198
 653 0002 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE206:
 657              		.section	.text.lv_msgbox_get_text,"ax",%progbits
 658              		.align	1
 659              		.global	lv_msgbox_get_text
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 664              	lv_msgbox_get_text:
 665              	.LVL76:
 666              	.LFB207:
 154:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 155:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_text(lv_obj_t * obj)
 156:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 667              		.loc 1 156 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 0, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 157:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 672              		.loc 1 157 5 view .LVU200
 673              		.loc 1 157 5 view .LVU201
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 36


 674              		.loc 1 157 5 view .LVU202
 158:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 675              		.loc 1 158 5 view .LVU203
 159:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return mbox->text;
 676              		.loc 1 159 5 view .LVU204
 160:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 677              		.loc 1 160 1 is_stmt 0 view .LVU205
 678 0000 006B     		ldr	r0, [r0, #48]
 679              	.LVL77:
 680              		.loc 1 160 1 view .LVU206
 681 0002 7047     		bx	lr
 682              		.cfi_endproc
 683              	.LFE207:
 685              		.section	.text.lv_msgbox_get_content,"ax",%progbits
 686              		.align	1
 687              		.global	lv_msgbox_get_content
 688              		.syntax unified
 689              		.thumb
 690              		.thumb_func
 692              	lv_msgbox_get_content:
 693              	.LVL78:
 694              	.LFB208:
 161:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 162:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_content(lv_obj_t * obj)
 163:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 695              		.loc 1 163 1 is_stmt 1 view -0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699              		@ link register save eliminated.
 164:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 700              		.loc 1 164 5 view .LVU208
 701              		.loc 1 164 5 view .LVU209
 702              		.loc 1 164 5 view .LVU210
 165:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 703              		.loc 1 165 5 view .LVU211
 166:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return mbox->content;
 704              		.loc 1 166 5 view .LVU212
 167:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 705              		.loc 1 167 1 is_stmt 0 view .LVU213
 706 0000 C06A     		ldr	r0, [r0, #44]
 707              	.LVL79:
 708              		.loc 1 167 1 view .LVU214
 709 0002 7047     		bx	lr
 710              		.cfi_endproc
 711              	.LFE208:
 713              		.section	.text.lv_msgbox_get_btns,"ax",%progbits
 714              		.align	1
 715              		.global	lv_msgbox_get_btns
 716              		.syntax unified
 717              		.thumb
 718              		.thumb_func
 720              	lv_msgbox_get_btns:
 721              	.LVL80:
 722              	.LFB209:
 168:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 169:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** lv_obj_t * lv_msgbox_get_btns(lv_obj_t * obj)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 37


 170:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 723              		.loc 1 170 1 is_stmt 1 view -0
 724              		.cfi_startproc
 725              		@ args = 0, pretend = 0, frame = 0
 726              		@ frame_needed = 0, uses_anonymous_args = 0
 727              		@ link register save eliminated.
 171:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     LV_ASSERT_OBJ(obj, MY_CLASS);
 728              		.loc 1 171 5 view .LVU216
 729              		.loc 1 171 5 view .LVU217
 730              		.loc 1 171 5 view .LVU218
 172:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_t * mbox = (lv_msgbox_t *)obj;
 731              		.loc 1 172 5 view .LVU219
 173:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return mbox->btns;
 732              		.loc 1 173 5 view .LVU220
 174:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 733              		.loc 1 174 1 is_stmt 0 view .LVU221
 734 0000 406B     		ldr	r0, [r0, #52]
 735              	.LVL81:
 736              		.loc 1 174 1 view .LVU222
 737 0002 7047     		bx	lr
 738              		.cfi_endproc
 739              	.LFE209:
 741              		.section	.text.lv_msgbox_get_active_btn,"ax",%progbits
 742              		.align	1
 743              		.global	lv_msgbox_get_active_btn
 744              		.syntax unified
 745              		.thumb
 746              		.thumb_func
 748              	lv_msgbox_get_active_btn:
 749              	.LVL82:
 750              	.LFB210:
 175:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 176:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** uint16_t lv_msgbox_get_active_btn(lv_obj_t * mbox)
 177:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 751              		.loc 1 177 1 is_stmt 1 view -0
 752              		.cfi_startproc
 753              		@ args = 0, pretend = 0, frame = 0
 754              		@ frame_needed = 0, uses_anonymous_args = 0
 755              		.loc 1 177 1 is_stmt 0 view .LVU224
 756 0000 08B5     		push	{r3, lr}
 757              		.cfi_def_cfa_offset 8
 758              		.cfi_offset 3, -8
 759              		.cfi_offset 14, -4
 178:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btnm = lv_msgbox_get_btns(mbox);
 760              		.loc 1 178 5 is_stmt 1 view .LVU225
 761              		.loc 1 178 23 is_stmt 0 view .LVU226
 762 0002 FFF7FEFF 		bl	lv_msgbox_get_btns
 763              	.LVL83:
 179:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return lv_btnmatrix_get_selected_btn(btnm);
 764              		.loc 1 179 5 is_stmt 1 view .LVU227
 765              		.loc 1 179 12 is_stmt 0 view .LVU228
 766 0006 FFF7FEFF 		bl	lv_btnmatrix_get_selected_btn
 767              	.LVL84:
 180:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 768              		.loc 1 180 1 view .LVU229
 769 000a 08BD     		pop	{r3, pc}
 770              		.cfi_endproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 38


 771              	.LFE210:
 773              		.section	.text.lv_msgbox_get_active_btn_text,"ax",%progbits
 774              		.align	1
 775              		.global	lv_msgbox_get_active_btn_text
 776              		.syntax unified
 777              		.thumb
 778              		.thumb_func
 780              	lv_msgbox_get_active_btn_text:
 781              	.LVL85:
 782              	.LFB211:
 181:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 182:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** const char * lv_msgbox_get_active_btn_text(lv_obj_t * mbox)
 183:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 783              		.loc 1 183 1 is_stmt 1 view -0
 784              		.cfi_startproc
 785              		@ args = 0, pretend = 0, frame = 0
 786              		@ frame_needed = 0, uses_anonymous_args = 0
 787              		.loc 1 183 1 is_stmt 0 view .LVU231
 788 0000 10B5     		push	{r4, lr}
 789              		.cfi_def_cfa_offset 8
 790              		.cfi_offset 4, -8
 791              		.cfi_offset 14, -4
 184:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btnm = lv_msgbox_get_btns(mbox);
 792              		.loc 1 184 5 is_stmt 1 view .LVU232
 793              		.loc 1 184 23 is_stmt 0 view .LVU233
 794 0002 FFF7FEFF 		bl	lv_msgbox_get_btns
 795              	.LVL86:
 796              		.loc 1 184 23 view .LVU234
 797 0006 0446     		mov	r4, r0
 798              	.LVL87:
 185:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     return lv_btnmatrix_get_btn_text(btnm, lv_btnmatrix_get_selected_btn(btnm));
 799              		.loc 1 185 5 is_stmt 1 view .LVU235
 800              		.loc 1 185 12 is_stmt 0 view .LVU236
 801 0008 FFF7FEFF 		bl	lv_btnmatrix_get_selected_btn
 802              	.LVL88:
 803              		.loc 1 185 12 view .LVU237
 804 000c 0146     		mov	r1, r0
 805 000e 2046     		mov	r0, r4
 806 0010 FFF7FEFF 		bl	lv_btnmatrix_get_btn_text
 807              	.LVL89:
 186:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 808              		.loc 1 186 1 view .LVU238
 809 0014 10BD     		pop	{r4, pc}
 810              		.loc 1 186 1 view .LVU239
 811              		.cfi_endproc
 812              	.LFE211:
 814              		.section	.text.lv_msgbox_close,"ax",%progbits
 815              		.align	1
 816              		.global	lv_msgbox_close
 817              		.syntax unified
 818              		.thumb
 819              		.thumb_func
 821              	lv_msgbox_close:
 822              	.LVL90:
 823              	.LFB212:
 187:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 188:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** void lv_msgbox_close(lv_obj_t * mbox)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 39


 189:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 824              		.loc 1 189 1 is_stmt 1 view -0
 825              		.cfi_startproc
 826              		@ args = 0, pretend = 0, frame = 0
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              		.loc 1 189 1 is_stmt 0 view .LVU241
 829 0000 10B5     		push	{r4, lr}
 830              		.cfi_def_cfa_offset 8
 831              		.cfi_offset 4, -8
 832              		.cfi_offset 14, -4
 833 0002 0446     		mov	r4, r0
 190:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(mbox, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_del(lv_obj_get_parent(mbox));
 834              		.loc 1 190 5 is_stmt 1 view .LVU242
 835              		.loc 1 190 8 is_stmt 0 view .LVU243
 836 0004 4FF00071 		mov	r1, #33554432
 837 0008 FFF7FEFF 		bl	lv_obj_has_flag
 838              	.LVL91:
 839              		.loc 1 190 7 view .LVU244
 840 000c 28B1     		cbz	r0, .L51
 841              		.loc 1 190 59 is_stmt 1 discriminator 1 view .LVU245
 842 000e 2046     		mov	r0, r4
 843 0010 FFF7FEFF 		bl	lv_obj_get_parent
 844              	.LVL92:
 845 0014 FFF7FEFF 		bl	lv_obj_del
 846              	.LVL93:
 847              	.L50:
 191:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del(mbox);
 192:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 848              		.loc 1 192 1 is_stmt 0 view .LVU246
 849 0018 10BD     		pop	{r4, pc}
 850              	.LVL94:
 851              	.L51:
 191:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del(mbox);
 852              		.loc 1 191 10 is_stmt 1 view .LVU247
 853 001a 2046     		mov	r0, r4
 854 001c FFF7FEFF 		bl	lv_obj_del
 855              	.LVL95:
 856              		.loc 1 192 1 is_stmt 0 view .LVU248
 857 0020 FAE7     		b	.L50
 858              		.cfi_endproc
 859              	.LFE212:
 861              		.section	.text.msgbox_close_click_event_cb,"ax",%progbits
 862              		.align	1
 863              		.syntax unified
 864              		.thumb
 865              		.thumb_func
 867              	msgbox_close_click_event_cb:
 868              	.LVL96:
 869              	.LFB214:
 193:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 194:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** void lv_msgbox_close_async(lv_obj_t * dialog)
 195:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 196:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(dialog, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_del_async(lv_obj_get_parent(dial
 197:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del_async(dialog);
 198:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 199:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 200:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** /**********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 40


 201:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  *   STATIC FUNCTIONS
 202:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****  **********************/
 203:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 204:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** static void msgbox_close_click_event_cb(lv_event_t * e)
 205:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** {
 870              		.loc 1 205 1 is_stmt 1 view -0
 871              		.cfi_startproc
 872              		@ args = 0, pretend = 0, frame = 0
 873              		@ frame_needed = 0, uses_anonymous_args = 0
 874              		.loc 1 205 1 is_stmt 0 view .LVU250
 875 0000 08B5     		push	{r3, lr}
 876              		.cfi_def_cfa_offset 8
 877              		.cfi_offset 3, -8
 878              		.cfi_offset 14, -4
 206:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * btn = lv_event_get_target(e);
 879              		.loc 1 206 5 is_stmt 1 view .LVU251
 880              		.loc 1 206 22 is_stmt 0 view .LVU252
 881 0002 FFF7FEFF 		bl	lv_event_get_target
 882              	.LVL97:
 207:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_obj_t * mbox = lv_obj_get_parent(btn);
 883              		.loc 1 207 5 is_stmt 1 view .LVU253
 884              		.loc 1 207 23 is_stmt 0 view .LVU254
 885 0006 FFF7FEFF 		bl	lv_obj_get_parent
 886              	.LVL98:
 208:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     lv_msgbox_close(mbox);
 887              		.loc 1 208 5 is_stmt 1 view .LVU255
 888 000a FFF7FEFF 		bl	lv_msgbox_close
 889              	.LVL99:
 209:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 890              		.loc 1 209 1 is_stmt 0 view .LVU256
 891 000e 08BD     		pop	{r3, pc}
 892              		.cfi_endproc
 893              	.LFE214:
 895              		.section	.text.lv_msgbox_close_async,"ax",%progbits
 896              		.align	1
 897              		.global	lv_msgbox_close_async
 898              		.syntax unified
 899              		.thumb
 900              		.thumb_func
 902              	lv_msgbox_close_async:
 903              	.LVL100:
 904              	.LFB213:
 195:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(dialog, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_del_async(lv_obj_get_parent(dial
 905              		.loc 1 195 1 is_stmt 1 view -0
 906              		.cfi_startproc
 907              		@ args = 0, pretend = 0, frame = 0
 908              		@ frame_needed = 0, uses_anonymous_args = 0
 195:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     if(lv_obj_has_flag(dialog, LV_MSGBOX_FLAG_AUTO_PARENT)) lv_obj_del_async(lv_obj_get_parent(dial
 909              		.loc 1 195 1 is_stmt 0 view .LVU258
 910 0000 10B5     		push	{r4, lr}
 911              		.cfi_def_cfa_offset 8
 912              		.cfi_offset 4, -8
 913              		.cfi_offset 14, -4
 914 0002 0446     		mov	r4, r0
 196:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del_async(dialog);
 915              		.loc 1 196 5 is_stmt 1 view .LVU259
 196:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del_async(dialog);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 41


 916              		.loc 1 196 8 is_stmt 0 view .LVU260
 917 0004 4FF00071 		mov	r1, #33554432
 918 0008 FFF7FEFF 		bl	lv_obj_has_flag
 919              	.LVL101:
 196:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del_async(dialog);
 920              		.loc 1 196 7 view .LVU261
 921 000c 28B1     		cbz	r0, .L57
 196:lvgl/src/extra/widgets/msgbox/lv_msgbox.c ****     else lv_obj_del_async(dialog);
 922              		.loc 1 196 61 is_stmt 1 discriminator 1 view .LVU262
 923 000e 2046     		mov	r0, r4
 924 0010 FFF7FEFF 		bl	lv_obj_get_parent
 925              	.LVL102:
 926 0014 FFF7FEFF 		bl	lv_obj_del_async
 927              	.LVL103:
 928              	.L56:
 198:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 929              		.loc 1 198 1 is_stmt 0 view .LVU263
 930 0018 10BD     		pop	{r4, pc}
 931              	.LVL104:
 932              	.L57:
 197:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** }
 933              		.loc 1 197 10 is_stmt 1 view .LVU264
 934 001a 2046     		mov	r0, r4
 935 001c FFF7FEFF 		bl	lv_obj_del_async
 936              	.LVL105:
 198:lvgl/src/extra/widgets/msgbox/lv_msgbox.c **** 
 937              		.loc 1 198 1 is_stmt 0 view .LVU265
 938 0020 FAE7     		b	.L56
 939              		.cfi_endproc
 940              	.LFE213:
 942              		.global	lv_msgbox_backdrop_class
 943              		.global	lv_msgbox_content_class
 944              		.global	lv_msgbox_class
 945              		.section	.rodata.lv_msgbox_backdrop_class,"a"
 946              		.align	2
 947              		.set	.LANCHOR0,. + 0
 950              	lv_msgbox_backdrop_class:
 951 0000 00000000 		.word	lv_obj_class
 952 0004 00000000 		.space	16
 952      00000000 
 952      00000000 
 952      00000000 
 953 0014 6420     		.short	8292
 954 0016 6420     		.short	8292
 955 0018 40       		.byte	64
 956 0019 02       		.byte	2
 957 001a 00       		.byte	0
 958 001b 00       		.space	1
 959              		.section	.rodata.lv_msgbox_class,"a"
 960              		.align	2
 961              		.set	.LANCHOR1,. + 0
 964              	lv_msgbox_class:
 965 0000 00000000 		.word	lv_obj_class
 966 0004 00000000 		.space	16
 966      00000000 
 966      00000000 
 966      00000000 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 42


 967 0014 0401     		.short	260
 968 0016 D127     		.short	10193
 969 0018 80       		.byte	128
 970 0019 03       		.byte	3
 971 001a 00       		.byte	0
 972 001b 00       		.space	1
 973              		.section	.rodata.lv_msgbox_content_class,"a"
 974              		.align	2
 975              		.set	.LANCHOR2,. + 0
 978              	lv_msgbox_content_class:
 979 0000 00000000 		.word	lv_obj_class
 980 0004 00000000 		.space	16
 980      00000000 
 980      00000000 
 980      00000000 
 981 0014 6420     		.short	8292
 982 0016 D127     		.short	10193
 983 0018 40       		.byte	64
 984 0019 02       		.byte	2
 985 001a 00       		.byte	0
 986 001b 00       		.space	1
 987              		.text
 988              	.Letext0:
 989              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 990              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 991              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 992              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 993              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 994              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 995              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 996              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 997              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 998              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 999              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 1000              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_label.h"
 1001              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_bar.h"
 1002              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_btnmatrix.h"
 1003              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/layouts/flex/lv_flex.h"
 1004              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 1005              		.file 22 "lvgl/src/extra/widgets/msgbox/lv_msgbox.h"
 1006              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_tree.h"
 1007              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_btn.h"
 1008              		.file 25 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 1009              		.file 26 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 43


DEFINED SYMBOLS
                            *ABS*:00000000 lv_msgbox.c
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:19     .rodata.lv_msgbox_create.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:26     .text.lv_msgbox_create:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:32     .text.lv_msgbox_create:00000000 lv_msgbox_create
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:591    .text.lv_msgbox_create:00000258 $d
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:867    .text.msgbox_close_click_event_cb:00000000 msgbox_close_click_event_cb
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:602    .text.lv_msgbox_get_title:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:608    .text.lv_msgbox_get_title:00000000 lv_msgbox_get_title
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:630    .text.lv_msgbox_get_close_btn:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:636    .text.lv_msgbox_get_close_btn:00000000 lv_msgbox_get_close_btn
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:658    .text.lv_msgbox_get_text:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:664    .text.lv_msgbox_get_text:00000000 lv_msgbox_get_text
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:686    .text.lv_msgbox_get_content:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:692    .text.lv_msgbox_get_content:00000000 lv_msgbox_get_content
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:714    .text.lv_msgbox_get_btns:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:720    .text.lv_msgbox_get_btns:00000000 lv_msgbox_get_btns
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:742    .text.lv_msgbox_get_active_btn:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:748    .text.lv_msgbox_get_active_btn:00000000 lv_msgbox_get_active_btn
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:774    .text.lv_msgbox_get_active_btn_text:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:780    .text.lv_msgbox_get_active_btn_text:00000000 lv_msgbox_get_active_btn_text
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:815    .text.lv_msgbox_close:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:821    .text.lv_msgbox_close:00000000 lv_msgbox_close
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:862    .text.msgbox_close_click_event_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:896    .text.lv_msgbox_close_async:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:902    .text.lv_msgbox_close_async:00000000 lv_msgbox_close_async
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:950    .rodata.lv_msgbox_backdrop_class:00000000 lv_msgbox_backdrop_class
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:978    .rodata.lv_msgbox_content_class:00000000 lv_msgbox_content_class
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:964    .rodata.lv_msgbox_class:00000000 lv_msgbox_class
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:946    .rodata.lv_msgbox_backdrop_class:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:960    .rodata.lv_msgbox_class:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccuyXene.s:974    .rodata.lv_msgbox_content_class:00000000 $d

UNDEFINED SYMBOLS
lv_obj_class_create_obj
lv_obj_class_init_obj
lv_obj_set_flex_flow
lv_btnmatrix_create
lv_btnmatrix_set_map
lv_btnmatrix_set_btn_ctrl_all
lv_disp_get_default
lv_disp_get_layer_top
lv_obj_clear_flag
lv_obj_set_size
lv_obj_add_flag
lv_label_create
lv_label_set_text
lv_label_set_long_mode
lv_obj_set_flex_grow
lv_obj_set_width
lv_btn_create
lv_disp_get_dpi
lv_obj_set_ext_click_area
lv_obj_add_event_cb
lv_obj_get_style_prop
lv_obj_align
lv_obj_set_style_max_width
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccuyXene.s 			page 44


lv_btnmatrix_get_selected_btn
lv_btnmatrix_get_btn_text
lv_obj_has_flag
lv_obj_get_parent
lv_obj_del
lv_event_get_target
lv_obj_del_async
lv_obj_class
