ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_printf.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._out_buffer,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	_out_buffer:
  25              	.LVL0:
  26              	.LFB0:
  27              		.file 1 "lvgl/src/misc/lv_printf.c"
   1:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
   2:lvgl/src/misc/lv_printf.c **** // \author (c) Marco Paland (info@paland.com)
   3:lvgl/src/misc/lv_printf.c **** //             2014-2019, PALANDesign Hannover, Germany
   4:lvgl/src/misc/lv_printf.c **** //
   5:lvgl/src/misc/lv_printf.c **** // \license The MIT License (MIT)
   6:lvgl/src/misc/lv_printf.c **** //
   7:lvgl/src/misc/lv_printf.c **** // Permission is hereby granted, free of charge, to any person obtaining a copy
   8:lvgl/src/misc/lv_printf.c **** // of this software and associated documentation files (the "Software"), to deal
   9:lvgl/src/misc/lv_printf.c **** // in the Software without restriction, including without limitation the rights
  10:lvgl/src/misc/lv_printf.c **** // to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  11:lvgl/src/misc/lv_printf.c **** // copies of the Software, and to permit persons to whom the Software is
  12:lvgl/src/misc/lv_printf.c **** // furnished to do so, subject to the following conditions:
  13:lvgl/src/misc/lv_printf.c **** //
  14:lvgl/src/misc/lv_printf.c **** // The above copyright notice and this permission notice shall be included in
  15:lvgl/src/misc/lv_printf.c **** // all copies or substantial portions of the Software.
  16:lvgl/src/misc/lv_printf.c **** //
  17:lvgl/src/misc/lv_printf.c **** // THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  18:lvgl/src/misc/lv_printf.c **** // IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  19:lvgl/src/misc/lv_printf.c **** // FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  20:lvgl/src/misc/lv_printf.c **** // AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  21:lvgl/src/misc/lv_printf.c **** // LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  22:lvgl/src/misc/lv_printf.c **** // OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
  23:lvgl/src/misc/lv_printf.c **** // THE SOFTWARE.
  24:lvgl/src/misc/lv_printf.c **** //
  25:lvgl/src/misc/lv_printf.c **** // \brief Tiny printf, sprintf and (v)snprintf implementation, optimized for speed on
  26:lvgl/src/misc/lv_printf.c **** //        embedded systems with a very limited resources. These routines are thread
  27:lvgl/src/misc/lv_printf.c **** //        safe and reentrant!
  28:lvgl/src/misc/lv_printf.c **** //        Use this instead of the bloated standard/newlib printf cause these use
  29:lvgl/src/misc/lv_printf.c **** //        malloc for printf (and may not be thread safe).
  30:lvgl/src/misc/lv_printf.c **** //
  31:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 2


  32:lvgl/src/misc/lv_printf.c **** 
  33:lvgl/src/misc/lv_printf.c **** /*Original repository: https://github.com/mpaland/printf*/
  34:lvgl/src/misc/lv_printf.c **** 
  35:lvgl/src/misc/lv_printf.c **** #include "lv_printf.h"
  36:lvgl/src/misc/lv_printf.c **** 
  37:lvgl/src/misc/lv_printf.c **** #if LV_SPRINTF_CUSTOM == 0
  38:lvgl/src/misc/lv_printf.c **** 
  39:lvgl/src/misc/lv_printf.c **** #include <stdbool.h>
  40:lvgl/src/misc/lv_printf.c **** 
  41:lvgl/src/misc/lv_printf.c **** #define PRINTF_DISABLE_SUPPORT_FLOAT    (!LV_SPRINTF_USE_FLOAT)
  42:lvgl/src/misc/lv_printf.c **** 
  43:lvgl/src/misc/lv_printf.c **** // 'ntoa' conversion buffer size, this must be big enough to hold one converted
  44:lvgl/src/misc/lv_printf.c **** // numeric number including padded zeros (dynamically created on stack)
  45:lvgl/src/misc/lv_printf.c **** // default: 32 byte
  46:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_NTOA_BUFFER_SIZE
  47:lvgl/src/misc/lv_printf.c ****     #define PRINTF_NTOA_BUFFER_SIZE    32U
  48:lvgl/src/misc/lv_printf.c **** #endif
  49:lvgl/src/misc/lv_printf.c **** 
  50:lvgl/src/misc/lv_printf.c **** // 'ftoa' conversion buffer size, this must be big enough to hold one converted
  51:lvgl/src/misc/lv_printf.c **** // float number including padded zeros (dynamically created on stack)
  52:lvgl/src/misc/lv_printf.c **** // default: 32 byte
  53:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_FTOA_BUFFER_SIZE
  54:lvgl/src/misc/lv_printf.c ****     #define PRINTF_FTOA_BUFFER_SIZE    32U
  55:lvgl/src/misc/lv_printf.c **** #endif
  56:lvgl/src/misc/lv_printf.c **** 
  57:lvgl/src/misc/lv_printf.c **** // support for the floating point type (%f)
  58:lvgl/src/misc/lv_printf.c **** // default: activated
  59:lvgl/src/misc/lv_printf.c **** #if !PRINTF_DISABLE_SUPPORT_FLOAT
  60:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_FLOAT
  61:lvgl/src/misc/lv_printf.c **** #endif
  62:lvgl/src/misc/lv_printf.c **** 
  63:lvgl/src/misc/lv_printf.c **** // support for exponential floating point notation (%e/%g)
  64:lvgl/src/misc/lv_printf.c **** // default: activated
  65:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_EXPONENTIAL
  66:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_EXPONENTIAL
  67:lvgl/src/misc/lv_printf.c **** #endif
  68:lvgl/src/misc/lv_printf.c **** 
  69:lvgl/src/misc/lv_printf.c **** // define the default floating point precision
  70:lvgl/src/misc/lv_printf.c **** // default: 6 digits
  71:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DEFAULT_FLOAT_PRECISION
  72:lvgl/src/misc/lv_printf.c ****     #define PRINTF_DEFAULT_FLOAT_PRECISION 6U
  73:lvgl/src/misc/lv_printf.c **** #endif
  74:lvgl/src/misc/lv_printf.c **** 
  75:lvgl/src/misc/lv_printf.c **** // define the largest float suitable to print with %f
  76:lvgl/src/misc/lv_printf.c **** // default: 1e9
  77:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_MAX_FLOAT
  78:lvgl/src/misc/lv_printf.c ****     #define PRINTF_MAX_FLOAT 1e9
  79:lvgl/src/misc/lv_printf.c **** #endif
  80:lvgl/src/misc/lv_printf.c **** 
  81:lvgl/src/misc/lv_printf.c **** // support for the long long types (%llu or %p)
  82:lvgl/src/misc/lv_printf.c **** // default: activated
  83:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_LONG_LONG
  84:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_LONG_LONG
  85:lvgl/src/misc/lv_printf.c **** #endif
  86:lvgl/src/misc/lv_printf.c **** 
  87:lvgl/src/misc/lv_printf.c **** // support for the ptrdiff_t type (%t)
  88:lvgl/src/misc/lv_printf.c **** // ptrdiff_t is normally defined in <stddef.h> as long or long long type
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 3


  89:lvgl/src/misc/lv_printf.c **** // default: activated
  90:lvgl/src/misc/lv_printf.c **** #ifndef PRINTF_DISABLE_SUPPORT_PTRDIFF_T
  91:lvgl/src/misc/lv_printf.c ****     #define PRINTF_SUPPORT_PTRDIFF_T
  92:lvgl/src/misc/lv_printf.c **** #endif
  93:lvgl/src/misc/lv_printf.c **** 
  94:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
  95:lvgl/src/misc/lv_printf.c **** 
  96:lvgl/src/misc/lv_printf.c **** // internal flag definitions
  97:lvgl/src/misc/lv_printf.c **** #define FLAGS_ZEROPAD   (1U <<  0U)
  98:lvgl/src/misc/lv_printf.c **** #define FLAGS_LEFT      (1U <<  1U)
  99:lvgl/src/misc/lv_printf.c **** #define FLAGS_PLUS      (1U <<  2U)
 100:lvgl/src/misc/lv_printf.c **** #define FLAGS_SPACE     (1U <<  3U)
 101:lvgl/src/misc/lv_printf.c **** #define FLAGS_HASH      (1U <<  4U)
 102:lvgl/src/misc/lv_printf.c **** #define FLAGS_UPPERCASE (1U <<  5U)
 103:lvgl/src/misc/lv_printf.c **** #define FLAGS_CHAR      (1U <<  6U)
 104:lvgl/src/misc/lv_printf.c **** #define FLAGS_SHORT     (1U <<  7U)
 105:lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG      (1U <<  8U)
 106:lvgl/src/misc/lv_printf.c **** #define FLAGS_LONG_LONG (1U <<  9U)
 107:lvgl/src/misc/lv_printf.c **** #define FLAGS_PRECISION (1U << 10U)
 108:lvgl/src/misc/lv_printf.c **** #define FLAGS_ADAPT_EXP (1U << 11U)
 109:lvgl/src/misc/lv_printf.c **** 
 110:lvgl/src/misc/lv_printf.c **** // import float.h for DBL_MAX
 111:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 112:lvgl/src/misc/lv_printf.c ****     #include <float.h>
 113:lvgl/src/misc/lv_printf.c **** #endif
 114:lvgl/src/misc/lv_printf.c **** 
 115:lvgl/src/misc/lv_printf.c **** // output function type
 116:lvgl/src/misc/lv_printf.c **** typedef void (*out_fct_type)(char character, void * buffer, size_t idx, size_t maxlen);
 117:lvgl/src/misc/lv_printf.c **** 
 118:lvgl/src/misc/lv_printf.c **** // wrapper (used as buffer) for output function type
 119:lvgl/src/misc/lv_printf.c **** typedef struct {
 120:lvgl/src/misc/lv_printf.c ****     void (*fct)(char character, void * arg);
 121:lvgl/src/misc/lv_printf.c ****     void * arg;
 122:lvgl/src/misc/lv_printf.c **** } out_fct_wrap_type;
 123:lvgl/src/misc/lv_printf.c **** 
 124:lvgl/src/misc/lv_printf.c **** // internal buffer output
 125:lvgl/src/misc/lv_printf.c **** static inline void _out_buffer(char character, void * buffer, size_t idx, size_t maxlen)
 126:lvgl/src/misc/lv_printf.c **** {
  28              		.loc 1 126 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 127:lvgl/src/misc/lv_printf.c ****     if(idx < maxlen) {
  33              		.loc 1 127 5 view .LVU1
  34              		.loc 1 127 7 is_stmt 0 view .LVU2
  35 0000 9A42     		cmp	r2, r3
  36 0002 00D2     		bcs	.L1
 128:lvgl/src/misc/lv_printf.c ****         ((char *)buffer)[idx] = character;
  37              		.loc 1 128 9 is_stmt 1 view .LVU3
  38              		.loc 1 128 31 is_stmt 0 view .LVU4
  39 0004 8854     		strb	r0, [r1, r2]
  40              	.L1:
 129:lvgl/src/misc/lv_printf.c ****     }
 130:lvgl/src/misc/lv_printf.c **** }
  41              		.loc 1 130 1 view .LVU5
  42 0006 7047     		bx	lr
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 4


  43              		.cfi_endproc
  44              	.LFE0:
  46              		.section	.text._out_null,"ax",%progbits
  47              		.align	1
  48              		.syntax unified
  49              		.thumb
  50              		.thumb_func
  52              	_out_null:
  53              	.LVL1:
  54              	.LFB1:
 131:lvgl/src/misc/lv_printf.c **** 
 132:lvgl/src/misc/lv_printf.c **** // internal null output
 133:lvgl/src/misc/lv_printf.c **** static inline void _out_null(char character, void * buffer, size_t idx, size_t maxlen)
 134:lvgl/src/misc/lv_printf.c **** {
  55              		.loc 1 134 1 is_stmt 1 view -0
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 0, uses_anonymous_args = 0
  59              		@ link register save eliminated.
 135:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(character);
  60              		.loc 1 135 5 view .LVU7
 136:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(buffer);
  61              		.loc 1 136 5 view .LVU8
 137:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(idx);
  62              		.loc 1 137 5 view .LVU9
 138:lvgl/src/misc/lv_printf.c ****     LV_UNUSED(maxlen);
  63              		.loc 1 138 5 view .LVU10
 139:lvgl/src/misc/lv_printf.c **** }
  64              		.loc 1 139 1 is_stmt 0 view .LVU11
  65 0000 7047     		bx	lr
  66              		.cfi_endproc
  67              	.LFE1:
  69              		.section	.text._atoi,"ax",%progbits
  70              		.align	1
  71              		.syntax unified
  72              		.thumb
  73              		.thumb_func
  75              	_atoi:
  76              	.LVL2:
  77              	.LFB4:
 140:lvgl/src/misc/lv_printf.c **** 
 141:lvgl/src/misc/lv_printf.c **** // internal secure strlen
 142:lvgl/src/misc/lv_printf.c **** // \return The length of the string (excluding the terminating 0) limited by 'maxsize'
 143:lvgl/src/misc/lv_printf.c **** static inline unsigned int _strnlen_s(const char * str, size_t maxsize)
 144:lvgl/src/misc/lv_printf.c **** {
 145:lvgl/src/misc/lv_printf.c ****     const char * s;
 146:lvgl/src/misc/lv_printf.c ****     for(s = str; *s && maxsize--; ++s);
 147:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 148:lvgl/src/misc/lv_printf.c **** }
 149:lvgl/src/misc/lv_printf.c **** 
 150:lvgl/src/misc/lv_printf.c **** // internal test if char is a digit (0-9)
 151:lvgl/src/misc/lv_printf.c **** // \return true if char is a digit
 152:lvgl/src/misc/lv_printf.c **** static inline bool _is_digit(char ch)
 153:lvgl/src/misc/lv_printf.c **** {
 154:lvgl/src/misc/lv_printf.c ****     return (ch >= '0') && (ch <= '9');
 155:lvgl/src/misc/lv_printf.c **** }
 156:lvgl/src/misc/lv_printf.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 5


 157:lvgl/src/misc/lv_printf.c **** // internal ASCII string to unsigned int conversion
 158:lvgl/src/misc/lv_printf.c **** static unsigned int _atoi(const char ** str)
 159:lvgl/src/misc/lv_printf.c **** {
  78              		.loc 1 159 1 is_stmt 1 view -0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              		.loc 1 159 1 is_stmt 0 view .LVU13
  84 0000 0146     		mov	r1, r0
 160:lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  85              		.loc 1 160 5 is_stmt 1 view .LVU14
  86              	.LVL3:
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
  87              		.loc 1 161 5 view .LVU15
 160:lvgl/src/misc/lv_printf.c ****     unsigned int i = 0U;
  88              		.loc 1 160 18 is_stmt 0 view .LVU16
  89 0002 0020     		movs	r0, #0
  90              	.LVL4:
  91              		.loc 1 161 10 view .LVU17
  92 0004 07E0     		b	.L5
  93              	.LVL5:
  94              	.L6:
 162:lvgl/src/misc/lv_printf.c ****         i = i * 10U + (unsigned int)(*((*str)++) - '0');
  95              		.loc 1 162 9 is_stmt 1 view .LVU18
  96              		.loc 1 162 15 is_stmt 0 view .LVU19
  97 0006 00EB8000 		add	r0, r0, r0, lsl #2
  98              	.LVL6:
  99              		.loc 1 162 46 view .LVU20
 100 000a 531C     		adds	r3, r2, #1
 101 000c 0B60     		str	r3, [r1]
 102              		.loc 1 162 38 view .LVU21
 103 000e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 104              		.loc 1 162 21 view .LVU22
 105 0010 03EB4000 		add	r0, r3, r0, lsl #1
 106              		.loc 1 162 11 view .LVU23
 107 0014 3038     		subs	r0, r0, #48
 108              	.LVL7:
 109              	.L5:
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 110              		.loc 1 161 10 is_stmt 1 view .LVU24
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 111              		.loc 1 161 22 is_stmt 0 view .LVU25
 112 0016 0A68     		ldr	r2, [r1]
 161:lvgl/src/misc/lv_printf.c ****     while(_is_digit(**str)) {
 113              		.loc 1 161 11 view .LVU26
 114 0018 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 115              	.LVL8:
 116              	.LBB20:
 117              	.LBI20:
 152:lvgl/src/misc/lv_printf.c **** {
 118              		.loc 1 152 20 is_stmt 1 view .LVU27
 119              	.LBB21:
 154:lvgl/src/misc/lv_printf.c **** }
 120              		.loc 1 154 5 view .LVU28
 154:lvgl/src/misc/lv_printf.c **** }
 121              		.loc 1 154 24 is_stmt 0 view .LVU29
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 6


 122 001a 303B     		subs	r3, r3, #48
 123              	.LVL9:
 154:lvgl/src/misc/lv_printf.c **** }
 124              		.loc 1 154 24 view .LVU30
 125 001c DBB2     		uxtb	r3, r3
 126              	.LVL10:
 154:lvgl/src/misc/lv_printf.c **** }
 127              		.loc 1 154 24 view .LVU31
 128              	.LBE21:
 129              	.LBE20:
 161:lvgl/src/misc/lv_printf.c ****         i = i * 10U + (unsigned int)(*((*str)++) - '0');
 130              		.loc 1 161 10 view .LVU32
 131 001e 092B     		cmp	r3, #9
 132 0020 F1D9     		bls	.L6
 163:lvgl/src/misc/lv_printf.c ****     }
 164:lvgl/src/misc/lv_printf.c ****     return i;
 133              		.loc 1 164 5 is_stmt 1 view .LVU33
 165:lvgl/src/misc/lv_printf.c **** }
 134              		.loc 1 165 1 is_stmt 0 view .LVU34
 135 0022 7047     		bx	lr
 136              		.cfi_endproc
 137              	.LFE4:
 139              		.section	.text._out_rev,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	_out_rev:
 146              	.LVL11:
 147              	.LFB5:
 166:lvgl/src/misc/lv_printf.c **** 
 167:lvgl/src/misc/lv_printf.c **** // output the specified string in reverse, taking care of any zero-padding
 168:lvgl/src/misc/lv_printf.c **** static size_t _out_rev(out_fct_type out, char * buffer, size_t idx, size_t maxlen, const char * buf
 169:lvgl/src/misc/lv_printf.c ****                        unsigned int width, unsigned int flags)
 170:lvgl/src/misc/lv_printf.c **** {
 148              		.loc 1 170 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 16, pretend = 0, frame = 8
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152              		.loc 1 170 1 is_stmt 0 view .LVU36
 153 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 154              		.cfi_def_cfa_offset 36
 155              		.cfi_offset 4, -36
 156              		.cfi_offset 5, -32
 157              		.cfi_offset 6, -28
 158              		.cfi_offset 7, -24
 159              		.cfi_offset 8, -20
 160              		.cfi_offset 9, -16
 161              		.cfi_offset 10, -12
 162              		.cfi_offset 11, -8
 163              		.cfi_offset 14, -4
 164 0004 83B0     		sub	sp, sp, #12
 165              		.cfi_def_cfa_offset 48
 166 0006 0546     		mov	r5, r0
 167 0008 0E46     		mov	r6, r1
 168 000a 9346     		mov	fp, r2
 169 000c 1F46     		mov	r7, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 7


 170 000e DDF830A0 		ldr	r10, [sp, #48]
 171 0012 0D9C     		ldr	r4, [sp, #52]
 172 0014 DDF83890 		ldr	r9, [sp, #56]
 171:lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 173              		.loc 1 171 5 is_stmt 1 view .LVU37
 174              	.LVL12:
 172:lvgl/src/misc/lv_printf.c **** 
 173:lvgl/src/misc/lv_printf.c ****     // pad spaces up to given width
 174:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && !(flags & FLAGS_ZEROPAD)) {
 175              		.loc 1 174 5 view .LVU38
 176              		.loc 1 174 7 is_stmt 0 view .LVU39
 177 0018 0F9B     		ldr	r3, [sp, #60]
 178              	.LVL13:
 179              		.loc 1 174 7 view .LVU40
 180 001a 13F0030F 		tst	r3, #3
 181 001e 19D1     		bne	.L9
 182              	.LBB22:
 175:lvgl/src/misc/lv_printf.c ****         size_t i;
 176:lvgl/src/misc/lv_printf.c ****         for(i = len; i < width; i++) {
 183              		.loc 1 176 15 view .LVU41
 184 0020 A046     		mov	r8, r4
 185              	.LBE22:
 186 0022 0192     		str	r2, [sp, #4]
 187              	.LVL14:
 188              	.L8:
 189              	.LBB23:
 190              		.loc 1 176 22 is_stmt 1 discriminator 1 view .LVU42
 191              		.loc 1 176 9 is_stmt 0 discriminator 1 view .LVU43
 192 0024 C845     		cmp	r8, r9
 193 0026 09D2     		bcs	.L19
 177:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 194              		.loc 1 177 13 is_stmt 1 discriminator 3 view .LVU44
 195 0028 02F1010B 		add	fp, r2, #1
 196              	.LVL15:
 197              		.loc 1 177 13 is_stmt 0 discriminator 3 view .LVU45
 198 002c 3B46     		mov	r3, r7
 199 002e 3146     		mov	r1, r6
 200 0030 2020     		movs	r0, #32
 201 0032 A847     		blx	r5
 202              	.LVL16:
 176:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 203              		.loc 1 176 33 is_stmt 1 discriminator 3 view .LVU46
 176:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 204              		.loc 1 176 34 is_stmt 0 discriminator 3 view .LVU47
 205 0034 08F10108 		add	r8, r8, #1
 206              	.LVL17:
 207              		.loc 1 177 13 discriminator 3 view .LVU48
 208 0038 5A46     		mov	r2, fp
 209 003a F3E7     		b	.L8
 210              	.LVL18:
 211              	.L19:
 212              		.loc 1 177 13 discriminator 3 view .LVU49
 213 003c DDF804B0 		ldr	fp, [sp, #4]
 214 0040 08E0     		b	.L9
 215              	.LVL19:
 216              	.L12:
 217              		.loc 1 177 13 discriminator 3 view .LVU50
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 8


 218              	.LBE23:
 178:lvgl/src/misc/lv_printf.c ****         }
 179:lvgl/src/misc/lv_printf.c ****     }
 180:lvgl/src/misc/lv_printf.c **** 
 181:lvgl/src/misc/lv_printf.c ****     // reverse string
 182:lvgl/src/misc/lv_printf.c ****     while(len) {
 183:lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 219              		.loc 1 183 9 is_stmt 1 view .LVU51
 220 0042 013C     		subs	r4, r4, #1
 221              	.LVL20:
 222              		.loc 1 183 9 is_stmt 0 view .LVU52
 223 0044 02F10108 		add	r8, r2, #1
 224              	.LVL21:
 225              		.loc 1 183 9 view .LVU53
 226 0048 3B46     		mov	r3, r7
 227 004a 3146     		mov	r1, r6
 228 004c 1AF80400 		ldrb	r0, [r10, r4]	@ zero_extendqisi2
 229 0050 A847     		blx	r5
 230              	.LVL22:
 231 0052 4246     		mov	r2, r8
 232              	.LVL23:
 233              	.L9:
 182:lvgl/src/misc/lv_printf.c ****         out(buf[--len], buffer, idx++, maxlen);
 234              		.loc 1 182 10 is_stmt 1 view .LVU54
 235 0054 002C     		cmp	r4, #0
 236 0056 F4D1     		bne	.L12
 184:lvgl/src/misc/lv_printf.c ****     }
 185:lvgl/src/misc/lv_printf.c **** 
 186:lvgl/src/misc/lv_printf.c ****     // append pad spaces up to given width
 187:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_LEFT) {
 237              		.loc 1 187 5 view .LVU55
 238              		.loc 1 187 7 is_stmt 0 view .LVU56
 239 0058 0F9B     		ldr	r3, [sp, #60]
 240 005a 13F0020F 		tst	r3, #2
 241 005e 03D1     		bne	.L13
 242              	.LVL24:
 243              	.L7:
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 189:lvgl/src/misc/lv_printf.c ****             out(' ', buffer, idx++, maxlen);
 190:lvgl/src/misc/lv_printf.c ****         }
 191:lvgl/src/misc/lv_printf.c ****     }
 192:lvgl/src/misc/lv_printf.c **** 
 193:lvgl/src/misc/lv_printf.c ****     return idx;
 194:lvgl/src/misc/lv_printf.c **** }
 244              		.loc 1 194 1 view .LVU57
 245 0060 1046     		mov	r0, r2
 246 0062 03B0     		add	sp, sp, #12
 247              		.cfi_remember_state
 248              		.cfi_def_cfa_offset 36
 249              		@ sp needed
 250 0064 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 251              	.LVL25:
 252              	.L13:
 253              		.cfi_restore_state
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 254              		.loc 1 188 14 is_stmt 1 view .LVU58
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 9


 255              		.loc 1 188 19 is_stmt 0 view .LVU59
 256 0068 A2EB0B03 		sub	r3, r2, fp
 188:lvgl/src/misc/lv_printf.c ****         while(idx - start_idx < width) {
 257              		.loc 1 188 14 view .LVU60
 258 006c 4B45     		cmp	r3, r9
 259 006e F7D2     		bcs	.L7
 189:lvgl/src/misc/lv_printf.c ****         }
 260              		.loc 1 189 13 is_stmt 1 view .LVU61
 261 0070 541C     		adds	r4, r2, #1
 262              	.LVL26:
 189:lvgl/src/misc/lv_printf.c ****         }
 263              		.loc 1 189 13 is_stmt 0 view .LVU62
 264 0072 3B46     		mov	r3, r7
 265 0074 3146     		mov	r1, r6
 266 0076 2020     		movs	r0, #32
 267 0078 A847     		blx	r5
 268              	.LVL27:
 269 007a 2246     		mov	r2, r4
 270 007c F4E7     		b	.L13
 271              		.cfi_endproc
 272              	.LFE5:
 274              		.section	.text._ntoa_format,"ax",%progbits
 275              		.align	1
 276              		.syntax unified
 277              		.thumb
 278              		.thumb_func
 280              	_ntoa_format:
 281              	.LVL28:
 282              	.LFB6:
 195:lvgl/src/misc/lv_printf.c **** 
 196:lvgl/src/misc/lv_printf.c **** // internal itoa format
 197:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_format(out_fct_type out, char * buffer, size_t idx, size_t maxlen, char * buf, 
 198:lvgl/src/misc/lv_printf.c ****                            bool negative, unsigned int base, unsigned int prec, unsigned int width,
 199:lvgl/src/misc/lv_printf.c **** {
 283              		.loc 1 199 1 is_stmt 1 view -0
 284              		.cfi_startproc
 285              		@ args = 28, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 199 1 is_stmt 0 view .LVU64
 288 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 289              		.cfi_def_cfa_offset 28
 290              		.cfi_offset 4, -28
 291              		.cfi_offset 5, -24
 292              		.cfi_offset 6, -20
 293              		.cfi_offset 7, -16
 294              		.cfi_offset 8, -12
 295              		.cfi_offset 9, -8
 296              		.cfi_offset 14, -4
 297 0004 85B0     		sub	sp, sp, #20
 298              		.cfi_def_cfa_offset 48
 299 0006 9E46     		mov	lr, r3
 300 0008 0C9D     		ldr	r5, [sp, #48]
 301 000a 0D9C     		ldr	r4, [sp, #52]
 302 000c 9DF83890 		ldrb	r9, [sp, #56]	@ zero_extendqisi2
 303 0010 DDF83C80 		ldr	r8, [sp, #60]
 304 0014 DDF840C0 		ldr	ip, [sp, #64]
 305 0018 119B     		ldr	r3, [sp, #68]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 10


 306              	.LVL29:
 307              		.loc 1 199 1 view .LVU65
 308 001a 129E     		ldr	r6, [sp, #72]
 200:lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 201:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT)) {
 309              		.loc 1 201 5 is_stmt 1 view .LVU66
 310              		.loc 1 201 7 is_stmt 0 view .LVU67
 311 001c 16F0020F 		tst	r6, #2
 312 0020 20D1     		bne	.L21
 202:lvgl/src/misc/lv_printf.c ****         if(width && (flags & FLAGS_ZEROPAD) && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) 
 313              		.loc 1 202 9 is_stmt 1 view .LVU68
 314              		.loc 1 202 11 is_stmt 0 view .LVU69
 315 0022 6BB1     		cbz	r3, .L24
 316              		.loc 1 202 18 discriminator 1 view .LVU70
 317 0024 16F0010F 		tst	r6, #1
 318 0028 0AD0     		beq	.L24
 319              		.loc 1 202 45 discriminator 2 view .LVU71
 320 002a B9F1000F 		cmp	r9, #0
 321 002e 02D1     		bne	.L23
 322              		.loc 1 202 58 discriminator 3 view .LVU72
 323 0030 16F00C0F 		tst	r6, #12
 324 0034 04D0     		beq	.L24
 325              	.L23:
 203:lvgl/src/misc/lv_printf.c ****             width--;
 326              		.loc 1 203 13 is_stmt 1 view .LVU73
 327              		.loc 1 203 18 is_stmt 0 view .LVU74
 328 0036 013B     		subs	r3, r3, #1
 329              	.LVL30:
 330              		.loc 1 203 18 view .LVU75
 331 0038 02E0     		b	.L24
 332              	.LVL31:
 333              	.L25:
 204:lvgl/src/misc/lv_printf.c ****         }
 205:lvgl/src/misc/lv_printf.c ****         while((len < prec) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 206:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 334              		.loc 1 206 13 is_stmt 1 view .LVU76
 335              		.loc 1 206 24 is_stmt 0 view .LVU77
 336 003a 3027     		movs	r7, #48
 337 003c 2F55     		strb	r7, [r5, r4]
 338              		.loc 1 206 20 view .LVU78
 339 003e 0134     		adds	r4, r4, #1
 340              	.LVL32:
 341              	.L24:
 205:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 342              		.loc 1 205 14 is_stmt 1 view .LVU79
 343 0040 1F2C     		cmp	r4, #31
 344 0042 98BF     		it	ls
 345 0044 6445     		cmpls	r4, ip
 346 0046 F8D3     		bcc	.L25
 347              	.L26:
 207:lvgl/src/misc/lv_printf.c ****         }
 208:lvgl/src/misc/lv_printf.c ****         while((flags & FLAGS_ZEROPAD) && (len < width) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 348              		.loc 1 208 14 view .LVU80
 349 0048 16F0010F 		tst	r6, #1
 350 004c 0AD0     		beq	.L21
 351              		.loc 1 208 64 is_stmt 0 discriminator 1 view .LVU81
 352 004e 1F2C     		cmp	r4, #31
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 11


 353 0050 8CBF     		ite	hi
 354 0052 0027     		movhi	r7, #0
 355 0054 0127     		movls	r7, #1
 356              		.loc 1 208 56 discriminator 1 view .LVU82
 357 0056 9C42     		cmp	r4, r3
 358 0058 04D2     		bcs	.L21
 359 005a 1FB1     		cbz	r7, .L21
 209:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 360              		.loc 1 209 13 is_stmt 1 view .LVU83
 361              	.LVL33:
 362              		.loc 1 209 24 is_stmt 0 view .LVU84
 363 005c 3027     		movs	r7, #48
 364 005e 2F55     		strb	r7, [r5, r4]
 365              		.loc 1 209 20 view .LVU85
 366 0060 0134     		adds	r4, r4, #1
 367              	.LVL34:
 368              		.loc 1 209 20 view .LVU86
 369 0062 F1E7     		b	.L26
 370              	.LVL35:
 371              	.L21:
 210:lvgl/src/misc/lv_printf.c ****         }
 211:lvgl/src/misc/lv_printf.c ****     }
 212:lvgl/src/misc/lv_printf.c **** 
 213:lvgl/src/misc/lv_printf.c ****     // handle hash
 214:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_HASH) {
 372              		.loc 1 214 5 is_stmt 1 view .LVU87
 373              		.loc 1 214 7 is_stmt 0 view .LVU88
 374 0064 16F0100F 		tst	r6, #16
 375 0068 27D0     		beq	.L29
 215:lvgl/src/misc/lv_printf.c ****         if(!(flags & FLAGS_PRECISION) && len && ((len == prec) || (len == width))) {
 376              		.loc 1 215 9 is_stmt 1 view .LVU89
 377              		.loc 1 215 11 is_stmt 0 view .LVU90
 378 006a 16F4806F 		tst	r6, #1024
 379 006e 11D1     		bne	.L30
 380              		.loc 1 215 39 discriminator 1 view .LVU91
 381 0070 84B1     		cbz	r4, .L30
 382              		.loc 1 215 46 discriminator 2 view .LVU92
 383 0072 9C42     		cmp	r4, r3
 384 0074 18BF     		it	ne
 385 0076 6445     		cmpne	r4, ip
 386 0078 0CD1     		bne	.L30
 216:lvgl/src/misc/lv_printf.c ****             len--;
 387              		.loc 1 216 13 is_stmt 1 view .LVU93
 388              	.LVL36:
 217:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 389              		.loc 1 217 13 view .LVU94
 390              		.loc 1 217 16 is_stmt 0 view .LVU95
 391 007a B4F1010C 		subs	ip, r4, #1
 392              	.LVL37:
 393              		.loc 1 217 16 view .LVU96
 394 007e 14BF     		ite	ne
 395 0080 0127     		movne	r7, #1
 396 0082 0027     		moveq	r7, #0
 397              		.loc 1 217 20 view .LVU97
 398 0084 B8F1100F 		cmp	r8, #16
 399 0088 14BF     		ite	ne
 400 008a 0027     		movne	r7, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 12


 401 008c 07F00107 		andeq	r7, r7, #1
 402              		.loc 1 217 15 view .LVU98
 403 0090 2FB3     		cbz	r7, .L37
 218:lvgl/src/misc/lv_printf.c ****                 len--;
 404              		.loc 1 218 17 is_stmt 1 view .LVU99
 405              		.loc 1 218 20 is_stmt 0 view .LVU100
 406 0092 023C     		subs	r4, r4, #2
 407              	.LVL38:
 408              	.L30:
 219:lvgl/src/misc/lv_printf.c ****             }
 220:lvgl/src/misc/lv_printf.c ****         }
 221:lvgl/src/misc/lv_printf.c ****         if((base == 16U) && !(flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 409              		.loc 1 221 9 is_stmt 1 view .LVU101
 410              		.loc 1 221 11 is_stmt 0 view .LVU102
 411 0094 B8F1100F 		cmp	r8, #16
 412 0098 23D0     		beq	.L39
 413              	.L31:
 222:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 223:lvgl/src/misc/lv_printf.c ****         }
 224:lvgl/src/misc/lv_printf.c ****         else if((base == 16U) && (flags & FLAGS_UPPERCASE) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 414              		.loc 1 224 14 is_stmt 1 view .LVU103
 415              		.loc 1 224 16 is_stmt 0 view .LVU104
 416 009a B8F1100F 		cmp	r8, #16
 417 009e 29D0     		beq	.L40
 418              	.L33:
 225:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 226:lvgl/src/misc/lv_printf.c ****         }
 227:lvgl/src/misc/lv_printf.c ****         else if((base == 2U) && (len < PRINTF_NTOA_BUFFER_SIZE)) {
 419              		.loc 1 227 14 is_stmt 1 view .LVU105
 420              		.loc 1 227 16 is_stmt 0 view .LVU106
 421 00a0 1F2C     		cmp	r4, #31
 422 00a2 98BF     		it	ls
 423 00a4 B8F1020F 		cmpls	r8, #2
 424 00a8 02D1     		bne	.L32
 228:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'b';
 425              		.loc 1 228 13 is_stmt 1 view .LVU107
 426              	.LVL39:
 427              		.loc 1 228 24 is_stmt 0 view .LVU108
 428 00aa 6227     		movs	r7, #98
 429 00ac 2F55     		strb	r7, [r5, r4]
 430              		.loc 1 228 20 view .LVU109
 431 00ae 0134     		adds	r4, r4, #1
 432              	.LVL40:
 433              	.L32:
 229:lvgl/src/misc/lv_printf.c ****         }
 230:lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_NTOA_BUFFER_SIZE) {
 434              		.loc 1 230 9 is_stmt 1 view .LVU110
 435              		.loc 1 230 11 is_stmt 0 view .LVU111
 436 00b0 1F2C     		cmp	r4, #31
 437 00b2 02D8     		bhi	.L29
 231:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 438              		.loc 1 231 13 is_stmt 1 view .LVU112
 439              	.LVL41:
 440              		.loc 1 231 24 is_stmt 0 view .LVU113
 441 00b4 3027     		movs	r7, #48
 442 00b6 2F55     		strb	r7, [r5, r4]
 443              		.loc 1 231 20 view .LVU114
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 13


 444 00b8 0134     		adds	r4, r4, #1
 445              	.LVL42:
 446              	.L29:
 232:lvgl/src/misc/lv_printf.c ****         }
 233:lvgl/src/misc/lv_printf.c ****     }
 234:lvgl/src/misc/lv_printf.c **** 
 235:lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_NTOA_BUFFER_SIZE) {
 447              		.loc 1 235 5 is_stmt 1 view .LVU115
 448              		.loc 1 235 7 is_stmt 0 view .LVU116
 449 00ba 1F2C     		cmp	r4, #31
 450 00bc 05D8     		bhi	.L34
 236:lvgl/src/misc/lv_printf.c ****         if(negative) {
 451              		.loc 1 236 9 is_stmt 1 view .LVU117
 452              		.loc 1 236 11 is_stmt 0 view .LVU118
 453 00be B9F1000F 		cmp	r9, #0
 454 00c2 20D0     		beq	.L35
 237:lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 455              		.loc 1 237 13 is_stmt 1 view .LVU119
 456              	.LVL43:
 457              		.loc 1 237 24 is_stmt 0 view .LVU120
 458 00c4 2D27     		movs	r7, #45
 459 00c6 2F55     		strb	r7, [r5, r4]
 460              		.loc 1 237 20 view .LVU121
 461 00c8 0134     		adds	r4, r4, #1
 462              	.LVL44:
 463              	.L34:
 238:lvgl/src/misc/lv_printf.c ****         }
 239:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 240:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 241:lvgl/src/misc/lv_printf.c ****         }
 242:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 243:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 244:lvgl/src/misc/lv_printf.c ****         }
 245:lvgl/src/misc/lv_printf.c ****     }
 246:lvgl/src/misc/lv_printf.c **** 
 247:lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 464              		.loc 1 247 5 is_stmt 1 view .LVU122
 465              		.loc 1 247 12 is_stmt 0 view .LVU123
 466 00ca 0396     		str	r6, [sp, #12]
 467 00cc 0293     		str	r3, [sp, #8]
 468 00ce 0194     		str	r4, [sp, #4]
 469 00d0 0095     		str	r5, [sp]
 470 00d2 7346     		mov	r3, lr
 471              	.LVL45:
 472              		.loc 1 247 12 view .LVU124
 473 00d4 FFF7FEFF 		bl	_out_rev
 474              	.LVL46:
 248:lvgl/src/misc/lv_printf.c **** }
 475              		.loc 1 248 1 view .LVU125
 476 00d8 05B0     		add	sp, sp, #20
 477              		.cfi_remember_state
 478              		.cfi_def_cfa_offset 28
 479              		@ sp needed
 480 00da BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 481              	.LVL47:
 482              	.L37:
 483              		.cfi_restore_state
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 14


 216:lvgl/src/misc/lv_printf.c ****             if(len && (base == 16U)) {
 484              		.loc 1 216 16 view .LVU126
 485 00de 6446     		mov	r4, ip
 486 00e0 D8E7     		b	.L30
 487              	.LVL48:
 488              	.L39:
 221:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 489              		.loc 1 221 26 discriminator 1 view .LVU127
 490 00e2 16F0200F 		tst	r6, #32
 491 00e6 D8D1     		bne	.L31
 221:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'x';
 492              		.loc 1 221 56 discriminator 2 view .LVU128
 493 00e8 1F2C     		cmp	r4, #31
 494 00ea D6D8     		bhi	.L31
 222:lvgl/src/misc/lv_printf.c ****         }
 495              		.loc 1 222 13 is_stmt 1 view .LVU129
 496              	.LVL49:
 222:lvgl/src/misc/lv_printf.c ****         }
 497              		.loc 1 222 24 is_stmt 0 view .LVU130
 498 00ec 7827     		movs	r7, #120
 499 00ee 2F55     		strb	r7, [r5, r4]
 222:lvgl/src/misc/lv_printf.c ****         }
 500              		.loc 1 222 20 view .LVU131
 501 00f0 0134     		adds	r4, r4, #1
 502              	.LVL50:
 222:lvgl/src/misc/lv_printf.c ****         }
 503              		.loc 1 222 24 view .LVU132
 504 00f2 DDE7     		b	.L32
 505              	.L40:
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 506              		.loc 1 224 31 discriminator 1 view .LVU133
 507 00f4 16F0200F 		tst	r6, #32
 508 00f8 D2D0     		beq	.L33
 224:lvgl/src/misc/lv_printf.c ****             buf[len++] = 'X';
 509              		.loc 1 224 60 discriminator 2 view .LVU134
 510 00fa 1F2C     		cmp	r4, #31
 511 00fc D0D8     		bhi	.L33
 225:lvgl/src/misc/lv_printf.c ****         }
 512              		.loc 1 225 13 is_stmt 1 view .LVU135
 513              	.LVL51:
 225:lvgl/src/misc/lv_printf.c ****         }
 514              		.loc 1 225 24 is_stmt 0 view .LVU136
 515 00fe 5827     		movs	r7, #88
 516 0100 2F55     		strb	r7, [r5, r4]
 225:lvgl/src/misc/lv_printf.c ****         }
 517              		.loc 1 225 20 view .LVU137
 518 0102 0134     		adds	r4, r4, #1
 519              	.LVL52:
 225:lvgl/src/misc/lv_printf.c ****         }
 520              		.loc 1 225 24 view .LVU138
 521 0104 D4E7     		b	.L32
 522              	.L35:
 239:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 523              		.loc 1 239 14 is_stmt 1 view .LVU139
 239:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 524              		.loc 1 239 16 is_stmt 0 view .LVU140
 525 0106 16F0040F 		tst	r6, #4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 15


 526 010a 03D0     		beq	.L36
 240:lvgl/src/misc/lv_printf.c ****         }
 527              		.loc 1 240 13 is_stmt 1 view .LVU141
 528              	.LVL53:
 240:lvgl/src/misc/lv_printf.c ****         }
 529              		.loc 1 240 24 is_stmt 0 view .LVU142
 530 010c 2B27     		movs	r7, #43
 531 010e 2F55     		strb	r7, [r5, r4]
 240:lvgl/src/misc/lv_printf.c ****         }
 532              		.loc 1 240 20 view .LVU143
 533 0110 0134     		adds	r4, r4, #1
 534              	.LVL54:
 240:lvgl/src/misc/lv_printf.c ****         }
 535              		.loc 1 240 20 view .LVU144
 536 0112 DAE7     		b	.L34
 537              	.L36:
 242:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 538              		.loc 1 242 14 is_stmt 1 view .LVU145
 242:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 539              		.loc 1 242 16 is_stmt 0 view .LVU146
 540 0114 16F0080F 		tst	r6, #8
 541 0118 D7D0     		beq	.L34
 243:lvgl/src/misc/lv_printf.c ****         }
 542              		.loc 1 243 13 is_stmt 1 view .LVU147
 543              	.LVL55:
 243:lvgl/src/misc/lv_printf.c ****         }
 544              		.loc 1 243 24 is_stmt 0 view .LVU148
 545 011a 2027     		movs	r7, #32
 546 011c 2F55     		strb	r7, [r5, r4]
 243:lvgl/src/misc/lv_printf.c ****         }
 547              		.loc 1 243 20 view .LVU149
 548 011e 0134     		adds	r4, r4, #1
 549              	.LVL56:
 243:lvgl/src/misc/lv_printf.c ****         }
 550              		.loc 1 243 20 view .LVU150
 551 0120 D3E7     		b	.L34
 552              		.cfi_endproc
 553              	.LFE6:
 555              		.section	.text._ntoa_long,"ax",%progbits
 556              		.align	1
 557              		.syntax unified
 558              		.thumb
 559              		.thumb_func
 561              	_ntoa_long:
 562              	.LVL57:
 563              	.LFB7:
 249:lvgl/src/misc/lv_printf.c **** 
 250:lvgl/src/misc/lv_printf.c **** // internal itoa for 'long' type
 251:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned long 
 252:lvgl/src/misc/lv_printf.c ****                          unsigned long base, unsigned int prec, unsigned int width, unsigned int fl
 253:lvgl/src/misc/lv_printf.c **** {
 564              		.loc 1 253 1 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 24, pretend = 0, frame = 32
 567              		@ frame_needed = 0, uses_anonymous_args = 0
 568              		.loc 1 253 1 is_stmt 0 view .LVU152
 569 0000 F0B5     		push	{r4, r5, r6, r7, lr}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 16


 570              		.cfi_def_cfa_offset 20
 571              		.cfi_offset 4, -20
 572              		.cfi_offset 5, -16
 573              		.cfi_offset 6, -12
 574              		.cfi_offset 7, -8
 575              		.cfi_offset 14, -4
 576 0002 91B0     		sub	sp, sp, #68
 577              		.cfi_def_cfa_offset 88
 578 0004 169C     		ldr	r4, [sp, #88]
 579 0006 189D     		ldr	r5, [sp, #96]
 580 0008 1B9E     		ldr	r6, [sp, #108]
 254:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 581              		.loc 1 254 5 is_stmt 1 view .LVU153
 255:lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 582              		.loc 1 255 5 view .LVU154
 583              	.LVL58:
 256:lvgl/src/misc/lv_printf.c **** 
 257:lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 258:lvgl/src/misc/lv_printf.c ****     if(!value) {
 584              		.loc 1 258 5 view .LVU155
 585              		.loc 1 258 7 is_stmt 0 view .LVU156
 586 000a 0CB9     		cbnz	r4, .L42
 259:lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 587              		.loc 1 259 9 is_stmt 1 view .LVU157
 588              		.loc 1 259 15 is_stmt 0 view .LVU158
 589 000c 26F01006 		bic	r6, r6, #16
 590              	.LVL59:
 591              	.L42:
 260:lvgl/src/misc/lv_printf.c ****     }
 261:lvgl/src/misc/lv_printf.c **** 
 262:lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 263:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 592              		.loc 1 263 5 is_stmt 1 view .LVU159
 593              		.loc 1 263 7 is_stmt 0 view .LVU160
 594 0010 16F4806E 		ands	lr, r6, #1024
 595 0014 1AD0     		beq	.L48
 596              		.loc 1 263 35 discriminator 1 view .LVU161
 597 0016 84B3     		cbz	r4, .L49
 598 0018 4FF0000E 		mov	lr, #0
 599 001c 16E0     		b	.L48
 600              	.LVL60:
 601              	.L53:
 602              	.LBB24:
 264:lvgl/src/misc/lv_printf.c ****         do {
 265:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 266:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 603              		.loc 1 266 24 discriminator 1 view .LVU162
 604 001e 0CF1300C 		add	ip, ip, #48
 605              	.LVL61:
 606              		.loc 1 266 24 discriminator 1 view .LVU163
 607 0022 5FFA8CFC 		uxtb	ip, ip
 608              	.LVL62:
 609              	.L46:
 610              		.loc 1 266 20 discriminator 8 view .LVU164
 611 0026 0EF10107 		add	r7, lr, #1
 612              	.LVL63:
 613              		.loc 1 266 24 discriminator 8 view .LVU165
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 17


 614 002a 0EF1400E 		add	lr, lr, #64
 615 002e EE44     		add	lr, sp, lr
 616 0030 0EF820CC 		strb	ip, [lr, #-32]
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 617              		.loc 1 267 13 is_stmt 1 discriminator 8 view .LVU166
 618              		.loc 1 267 19 is_stmt 0 discriminator 8 view .LVU167
 619 0034 B4FBF5FC 		udiv	ip, r4, r5
 620              	.LVL64:
 621              		.loc 1 267 19 discriminator 8 view .LVU168
 622              	.LBE24:
 268:lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 623              		.loc 1 268 16 is_stmt 1 discriminator 8 view .LVU169
 624              		.loc 1 268 23 is_stmt 0 discriminator 8 view .LVU170
 625 0038 AC42     		cmp	r4, r5
 626 003a 34BF     		ite	cc
 627 003c 0024     		movcc	r4, #0
 628              	.LVL65:
 629              		.loc 1 268 23 discriminator 8 view .LVU171
 630 003e 0124     		movcs	r4, #1
 631 0040 1F2F     		cmp	r7, #31
 632 0042 88BF     		it	hi
 633 0044 0024     		movhi	r4, #0
 634              		.loc 1 268 9 discriminator 8 view .LVU172
 635 0046 CCB1     		cbz	r4, .L44
 636              	.LBB25:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 637              		.loc 1 266 20 view .LVU173
 638 0048 BE46     		mov	lr, r7
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 639              		.loc 1 267 19 view .LVU174
 640 004a 6446     		mov	r4, ip
 641              	.LVL66:
 642              	.L48:
 267:lvgl/src/misc/lv_printf.c ****             value /= base;
 643              		.loc 1 267 19 view .LVU175
 644              	.LBE25:
 264:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 645              		.loc 1 264 9 is_stmt 1 view .LVU176
 646              	.LBB26:
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 647              		.loc 1 265 13 view .LVU177
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 648              		.loc 1 265 45 is_stmt 0 view .LVU178
 649 004c B4FBF5FC 		udiv	ip, r4, r5
 650 0050 05FB1C4C 		mls	ip, r5, ip, r4
 265:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 651              		.loc 1 265 24 view .LVU179
 652 0054 5FFA8CFC 		uxtb	ip, ip
 653              	.LVL67:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 654              		.loc 1 266 13 is_stmt 1 view .LVU180
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 655              		.loc 1 266 24 is_stmt 0 view .LVU181
 656 0058 BCF1090F 		cmp	ip, #9
 657 005c DFD9     		bls	.L53
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 658              		.loc 1 266 91 discriminator 2 view .LVU182
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 18


 659 005e 16F0200F 		tst	r6, #32
 660 0062 08D0     		beq	.L50
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 661              		.loc 1 266 91 view .LVU183
 662 0064 4127     		movs	r7, #65
 663              	.L47:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 664              		.loc 1 266 91 discriminator 7 view .LVU184
 665 0066 BC44     		add	ip, ip, r7
 666              	.LVL68:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 667              		.loc 1 266 91 discriminator 7 view .LVU185
 668 0068 5FFA8CFC 		uxtb	ip, ip
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 669              		.loc 1 266 24 discriminator 7 view .LVU186
 670 006c ACF10A0C 		sub	ip, ip, #10
 671 0070 5FFA8CFC 		uxtb	ip, ip
 672 0074 D7E7     		b	.L46
 673              	.LVL69:
 674              	.L50:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 675              		.loc 1 266 91 view .LVU187
 676 0076 6127     		movs	r7, #97
 677 0078 F5E7     		b	.L47
 678              	.LVL70:
 679              	.L49:
 266:lvgl/src/misc/lv_printf.c ****             value /= base;
 680              		.loc 1 266 91 view .LVU188
 681              	.LBE26:
 255:lvgl/src/misc/lv_printf.c **** 
 682              		.loc 1 255 12 view .LVU189
 683 007a 2746     		mov	r7, r4
 684              	.LVL71:
 685              	.L44:
 269:lvgl/src/misc/lv_printf.c ****     }
 270:lvgl/src/misc/lv_printf.c **** 
 271:lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 686              		.loc 1 271 5 is_stmt 1 view .LVU190
 687              		.loc 1 271 12 is_stmt 0 view .LVU191
 688 007c 0696     		str	r6, [sp, #24]
 689 007e 1A9C     		ldr	r4, [sp, #104]
 690 0080 0594     		str	r4, [sp, #20]
 691 0082 199C     		ldr	r4, [sp, #100]
 692 0084 0494     		str	r4, [sp, #16]
 693 0086 0395     		str	r5, [sp, #12]
 694 0088 9DF85C40 		ldrb	r4, [sp, #92]	@ zero_extendqisi2
 695 008c 0294     		str	r4, [sp, #8]
 696 008e 0197     		str	r7, [sp, #4]
 697 0090 08AC     		add	r4, sp, #32
 698 0092 0094     		str	r4, [sp]
 699 0094 FFF7FEFF 		bl	_ntoa_format
 700              	.LVL72:
 272:lvgl/src/misc/lv_printf.c **** }
 701              		.loc 1 272 1 view .LVU192
 702 0098 11B0     		add	sp, sp, #68
 703              		.cfi_def_cfa_offset 20
 704              		@ sp needed
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 19


 705 009a F0BD     		pop	{r4, r5, r6, r7, pc}
 706              		.loc 1 272 1 view .LVU193
 707              		.cfi_endproc
 708              	.LFE7:
 710              		.global	__aeabi_uldivmod
 711              		.section	.text._ntoa_long_long,"ax",%progbits
 712              		.align	1
 713              		.syntax unified
 714              		.thumb
 715              		.thumb_func
 717              	_ntoa_long_long:
 718              	.LVL73:
 719              	.LFB8:
 273:lvgl/src/misc/lv_printf.c **** 
 274:lvgl/src/misc/lv_printf.c **** // internal itoa for 'long long' type
 275:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 276:lvgl/src/misc/lv_printf.c **** static size_t _ntoa_long_long(out_fct_type out, char * buffer, size_t idx, size_t maxlen, unsigned 
 277:lvgl/src/misc/lv_printf.c ****                               bool negative, unsigned long long base, unsigned int prec, unsigned i
 278:lvgl/src/misc/lv_printf.c **** {
 720              		.loc 1 278 1 is_stmt 1 view -0
 721              		.cfi_startproc
 722              		@ args = 36, pretend = 0, frame = 48
 723              		@ frame_needed = 0, uses_anonymous_args = 0
 724              		.loc 1 278 1 is_stmt 0 view .LVU195
 725 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 726              		.cfi_def_cfa_offset 36
 727              		.cfi_offset 4, -36
 728              		.cfi_offset 5, -32
 729              		.cfi_offset 6, -28
 730              		.cfi_offset 7, -24
 731              		.cfi_offset 8, -20
 732              		.cfi_offset 9, -16
 733              		.cfi_offset 10, -12
 734              		.cfi_offset 11, -8
 735              		.cfi_offset 14, -4
 736 0004 95B0     		sub	sp, sp, #84
 737              		.cfi_def_cfa_offset 120
 738 0006 0990     		str	r0, [sp, #36]
 739 0008 0A91     		str	r1, [sp, #40]
 740 000a 0B92     		str	r2, [sp, #44]
 741 000c 9B46     		mov	fp, r3
 742 000e 1E9D     		ldr	r5, [sp, #120]
 743 0010 1F9E     		ldr	r6, [sp, #124]
 744 0012 229F     		ldr	r7, [sp, #136]
 745 0014 DDF88C80 		ldr	r8, [sp, #140]
 746 0018 DDF898A0 		ldr	r10, [sp, #152]
 279:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_NTOA_BUFFER_SIZE];
 747              		.loc 1 279 5 is_stmt 1 view .LVU196
 280:lvgl/src/misc/lv_printf.c ****     size_t len = 0U;
 748              		.loc 1 280 5 view .LVU197
 749              	.LVL74:
 281:lvgl/src/misc/lv_printf.c **** 
 282:lvgl/src/misc/lv_printf.c ****     // no hash for 0 values
 283:lvgl/src/misc/lv_printf.c ****     if(!value) {
 750              		.loc 1 283 5 view .LVU198
 751              		.loc 1 283 7 is_stmt 0 view .LVU199
 752 001c 55EA0603 		orrs	r3, r5, r6
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 20


 753              	.LVL75:
 754              		.loc 1 283 7 view .LVU200
 755 0020 01D1     		bne	.L55
 284:lvgl/src/misc/lv_printf.c ****         flags &= ~FLAGS_HASH;
 756              		.loc 1 284 9 is_stmt 1 view .LVU201
 757              		.loc 1 284 15 is_stmt 0 view .LVU202
 758 0022 2AF0100A 		bic	r10, r10, #16
 759              	.LVL76:
 760              	.L55:
 285:lvgl/src/misc/lv_printf.c ****     }
 286:lvgl/src/misc/lv_printf.c **** 
 287:lvgl/src/misc/lv_printf.c ****     // write if precision != 0 and value is != 0
 288:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION) || value) {
 761              		.loc 1 288 5 is_stmt 1 view .LVU203
 762              		.loc 1 288 7 is_stmt 0 view .LVU204
 763 0026 1AF48064 		ands	r4, r10, #1024
 764 002a 25D0     		beq	.L61
 765              		.loc 1 288 35 discriminator 1 view .LVU205
 766 002c 55EA0603 		orrs	r3, r5, r6
 767 0030 36D0     		beq	.L62
 768 0032 0024     		movs	r4, #0
 769 0034 20E0     		b	.L61
 770              	.LVL77:
 771              	.L67:
 772              	.LBB27:
 289:lvgl/src/misc/lv_printf.c ****         do {
 290:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 291:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 773              		.loc 1 291 24 discriminator 1 view .LVU206
 774 0036 03F13002 		add	r2, r3, #48
 775 003a D2B2     		uxtb	r2, r2
 776              	.L59:
 777              		.loc 1 291 20 discriminator 8 view .LVU207
 778 003c 04F10109 		add	r9, r4, #1
 779              	.LVL78:
 780              		.loc 1 291 24 discriminator 8 view .LVU208
 781 0040 04F15003 		add	r3, r4, #80
 782              	.LVL79:
 783              		.loc 1 291 24 discriminator 8 view .LVU209
 784 0044 0DEB0304 		add	r4, sp, r3
 785 0048 04F8202C 		strb	r2, [r4, #-32]
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 786              		.loc 1 292 13 is_stmt 1 discriminator 8 view .LVU210
 787              		.loc 1 292 19 is_stmt 0 discriminator 8 view .LVU211
 788 004c 3A46     		mov	r2, r7
 789 004e 4346     		mov	r3, r8
 790 0050 2846     		mov	r0, r5
 791 0052 3146     		mov	r1, r6
 792 0054 FFF7FEFF 		bl	__aeabi_uldivmod
 793              	.LVL80:
 794              		.loc 1 292 19 discriminator 8 view .LVU212
 795              	.LBE27:
 293:lvgl/src/misc/lv_printf.c ****         } while(value && (len < PRINTF_NTOA_BUFFER_SIZE));
 796              		.loc 1 293 16 is_stmt 1 discriminator 8 view .LVU213
 797              		.loc 1 293 17 is_stmt 0 discriminator 8 view .LVU214
 798 0058 BD42     		cmp	r5, r7
 799 005a 76EB0803 		sbcs	r3, r6, r8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 21


 800 005e 2CBF     		ite	cs
 801 0060 0123     		movcs	r3, #1
 802 0062 0023     		movcc	r3, #0
 803              		.loc 1 293 23 discriminator 8 view .LVU215
 804 0064 B9F11F0F 		cmp	r9, #31
 805 0068 8CBF     		ite	hi
 806 006a 0023     		movhi	r3, #0
 807 006c 03F00103 		andls	r3, r3, #1
 808              		.loc 1 293 9 discriminator 8 view .LVU216
 809 0070 C3B1     		cbz	r3, .L57
 810              	.LBB28:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 811              		.loc 1 291 20 view .LVU217
 812 0072 4C46     		mov	r4, r9
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 813              		.loc 1 292 19 view .LVU218
 814 0074 0546     		mov	r5, r0
 815 0076 0E46     		mov	r6, r1
 816              	.LVL81:
 817              	.L61:
 292:lvgl/src/misc/lv_printf.c ****             value /= base;
 818              		.loc 1 292 19 view .LVU219
 819              	.LBE28:
 289:lvgl/src/misc/lv_printf.c ****             const char digit = (char)(value % base);
 820              		.loc 1 289 9 is_stmt 1 view .LVU220
 821              	.LBB29:
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 822              		.loc 1 290 13 view .LVU221
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 823              		.loc 1 290 45 is_stmt 0 view .LVU222
 824 0078 3A46     		mov	r2, r7
 825 007a 4346     		mov	r3, r8
 826 007c 2846     		mov	r0, r5
 827 007e 3146     		mov	r1, r6
 828 0080 FFF7FEFF 		bl	__aeabi_uldivmod
 829              	.LVL82:
 290:lvgl/src/misc/lv_printf.c ****             buf[len++] = digit < 10 ? '0' + digit : (flags & FLAGS_UPPERCASE ? 'A' : 'a') + digit -
 830              		.loc 1 290 24 view .LVU223
 831 0084 D3B2     		uxtb	r3, r2
 832              	.LVL83:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 833              		.loc 1 291 13 is_stmt 1 view .LVU224
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 834              		.loc 1 291 24 is_stmt 0 view .LVU225
 835 0086 092B     		cmp	r3, #9
 836 0088 D5D9     		bls	.L67
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 837              		.loc 1 291 91 discriminator 2 view .LVU226
 838 008a 1AF0200F 		tst	r10, #32
 839 008e 05D0     		beq	.L63
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 840              		.loc 1 291 91 view .LVU227
 841 0090 4122     		movs	r2, #65
 842              	.L60:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 843              		.loc 1 291 91 discriminator 7 view .LVU228
 844 0092 1A44     		add	r2, r2, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 22


 845 0094 D2B2     		uxtb	r2, r2
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 846              		.loc 1 291 24 discriminator 7 view .LVU229
 847 0096 0A3A     		subs	r2, r2, #10
 848 0098 D2B2     		uxtb	r2, r2
 849 009a CFE7     		b	.L59
 850              	.L63:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 851              		.loc 1 291 91 view .LVU230
 852 009c 6122     		movs	r2, #97
 853 009e F8E7     		b	.L60
 854              	.LVL84:
 855              	.L62:
 291:lvgl/src/misc/lv_printf.c ****             value /= base;
 856              		.loc 1 291 91 view .LVU231
 857              	.LBE29:
 280:lvgl/src/misc/lv_printf.c **** 
 858              		.loc 1 280 12 view .LVU232
 859 00a0 4FF00009 		mov	r9, #0
 860              	.LVL85:
 861              	.L57:
 294:lvgl/src/misc/lv_printf.c ****     }
 295:lvgl/src/misc/lv_printf.c **** 
 296:lvgl/src/misc/lv_printf.c ****     return _ntoa_format(out, buffer, idx, maxlen, buf, len, negative, (unsigned int)base, prec, wid
 862              		.loc 1 296 5 is_stmt 1 view .LVU233
 863              		.loc 1 296 12 is_stmt 0 view .LVU234
 864 00a4 CDF818A0 		str	r10, [sp, #24]
 865 00a8 259B     		ldr	r3, [sp, #148]
 866 00aa 0593     		str	r3, [sp, #20]
 867 00ac 249B     		ldr	r3, [sp, #144]
 868 00ae 0493     		str	r3, [sp, #16]
 869 00b0 0397     		str	r7, [sp, #12]
 870 00b2 9DF88030 		ldrb	r3, [sp, #128]	@ zero_extendqisi2
 871 00b6 0293     		str	r3, [sp, #8]
 872 00b8 CDF80490 		str	r9, [sp, #4]
 873 00bc 0CAB     		add	r3, sp, #48
 874 00be 0093     		str	r3, [sp]
 875 00c0 5B46     		mov	r3, fp
 876 00c2 0B9A     		ldr	r2, [sp, #44]
 877 00c4 0A99     		ldr	r1, [sp, #40]
 878 00c6 0998     		ldr	r0, [sp, #36]
 879 00c8 FFF7FEFF 		bl	_ntoa_format
 880              	.LVL86:
 297:lvgl/src/misc/lv_printf.c **** }
 881              		.loc 1 297 1 view .LVU235
 882 00cc 15B0     		add	sp, sp, #84
 883              		.cfi_def_cfa_offset 36
 884              		@ sp needed
 885 00ce BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 886              		.loc 1 297 1 view .LVU236
 887              		.cfi_endproc
 888              	.LFE8:
 890              		.section	.text._vsnprintf,"ax",%progbits
 891              		.align	1
 892              		.syntax unified
 893              		.thumb
 894              		.thumb_func
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 23


 896              	_vsnprintf:
 897              	.LVL87:
 898              	.LFB9:
 298:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_LONG_LONG
 299:lvgl/src/misc/lv_printf.c **** 
 300:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 301:lvgl/src/misc/lv_printf.c **** 
 302:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 303:lvgl/src/misc/lv_printf.c **** // forward declaration so that _ftoa can switch to exp notation for values > PRINTF_MAX_FLOAT
 304:lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 305:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags);
 306:lvgl/src/misc/lv_printf.c **** #endif
 307:lvgl/src/misc/lv_printf.c **** 
 308:lvgl/src/misc/lv_printf.c **** // internal ftoa for fixed decimal floating point
 309:lvgl/src/misc/lv_printf.c **** static size_t _ftoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 310:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 311:lvgl/src/misc/lv_printf.c **** {
 312:lvgl/src/misc/lv_printf.c ****     char buf[PRINTF_FTOA_BUFFER_SIZE];
 313:lvgl/src/misc/lv_printf.c ****     size_t len  = 0U;
 314:lvgl/src/misc/lv_printf.c ****     double diff = 0.0;
 315:lvgl/src/misc/lv_printf.c **** 
 316:lvgl/src/misc/lv_printf.c ****     // powers of 10
 317:lvgl/src/misc/lv_printf.c ****     static const double pow10[] = { 1, 10, 100, 1000, 10000, 100000, 1000000, 10000000, 100000000, 
 318:lvgl/src/misc/lv_printf.c **** 
 319:lvgl/src/misc/lv_printf.c ****     // test for special values
 320:lvgl/src/misc/lv_printf.c ****     if(value != value)
 321:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "nan", 3, width, flags);
 322:lvgl/src/misc/lv_printf.c ****     if(value < -DBL_MAX)
 323:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, "fni-", 4, width, flags);
 324:lvgl/src/misc/lv_printf.c ****     if(value > DBL_MAX)
 325:lvgl/src/misc/lv_printf.c ****         return _out_rev(out, buffer, idx, maxlen, (flags & FLAGS_PLUS) ? "fni+" : "fni", (flags & F
 326:lvgl/src/misc/lv_printf.c ****                         flags);
 327:lvgl/src/misc/lv_printf.c **** 
 328:lvgl/src/misc/lv_printf.c ****     // test for very large values
 329:lvgl/src/misc/lv_printf.c ****     // standard printf behavior is to print EVERY whole number digit -- which could be 100s of char
 330:lvgl/src/misc/lv_printf.c ****     if((value > PRINTF_MAX_FLOAT) || (value < -PRINTF_MAX_FLOAT)) {
 331:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 332:lvgl/src/misc/lv_printf.c ****         return _etoa(out, buffer, idx, maxlen, value, prec, width, flags);
 333:lvgl/src/misc/lv_printf.c **** #else
 334:lvgl/src/misc/lv_printf.c ****         return 0U;
 335:lvgl/src/misc/lv_printf.c **** #endif
 336:lvgl/src/misc/lv_printf.c ****     }
 337:lvgl/src/misc/lv_printf.c **** 
 338:lvgl/src/misc/lv_printf.c ****     // test for negative
 339:lvgl/src/misc/lv_printf.c ****     bool negative = false;
 340:lvgl/src/misc/lv_printf.c ****     if(value < 0) {
 341:lvgl/src/misc/lv_printf.c ****         negative = true;
 342:lvgl/src/misc/lv_printf.c ****         value = 0 - value;
 343:lvgl/src/misc/lv_printf.c ****     }
 344:lvgl/src/misc/lv_printf.c **** 
 345:lvgl/src/misc/lv_printf.c ****     // set default precision, if not set explicitly
 346:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 347:lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 348:lvgl/src/misc/lv_printf.c ****     }
 349:lvgl/src/misc/lv_printf.c ****     // limit precision to 9, cause a prec >= 10 can lead to overflow errors
 350:lvgl/src/misc/lv_printf.c ****     while((len < PRINTF_FTOA_BUFFER_SIZE) && (prec > 9U)) {
 351:lvgl/src/misc/lv_printf.c ****         buf[len++] = '0';
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 24


 352:lvgl/src/misc/lv_printf.c ****         prec--;
 353:lvgl/src/misc/lv_printf.c ****     }
 354:lvgl/src/misc/lv_printf.c **** 
 355:lvgl/src/misc/lv_printf.c ****     int whole = (int)value;
 356:lvgl/src/misc/lv_printf.c ****     double tmp = (value - whole) * pow10[prec];
 357:lvgl/src/misc/lv_printf.c ****     unsigned long frac = (unsigned long)tmp;
 358:lvgl/src/misc/lv_printf.c ****     diff = tmp - frac;
 359:lvgl/src/misc/lv_printf.c **** 
 360:lvgl/src/misc/lv_printf.c ****     if(diff > 0.5) {
 361:lvgl/src/misc/lv_printf.c ****         ++frac;
 362:lvgl/src/misc/lv_printf.c ****         // handle rollover, e.g. case 0.99 with prec 1 is 1.0
 363:lvgl/src/misc/lv_printf.c ****         if(frac >= pow10[prec]) {
 364:lvgl/src/misc/lv_printf.c ****             frac = 0;
 365:lvgl/src/misc/lv_printf.c ****             ++whole;
 366:lvgl/src/misc/lv_printf.c ****         }
 367:lvgl/src/misc/lv_printf.c ****     }
 368:lvgl/src/misc/lv_printf.c ****     else if(diff < 0.5) {
 369:lvgl/src/misc/lv_printf.c ****     }
 370:lvgl/src/misc/lv_printf.c ****     else if((frac == 0U) || (frac & 1U)) {
 371:lvgl/src/misc/lv_printf.c ****         // if halfway, round up if odd OR if last digit is 0
 372:lvgl/src/misc/lv_printf.c ****         ++frac;
 373:lvgl/src/misc/lv_printf.c ****     }
 374:lvgl/src/misc/lv_printf.c **** 
 375:lvgl/src/misc/lv_printf.c ****     if(prec == 0U) {
 376:lvgl/src/misc/lv_printf.c ****         diff = value - (double)whole;
 377:lvgl/src/misc/lv_printf.c ****         if((!(diff < 0.5) || (diff > 0.5)) && (whole & 1)) {
 378:lvgl/src/misc/lv_printf.c ****             // exactly 0.5 and ODD, then round up
 379:lvgl/src/misc/lv_printf.c ****             // 1.5 -> 2, but 2.5 -> 2
 380:lvgl/src/misc/lv_printf.c ****             ++whole;
 381:lvgl/src/misc/lv_printf.c ****         }
 382:lvgl/src/misc/lv_printf.c ****     }
 383:lvgl/src/misc/lv_printf.c ****     else {
 384:lvgl/src/misc/lv_printf.c ****         unsigned int count = prec;
 385:lvgl/src/misc/lv_printf.c ****         // now do fractional part, as an unsigned number
 386:lvgl/src/misc/lv_printf.c ****         while(len < PRINTF_FTOA_BUFFER_SIZE) {
 387:lvgl/src/misc/lv_printf.c ****             --count;
 388:lvgl/src/misc/lv_printf.c ****             buf[len++] = (char)(48U + (frac % 10U));
 389:lvgl/src/misc/lv_printf.c ****             if(!(frac /= 10U)) {
 390:lvgl/src/misc/lv_printf.c ****                 break;
 391:lvgl/src/misc/lv_printf.c ****             }
 392:lvgl/src/misc/lv_printf.c ****         }
 393:lvgl/src/misc/lv_printf.c ****         // add extra 0s
 394:lvgl/src/misc/lv_printf.c ****         while((len < PRINTF_FTOA_BUFFER_SIZE) && (count-- > 0U)) {
 395:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 396:lvgl/src/misc/lv_printf.c ****         }
 397:lvgl/src/misc/lv_printf.c ****         if(len < PRINTF_FTOA_BUFFER_SIZE) {
 398:lvgl/src/misc/lv_printf.c ****             // add decimal
 399:lvgl/src/misc/lv_printf.c ****             buf[len++] = '.';
 400:lvgl/src/misc/lv_printf.c ****         }
 401:lvgl/src/misc/lv_printf.c ****     }
 402:lvgl/src/misc/lv_printf.c **** 
 403:lvgl/src/misc/lv_printf.c ****     // do whole part, number is reversed
 404:lvgl/src/misc/lv_printf.c ****     while(len < PRINTF_FTOA_BUFFER_SIZE) {
 405:lvgl/src/misc/lv_printf.c ****         buf[len++] = (char)(48 + (whole % 10));
 406:lvgl/src/misc/lv_printf.c ****         if(!(whole /= 10)) {
 407:lvgl/src/misc/lv_printf.c ****             break;
 408:lvgl/src/misc/lv_printf.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 25


 409:lvgl/src/misc/lv_printf.c ****     }
 410:lvgl/src/misc/lv_printf.c **** 
 411:lvgl/src/misc/lv_printf.c ****     // pad leading zeros
 412:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_LEFT) && (flags & FLAGS_ZEROPAD)) {
 413:lvgl/src/misc/lv_printf.c ****         if(width && (negative || (flags & (FLAGS_PLUS | FLAGS_SPACE)))) {
 414:lvgl/src/misc/lv_printf.c ****             width--;
 415:lvgl/src/misc/lv_printf.c ****         }
 416:lvgl/src/misc/lv_printf.c ****         while((len < width) && (len < PRINTF_FTOA_BUFFER_SIZE)) {
 417:lvgl/src/misc/lv_printf.c ****             buf[len++] = '0';
 418:lvgl/src/misc/lv_printf.c ****         }
 419:lvgl/src/misc/lv_printf.c ****     }
 420:lvgl/src/misc/lv_printf.c **** 
 421:lvgl/src/misc/lv_printf.c ****     if(len < PRINTF_FTOA_BUFFER_SIZE) {
 422:lvgl/src/misc/lv_printf.c ****         if(negative) {
 423:lvgl/src/misc/lv_printf.c ****             buf[len++] = '-';
 424:lvgl/src/misc/lv_printf.c ****         }
 425:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_PLUS) {
 426:lvgl/src/misc/lv_printf.c ****             buf[len++] = '+';  // ignore the space if the '+' exists
 427:lvgl/src/misc/lv_printf.c ****         }
 428:lvgl/src/misc/lv_printf.c ****         else if(flags & FLAGS_SPACE) {
 429:lvgl/src/misc/lv_printf.c ****             buf[len++] = ' ';
 430:lvgl/src/misc/lv_printf.c ****         }
 431:lvgl/src/misc/lv_printf.c ****     }
 432:lvgl/src/misc/lv_printf.c **** 
 433:lvgl/src/misc/lv_printf.c ****     return _out_rev(out, buffer, idx, maxlen, buf, len, width, flags);
 434:lvgl/src/misc/lv_printf.c **** }
 435:lvgl/src/misc/lv_printf.c **** 
 436:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 437:lvgl/src/misc/lv_printf.c **** // internal ftoa variant for exponential floating-point type, contributed by Martijn Jasperse <m.ja
 438:lvgl/src/misc/lv_printf.c **** static size_t _etoa(out_fct_type out, char * buffer, size_t idx, size_t maxlen, double value, unsig
 439:lvgl/src/misc/lv_printf.c ****                     unsigned int width, unsigned int flags)
 440:lvgl/src/misc/lv_printf.c **** {
 441:lvgl/src/misc/lv_printf.c ****     // check for NaN and special values
 442:lvgl/src/misc/lv_printf.c ****     if((value != value) || (value > DBL_MAX) || (value < -DBL_MAX)) {
 443:lvgl/src/misc/lv_printf.c ****         return _ftoa(out, buffer, idx, maxlen, value, prec, width, flags);
 444:lvgl/src/misc/lv_printf.c ****     }
 445:lvgl/src/misc/lv_printf.c **** 
 446:lvgl/src/misc/lv_printf.c ****     // determine the sign
 447:lvgl/src/misc/lv_printf.c ****     const bool negative = value < 0;
 448:lvgl/src/misc/lv_printf.c ****     if(negative) {
 449:lvgl/src/misc/lv_printf.c ****         value = -value;
 450:lvgl/src/misc/lv_printf.c ****     }
 451:lvgl/src/misc/lv_printf.c **** 
 452:lvgl/src/misc/lv_printf.c ****     // default precision
 453:lvgl/src/misc/lv_printf.c ****     if(!(flags & FLAGS_PRECISION)) {
 454:lvgl/src/misc/lv_printf.c ****         prec = PRINTF_DEFAULT_FLOAT_PRECISION;
 455:lvgl/src/misc/lv_printf.c ****     }
 456:lvgl/src/misc/lv_printf.c **** 
 457:lvgl/src/misc/lv_printf.c ****     // determine the decimal exponent
 458:lvgl/src/misc/lv_printf.c ****     // based on the algorithm by David Gay (https://www.ampl.com/netlib/fp/dtoa.c)
 459:lvgl/src/misc/lv_printf.c ****     union {
 460:lvgl/src/misc/lv_printf.c ****         uint64_t U;
 461:lvgl/src/misc/lv_printf.c ****         double   F;
 462:lvgl/src/misc/lv_printf.c ****     } conv;
 463:lvgl/src/misc/lv_printf.c **** 
 464:lvgl/src/misc/lv_printf.c ****     conv.F = value;
 465:lvgl/src/misc/lv_printf.c ****     int exp2 = (int)((conv.U >> 52U) & 0x07FFU) - 1023;           // effectively log2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 26


 466:lvgl/src/misc/lv_printf.c ****     conv.U = (conv.U & ((1ULL << 52U) - 1U)) | (1023ULL << 52U);  // drop the exponent so conv.F is
 467:lvgl/src/misc/lv_printf.c ****     // now approximate log10 from the log2 integer part and an expansion of ln around 1.5
 468:lvgl/src/misc/lv_printf.c ****     int expval = (int)(0.1760912590558 + exp2 * 0.301029995663981 + (conv.F - 1.5) * 0.289529654602
 469:lvgl/src/misc/lv_printf.c ****     // now we want to compute 10^expval but we want to be sure it won't overflow
 470:lvgl/src/misc/lv_printf.c ****     exp2 = (int)(expval * 3.321928094887362 + 0.5);
 471:lvgl/src/misc/lv_printf.c ****     const double z  = expval * 2.302585092994046 - exp2 * 0.6931471805599453;
 472:lvgl/src/misc/lv_printf.c ****     const double z2 = z * z;
 473:lvgl/src/misc/lv_printf.c ****     conv.U = (uint64_t)(exp2 + 1023) << 52U;
 474:lvgl/src/misc/lv_printf.c ****     // compute exp(z) using continued fractions, see https://en.wikipedia.org/wiki/Exponential_func
 475:lvgl/src/misc/lv_printf.c ****     conv.F *= 1 + 2 * z / (2 - z + (z2 / (6 + (z2 / (10 + z2 / 14)))));
 476:lvgl/src/misc/lv_printf.c ****     // correct for rounding errors
 477:lvgl/src/misc/lv_printf.c ****     if(value < conv.F) {
 478:lvgl/src/misc/lv_printf.c ****         expval--;
 479:lvgl/src/misc/lv_printf.c ****         conv.F /= 10;
 480:lvgl/src/misc/lv_printf.c ****     }
 481:lvgl/src/misc/lv_printf.c **** 
 482:lvgl/src/misc/lv_printf.c ****     // the exponent format is "%+03d" and largest value is "307", so set aside 4-5 characters
 483:lvgl/src/misc/lv_printf.c ****     unsigned int minwidth = ((expval < 100) && (expval > -100)) ? 4U : 5U;
 484:lvgl/src/misc/lv_printf.c **** 
 485:lvgl/src/misc/lv_printf.c ****     // in "%g" mode, "prec" is the number of *significant figures* not decimals
 486:lvgl/src/misc/lv_printf.c ****     if(flags & FLAGS_ADAPT_EXP) {
 487:lvgl/src/misc/lv_printf.c ****         // do we want to fall-back to "%f" mode?
 488:lvgl/src/misc/lv_printf.c ****         if((value >= 1e-4) && (value < 1e6)) {
 489:lvgl/src/misc/lv_printf.c ****             if((int)prec > expval) {
 490:lvgl/src/misc/lv_printf.c ****                 prec = (unsigned)((int)prec - expval - 1);
 491:lvgl/src/misc/lv_printf.c ****             }
 492:lvgl/src/misc/lv_printf.c ****             else {
 493:lvgl/src/misc/lv_printf.c ****                 prec = 0;
 494:lvgl/src/misc/lv_printf.c ****             }
 495:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;   // make sure _ftoa respects precision
 496:lvgl/src/misc/lv_printf.c ****             // no characters in exponent
 497:lvgl/src/misc/lv_printf.c ****             minwidth = 0U;
 498:lvgl/src/misc/lv_printf.c ****             expval   = 0;
 499:lvgl/src/misc/lv_printf.c ****         }
 500:lvgl/src/misc/lv_printf.c ****         else {
 501:lvgl/src/misc/lv_printf.c ****             // we use one sigfig for the whole part
 502:lvgl/src/misc/lv_printf.c ****             if((prec > 0) && (flags & FLAGS_PRECISION)) {
 503:lvgl/src/misc/lv_printf.c ****                 --prec;
 504:lvgl/src/misc/lv_printf.c ****             }
 505:lvgl/src/misc/lv_printf.c ****         }
 506:lvgl/src/misc/lv_printf.c ****     }
 507:lvgl/src/misc/lv_printf.c **** 
 508:lvgl/src/misc/lv_printf.c ****     // will everything fit?
 509:lvgl/src/misc/lv_printf.c ****     unsigned int fwidth = width;
 510:lvgl/src/misc/lv_printf.c ****     if(width > minwidth) {
 511:lvgl/src/misc/lv_printf.c ****         // we didn't fall-back so subtract the characters required for the exponent
 512:lvgl/src/misc/lv_printf.c ****         fwidth -= minwidth;
 513:lvgl/src/misc/lv_printf.c ****     }
 514:lvgl/src/misc/lv_printf.c ****     else {
 515:lvgl/src/misc/lv_printf.c ****         // not enough characters, so go back to default sizing
 516:lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 517:lvgl/src/misc/lv_printf.c ****     }
 518:lvgl/src/misc/lv_printf.c ****     if((flags & FLAGS_LEFT) && minwidth) {
 519:lvgl/src/misc/lv_printf.c ****         // if we're padding on the right, DON'T pad the floating part
 520:lvgl/src/misc/lv_printf.c ****         fwidth = 0U;
 521:lvgl/src/misc/lv_printf.c ****     }
 522:lvgl/src/misc/lv_printf.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 27


 523:lvgl/src/misc/lv_printf.c ****     // rescale the float value
 524:lvgl/src/misc/lv_printf.c ****     if(expval) {
 525:lvgl/src/misc/lv_printf.c ****         value /= conv.F;
 526:lvgl/src/misc/lv_printf.c ****     }
 527:lvgl/src/misc/lv_printf.c **** 
 528:lvgl/src/misc/lv_printf.c ****     // output the floating part
 529:lvgl/src/misc/lv_printf.c ****     const size_t start_idx = idx;
 530:lvgl/src/misc/lv_printf.c ****     idx = _ftoa(out, buffer, idx, maxlen, negative ? -value : value, prec, fwidth, flags & ~FLAGS_A
 531:lvgl/src/misc/lv_printf.c **** 
 532:lvgl/src/misc/lv_printf.c ****     // output the exponent part
 533:lvgl/src/misc/lv_printf.c ****     if(minwidth) {
 534:lvgl/src/misc/lv_printf.c ****         // output the exponential symbol
 535:lvgl/src/misc/lv_printf.c ****         out((flags & FLAGS_UPPERCASE) ? 'E' : 'e', buffer, idx++, maxlen);
 536:lvgl/src/misc/lv_printf.c ****         // output the exponent value
 537:lvgl/src/misc/lv_printf.c ****         idx = _ntoa_long(out, buffer, idx, maxlen, (expval < 0) ? -expval : expval, expval < 0, 10,
 538:lvgl/src/misc/lv_printf.c ****                          FLAGS_ZEROPAD | FLAGS_PLUS);
 539:lvgl/src/misc/lv_printf.c ****         // might need to right-pad spaces
 540:lvgl/src/misc/lv_printf.c ****         if(flags & FLAGS_LEFT) {
 541:lvgl/src/misc/lv_printf.c ****             while(idx - start_idx < width) out(' ', buffer, idx++, maxlen);
 542:lvgl/src/misc/lv_printf.c ****         }
 543:lvgl/src/misc/lv_printf.c ****     }
 544:lvgl/src/misc/lv_printf.c ****     return idx;
 545:lvgl/src/misc/lv_printf.c **** }
 546:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 547:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 548:lvgl/src/misc/lv_printf.c **** 
 549:lvgl/src/misc/lv_printf.c **** // internal vsnprintf
 550:lvgl/src/misc/lv_printf.c **** static int _vsnprintf(out_fct_type out, char * buffer, const size_t maxlen, const char * format, va
 551:lvgl/src/misc/lv_printf.c **** {
 899              		.loc 1 551 1 is_stmt 1 view -0
 900              		.cfi_startproc
 901              		@ args = 4, pretend = 0, frame = 24
 902              		@ frame_needed = 0, uses_anonymous_args = 0
 903              		.loc 1 551 1 is_stmt 0 view .LVU238
 904 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 905              		.cfi_def_cfa_offset 36
 906              		.cfi_offset 4, -36
 907              		.cfi_offset 5, -32
 908              		.cfi_offset 6, -28
 909              		.cfi_offset 7, -24
 910              		.cfi_offset 8, -20
 911              		.cfi_offset 9, -16
 912              		.cfi_offset 10, -12
 913              		.cfi_offset 11, -8
 914              		.cfi_offset 14, -4
 915 0004 91B0     		sub	sp, sp, #68
 916              		.cfi_def_cfa_offset 104
 917 0006 0746     		mov	r7, r0
 918 0008 1646     		mov	r6, r2
 919 000a 0D93     		str	r3, [sp, #52]
 552:lvgl/src/misc/lv_printf.c ****     unsigned int flags, width, precision, n;
 920              		.loc 1 552 5 is_stmt 1 view .LVU239
 553:lvgl/src/misc/lv_printf.c ****     size_t idx = 0U;
 921              		.loc 1 553 5 view .LVU240
 922              	.LVL88:
 554:lvgl/src/misc/lv_printf.c **** 
 555:lvgl/src/misc/lv_printf.c ****     if(!buffer) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 28


 923              		.loc 1 555 5 view .LVU241
 924              		.loc 1 555 7 is_stmt 0 view .LVU242
 925 000c 8B46     		mov	fp, r1
 926 000e 0029     		cmp	r1, #0
 927 0010 00F0E282 		beq	.L161
 928              	.L69:
 929              	.LVL89:
 556:lvgl/src/misc/lv_printf.c ****         // use null output function
 557:lvgl/src/misc/lv_printf.c ****         out = _out_null;
 558:lvgl/src/misc/lv_printf.c ****     }
 559:lvgl/src/misc/lv_printf.c **** 
 560:lvgl/src/misc/lv_printf.c ****     while(*format) {
 561:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 562:lvgl/src/misc/lv_printf.c ****         if(*format != '%') {
 563:lvgl/src/misc/lv_printf.c ****             // no
 564:lvgl/src/misc/lv_printf.c ****             out(*format, buffer, idx++, maxlen);
 565:lvgl/src/misc/lv_printf.c ****             format++;
 566:lvgl/src/misc/lv_printf.c ****             continue;
 567:lvgl/src/misc/lv_printf.c ****         }
 568:lvgl/src/misc/lv_printf.c ****         else {
 569:lvgl/src/misc/lv_printf.c ****             // yes, evaluate it
 570:lvgl/src/misc/lv_printf.c ****             format++;
 571:lvgl/src/misc/lv_printf.c ****         }
 572:lvgl/src/misc/lv_printf.c **** 
 573:lvgl/src/misc/lv_printf.c ****         // evaluate flags
 574:lvgl/src/misc/lv_printf.c ****         flags = 0U;
 575:lvgl/src/misc/lv_printf.c ****         do {
 576:lvgl/src/misc/lv_printf.c ****             switch(*format) {
 577:lvgl/src/misc/lv_printf.c ****                 case '0':
 578:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_ZEROPAD;
 579:lvgl/src/misc/lv_printf.c ****                     format++;
 580:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 581:lvgl/src/misc/lv_printf.c ****                     break;
 582:lvgl/src/misc/lv_printf.c ****                 case '-':
 583:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LEFT;
 584:lvgl/src/misc/lv_printf.c ****                     format++;
 585:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 586:lvgl/src/misc/lv_printf.c ****                     break;
 587:lvgl/src/misc/lv_printf.c ****                 case '+':
 588:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_PLUS;
 589:lvgl/src/misc/lv_printf.c ****                     format++;
 590:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 591:lvgl/src/misc/lv_printf.c ****                     break;
 592:lvgl/src/misc/lv_printf.c ****                 case ' ':
 593:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_SPACE;
 594:lvgl/src/misc/lv_printf.c ****                     format++;
 595:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 596:lvgl/src/misc/lv_printf.c ****                     break;
 597:lvgl/src/misc/lv_printf.c ****                 case '#':
 598:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_HASH;
 599:lvgl/src/misc/lv_printf.c ****                     format++;
 600:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 601:lvgl/src/misc/lv_printf.c ****                     break;
 602:lvgl/src/misc/lv_printf.c ****                 default :
 603:lvgl/src/misc/lv_printf.c ****                     n = 0U;
 604:lvgl/src/misc/lv_printf.c ****                     break;
 605:lvgl/src/misc/lv_printf.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 29


 606:lvgl/src/misc/lv_printf.c ****         } while(n);
 607:lvgl/src/misc/lv_printf.c **** 
 608:lvgl/src/misc/lv_printf.c ****         // evaluate width field
 609:lvgl/src/misc/lv_printf.c ****         width = 0U;
 610:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 611:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 612:lvgl/src/misc/lv_printf.c ****         }
 613:lvgl/src/misc/lv_printf.c ****         else if(*format == '*') {
 614:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 615:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 616:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 617:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 618:lvgl/src/misc/lv_printf.c ****             }
 619:lvgl/src/misc/lv_printf.c ****             else {
 620:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int)w;
 621:lvgl/src/misc/lv_printf.c ****             }
 622:lvgl/src/misc/lv_printf.c ****             format++;
 623:lvgl/src/misc/lv_printf.c ****         }
 624:lvgl/src/misc/lv_printf.c **** 
 625:lvgl/src/misc/lv_printf.c ****         // evaluate precision field
 626:lvgl/src/misc/lv_printf.c ****         precision = 0U;
 627:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 628:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 629:lvgl/src/misc/lv_printf.c ****             format++;
 630:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 631:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 632:lvgl/src/misc/lv_printf.c ****             }
 633:lvgl/src/misc/lv_printf.c ****             else if(*format == '*') {
 634:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 635:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 636:lvgl/src/misc/lv_printf.c ****                 format++;
 637:lvgl/src/misc/lv_printf.c ****             }
 638:lvgl/src/misc/lv_printf.c ****         }
 639:lvgl/src/misc/lv_printf.c **** 
 640:lvgl/src/misc/lv_printf.c ****         // evaluate length field
 641:lvgl/src/misc/lv_printf.c ****         switch(*format) {
 642:lvgl/src/misc/lv_printf.c ****             case 'l' :
 643:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LONG;
 644:lvgl/src/misc/lv_printf.c ****                 format++;
 645:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 646:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 647:lvgl/src/misc/lv_printf.c ****                     format++;
 648:lvgl/src/misc/lv_printf.c ****                 }
 649:lvgl/src/misc/lv_printf.c ****                 break;
 650:lvgl/src/misc/lv_printf.c ****             case 'h' :
 651:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_SHORT;
 652:lvgl/src/misc/lv_printf.c ****                 format++;
 653:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 654:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 655:lvgl/src/misc/lv_printf.c ****                     format++;
 656:lvgl/src/misc/lv_printf.c ****                 }
 657:lvgl/src/misc/lv_printf.c ****                 break;
 658:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_PTRDIFF_T)
 659:lvgl/src/misc/lv_printf.c ****             case 't' :
 660:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(ptrdiff_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 661:lvgl/src/misc/lv_printf.c ****                 format++;
 662:lvgl/src/misc/lv_printf.c ****                 break;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 30


 663:lvgl/src/misc/lv_printf.c **** #endif
 664:lvgl/src/misc/lv_printf.c ****             case 'j' :
 665:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(intmax_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 666:lvgl/src/misc/lv_printf.c ****                 format++;
 667:lvgl/src/misc/lv_printf.c ****                 break;
 668:lvgl/src/misc/lv_printf.c ****             case 'z' :
 669:lvgl/src/misc/lv_printf.c ****                 flags |= (sizeof(size_t) == sizeof(long) ? FLAGS_LONG : FLAGS_LONG_LONG);
 670:lvgl/src/misc/lv_printf.c ****                 format++;
 671:lvgl/src/misc/lv_printf.c ****                 break;
 672:lvgl/src/misc/lv_printf.c ****             default :
 673:lvgl/src/misc/lv_printf.c ****                 break;
 674:lvgl/src/misc/lv_printf.c ****         }
 675:lvgl/src/misc/lv_printf.c **** 
 676:lvgl/src/misc/lv_printf.c ****         // evaluate specifier
 677:lvgl/src/misc/lv_printf.c ****         switch(*format) {
 678:lvgl/src/misc/lv_printf.c ****             case 'd' :
 679:lvgl/src/misc/lv_printf.c ****             case 'i' :
 680:lvgl/src/misc/lv_printf.c ****             case 'u' :
 681:lvgl/src/misc/lv_printf.c ****             case 'x' :
 682:lvgl/src/misc/lv_printf.c ****             case 'X' :
 683:lvgl/src/misc/lv_printf.c ****             case 'p' :
 684:lvgl/src/misc/lv_printf.c ****             case 'P' :
 685:lvgl/src/misc/lv_printf.c ****             case 'o' :
 686:lvgl/src/misc/lv_printf.c ****             case 'b' : {
 687:lvgl/src/misc/lv_printf.c ****                     // set the base
 688:lvgl/src/misc/lv_printf.c ****                     unsigned int base;
 689:lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 690:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 691:lvgl/src/misc/lv_printf.c ****                     }
 692:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'p' || *format == 'P') {
 693:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 694:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 695:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 696:lvgl/src/misc/lv_printf.c ****                         if(sizeof(uintptr_t) == sizeof(long long))
 697:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 698:lvgl/src/misc/lv_printf.c ****                         else
 699:lvgl/src/misc/lv_printf.c **** #endif
 700:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG;
 701:lvgl/src/misc/lv_printf.c **** 
 702:lvgl/src/misc/lv_printf.c ****                         if(*(format + 1) == 'V')
 703:lvgl/src/misc/lv_printf.c ****                             format++;
 704:lvgl/src/misc/lv_printf.c ****                     }
 705:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'o') {
 706:lvgl/src/misc/lv_printf.c ****                         base =  8U;
 707:lvgl/src/misc/lv_printf.c ****                     }
 708:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'b') {
 709:lvgl/src/misc/lv_printf.c ****                         base =  2U;
 710:lvgl/src/misc/lv_printf.c ****                     }
 711:lvgl/src/misc/lv_printf.c ****                     else {
 712:lvgl/src/misc/lv_printf.c ****                         base = 10U;
 713:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 714:lvgl/src/misc/lv_printf.c ****                     }
 715:lvgl/src/misc/lv_printf.c ****                     // uppercase
 716:lvgl/src/misc/lv_printf.c ****                     if(*format == 'X' || *format == 'P') {
 717:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 718:lvgl/src/misc/lv_printf.c ****                     }
 719:lvgl/src/misc/lv_printf.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 31


 720:lvgl/src/misc/lv_printf.c ****                     // no plus or space flag for u, x, X, o, b
 721:lvgl/src/misc/lv_printf.c ****                     if((*format != 'i') && (*format != 'd')) {
 722:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 723:lvgl/src/misc/lv_printf.c ****                     }
 724:lvgl/src/misc/lv_printf.c **** 
 725:lvgl/src/misc/lv_printf.c ****                     // ignore '0' flag when precision is given
 726:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 727:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 728:lvgl/src/misc/lv_printf.c ****                     }
 729:lvgl/src/misc/lv_printf.c **** 
 730:lvgl/src/misc/lv_printf.c ****                     // convert the integer
 731:lvgl/src/misc/lv_printf.c ****                     if((*format == 'i') || (*format == 'd')) {
 732:lvgl/src/misc/lv_printf.c ****                         // signed
 733:lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
 734:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 735:lvgl/src/misc/lv_printf.c ****                             const long long value = va_arg(va, long long);
 736:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 737:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 738:lvgl/src/misc/lv_printf.c **** #endif
 739:lvgl/src/misc/lv_printf.c ****                         }
 740:lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 741:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 742:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 743:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 744:lvgl/src/misc/lv_printf.c ****                         }
 745:lvgl/src/misc/lv_printf.c ****                         else {
 746:lvgl/src/misc/lv_printf.c ****                             const int value = (flags & FLAGS_CHAR) ? (char)va_arg(va, int) : (flags
 747:lvgl/src/misc/lv_printf.c ****                                                                                                    
 748:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 749:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 750:lvgl/src/misc/lv_printf.c ****                         }
 751:lvgl/src/misc/lv_printf.c ****                     }
 752:lvgl/src/misc/lv_printf.c ****                     else if(*format == 'V') {
 753:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 754:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 755:lvgl/src/misc/lv_printf.c **** 
 756:lvgl/src/misc/lv_printf.c ****                         va_copy(copy, *vaf->va);
 757:lvgl/src/misc/lv_printf.c ****                         idx += _vsnprintf(out, buffer + idx, maxlen - idx, vaf->fmt, copy);
 758:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 759:lvgl/src/misc/lv_printf.c ****                     }
 760:lvgl/src/misc/lv_printf.c ****                     else {
 761:lvgl/src/misc/lv_printf.c ****                         // unsigned
 762:lvgl/src/misc/lv_printf.c ****                         if(flags & FLAGS_LONG_LONG) {
 763:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 764:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, va_arg(va, unsigned lon
 765:lvgl/src/misc/lv_printf.c **** #endif
 766:lvgl/src/misc/lv_printf.c ****                         }
 767:lvgl/src/misc/lv_printf.c ****                         else if(flags & FLAGS_LONG) {
 768:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 769:lvgl/src/misc/lv_printf.c ****                         }
 770:lvgl/src/misc/lv_printf.c ****                         else {
 771:lvgl/src/misc/lv_printf.c ****                             const unsigned int value = (flags & FLAGS_CHAR) ? (unsigned char)va_arg
 772:lvgl/src/misc/lv_printf.c ****                                                                                                    
 773:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 774:lvgl/src/misc/lv_printf.c ****                         }
 775:lvgl/src/misc/lv_printf.c ****                     }
 776:lvgl/src/misc/lv_printf.c ****                     format++;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 32


 777:lvgl/src/misc/lv_printf.c ****                     break;
 778:lvgl/src/misc/lv_printf.c ****                 }
 779:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_FLOAT)
 780:lvgl/src/misc/lv_printf.c ****             case 'f' :
 781:lvgl/src/misc/lv_printf.c ****             case 'F' :
 782:lvgl/src/misc/lv_printf.c ****                 if(*format == 'F') flags |= FLAGS_UPPERCASE;
 783:lvgl/src/misc/lv_printf.c ****                 idx = _ftoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 784:lvgl/src/misc/lv_printf.c ****                 format++;
 785:lvgl/src/misc/lv_printf.c ****                 break;
 786:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_EXPONENTIAL)
 787:lvgl/src/misc/lv_printf.c ****             case 'e':
 788:lvgl/src/misc/lv_printf.c ****             case 'E':
 789:lvgl/src/misc/lv_printf.c ****             case 'g':
 790:lvgl/src/misc/lv_printf.c ****             case 'G':
 791:lvgl/src/misc/lv_printf.c ****                 if((*format == 'g') || (*format == 'G')) flags |= FLAGS_ADAPT_EXP;
 792:lvgl/src/misc/lv_printf.c ****                 if((*format == 'E') || (*format == 'G')) flags |= FLAGS_UPPERCASE;
 793:lvgl/src/misc/lv_printf.c ****                 idx = _etoa(out, buffer, idx, maxlen, va_arg(va, double), precision, width, flags);
 794:lvgl/src/misc/lv_printf.c ****                 format++;
 795:lvgl/src/misc/lv_printf.c ****                 break;
 796:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_EXPONENTIAL
 797:lvgl/src/misc/lv_printf.c **** #endif  // PRINTF_SUPPORT_FLOAT
 798:lvgl/src/misc/lv_printf.c ****             case 'c' : {
 799:lvgl/src/misc/lv_printf.c ****                     unsigned int l = 1U;
 800:lvgl/src/misc/lv_printf.c ****                     // pre padding
 801:lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 802:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 803:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 804:lvgl/src/misc/lv_printf.c ****                         }
 805:lvgl/src/misc/lv_printf.c ****                     }
 806:lvgl/src/misc/lv_printf.c ****                     // char output
 807:lvgl/src/misc/lv_printf.c ****                     out((char)va_arg(va, int), buffer, idx++, maxlen);
 808:lvgl/src/misc/lv_printf.c ****                     // post padding
 809:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 810:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 811:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 812:lvgl/src/misc/lv_printf.c ****                         }
 813:lvgl/src/misc/lv_printf.c ****                     }
 814:lvgl/src/misc/lv_printf.c ****                     format++;
 815:lvgl/src/misc/lv_printf.c ****                     break;
 816:lvgl/src/misc/lv_printf.c ****                 }
 817:lvgl/src/misc/lv_printf.c **** 
 818:lvgl/src/misc/lv_printf.c ****             case 's' : {
 819:lvgl/src/misc/lv_printf.c ****                     const char * p = va_arg(va, char *);
 820:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 821:lvgl/src/misc/lv_printf.c ****                     // pre padding
 822:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_PRECISION) {
 823:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 824:lvgl/src/misc/lv_printf.c ****                     }
 825:lvgl/src/misc/lv_printf.c ****                     if(!(flags & FLAGS_LEFT)) {
 826:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 827:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 828:lvgl/src/misc/lv_printf.c ****                         }
 829:lvgl/src/misc/lv_printf.c ****                     }
 830:lvgl/src/misc/lv_printf.c ****                     // string output
 831:lvgl/src/misc/lv_printf.c ****                     while((*p != 0) && (!(flags & FLAGS_PRECISION) || precision--)) {
 832:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 833:lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 33


 834:lvgl/src/misc/lv_printf.c ****                     // post padding
 835:lvgl/src/misc/lv_printf.c ****                     if(flags & FLAGS_LEFT) {
 836:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 837:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 838:lvgl/src/misc/lv_printf.c ****                         }
 839:lvgl/src/misc/lv_printf.c ****                     }
 840:lvgl/src/misc/lv_printf.c ****                     format++;
 841:lvgl/src/misc/lv_printf.c ****                     break;
 842:lvgl/src/misc/lv_printf.c ****                 }
 843:lvgl/src/misc/lv_printf.c **** 
 844:lvgl/src/misc/lv_printf.c ****             case '%' :
 845:lvgl/src/misc/lv_printf.c ****                 out('%', buffer, idx++, maxlen);
 930              		.loc 1 845 17 view .LVU243
 931 0014 0024     		movs	r4, #0
 932              	.LVL90:
 933              	.L142:
 560:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 934              		.loc 1 560 10 is_stmt 1 view .LVU244
 560:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 935              		.loc 1 560 11 is_stmt 0 view .LVU245
 936 0016 0D9B     		ldr	r3, [sp, #52]
 937 0018 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 560:lvgl/src/misc/lv_printf.c ****         // format specifier?  %[flags][width][.precision][length]
 938              		.loc 1 560 10 view .LVU246
 939 001a 0028     		cmp	r0, #0
 940 001c 00F0DE82 		beq	.L162
 562:lvgl/src/misc/lv_printf.c ****             // no
 941              		.loc 1 562 9 is_stmt 1 view .LVU247
 562:lvgl/src/misc/lv_printf.c ****             // no
 942              		.loc 1 562 11 is_stmt 0 view .LVU248
 943 0020 2528     		cmp	r0, #37
 944 0022 09D0     		beq	.L71
 564:lvgl/src/misc/lv_printf.c ****             format++;
 945              		.loc 1 564 13 is_stmt 1 view .LVU249
 946 0024 651C     		adds	r5, r4, #1
 947              	.LVL91:
 564:lvgl/src/misc/lv_printf.c ****             format++;
 948              		.loc 1 564 13 is_stmt 0 view .LVU250
 949 0026 3346     		mov	r3, r6
 950 0028 2246     		mov	r2, r4
 951 002a 5946     		mov	r1, fp
 952 002c B847     		blx	r7
 953              	.LVL92:
 565:lvgl/src/misc/lv_printf.c ****             continue;
 954              		.loc 1 565 13 is_stmt 1 view .LVU251
 565:lvgl/src/misc/lv_printf.c ****             continue;
 955              		.loc 1 565 19 is_stmt 0 view .LVU252
 956 002e 0D9B     		ldr	r3, [sp, #52]
 957 0030 0133     		adds	r3, r3, #1
 958 0032 0D93     		str	r3, [sp, #52]
 566:lvgl/src/misc/lv_printf.c ****         }
 959              		.loc 1 566 13 is_stmt 1 view .LVU253
 564:lvgl/src/misc/lv_printf.c ****             format++;
 960              		.loc 1 564 13 is_stmt 0 view .LVU254
 961 0034 2C46     		mov	r4, r5
 566:lvgl/src/misc/lv_printf.c ****         }
 962              		.loc 1 566 13 view .LVU255
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 34


 963 0036 EEE7     		b	.L142
 964              	.LVL93:
 965              	.L71:
 570:lvgl/src/misc/lv_printf.c ****         }
 966              		.loc 1 570 13 is_stmt 1 view .LVU256
 570:lvgl/src/misc/lv_printf.c ****         }
 967              		.loc 1 570 19 is_stmt 0 view .LVU257
 968 0038 0133     		adds	r3, r3, #1
 969 003a 0D93     		str	r3, [sp, #52]
 574:lvgl/src/misc/lv_printf.c ****         do {
 970              		.loc 1 574 9 is_stmt 1 view .LVU258
 971              	.LVL94:
 574:lvgl/src/misc/lv_printf.c ****         do {
 972              		.loc 1 574 15 is_stmt 0 view .LVU259
 973 003c 0025     		movs	r5, #0
 974              	.LVL95:
 975              	.L73:
 575:lvgl/src/misc/lv_printf.c ****             switch(*format) {
 976              		.loc 1 575 9 is_stmt 1 view .LVU260
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 977              		.loc 1 576 13 view .LVU261
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 978              		.loc 1 576 20 is_stmt 0 view .LVU262
 979 003e 0D9B     		ldr	r3, [sp, #52]
 980 0040 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 576:lvgl/src/misc/lv_printf.c ****                 case '0':
 981              		.loc 1 576 13 view .LVU263
 982 0042 A1F12002 		sub	r2, r1, #32
 983 0046 102A     		cmp	r2, #16
 984 0048 0AD8     		bhi	.L74
 985 004a DFE802F0 		tbb	[pc, r2]
 986              	.L76:
 987 004e 38       		.byte	(.L80-.L76)/2
 988 004f 09       		.byte	(.L74-.L76)/2
 989 0050 09       		.byte	(.L74-.L76)/2
 990 0051 3D       		.byte	(.L79-.L76)/2
 991 0052 09       		.byte	(.L74-.L76)/2
 992 0053 09       		.byte	(.L74-.L76)/2
 993 0054 09       		.byte	(.L74-.L76)/2
 994 0055 09       		.byte	(.L74-.L76)/2
 995 0056 09       		.byte	(.L74-.L76)/2
 996 0057 09       		.byte	(.L74-.L76)/2
 997 0058 09       		.byte	(.L74-.L76)/2
 998 0059 33       		.byte	(.L78-.L76)/2
 999 005a 09       		.byte	(.L74-.L76)/2
 1000 005b 2E       		.byte	(.L77-.L76)/2
 1001 005c 09       		.byte	(.L74-.L76)/2
 1002 005d 09       		.byte	(.L74-.L76)/2
 1003 005e 29       		.byte	(.L75-.L76)/2
 1004 005f 00       		.p2align 1
 1005              	.L74:
 1006              	.LVL96:
 606:lvgl/src/misc/lv_printf.c **** 
 1007              		.loc 1 606 16 is_stmt 1 view .LVU264
 609:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 1008              		.loc 1 609 9 view .LVU265
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 35


 1009              		.loc 1 610 9 view .LVU266
 1010              	.LBB30:
 1011              	.LBI30:
 152:lvgl/src/misc/lv_printf.c **** {
 1012              		.loc 1 152 20 view .LVU267
 1013              	.LBB31:
 154:lvgl/src/misc/lv_printf.c **** }
 1014              		.loc 1 154 5 view .LVU268
 154:lvgl/src/misc/lv_printf.c **** }
 1015              		.loc 1 154 24 is_stmt 0 view .LVU269
 1016 0060 A1F13003 		sub	r3, r1, #48
 1017 0064 DBB2     		uxtb	r3, r3
 1018              	.LVL97:
 154:lvgl/src/misc/lv_printf.c **** }
 1019              		.loc 1 154 24 view .LVU270
 1020              	.LBE31:
 1021              	.LBE30:
 610:lvgl/src/misc/lv_printf.c ****             width = _atoi(&format);
 1022              		.loc 1 610 11 view .LVU271
 1023 0066 092B     		cmp	r3, #9
 1024 0068 33D9     		bls	.L163
 613:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1025              		.loc 1 613 14 is_stmt 1 view .LVU272
 613:lvgl/src/misc/lv_printf.c ****             const int w = va_arg(va, int);
 1026              		.loc 1 613 16 is_stmt 0 view .LVU273
 1027 006a 2A29     		cmp	r1, #42
 1028 006c 36D0     		beq	.L164
 609:lvgl/src/misc/lv_printf.c ****         if(_is_digit(*format)) {
 1029              		.loc 1 609 15 view .LVU274
 1030 006e 0023     		movs	r3, #0
 1031 0070 0A93     		str	r3, [sp, #40]
 1032              	.LVL98:
 1033              	.L84:
 626:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1034              		.loc 1 626 9 is_stmt 1 view .LVU275
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1035              		.loc 1 627 9 view .LVU276
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1036              		.loc 1 627 12 is_stmt 0 view .LVU277
 1037 0072 0D9B     		ldr	r3, [sp, #52]
 1038 0074 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 627:lvgl/src/misc/lv_printf.c ****             flags |= FLAGS_PRECISION;
 1039              		.loc 1 627 11 view .LVU278
 1040 0076 2E2A     		cmp	r2, #46
 1041 0078 40D0     		beq	.L165
 626:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1042              		.loc 1 626 19 view .LVU279
 1043 007a 4FF0000A 		mov	r10, #0
 1044              	.LVL99:
 1045              	.L87:
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
 1046              		.loc 1 641 9 is_stmt 1 view .LVU280
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
 1047              		.loc 1 641 16 is_stmt 0 view .LVU281
 1048 007e 0D9A     		ldr	r2, [sp, #52]
 1049 0080 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 641:lvgl/src/misc/lv_printf.c ****             case 'l' :
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 36


 1050              		.loc 1 641 9 view .LVU282
 1051 0082 683B     		subs	r3, r3, #104
 1052 0084 122B     		cmp	r3, #18
 1053 0086 77D8     		bhi	.L89
 1054 0088 DFE803F0 		tbb	[pc, r3]
 1055              	.L91:
 1056 008c 64       		.byte	(.L95-.L91)/2
 1057 008d 76       		.byte	(.L89-.L91)/2
 1058 008e D3       		.byte	(.L94-.L91)/2
 1059 008f 76       		.byte	(.L89-.L91)/2
 1060 0090 56       		.byte	(.L93-.L91)/2
 1061 0091 76       		.byte	(.L89-.L91)/2
 1062 0092 76       		.byte	(.L89-.L91)/2
 1063 0093 76       		.byte	(.L89-.L91)/2
 1064 0094 76       		.byte	(.L89-.L91)/2
 1065 0095 76       		.byte	(.L89-.L91)/2
 1066 0096 76       		.byte	(.L89-.L91)/2
 1067 0097 76       		.byte	(.L89-.L91)/2
 1068 0098 72       		.byte	(.L92-.L91)/2
 1069 0099 76       		.byte	(.L89-.L91)/2
 1070 009a 76       		.byte	(.L89-.L91)/2
 1071 009b 76       		.byte	(.L89-.L91)/2
 1072 009c 76       		.byte	(.L89-.L91)/2
 1073 009d 76       		.byte	(.L89-.L91)/2
 1074 009e D8       		.byte	(.L90-.L91)/2
 1075              	.LVL100:
 1076 009f 00       		.p2align 1
 1077              	.L75:
 578:lvgl/src/misc/lv_printf.c ****                     format++;
 1078              		.loc 1 578 21 is_stmt 1 view .LVU283
 578:lvgl/src/misc/lv_printf.c ****                     format++;
 1079              		.loc 1 578 27 is_stmt 0 view .LVU284
 1080 00a0 45F00105 		orr	r5, r5, #1
 1081              	.LVL101:
 579:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1082              		.loc 1 579 21 is_stmt 1 view .LVU285
 579:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1083              		.loc 1 579 27 is_stmt 0 view .LVU286
 1084 00a4 0133     		adds	r3, r3, #1
 1085 00a6 0D93     		str	r3, [sp, #52]
 580:lvgl/src/misc/lv_printf.c ****                     break;
 1086              		.loc 1 580 21 is_stmt 1 view .LVU287
 1087              	.LVL102:
 581:lvgl/src/misc/lv_printf.c ****                 case '-':
 1088              		.loc 1 581 21 view .LVU288
 606:lvgl/src/misc/lv_printf.c **** 
 1089              		.loc 1 606 16 view .LVU289
 1090 00a8 C9E7     		b	.L73
 1091              	.LVL103:
 1092              	.L77:
 583:lvgl/src/misc/lv_printf.c ****                     format++;
 1093              		.loc 1 583 21 view .LVU290
 583:lvgl/src/misc/lv_printf.c ****                     format++;
 1094              		.loc 1 583 27 is_stmt 0 view .LVU291
 1095 00aa 45F00205 		orr	r5, r5, #2
 1096              	.LVL104:
 584:lvgl/src/misc/lv_printf.c ****                     n = 1U;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 37


 1097              		.loc 1 584 21 is_stmt 1 view .LVU292
 584:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1098              		.loc 1 584 27 is_stmt 0 view .LVU293
 1099 00ae 0133     		adds	r3, r3, #1
 1100 00b0 0D93     		str	r3, [sp, #52]
 585:lvgl/src/misc/lv_printf.c ****                     break;
 1101              		.loc 1 585 21 is_stmt 1 view .LVU294
 1102              	.LVL105:
 586:lvgl/src/misc/lv_printf.c ****                 case '+':
 1103              		.loc 1 586 21 view .LVU295
 606:lvgl/src/misc/lv_printf.c **** 
 1104              		.loc 1 606 16 view .LVU296
 1105 00b2 C4E7     		b	.L73
 1106              	.LVL106:
 1107              	.L78:
 588:lvgl/src/misc/lv_printf.c ****                     format++;
 1108              		.loc 1 588 21 view .LVU297
 588:lvgl/src/misc/lv_printf.c ****                     format++;
 1109              		.loc 1 588 27 is_stmt 0 view .LVU298
 1110 00b4 45F00405 		orr	r5, r5, #4
 1111              	.LVL107:
 589:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1112              		.loc 1 589 21 is_stmt 1 view .LVU299
 589:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1113              		.loc 1 589 27 is_stmt 0 view .LVU300
 1114 00b8 0133     		adds	r3, r3, #1
 1115 00ba 0D93     		str	r3, [sp, #52]
 590:lvgl/src/misc/lv_printf.c ****                     break;
 1116              		.loc 1 590 21 is_stmt 1 view .LVU301
 1117              	.LVL108:
 591:lvgl/src/misc/lv_printf.c ****                 case ' ':
 1118              		.loc 1 591 21 view .LVU302
 606:lvgl/src/misc/lv_printf.c **** 
 1119              		.loc 1 606 16 view .LVU303
 1120 00bc BFE7     		b	.L73
 1121              	.LVL109:
 1122              	.L80:
 593:lvgl/src/misc/lv_printf.c ****                     format++;
 1123              		.loc 1 593 21 view .LVU304
 593:lvgl/src/misc/lv_printf.c ****                     format++;
 1124              		.loc 1 593 27 is_stmt 0 view .LVU305
 1125 00be 45F00805 		orr	r5, r5, #8
 1126              	.LVL110:
 594:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1127              		.loc 1 594 21 is_stmt 1 view .LVU306
 594:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1128              		.loc 1 594 27 is_stmt 0 view .LVU307
 1129 00c2 0133     		adds	r3, r3, #1
 1130 00c4 0D93     		str	r3, [sp, #52]
 595:lvgl/src/misc/lv_printf.c ****                     break;
 1131              		.loc 1 595 21 is_stmt 1 view .LVU308
 1132              	.LVL111:
 596:lvgl/src/misc/lv_printf.c ****                 case '#':
 1133              		.loc 1 596 21 view .LVU309
 606:lvgl/src/misc/lv_printf.c **** 
 1134              		.loc 1 606 16 view .LVU310
 1135 00c6 BAE7     		b	.L73
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 38


 1136              	.LVL112:
 1137              	.L79:
 598:lvgl/src/misc/lv_printf.c ****                     format++;
 1138              		.loc 1 598 21 view .LVU311
 598:lvgl/src/misc/lv_printf.c ****                     format++;
 1139              		.loc 1 598 27 is_stmt 0 view .LVU312
 1140 00c8 45F01005 		orr	r5, r5, #16
 1141              	.LVL113:
 599:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1142              		.loc 1 599 21 is_stmt 1 view .LVU313
 599:lvgl/src/misc/lv_printf.c ****                     n = 1U;
 1143              		.loc 1 599 27 is_stmt 0 view .LVU314
 1144 00cc 0133     		adds	r3, r3, #1
 1145 00ce 0D93     		str	r3, [sp, #52]
 600:lvgl/src/misc/lv_printf.c ****                     break;
 1146              		.loc 1 600 21 is_stmt 1 view .LVU315
 1147              	.LVL114:
 601:lvgl/src/misc/lv_printf.c ****                 default :
 1148              		.loc 1 601 21 view .LVU316
 606:lvgl/src/misc/lv_printf.c **** 
 1149              		.loc 1 606 16 view .LVU317
 1150 00d0 B5E7     		b	.L73
 1151              	.LVL115:
 1152              	.L163:
 611:lvgl/src/misc/lv_printf.c ****         }
 1153              		.loc 1 611 13 view .LVU318
 611:lvgl/src/misc/lv_printf.c ****         }
 1154              		.loc 1 611 21 is_stmt 0 view .LVU319
 1155 00d2 0DA8     		add	r0, sp, #52
 1156 00d4 FFF7FEFF 		bl	_atoi
 1157              	.LVL116:
 1158 00d8 0A90     		str	r0, [sp, #40]
 1159              	.LVL117:
 611:lvgl/src/misc/lv_printf.c ****         }
 1160              		.loc 1 611 21 view .LVU320
 1161 00da CAE7     		b	.L84
 1162              	.LVL118:
 1163              	.L164:
 1164              	.LBB32:
 614:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1165              		.loc 1 614 13 is_stmt 1 view .LVU321
 614:lvgl/src/misc/lv_printf.c ****             if(w < 0) {
 1166              		.loc 1 614 23 is_stmt 0 view .LVU322
 1167 00dc 1A9B     		ldr	r3, [sp, #104]
 1168 00de 1A1D     		adds	r2, r3, #4
 1169 00e0 1A92     		str	r2, [sp, #104]
 1170 00e2 1868     		ldr	r0, [r3]
 615:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1171              		.loc 1 615 13 is_stmt 1 view .LVU323
 615:lvgl/src/misc/lv_printf.c ****                 flags |= FLAGS_LEFT;    // reverse padding
 1172              		.loc 1 615 15 is_stmt 0 view .LVU324
 1173 00e4 0028     		cmp	r0, #0
 1174 00e6 04DB     		blt	.L166
 620:lvgl/src/misc/lv_printf.c ****             }
 1175              		.loc 1 620 17 is_stmt 1 view .LVU325
 620:lvgl/src/misc/lv_printf.c ****             }
 1176              		.loc 1 620 23 is_stmt 0 view .LVU326
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 39


 1177 00e8 0A90     		str	r0, [sp, #40]
 1178              	.LVL119:
 1179              	.L86:
 622:lvgl/src/misc/lv_printf.c ****         }
 1180              		.loc 1 622 13 is_stmt 1 view .LVU327
 622:lvgl/src/misc/lv_printf.c ****         }
 1181              		.loc 1 622 19 is_stmt 0 view .LVU328
 1182 00ea 0D9B     		ldr	r3, [sp, #52]
 1183 00ec 0133     		adds	r3, r3, #1
 1184 00ee 0D93     		str	r3, [sp, #52]
 1185 00f0 BFE7     		b	.L84
 1186              	.LVL120:
 1187              	.L166:
 616:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1188              		.loc 1 616 17 is_stmt 1 view .LVU329
 616:lvgl/src/misc/lv_printf.c ****                 width = (unsigned int) - w;
 1189              		.loc 1 616 23 is_stmt 0 view .LVU330
 1190 00f2 45F00205 		orr	r5, r5, #2
 1191              	.LVL121:
 617:lvgl/src/misc/lv_printf.c ****             }
 1192              		.loc 1 617 17 is_stmt 1 view .LVU331
 617:lvgl/src/misc/lv_printf.c ****             }
 1193              		.loc 1 617 40 is_stmt 0 view .LVU332
 1194 00f6 4342     		rsbs	r3, r0, #0
 1195 00f8 0A93     		str	r3, [sp, #40]
 1196              	.LVL122:
 617:lvgl/src/misc/lv_printf.c ****             }
 1197              		.loc 1 617 40 view .LVU333
 1198 00fa F6E7     		b	.L86
 1199              	.LVL123:
 1200              	.L165:
 617:lvgl/src/misc/lv_printf.c ****             }
 1201              		.loc 1 617 40 view .LVU334
 1202              	.LBE32:
 628:lvgl/src/misc/lv_printf.c ****             format++;
 1203              		.loc 1 628 13 is_stmt 1 view .LVU335
 628:lvgl/src/misc/lv_printf.c ****             format++;
 1204              		.loc 1 628 19 is_stmt 0 view .LVU336
 1205 00fc 45F48065 		orr	r5, r5, #1024
 1206              	.LVL124:
 629:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1207              		.loc 1 629 13 is_stmt 1 view .LVU337
 629:lvgl/src/misc/lv_printf.c ****             if(_is_digit(*format)) {
 1208              		.loc 1 629 19 is_stmt 0 view .LVU338
 1209 0100 5A1C     		adds	r2, r3, #1
 1210 0102 0D92     		str	r2, [sp, #52]
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1211              		.loc 1 630 13 is_stmt 1 view .LVU339
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1212              		.loc 1 630 16 is_stmt 0 view .LVU340
 1213 0104 5A78     		ldrb	r2, [r3, #1]	@ zero_extendqisi2
 1214              	.LVL125:
 1215              	.LBB33:
 1216              	.LBI33:
 152:lvgl/src/misc/lv_printf.c **** {
 1217              		.loc 1 152 20 is_stmt 1 view .LVU341
 1218              	.LBB34:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 40


 154:lvgl/src/misc/lv_printf.c **** }
 1219              		.loc 1 154 5 view .LVU342
 154:lvgl/src/misc/lv_printf.c **** }
 1220              		.loc 1 154 24 is_stmt 0 view .LVU343
 1221 0106 A2F13003 		sub	r3, r2, #48
 1222 010a DBB2     		uxtb	r3, r3
 1223              	.LVL126:
 154:lvgl/src/misc/lv_printf.c **** }
 1224              		.loc 1 154 24 view .LVU344
 1225              	.LBE34:
 1226              	.LBE33:
 630:lvgl/src/misc/lv_printf.c ****                 precision = _atoi(&format);
 1227              		.loc 1 630 15 view .LVU345
 1228 010c 092B     		cmp	r3, #9
 1229 010e 04D9     		bls	.L167
 633:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1230              		.loc 1 633 18 is_stmt 1 view .LVU346
 633:lvgl/src/misc/lv_printf.c ****                 const int prec = (int)va_arg(va, int);
 1231              		.loc 1 633 20 is_stmt 0 view .LVU347
 1232 0110 2A2A     		cmp	r2, #42
 1233 0112 07D0     		beq	.L168
 626:lvgl/src/misc/lv_printf.c ****         if(*format == '.') {
 1234              		.loc 1 626 19 view .LVU348
 1235 0114 4FF0000A 		mov	r10, #0
 1236 0118 B1E7     		b	.L87
 1237              	.L167:
 631:lvgl/src/misc/lv_printf.c ****             }
 1238              		.loc 1 631 17 is_stmt 1 view .LVU349
 631:lvgl/src/misc/lv_printf.c ****             }
 1239              		.loc 1 631 29 is_stmt 0 view .LVU350
 1240 011a 0DA8     		add	r0, sp, #52
 1241 011c FFF7FEFF 		bl	_atoi
 1242              	.LVL127:
 1243 0120 8246     		mov	r10, r0
 1244              	.LVL128:
 631:lvgl/src/misc/lv_printf.c ****             }
 1245              		.loc 1 631 29 view .LVU351
 1246 0122 ACE7     		b	.L87
 1247              	.LVL129:
 1248              	.L168:
 1249              	.LBB35:
 634:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1250              		.loc 1 634 17 is_stmt 1 view .LVU352
 634:lvgl/src/misc/lv_printf.c ****                 precision = prec > 0 ? (unsigned int)prec : 0U;
 1251              		.loc 1 634 27 is_stmt 0 view .LVU353
 1252 0124 1A9B     		ldr	r3, [sp, #104]
 1253 0126 1A1D     		adds	r2, r3, #4
 1254 0128 1A92     		str	r2, [sp, #104]
 1255 012a 1B68     		ldr	r3, [r3]
 635:lvgl/src/misc/lv_printf.c ****                 format++;
 1256              		.loc 1 635 17 is_stmt 1 view .LVU354
 635:lvgl/src/misc/lv_printf.c ****                 format++;
 1257              		.loc 1 635 59 is_stmt 0 view .LVU355
 1258 012c 23EAE37A 		bic	r10, r3, r3, asr #31
 1259              	.LVL130:
 636:lvgl/src/misc/lv_printf.c ****             }
 1260              		.loc 1 636 17 is_stmt 1 view .LVU356
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 41


 636:lvgl/src/misc/lv_printf.c ****             }
 1261              		.loc 1 636 23 is_stmt 0 view .LVU357
 1262 0130 0D9B     		ldr	r3, [sp, #52]
 1263 0132 0133     		adds	r3, r3, #1
 1264 0134 0D93     		str	r3, [sp, #52]
 1265 0136 A2E7     		b	.L87
 1266              	.L93:
 636:lvgl/src/misc/lv_printf.c ****             }
 1267              		.loc 1 636 23 view .LVU358
 1268              	.LBE35:
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1269              		.loc 1 643 17 is_stmt 1 view .LVU359
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1270              		.loc 1 643 23 is_stmt 0 view .LVU360
 1271 0138 45F48071 		orr	r1, r5, #256
 1272              	.LVL131:
 644:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1273              		.loc 1 644 17 is_stmt 1 view .LVU361
 644:lvgl/src/misc/lv_printf.c ****                 if(*format == 'l') {
 1274              		.loc 1 644 23 is_stmt 0 view .LVU362
 1275 013c 531C     		adds	r3, r2, #1
 1276 013e 0D93     		str	r3, [sp, #52]
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1277              		.loc 1 645 17 is_stmt 1 view .LVU363
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1278              		.loc 1 645 20 is_stmt 0 view .LVU364
 1279 0140 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 645:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_LONG_LONG;
 1280              		.loc 1 645 19 view .LVU365
 1281 0142 6C2A     		cmp	r2, #108
 1282 0144 01D0     		beq	.L169
 643:lvgl/src/misc/lv_printf.c ****                 format++;
 1283              		.loc 1 643 23 view .LVU366
 1284 0146 0D46     		mov	r5, r1
 1285 0148 16E0     		b	.L89
 1286              	.L169:
 646:lvgl/src/misc/lv_printf.c ****                     format++;
 1287              		.loc 1 646 21 is_stmt 1 view .LVU367
 646:lvgl/src/misc/lv_printf.c ****                     format++;
 1288              		.loc 1 646 27 is_stmt 0 view .LVU368
 1289 014a 45F44075 		orr	r5, r5, #768
 1290              	.LVL132:
 647:lvgl/src/misc/lv_printf.c ****                 }
 1291              		.loc 1 647 21 is_stmt 1 view .LVU369
 647:lvgl/src/misc/lv_printf.c ****                 }
 1292              		.loc 1 647 27 is_stmt 0 view .LVU370
 1293 014e 0133     		adds	r3, r3, #1
 1294 0150 0D93     		str	r3, [sp, #52]
 1295 0152 11E0     		b	.L89
 1296              	.L95:
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1297              		.loc 1 651 17 is_stmt 1 view .LVU371
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1298              		.loc 1 651 23 is_stmt 0 view .LVU372
 1299 0154 45F08001 		orr	r1, r5, #128
 1300              	.LVL133:
 652:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 42


 1301              		.loc 1 652 17 is_stmt 1 view .LVU373
 652:lvgl/src/misc/lv_printf.c ****                 if(*format == 'h') {
 1302              		.loc 1 652 23 is_stmt 0 view .LVU374
 1303 0158 531C     		adds	r3, r2, #1
 1304 015a 0D93     		str	r3, [sp, #52]
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1305              		.loc 1 653 17 is_stmt 1 view .LVU375
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1306              		.loc 1 653 20 is_stmt 0 view .LVU376
 1307 015c 5278     		ldrb	r2, [r2, #1]	@ zero_extendqisi2
 653:lvgl/src/misc/lv_printf.c ****                     flags |= FLAGS_CHAR;
 1308              		.loc 1 653 19 view .LVU377
 1309 015e 682A     		cmp	r2, #104
 1310 0160 01D0     		beq	.L170
 651:lvgl/src/misc/lv_printf.c ****                 format++;
 1311              		.loc 1 651 23 view .LVU378
 1312 0162 0D46     		mov	r5, r1
 1313 0164 08E0     		b	.L89
 1314              	.L170:
 654:lvgl/src/misc/lv_printf.c ****                     format++;
 1315              		.loc 1 654 21 is_stmt 1 view .LVU379
 654:lvgl/src/misc/lv_printf.c ****                     format++;
 1316              		.loc 1 654 27 is_stmt 0 view .LVU380
 1317 0166 45F0C005 		orr	r5, r5, #192
 1318              	.LVL134:
 655:lvgl/src/misc/lv_printf.c ****                 }
 1319              		.loc 1 655 21 is_stmt 1 view .LVU381
 655:lvgl/src/misc/lv_printf.c ****                 }
 1320              		.loc 1 655 27 is_stmt 0 view .LVU382
 1321 016a 0133     		adds	r3, r3, #1
 1322 016c 0D93     		str	r3, [sp, #52]
 1323 016e 03E0     		b	.L89
 1324              	.L92:
 660:lvgl/src/misc/lv_printf.c ****                 format++;
 1325              		.loc 1 660 17 is_stmt 1 view .LVU383
 660:lvgl/src/misc/lv_printf.c ****                 format++;
 1326              		.loc 1 660 23 is_stmt 0 view .LVU384
 1327 0170 45F48075 		orr	r5, r5, #256
 1328              	.LVL135:
 661:lvgl/src/misc/lv_printf.c ****                 break;
 1329              		.loc 1 661 17 is_stmt 1 view .LVU385
 661:lvgl/src/misc/lv_printf.c ****                 break;
 1330              		.loc 1 661 23 is_stmt 0 view .LVU386
 1331 0174 0132     		adds	r2, r2, #1
 1332 0176 0D92     		str	r2, [sp, #52]
 662:lvgl/src/misc/lv_printf.c **** #endif
 1333              		.loc 1 662 17 is_stmt 1 view .LVU387
 1334              	.L89:
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1335              		.loc 1 677 9 view .LVU388
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1336              		.loc 1 677 16 is_stmt 0 view .LVU389
 1337 0178 0D9A     		ldr	r2, [sp, #52]
 1338 017a 1078     		ldrb	r0, [r2]	@ zero_extendqisi2
 677:lvgl/src/misc/lv_printf.c ****             case 'd' :
 1339              		.loc 1 677 9 view .LVU390
 1340 017c A0F12503 		sub	r3, r0, #37
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 43


 1341 0180 532B     		cmp	r3, #83
 1342 0182 00F21F82 		bhi	.L96
 1343 0186 DFE813F0 		tbh	[pc, r3, lsl #1]
 1344              	.L98:
 1345 018a 1202     		.2byte	(.L101-.L98)/2
 1346 018c 1D02     		.2byte	(.L96-.L98)/2
 1347 018e 1D02     		.2byte	(.L96-.L98)/2
 1348 0190 1D02     		.2byte	(.L96-.L98)/2
 1349 0192 1D02     		.2byte	(.L96-.L98)/2
 1350 0194 1D02     		.2byte	(.L96-.L98)/2
 1351 0196 1D02     		.2byte	(.L96-.L98)/2
 1352 0198 1D02     		.2byte	(.L96-.L98)/2
 1353 019a 1D02     		.2byte	(.L96-.L98)/2
 1354 019c 1D02     		.2byte	(.L96-.L98)/2
 1355 019e 1D02     		.2byte	(.L96-.L98)/2
 1356 01a0 1D02     		.2byte	(.L96-.L98)/2
 1357 01a2 1D02     		.2byte	(.L96-.L98)/2
 1358 01a4 1D02     		.2byte	(.L96-.L98)/2
 1359 01a6 1D02     		.2byte	(.L96-.L98)/2
 1360 01a8 1D02     		.2byte	(.L96-.L98)/2
 1361 01aa 1D02     		.2byte	(.L96-.L98)/2
 1362 01ac 1D02     		.2byte	(.L96-.L98)/2
 1363 01ae 1D02     		.2byte	(.L96-.L98)/2
 1364 01b0 1D02     		.2byte	(.L96-.L98)/2
 1365 01b2 1D02     		.2byte	(.L96-.L98)/2
 1366 01b4 1D02     		.2byte	(.L96-.L98)/2
 1367 01b6 1D02     		.2byte	(.L96-.L98)/2
 1368 01b8 1D02     		.2byte	(.L96-.L98)/2
 1369 01ba 1D02     		.2byte	(.L96-.L98)/2
 1370 01bc 1D02     		.2byte	(.L96-.L98)/2
 1371 01be 1D02     		.2byte	(.L96-.L98)/2
 1372 01c0 1D02     		.2byte	(.L96-.L98)/2
 1373 01c2 1D02     		.2byte	(.L96-.L98)/2
 1374 01c4 1D02     		.2byte	(.L96-.L98)/2
 1375 01c6 1D02     		.2byte	(.L96-.L98)/2
 1376 01c8 1D02     		.2byte	(.L96-.L98)/2
 1377 01ca 1D02     		.2byte	(.L96-.L98)/2
 1378 01cc 1D02     		.2byte	(.L96-.L98)/2
 1379 01ce 1D02     		.2byte	(.L96-.L98)/2
 1380 01d0 1D02     		.2byte	(.L96-.L98)/2
 1381 01d2 1D02     		.2byte	(.L96-.L98)/2
 1382 01d4 1D02     		.2byte	(.L96-.L98)/2
 1383 01d6 1D02     		.2byte	(.L96-.L98)/2
 1384 01d8 1D02     		.2byte	(.L96-.L98)/2
 1385 01da 1D02     		.2byte	(.L96-.L98)/2
 1386 01dc 1D02     		.2byte	(.L96-.L98)/2
 1387 01de 1D02     		.2byte	(.L96-.L98)/2
 1388 01e0 5E00     		.2byte	(.L97-.L98)/2
 1389 01e2 1D02     		.2byte	(.L96-.L98)/2
 1390 01e4 1D02     		.2byte	(.L96-.L98)/2
 1391 01e6 1D02     		.2byte	(.L96-.L98)/2
 1392 01e8 1D02     		.2byte	(.L96-.L98)/2
 1393 01ea 1D02     		.2byte	(.L96-.L98)/2
 1394 01ec 1D02     		.2byte	(.L96-.L98)/2
 1395 01ee 1D02     		.2byte	(.L96-.L98)/2
 1396 01f0 5E00     		.2byte	(.L97-.L98)/2
 1397 01f2 1D02     		.2byte	(.L96-.L98)/2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 44


 1398 01f4 1D02     		.2byte	(.L96-.L98)/2
 1399 01f6 1D02     		.2byte	(.L96-.L98)/2
 1400 01f8 1D02     		.2byte	(.L96-.L98)/2
 1401 01fa 1D02     		.2byte	(.L96-.L98)/2
 1402 01fc 1D02     		.2byte	(.L96-.L98)/2
 1403 01fe 1D02     		.2byte	(.L96-.L98)/2
 1404 0200 1D02     		.2byte	(.L96-.L98)/2
 1405 0202 1D02     		.2byte	(.L96-.L98)/2
 1406 0204 5E00     		.2byte	(.L97-.L98)/2
 1407 0206 7401     		.2byte	(.L100-.L98)/2
 1408 0208 5E00     		.2byte	(.L97-.L98)/2
 1409 020a 1D02     		.2byte	(.L96-.L98)/2
 1410 020c 1D02     		.2byte	(.L96-.L98)/2
 1411 020e 1D02     		.2byte	(.L96-.L98)/2
 1412 0210 1D02     		.2byte	(.L96-.L98)/2
 1413 0212 5E00     		.2byte	(.L97-.L98)/2
 1414 0214 1D02     		.2byte	(.L96-.L98)/2
 1415 0216 1D02     		.2byte	(.L96-.L98)/2
 1416 0218 1D02     		.2byte	(.L96-.L98)/2
 1417 021a 1D02     		.2byte	(.L96-.L98)/2
 1418 021c 1D02     		.2byte	(.L96-.L98)/2
 1419 021e 5E00     		.2byte	(.L97-.L98)/2
 1420 0220 5E00     		.2byte	(.L97-.L98)/2
 1421 0222 1D02     		.2byte	(.L96-.L98)/2
 1422 0224 1D02     		.2byte	(.L96-.L98)/2
 1423 0226 AD01     		.2byte	(.L99-.L98)/2
 1424 0228 1D02     		.2byte	(.L96-.L98)/2
 1425 022a 5E00     		.2byte	(.L97-.L98)/2
 1426 022c 1D02     		.2byte	(.L96-.L98)/2
 1427 022e 1D02     		.2byte	(.L96-.L98)/2
 1428 0230 5E00     		.2byte	(.L97-.L98)/2
 1429              		.p2align 1
 1430              	.L94:
 665:lvgl/src/misc/lv_printf.c ****                 format++;
 1431              		.loc 1 665 17 is_stmt 1 view .LVU391
 665:lvgl/src/misc/lv_printf.c ****                 format++;
 1432              		.loc 1 665 23 is_stmt 0 view .LVU392
 1433 0232 45F40075 		orr	r5, r5, #512
 1434              	.LVL136:
 666:lvgl/src/misc/lv_printf.c ****                 break;
 1435              		.loc 1 666 17 is_stmt 1 view .LVU393
 666:lvgl/src/misc/lv_printf.c ****                 break;
 1436              		.loc 1 666 23 is_stmt 0 view .LVU394
 1437 0236 0132     		adds	r2, r2, #1
 1438 0238 0D92     		str	r2, [sp, #52]
 667:lvgl/src/misc/lv_printf.c ****             case 'z' :
 1439              		.loc 1 667 17 is_stmt 1 view .LVU395
 1440 023a 9DE7     		b	.L89
 1441              	.L90:
 669:lvgl/src/misc/lv_printf.c ****                 format++;
 1442              		.loc 1 669 17 view .LVU396
 669:lvgl/src/misc/lv_printf.c ****                 format++;
 1443              		.loc 1 669 23 is_stmt 0 view .LVU397
 1444 023c 45F48075 		orr	r5, r5, #256
 1445              	.LVL137:
 670:lvgl/src/misc/lv_printf.c ****                 break;
 1446              		.loc 1 670 17 is_stmt 1 view .LVU398
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 45


 670:lvgl/src/misc/lv_printf.c ****                 break;
 1447              		.loc 1 670 23 is_stmt 0 view .LVU399
 1448 0240 0132     		adds	r2, r2, #1
 1449 0242 0D92     		str	r2, [sp, #52]
 671:lvgl/src/misc/lv_printf.c ****             default :
 1450              		.loc 1 671 17 is_stmt 1 view .LVU400
 1451 0244 98E7     		b	.L89
 1452              	.L97:
 1453              	.LBB36:
 688:lvgl/src/misc/lv_printf.c ****                     if(*format == 'x' || *format == 'X') {
 1454              		.loc 1 688 21 view .LVU401
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1455              		.loc 1 689 21 view .LVU402
 689:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1456              		.loc 1 689 23 is_stmt 0 view .LVU403
 1457 0246 5828     		cmp	r0, #88
 1458 0248 18BF     		it	ne
 1459 024a 7828     		cmpne	r0, #120
 1460 024c 16D0     		beq	.L151
 692:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1461              		.loc 1 692 26 is_stmt 1 view .LVU404
 692:lvgl/src/misc/lv_printf.c ****                         base = 16U;
 1462              		.loc 1 692 28 is_stmt 0 view .LVU405
 1463 024e 5028     		cmp	r0, #80
 1464 0250 18BF     		it	ne
 1465 0252 7028     		cmpne	r0, #112
 1466 0254 0AD1     		bne	.L103
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1467              		.loc 1 693 25 is_stmt 1 view .LVU406
 1468              	.LVL138:
 694:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1469              		.loc 1 694 25 view .LVU407
 696:lvgl/src/misc/lv_printf.c ****                             flags |= FLAGS_LONG_LONG;
 1470              		.loc 1 696 25 view .LVU408
 700:lvgl/src/misc/lv_printf.c **** 
 1471              		.loc 1 700 29 view .LVU409
 700:lvgl/src/misc/lv_printf.c **** 
 1472              		.loc 1 700 35 is_stmt 0 view .LVU410
 1473 0256 45F48875 		orr	r5, r5, #272
 1474              	.LVL139:
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1475              		.loc 1 702 25 is_stmt 1 view .LVU411
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1476              		.loc 1 702 28 is_stmt 0 view .LVU412
 1477 025a 5378     		ldrb	r3, [r2, #1]	@ zero_extendqisi2
 702:lvgl/src/misc/lv_printf.c ****                             format++;
 1478              		.loc 1 702 27 view .LVU413
 1479 025c 562B     		cmp	r3, #86
 1480 025e 01D0     		beq	.L171
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1481              		.loc 1 693 30 view .LVU414
 1482 0260 1022     		movs	r2, #16
 1483 0262 0CE0     		b	.L102
 1484              	.L171:
 703:lvgl/src/misc/lv_printf.c ****                     }
 1485              		.loc 1 703 29 is_stmt 1 view .LVU415
 703:lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 46


 1486              		.loc 1 703 35 is_stmt 0 view .LVU416
 1487 0264 0132     		adds	r2, r2, #1
 1488 0266 0D92     		str	r2, [sp, #52]
 693:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_HASH;   // always hash for pointer format
 1489              		.loc 1 693 30 view .LVU417
 1490 0268 1022     		movs	r2, #16
 1491 026a 08E0     		b	.L102
 1492              	.LVL140:
 1493              	.L103:
 705:lvgl/src/misc/lv_printf.c ****                         base =  8U;
 1494              		.loc 1 705 26 is_stmt 1 view .LVU418
 705:lvgl/src/misc/lv_printf.c ****                         base =  8U;
 1495              		.loc 1 705 28 is_stmt 0 view .LVU419
 1496 026c 6F28     		cmp	r0, #111
 1497 026e 42D0     		beq	.L153
 708:lvgl/src/misc/lv_printf.c ****                         base =  2U;
 1498              		.loc 1 708 26 is_stmt 1 view .LVU420
 708:lvgl/src/misc/lv_printf.c ****                         base =  2U;
 1499              		.loc 1 708 28 is_stmt 0 view .LVU421
 1500 0270 6228     		cmp	r0, #98
 1501 0272 42D0     		beq	.L154
 712:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1502              		.loc 1 712 25 is_stmt 1 view .LVU422
 1503              	.LVL141:
 713:lvgl/src/misc/lv_printf.c ****                     }
 1504              		.loc 1 713 25 view .LVU423
 713:lvgl/src/misc/lv_printf.c ****                     }
 1505              		.loc 1 713 31 is_stmt 0 view .LVU424
 1506 0274 25F01005 		bic	r5, r5, #16
 1507              	.LVL142:
 712:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_HASH;   // no hash for dec format
 1508              		.loc 1 712 30 view .LVU425
 1509 0278 0A22     		movs	r2, #10
 1510 027a 00E0     		b	.L102
 1511              	.LVL143:
 1512              	.L151:
 690:lvgl/src/misc/lv_printf.c ****                     }
 1513              		.loc 1 690 30 view .LVU426
 1514 027c 1022     		movs	r2, #16
 1515              	.L102:
 1516              	.LVL144:
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1517              		.loc 1 716 21 is_stmt 1 view .LVU427
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1518              		.loc 1 716 24 is_stmt 0 view .LVU428
 1519 027e 0D9B     		ldr	r3, [sp, #52]
 1520 0280 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 716:lvgl/src/misc/lv_printf.c ****                         flags |= FLAGS_UPPERCASE;
 1521              		.loc 1 716 23 view .LVU429
 1522 0282 502B     		cmp	r3, #80
 1523 0284 18BF     		it	ne
 1524 0286 582B     		cmpne	r3, #88
 1525 0288 01D1     		bne	.L104
 717:lvgl/src/misc/lv_printf.c ****                     }
 1526              		.loc 1 717 25 is_stmt 1 view .LVU430
 717:lvgl/src/misc/lv_printf.c ****                     }
 1527              		.loc 1 717 31 is_stmt 0 view .LVU431
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 47


 1528 028a 45F02005 		orr	r5, r5, #32
 1529              	.LVL145:
 1530              	.L104:
 721:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1531              		.loc 1 721 21 is_stmt 1 view .LVU432
 721:lvgl/src/misc/lv_printf.c ****                         flags &= ~(FLAGS_PLUS | FLAGS_SPACE);
 1532              		.loc 1 721 23 is_stmt 0 view .LVU433
 1533 028e 692B     		cmp	r3, #105
 1534 0290 18BF     		it	ne
 1535 0292 642B     		cmpne	r3, #100
 1536 0294 01D0     		beq	.L105
 722:lvgl/src/misc/lv_printf.c ****                     }
 1537              		.loc 1 722 25 is_stmt 1 view .LVU434
 722:lvgl/src/misc/lv_printf.c ****                     }
 1538              		.loc 1 722 31 is_stmt 0 view .LVU435
 1539 0296 25F00C05 		bic	r5, r5, #12
 1540              	.LVL146:
 1541              	.L105:
 726:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1542              		.loc 1 726 21 is_stmt 1 view .LVU436
 726:lvgl/src/misc/lv_printf.c ****                         flags &= ~FLAGS_ZEROPAD;
 1543              		.loc 1 726 23 is_stmt 0 view .LVU437
 1544 029a 15F4806F 		tst	r5, #1024
 1545 029e 01D0     		beq	.L106
 727:lvgl/src/misc/lv_printf.c ****                     }
 1546              		.loc 1 727 25 is_stmt 1 view .LVU438
 727:lvgl/src/misc/lv_printf.c ****                     }
 1547              		.loc 1 727 31 is_stmt 0 view .LVU439
 1548 02a0 25F00105 		bic	r5, r5, #1
 1549              	.LVL147:
 1550              	.L106:
 731:lvgl/src/misc/lv_printf.c ****                         // signed
 1551              		.loc 1 731 21 is_stmt 1 view .LVU440
 731:lvgl/src/misc/lv_printf.c ****                         // signed
 1552              		.loc 1 731 23 is_stmt 0 view .LVU441
 1553 02a4 642B     		cmp	r3, #100
 1554 02a6 18BF     		it	ne
 1555 02a8 692B     		cmpne	r3, #105
 1556 02aa 73D1     		bne	.L107
 733:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1557              		.loc 1 733 25 is_stmt 1 view .LVU442
 733:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1558              		.loc 1 733 27 is_stmt 0 view .LVU443
 1559 02ac 15F4007F 		tst	r5, #512
 1560 02b0 25D1     		bne	.L172
 740:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1561              		.loc 1 740 30 is_stmt 1 view .LVU444
 740:lvgl/src/misc/lv_printf.c ****                             const long value = va_arg(va, long);
 1562              		.loc 1 740 32 is_stmt 0 view .LVU445
 1563 02b2 15F4807F 		tst	r5, #256
 1564 02b6 46D1     		bne	.L173
 1565              	.LBB37:
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1566              		.loc 1 746 29 is_stmt 1 view .LVU446
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1567              		.loc 1 746 92 is_stmt 0 view .LVU447
 1568 02b8 15F0400F 		tst	r5, #64
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 48


 1569 02bc 5CD0     		beq	.L112
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1570              		.loc 1 746 76 view .LVU448
 1571 02be 1A9B     		ldr	r3, [sp, #104]
 1572 02c0 191D     		adds	r1, r3, #4
 1573 02c2 1A91     		str	r1, [sp, #104]
 1574 02c4 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1575              	.L113:
 1576              	.LVL148:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1577              		.loc 1 748 29 is_stmt 1 discriminator 3 view .LVU449
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1578              		.loc 1 748 72 is_stmt 0 discriminator 3 view .LVU450
 1579 02c6 83EAE371 		eor	r1, r3, r3, asr #31
 1580 02ca A1EBE371 		sub	r1, r1, r3, asr #31
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1581              		.loc 1 748 35 discriminator 3 view .LVU451
 1582 02ce 0595     		str	r5, [sp, #20]
 1583 02d0 0A98     		ldr	r0, [sp, #40]
 1584 02d2 0490     		str	r0, [sp, #16]
 1585 02d4 CDF80CA0 		str	r10, [sp, #12]
 1586 02d8 0292     		str	r2, [sp, #8]
 1587 02da DB0F     		lsrs	r3, r3, #31
 1588              	.LVL149:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1589              		.loc 1 748 35 discriminator 3 view .LVU452
 1590 02dc 0193     		str	r3, [sp, #4]
 1591 02de 0091     		str	r1, [sp]
 1592 02e0 3346     		mov	r3, r6
 1593 02e2 2246     		mov	r2, r4
 1594              	.LVL150:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1595              		.loc 1 748 35 discriminator 3 view .LVU453
 1596 02e4 5946     		mov	r1, fp
 1597 02e6 3846     		mov	r0, r7
 1598 02e8 FFF7FEFF 		bl	_ntoa_long
 1599              	.LVL151:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1600              		.loc 1 748 35 discriminator 3 view .LVU454
 1601 02ec 0446     		mov	r4, r0
 1602              	.LVL152:
 1603              	.L110:
 748:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1604              		.loc 1 748 35 discriminator 3 view .LVU455
 1605              	.LBE37:
 776:lvgl/src/misc/lv_printf.c ****                     break;
 1606              		.loc 1 776 21 is_stmt 1 view .LVU456
 776:lvgl/src/misc/lv_printf.c ****                     break;
 1607              		.loc 1 776 27 is_stmt 0 view .LVU457
 1608 02ee 0D9B     		ldr	r3, [sp, #52]
 1609 02f0 0133     		adds	r3, r3, #1
 1610 02f2 0D93     		str	r3, [sp, #52]
 777:lvgl/src/misc/lv_printf.c ****                 }
 1611              		.loc 1 777 21 is_stmt 1 view .LVU458
 1612 02f4 8FE6     		b	.L142
 1613              	.LVL153:
 1614              	.L153:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 49


 706:lvgl/src/misc/lv_printf.c ****                     }
 1615              		.loc 1 706 30 is_stmt 0 view .LVU459
 1616 02f6 0822     		movs	r2, #8
 1617 02f8 C1E7     		b	.L102
 1618              	.L154:
 709:lvgl/src/misc/lv_printf.c ****                     }
 1619              		.loc 1 709 30 view .LVU460
 1620 02fa 0222     		movs	r2, #2
 1621 02fc BFE7     		b	.L102
 1622              	.LVL154:
 1623              	.L172:
 1624              	.LBB38:
 735:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1625              		.loc 1 735 29 is_stmt 1 view .LVU461
 735:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long_long(out, buffer, idx, maxlen, (unsigned long long)(va
 1626              		.loc 1 735 45 is_stmt 0 view .LVU462
 1627 02fe 1A9B     		ldr	r3, [sp, #104]
 1628 0300 0733     		adds	r3, r3, #7
 1629 0302 23F00703 		bic	r3, r3, #7
 1630 0306 03F10801 		add	r1, r3, #8
 1631 030a 1A91     		str	r1, [sp, #104]
 1632 030c 5968     		ldr	r1, [r3, #4]
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1633              		.loc 1 736 29 is_stmt 1 view .LVU463
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1634              		.loc 1 736 77 is_stmt 0 view .LVU464
 1635 030e 1B68     		ldr	r3, [r3]
 1636 0310 0846     		mov	r0, r1
 1637 0312 0029     		cmp	r1, #0
 1638 0314 13DB     		blt	.L174
 1639              	.L109:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1640              		.loc 1 736 35 view .LVU465
 1641 0316 0895     		str	r5, [sp, #32]
 1642 0318 0A9D     		ldr	r5, [sp, #40]
 1643              	.LVL155:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1644              		.loc 1 736 35 view .LVU466
 1645 031a 0795     		str	r5, [sp, #28]
 1646 031c CDF818A0 		str	r10, [sp, #24]
 1647 0320 0492     		str	r2, [sp, #16]
 1648 0322 0022     		movs	r2, #0
 1649              	.LVL156:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1650              		.loc 1 736 35 view .LVU467
 1651 0324 0592     		str	r2, [sp, #20]
 1652 0326 C90F     		lsrs	r1, r1, #31
 1653 0328 0291     		str	r1, [sp, #8]
 1654 032a 0093     		str	r3, [sp]
 1655 032c 0190     		str	r0, [sp, #4]
 1656 032e 3346     		mov	r3, r6
 1657 0330 2246     		mov	r2, r4
 1658 0332 5946     		mov	r1, fp
 1659 0334 3846     		mov	r0, r7
 1660 0336 FFF7FEFF 		bl	_ntoa_long_long
 1661              	.LVL157:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 50


 1662              		.loc 1 736 35 view .LVU468
 1663 033a 0446     		mov	r4, r0
 1664              	.LVL158:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1665              		.loc 1 736 35 view .LVU469
 1666              	.LBE38:
 1667 033c D7E7     		b	.L110
 1668              	.LVL159:
 1669              	.L174:
 1670              	.LBB39:
 736:lvgl/src/misc/lv_printf.c ****                                                   precision, width, flags);
 1671              		.loc 1 736 77 view .LVU470
 1672 033e 5B42     		negs	r3, r3
 1673 0340 61EB4100 		sbc	r0, r1, r1, lsl #1
 1674 0344 E7E7     		b	.L109
 1675              	.L173:
 1676              	.LBE39:
 1677              	.LBB40:
 741:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1678              		.loc 1 741 29 is_stmt 1 view .LVU471
 741:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned long)(value > 0 ? 
 1679              		.loc 1 741 40 is_stmt 0 view .LVU472
 1680 0346 1A9B     		ldr	r3, [sp, #104]
 1681 0348 191D     		adds	r1, r3, #4
 1682 034a 1A91     		str	r1, [sp, #104]
 1683 034c 1B68     		ldr	r3, [r3]
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1684              		.loc 1 742 29 is_stmt 1 view .LVU473
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1685              		.loc 1 742 72 is_stmt 0 view .LVU474
 1686 034e 83EAE371 		eor	r1, r3, r3, asr #31
 1687 0352 A1EBE371 		sub	r1, r1, r3, asr #31
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1688              		.loc 1 742 35 view .LVU475
 1689 0356 0595     		str	r5, [sp, #20]
 1690 0358 0A98     		ldr	r0, [sp, #40]
 1691 035a 0490     		str	r0, [sp, #16]
 1692 035c CDF80CA0 		str	r10, [sp, #12]
 1693 0360 0292     		str	r2, [sp, #8]
 1694 0362 DB0F     		lsrs	r3, r3, #31
 1695 0364 0193     		str	r3, [sp, #4]
 1696 0366 0091     		str	r1, [sp]
 1697 0368 3346     		mov	r3, r6
 1698 036a 2246     		mov	r2, r4
 1699              	.LVL160:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1700              		.loc 1 742 35 view .LVU476
 1701 036c 5946     		mov	r1, fp
 1702 036e 3846     		mov	r0, r7
 1703 0370 FFF7FEFF 		bl	_ntoa_long
 1704              	.LVL161:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1705              		.loc 1 742 35 view .LVU477
 1706 0374 0446     		mov	r4, r0
 1707              	.LVL162:
 742:lvgl/src/misc/lv_printf.c ****                                              width, flags);
 1708              		.loc 1 742 35 view .LVU478
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 51


 1709              	.LBE40:
 1710 0376 BAE7     		b	.L110
 1711              	.LVL163:
 1712              	.L112:
 1713              	.LBB41:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1714              		.loc 1 747 141 discriminator 2 view .LVU479
 1715 0378 15F0800F 		tst	r5, #128
 1716 037c 05D0     		beq	.L114
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1717              		.loc 1 746 129 view .LVU480
 1718 037e 1A9B     		ldr	r3, [sp, #104]
 1719 0380 191D     		adds	r1, r3, #4
 1720 0382 1A91     		str	r1, [sp, #104]
 746:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1721              		.loc 1 746 118 view .LVU481
 1722 0384 B3F90030 		ldrsh	r3, [r3]
 1723 0388 9DE7     		b	.L113
 1724              	.L114:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1725              		.loc 1 747 141 view .LVU482
 1726 038a 1A9B     		ldr	r3, [sp, #104]
 1727 038c 191D     		adds	r1, r3, #4
 1728 038e 1A91     		str	r1, [sp, #104]
 1729 0390 1B68     		ldr	r3, [r3]
 1730 0392 98E7     		b	.L113
 1731              	.L107:
 747:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, (unsigned int)(value > 0 ? v
 1732              		.loc 1 747 141 view .LVU483
 1733              	.LBE41:
 752:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 1734              		.loc 1 752 26 is_stmt 1 view .LVU484
 752:lvgl/src/misc/lv_printf.c ****                         lv_vaformat_t * vaf = va_arg(va, lv_vaformat_t *);
 1735              		.loc 1 752 28 is_stmt 0 view .LVU485
 1736 0394 562B     		cmp	r3, #86
 1737 0396 1DD0     		beq	.L175
 762:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1738              		.loc 1 762 25 is_stmt 1 view .LVU486
 762:lvgl/src/misc/lv_printf.c **** #if defined(PRINTF_SUPPORT_LONG_LONG)
 1739              		.loc 1 762 27 is_stmt 0 view .LVU487
 1740 0398 15F4007F 		tst	r5, #512
 1741 039c 2BD1     		bne	.L176
 767:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1742              		.loc 1 767 30 is_stmt 1 view .LVU488
 767:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, va_arg(va, unsigned long), f
 1743              		.loc 1 767 32 is_stmt 0 view .LVU489
 1744 039e 15F4807F 		tst	r5, #256
 1745 03a2 44D1     		bne	.L177
 1746              	.LBB42:
 771:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1747              		.loc 1 771 29 is_stmt 1 view .LVU490
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1748              		.loc 1 772 115 is_stmt 0 view .LVU491
 1749 03a4 15F0400F 		tst	r5, #64
 1750 03a8 56D0     		beq	.L118
 771:lvgl/src/misc/lv_printf.c ****                                                                                                    
 1751              		.loc 1 771 94 view .LVU492
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 52


 1752 03aa 1A9B     		ldr	r3, [sp, #104]
 1753 03ac 191D     		adds	r1, r3, #4
 1754 03ae 1A91     		str	r1, [sp, #104]
 1755 03b0 1978     		ldrb	r1, [r3]	@ zero_extendqisi2
 1756              	.L119:
 1757              	.LVL164:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1758              		.loc 1 773 29 is_stmt 1 view .LVU493
 773:lvgl/src/misc/lv_printf.c ****                         }
 1759              		.loc 1 773 35 is_stmt 0 view .LVU494
 1760 03b2 0595     		str	r5, [sp, #20]
 1761 03b4 0A9B     		ldr	r3, [sp, #40]
 1762 03b6 0493     		str	r3, [sp, #16]
 1763 03b8 CDF80CA0 		str	r10, [sp, #12]
 1764 03bc 0292     		str	r2, [sp, #8]
 1765 03be 0023     		movs	r3, #0
 1766 03c0 0193     		str	r3, [sp, #4]
 1767 03c2 0091     		str	r1, [sp]
 1768 03c4 3346     		mov	r3, r6
 1769 03c6 2246     		mov	r2, r4
 1770              	.LVL165:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1771              		.loc 1 773 35 view .LVU495
 1772 03c8 5946     		mov	r1, fp
 1773              	.LVL166:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1774              		.loc 1 773 35 view .LVU496
 1775 03ca 3846     		mov	r0, r7
 1776 03cc FFF7FEFF 		bl	_ntoa_long
 1777              	.LVL167:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1778              		.loc 1 773 35 view .LVU497
 1779 03d0 0446     		mov	r4, r0
 1780              	.LVL168:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1781              		.loc 1 773 35 view .LVU498
 1782 03d2 8CE7     		b	.L110
 1783              	.LVL169:
 1784              	.L175:
 773:lvgl/src/misc/lv_printf.c ****                         }
 1785              		.loc 1 773 35 view .LVU499
 1786              	.LBE42:
 1787              	.LBB43:
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1788              		.loc 1 753 25 is_stmt 1 view .LVU500
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1789              		.loc 1 753 41 is_stmt 0 view .LVU501
 1790 03d4 1A9B     		ldr	r3, [sp, #104]
 1791 03d6 1A1D     		adds	r2, r3, #4
 1792              	.LVL170:
 753:lvgl/src/misc/lv_printf.c ****                         va_list copy;
 1793              		.loc 1 753 41 view .LVU502
 1794 03d8 1A92     		str	r2, [sp, #104]
 1795 03da 1B68     		ldr	r3, [r3]
 754:lvgl/src/misc/lv_printf.c **** 
 1796              		.loc 1 754 25 is_stmt 1 view .LVU503
 756:lvgl/src/misc/lv_printf.c ****                         idx += _vsnprintf(out, buffer + idx, maxlen - idx, vaf->fmt, copy);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 53


 1797              		.loc 1 756 25 view .LVU504
 1798 03dc 5A68     		ldr	r2, [r3, #4]
 1799 03de 1268     		ldr	r2, [r2]
 1800 03e0 0F92     		str	r2, [sp, #60]
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1801              		.loc 1 757 25 view .LVU505
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1802              		.loc 1 757 32 is_stmt 0 view .LVU506
 1803 03e2 1B68     		ldr	r3, [r3]
 1804 03e4 0092     		str	r2, [sp]
 1805 03e6 321B     		subs	r2, r6, r4
 1806 03e8 0BEB0401 		add	r1, fp, r4
 1807 03ec 3846     		mov	r0, r7
 1808 03ee FFF707FE 		bl	_vsnprintf
 1809              	.LVL171:
 757:lvgl/src/misc/lv_printf.c ****                         va_end(copy);
 1810              		.loc 1 757 29 view .LVU507
 1811 03f2 0444     		add	r4, r4, r0
 1812              	.LVL172:
 758:lvgl/src/misc/lv_printf.c ****                     }
 1813              		.loc 1 758 25 is_stmt 1 view .LVU508
 1814              	.LBE43:
 1815 03f4 7BE7     		b	.L110
 1816              	.LVL173:
 1817              	.L176:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1818              		.loc 1 764 29 view .LVU509
 764:lvgl/src/misc/lv_printf.c **** #endif
 1819              		.loc 1 764 35 is_stmt 0 view .LVU510
 1820 03f6 1A9B     		ldr	r3, [sp, #104]
 1821 03f8 0733     		adds	r3, r3, #7
 1822 03fa 23F00703 		bic	r3, r3, #7
 1823 03fe 03F10801 		add	r1, r3, #8
 1824 0402 1A91     		str	r1, [sp, #104]
 1825 0404 0895     		str	r5, [sp, #32]
 1826 0406 0A99     		ldr	r1, [sp, #40]
 1827 0408 0791     		str	r1, [sp, #28]
 1828 040a CDF818A0 		str	r10, [sp, #24]
 1829 040e 0021     		movs	r1, #0
 1830 0410 0492     		str	r2, [sp, #16]
 1831 0412 0591     		str	r1, [sp, #20]
 1832 0414 0291     		str	r1, [sp, #8]
 1833 0416 D3E90023 		ldrd	r2, [r3]
 1834              	.LVL174:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1835              		.loc 1 764 35 view .LVU511
 1836 041a CDE90023 		strd	r2, [sp]
 1837 041e 3346     		mov	r3, r6
 1838 0420 2246     		mov	r2, r4
 1839 0422 5946     		mov	r1, fp
 1840 0424 3846     		mov	r0, r7
 1841 0426 FFF7FEFF 		bl	_ntoa_long_long
 1842              	.LVL175:
 764:lvgl/src/misc/lv_printf.c **** #endif
 1843              		.loc 1 764 35 view .LVU512
 1844 042a 0446     		mov	r4, r0
 1845              	.LVL176:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 54


 764:lvgl/src/misc/lv_printf.c **** #endif
 1846              		.loc 1 764 35 view .LVU513
 1847 042c 5FE7     		b	.L110
 1848              	.LVL177:
 1849              	.L177:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1850              		.loc 1 768 29 is_stmt 1 view .LVU514
 768:lvgl/src/misc/lv_printf.c ****                         }
 1851              		.loc 1 768 35 is_stmt 0 view .LVU515
 1852 042e 1A9B     		ldr	r3, [sp, #104]
 1853 0430 191D     		adds	r1, r3, #4
 1854 0432 1A91     		str	r1, [sp, #104]
 1855 0434 0595     		str	r5, [sp, #20]
 1856 0436 0A99     		ldr	r1, [sp, #40]
 1857 0438 0491     		str	r1, [sp, #16]
 1858 043a CDF80CA0 		str	r10, [sp, #12]
 1859 043e 0292     		str	r2, [sp, #8]
 1860 0440 0022     		movs	r2, #0
 1861              	.LVL178:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1862              		.loc 1 768 35 view .LVU516
 1863 0442 0192     		str	r2, [sp, #4]
 1864 0444 1B68     		ldr	r3, [r3]
 1865 0446 0093     		str	r3, [sp]
 1866 0448 3346     		mov	r3, r6
 1867 044a 2246     		mov	r2, r4
 1868 044c 5946     		mov	r1, fp
 1869 044e 3846     		mov	r0, r7
 1870 0450 FFF7FEFF 		bl	_ntoa_long
 1871              	.LVL179:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1872              		.loc 1 768 35 view .LVU517
 1873 0454 0446     		mov	r4, r0
 1874              	.LVL180:
 768:lvgl/src/misc/lv_printf.c ****                         }
 1875              		.loc 1 768 35 view .LVU518
 1876 0456 4AE7     		b	.L110
 1877              	.LVL181:
 1878              	.L118:
 1879              	.LBB44:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1880              		.loc 1 772 186 discriminator 2 view .LVU519
 1881 0458 15F0800F 		tst	r5, #128
 1882 045c 04D0     		beq	.L120
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1883              		.loc 1 772 161 view .LVU520
 1884 045e 1A9B     		ldr	r3, [sp, #104]
 1885 0460 191D     		adds	r1, r3, #4
 1886 0462 1A91     		str	r1, [sp, #104]
 1887 0464 1988     		ldrh	r1, [r3]
 1888 0466 A4E7     		b	.L119
 1889              	.L120:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1890              		.loc 1 772 186 view .LVU521
 1891 0468 1A9B     		ldr	r3, [sp, #104]
 1892 046a 191D     		adds	r1, r3, #4
 1893 046c 1A91     		str	r1, [sp, #104]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 55


 1894 046e 1968     		ldr	r1, [r3]
 1895 0470 9FE7     		b	.L119
 1896              	.LVL182:
 1897              	.L100:
 772:lvgl/src/misc/lv_printf.c ****                             idx = _ntoa_long(out, buffer, idx, maxlen, value, false, base, precisio
 1898              		.loc 1 772 186 view .LVU522
 1899              	.LBE44:
 1900              	.LBE36:
 1901              	.LBB45:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1902              		.loc 1 799 21 is_stmt 1 view .LVU523
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1903              		.loc 1 801 21 view .LVU524
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1904              		.loc 1 801 23 is_stmt 0 view .LVU525
 1905 0472 15F00205 		ands	r5, r5, #2
 1906              	.LVL183:
 801:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1907              		.loc 1 801 23 view .LVU526
 1908 0476 1FD0     		beq	.L155
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1909              		.loc 1 799 34 view .LVU527
 1910 0478 4FF00108 		mov	r8, #1
 1911              	.LVL184:
 1912              	.L122:
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1913              		.loc 1 807 21 is_stmt 1 view .LVU528
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1914              		.loc 1 807 31 is_stmt 0 view .LVU529
 1915 047c 1A98     		ldr	r0, [sp, #104]
 1916 047e 031D     		adds	r3, r0, #4
 1917 0480 1A93     		str	r3, [sp, #104]
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1918              		.loc 1 807 21 view .LVU530
 1919 0482 04F10109 		add	r9, r4, #1
 1920              	.LVL185:
 807:lvgl/src/misc/lv_printf.c ****                     // post padding
 1921              		.loc 1 807 21 view .LVU531
 1922 0486 3346     		mov	r3, r6
 1923 0488 2246     		mov	r2, r4
 1924 048a 5946     		mov	r1, fp
 1925 048c 0078     		ldrb	r0, [r0]	@ zero_extendqisi2
 1926 048e B847     		blx	r7
 1927              	.LVL186:
 809:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1928              		.loc 1 809 21 is_stmt 1 view .LVU532
 809:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 1929              		.loc 1 809 23 is_stmt 0 view .LVU533
 1930 0490 BDB9     		cbnz	r5, .L178
 1931              	.LVL187:
 1932              	.L125:
 814:lvgl/src/misc/lv_printf.c ****                     break;
 1933              		.loc 1 814 21 is_stmt 1 view .LVU534
 814:lvgl/src/misc/lv_printf.c ****                     break;
 1934              		.loc 1 814 27 is_stmt 0 view .LVU535
 1935 0492 0D9B     		ldr	r3, [sp, #52]
 1936 0494 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 56


 1937 0496 0D93     		str	r3, [sp, #52]
 815:lvgl/src/misc/lv_printf.c ****                 }
 1938              		.loc 1 815 21 is_stmt 1 view .LVU536
 1939 0498 4C46     		mov	r4, r9
 1940 049a BCE5     		b	.L142
 1941              	.LVL188:
 1942              	.L123:
 803:lvgl/src/misc/lv_printf.c ****                         }
 1943              		.loc 1 803 29 view .LVU537
 1944 049c 02F10109 		add	r9, r2, #1
 1945              	.LVL189:
 803:lvgl/src/misc/lv_printf.c ****                         }
 1946              		.loc 1 803 29 is_stmt 0 view .LVU538
 1947 04a0 3346     		mov	r3, r6
 1948 04a2 5946     		mov	r1, fp
 1949 04a4 2020     		movs	r0, #32
 1950 04a6 B847     		blx	r7
 1951              	.LVL190:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1952              		.loc 1 802 32 view .LVU539
 1953 04a8 4346     		mov	r3, r8
 803:lvgl/src/misc/lv_printf.c ****                         }
 1954              		.loc 1 803 29 view .LVU540
 1955 04aa 4A46     		mov	r2, r9
 1956              	.LVL191:
 1957              	.L121:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1958              		.loc 1 802 30 is_stmt 1 view .LVU541
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1959              		.loc 1 802 32 is_stmt 0 view .LVU542
 1960 04ac 03F10108 		add	r8, r3, #1
 1961              	.LVL192:
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1962              		.loc 1 802 30 view .LVU543
 1963 04b0 9A45     		cmp	r10, r3
 1964 04b2 F3D8     		bhi	.L123
 802:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1965              		.loc 1 802 30 view .LVU544
 1966 04b4 1446     		mov	r4, r2
 1967 04b6 E1E7     		b	.L122
 1968              	.LVL193:
 1969              	.L155:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1970              		.loc 1 799 34 view .LVU545
 1971 04b8 0123     		movs	r3, #1
 1972 04ba DDF828A0 		ldr	r10, [sp, #40]
 1973              	.LVL194:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1974              		.loc 1 799 34 view .LVU546
 1975 04be 2246     		mov	r2, r4
 1976 04c0 F4E7     		b	.L121
 1977              	.LVL195:
 1978              	.L178:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1979              		.loc 1 799 34 view .LVU547
 1980 04c2 4A46     		mov	r2, r9
 1981 04c4 DDF82890 		ldr	r9, [sp, #40]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 57


 1982              	.LVL196:
 799:lvgl/src/misc/lv_printf.c ****                     // pre padding
 1983              		.loc 1 799 34 view .LVU548
 1984 04c8 06E0     		b	.L124
 1985              	.LVL197:
 1986              	.L126:
 811:lvgl/src/misc/lv_printf.c ****                         }
 1987              		.loc 1 811 29 is_stmt 1 view .LVU549
 1988 04ca 551C     		adds	r5, r2, #1
 1989              	.LVL198:
 811:lvgl/src/misc/lv_printf.c ****                         }
 1990              		.loc 1 811 29 is_stmt 0 view .LVU550
 1991 04cc 3346     		mov	r3, r6
 1992 04ce 5946     		mov	r1, fp
 1993 04d0 2020     		movs	r0, #32
 1994 04d2 B847     		blx	r7
 1995              	.LVL199:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 1996              		.loc 1 810 32 view .LVU551
 1997 04d4 A046     		mov	r8, r4
 811:lvgl/src/misc/lv_printf.c ****                         }
 1998              		.loc 1 811 29 view .LVU552
 1999 04d6 2A46     		mov	r2, r5
 2000              	.LVL200:
 2001              	.L124:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2002              		.loc 1 810 30 is_stmt 1 view .LVU553
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2003              		.loc 1 810 32 is_stmt 0 view .LVU554
 2004 04d8 08F10104 		add	r4, r8, #1
 2005              	.LVL201:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2006              		.loc 1 810 30 view .LVU555
 2007 04dc C145     		cmp	r9, r8
 2008 04de F4D8     		bhi	.L126
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2009              		.loc 1 810 30 view .LVU556
 2010 04e0 9146     		mov	r9, r2
 2011 04e2 D6E7     		b	.L125
 2012              	.LVL202:
 2013              	.L99:
 810:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2014              		.loc 1 810 30 view .LVU557
 2015              	.LBE45:
 2016              	.LBB46:
 819:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 2017              		.loc 1 819 21 is_stmt 1 view .LVU558
 819:lvgl/src/misc/lv_printf.c ****                     unsigned int l = _strnlen_s(p, precision ? precision : (size_t) -1);
 2018              		.loc 1 819 34 is_stmt 0 view .LVU559
 2019 04e4 1A9B     		ldr	r3, [sp, #104]
 2020 04e6 1A1D     		adds	r2, r3, #4
 2021 04e8 1A92     		str	r2, [sp, #104]
 2022 04ea D3F80090 		ldr	r9, [r3]
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2023              		.loc 1 820 21 is_stmt 1 view .LVU560
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2024              		.loc 1 820 38 is_stmt 0 view .LVU561
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 58


 2025 04ee BAF1000F 		cmp	r10, #0
 2026 04f2 1ED1     		bne	.L127
 2027 04f4 4FF0FF33 		mov	r3, #-1
 2028              	.L128:
 2029 04f8 C846     		mov	r8, r9
 2030 04fa 02E0     		b	.L129
 2031              	.LVL203:
 2032              	.L131:
 2033              	.LBB47:
 2034              	.LBB48:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2035              		.loc 1 146 39 is_stmt 1 view .LVU562
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2036              		.loc 1 146 35 view .LVU563
 2037 04fc 08F10108 		add	r8, r8, #1
 2038              	.LVL204:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2039              		.loc 1 146 31 is_stmt 0 view .LVU564
 2040 0500 1346     		mov	r3, r2
 2041              	.LVL205:
 2042              	.L129:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2043              		.loc 1 146 18 is_stmt 1 view .LVU565
 2044 0502 98F80020 		ldrb	r2, [r8]	@ zero_extendqisi2
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2045              		.loc 1 146 5 is_stmt 0 view .LVU566
 2046 0506 12B1     		cbz	r2, .L130
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2047              		.loc 1 146 31 view .LVU567
 2048 0508 5A1E     		subs	r2, r3, #1
 2049              	.LVL206:
 146:lvgl/src/misc/lv_printf.c ****     return (unsigned int)(s - str);
 2050              		.loc 1 146 21 view .LVU568
 2051 050a 002B     		cmp	r3, #0
 2052 050c F6D1     		bne	.L131
 2053              	.LVL207:
 2054              	.L130:
 147:lvgl/src/misc/lv_printf.c **** }
 2055              		.loc 1 147 5 is_stmt 1 view .LVU569
 147:lvgl/src/misc/lv_printf.c **** }
 2056              		.loc 1 147 29 is_stmt 0 view .LVU570
 2057 050e A8EB0908 		sub	r8, r8, r9
 2058              	.LVL208:
 147:lvgl/src/misc/lv_printf.c **** }
 2059              		.loc 1 147 29 view .LVU571
 2060              	.LBE48:
 2061              	.LBE47:
 822:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2062              		.loc 1 822 21 is_stmt 1 view .LVU572
 822:lvgl/src/misc/lv_printf.c ****                         l = (l < precision ? l : precision);
 2063              		.loc 1 822 23 is_stmt 0 view .LVU573
 2064 0512 15F48063 		ands	r3, r5, #1024
 2065 0516 0B93     		str	r3, [sp, #44]
 2066 0518 02D0     		beq	.L132
 823:lvgl/src/misc/lv_printf.c ****                     }
 2067              		.loc 1 823 25 is_stmt 1 view .LVU574
 823:lvgl/src/misc/lv_printf.c ****                     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 59


 2068              		.loc 1 823 27 is_stmt 0 view .LVU575
 2069 051a D045     		cmp	r8, r10
 2070 051c 28BF     		it	cs
 2071 051e D046     		movcs	r8, r10
 2072              	.LVL209:
 2073              	.L132:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2074              		.loc 1 825 21 is_stmt 1 view .LVU576
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2075              		.loc 1 825 23 is_stmt 0 view .LVU577
 2076 0520 15F00203 		ands	r3, r5, #2
 2077 0524 0C93     		str	r3, [sp, #48]
 2078 0526 06D0     		beq	.L179
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2079              		.loc 1 825 23 view .LVU578
 2080 0528 2246     		mov	r2, r4
 2081 052a 5446     		mov	r4, r10
 2082              	.LVL210:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2083              		.loc 1 825 23 view .LVU579
 2084 052c B246     		mov	r10, r6
 2085              	.LVL211:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2086              		.loc 1 825 23 view .LVU580
 2087 052e 0B9E     		ldr	r6, [sp, #44]
 2088              	.LVL212:
 825:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2089              		.loc 1 825 23 view .LVU581
 2090 0530 1DE0     		b	.L136
 2091              	.LVL213:
 2092              	.L127:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2093              		.loc 1 820 38 view .LVU582
 2094 0532 5346     		mov	r3, r10
 2095 0534 E0E7     		b	.L128
 2096              	.LVL214:
 2097              	.L179:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2098              		.loc 1 820 38 view .LVU583
 2099 0536 2246     		mov	r2, r4
 2100 0538 0A9C     		ldr	r4, [sp, #40]
 2101              	.LVL215:
 820:lvgl/src/misc/lv_printf.c ****                     // pre padding
 2102              		.loc 1 820 38 view .LVU584
 2103 053a 4346     		mov	r3, r8
 2104              	.LVL216:
 2105              	.L133:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2106              		.loc 1 826 30 is_stmt 1 view .LVU585
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2107              		.loc 1 826 32 is_stmt 0 view .LVU586
 2108 053c 5D1C     		adds	r5, r3, #1
 2109              	.LVL217:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2110              		.loc 1 826 30 view .LVU587
 2111 053e 9C42     		cmp	r4, r3
 2112 0540 08D9     		bls	.L180
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 60


 827:lvgl/src/misc/lv_printf.c ****                         }
 2113              		.loc 1 827 29 is_stmt 1 view .LVU588
 2114 0542 02F10108 		add	r8, r2, #1
 2115              	.LVL218:
 827:lvgl/src/misc/lv_printf.c ****                         }
 2116              		.loc 1 827 29 is_stmt 0 view .LVU589
 2117 0546 3346     		mov	r3, r6
 2118 0548 5946     		mov	r1, fp
 2119 054a 2020     		movs	r0, #32
 2120 054c B847     		blx	r7
 2121              	.LVL219:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2122              		.loc 1 826 32 view .LVU590
 2123 054e 2B46     		mov	r3, r5
 827:lvgl/src/misc/lv_printf.c ****                         }
 2124              		.loc 1 827 29 view .LVU591
 2125 0550 4246     		mov	r2, r8
 2126 0552 F3E7     		b	.L133
 2127              	.LVL220:
 2128              	.L180:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2129              		.loc 1 826 32 view .LVU592
 2130 0554 A846     		mov	r8, r5
 2131 0556 5446     		mov	r4, r10
 2132 0558 B246     		mov	r10, r6
 2133              	.LVL221:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2134              		.loc 1 826 32 view .LVU593
 2135 055a 0B9E     		ldr	r6, [sp, #44]
 2136              	.LVL222:
 826:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2137              		.loc 1 826 32 view .LVU594
 2138 055c 07E0     		b	.L136
 2139              	.LVL223:
 2140              	.L156:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2141              		.loc 1 831 80 view .LVU595
 2142 055e 1C46     		mov	r4, r3
 2143              	.LVL224:
 2144              	.L138:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2145              		.loc 1 832 25 is_stmt 1 view .LVU596
 832:lvgl/src/misc/lv_printf.c ****                     }
 2146              		.loc 1 832 32 is_stmt 0 view .LVU597
 2147 0560 09F10109 		add	r9, r9, #1
 2148              	.LVL225:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2149              		.loc 1 832 25 view .LVU598
 2150 0564 551C     		adds	r5, r2, #1
 2151              	.LVL226:
 832:lvgl/src/misc/lv_printf.c ****                     }
 2152              		.loc 1 832 25 view .LVU599
 2153 0566 5346     		mov	r3, r10
 2154 0568 5946     		mov	r1, fp
 2155 056a B847     		blx	r7
 2156              	.LVL227:
 2157 056c 2A46     		mov	r2, r5
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 61


 2158              	.LVL228:
 2159              	.L136:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2160              		.loc 1 831 26 is_stmt 1 view .LVU600
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2161              		.loc 1 831 28 is_stmt 0 view .LVU601
 2162 056e 99F80000 		ldrb	r0, [r9]	@ zero_extendqisi2
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2163              		.loc 1 831 26 view .LVU602
 2164 0572 20B1     		cbz	r0, .L137
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2165              		.loc 1 831 37 discriminator 1 view .LVU603
 2166 0574 002E     		cmp	r6, #0
 2167 0576 F3D0     		beq	.L138
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2168              		.loc 1 831 80 discriminator 2 view .LVU604
 2169 0578 631E     		subs	r3, r4, #1
 2170              	.LVL229:
 831:lvgl/src/misc/lv_printf.c ****                         out(*(p++), buffer, idx++, maxlen);
 2171              		.loc 1 831 68 discriminator 2 view .LVU605
 2172 057a 002C     		cmp	r4, #0
 2173 057c EFD1     		bne	.L156
 2174              	.LVL230:
 2175              	.L137:
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2176              		.loc 1 835 23 view .LVU606
 2177 057e 1446     		mov	r4, r2
 2178 0580 5646     		mov	r6, r10
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2179              		.loc 1 835 21 is_stmt 1 view .LVU607
 835:lvgl/src/misc/lv_printf.c ****                         while(l++ < width) {
 2180              		.loc 1 835 23 is_stmt 0 view .LVU608
 2181 0582 0C9B     		ldr	r3, [sp, #48]
 2182 0584 1BB9     		cbnz	r3, .L181
 2183              	.LVL231:
 2184              	.L140:
 840:lvgl/src/misc/lv_printf.c ****                     break;
 2185              		.loc 1 840 21 is_stmt 1 view .LVU609
 840:lvgl/src/misc/lv_printf.c ****                     break;
 2186              		.loc 1 840 27 is_stmt 0 view .LVU610
 2187 0586 0D9B     		ldr	r3, [sp, #52]
 2188 0588 0133     		adds	r3, r3, #1
 2189 058a 0D93     		str	r3, [sp, #52]
 841:lvgl/src/misc/lv_printf.c ****                 }
 2190              		.loc 1 841 21 is_stmt 1 view .LVU611
 2191 058c 43E5     		b	.L142
 2192              	.LVL232:
 2193              	.L181:
 841:lvgl/src/misc/lv_printf.c ****                 }
 2194              		.loc 1 841 21 is_stmt 0 view .LVU612
 2195 058e DDF82890 		ldr	r9, [sp, #40]
 2196              	.LVL233:
 841:lvgl/src/misc/lv_printf.c ****                 }
 2197              		.loc 1 841 21 view .LVU613
 2198 0592 06E0     		b	.L139
 2199              	.LVL234:
 2200              	.L141:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 62


 837:lvgl/src/misc/lv_printf.c ****                         }
 2201              		.loc 1 837 29 is_stmt 1 view .LVU614
 2202 0594 551C     		adds	r5, r2, #1
 2203              	.LVL235:
 837:lvgl/src/misc/lv_printf.c ****                         }
 2204              		.loc 1 837 29 is_stmt 0 view .LVU615
 2205 0596 3346     		mov	r3, r6
 2206 0598 5946     		mov	r1, fp
 2207 059a 2020     		movs	r0, #32
 2208 059c B847     		blx	r7
 2209              	.LVL236:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2210              		.loc 1 836 32 view .LVU616
 2211 059e A046     		mov	r8, r4
 837:lvgl/src/misc/lv_printf.c ****                         }
 2212              		.loc 1 837 29 view .LVU617
 2213 05a0 2A46     		mov	r2, r5
 2214              	.LVL237:
 2215              	.L139:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2216              		.loc 1 836 30 is_stmt 1 view .LVU618
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2217              		.loc 1 836 32 is_stmt 0 view .LVU619
 2218 05a2 08F10104 		add	r4, r8, #1
 2219              	.LVL238:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2220              		.loc 1 836 30 view .LVU620
 2221 05a6 C145     		cmp	r9, r8
 2222 05a8 F4D8     		bhi	.L141
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2223              		.loc 1 836 30 view .LVU621
 2224 05aa 1446     		mov	r4, r2
 2225              	.LVL239:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2226              		.loc 1 836 30 view .LVU622
 2227 05ac EBE7     		b	.L140
 2228              	.LVL240:
 2229              	.L101:
 836:lvgl/src/misc/lv_printf.c ****                             out(' ', buffer, idx++, maxlen);
 2230              		.loc 1 836 30 view .LVU623
 2231              	.LBE46:
 2232              		.loc 1 845 17 is_stmt 1 view .LVU624
 2233 05ae 651C     		adds	r5, r4, #1
 2234              	.LVL241:
 2235              		.loc 1 845 17 is_stmt 0 view .LVU625
 2236 05b0 3346     		mov	r3, r6
 2237 05b2 2246     		mov	r2, r4
 2238 05b4 5946     		mov	r1, fp
 2239 05b6 2520     		movs	r0, #37
 2240 05b8 B847     		blx	r7
 2241              	.LVL242:
 846:lvgl/src/misc/lv_printf.c ****                 format++;
 2242              		.loc 1 846 17 is_stmt 1 view .LVU626
 2243              		.loc 1 846 23 is_stmt 0 view .LVU627
 2244 05ba 0D9B     		ldr	r3, [sp, #52]
 2245 05bc 0133     		adds	r3, r3, #1
 2246 05be 0D93     		str	r3, [sp, #52]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 63


 847:lvgl/src/misc/lv_printf.c ****                 break;
 2247              		.loc 1 847 17 is_stmt 1 view .LVU628
 845:lvgl/src/misc/lv_printf.c ****                 format++;
 2248              		.loc 1 845 17 is_stmt 0 view .LVU629
 2249 05c0 2C46     		mov	r4, r5
 2250              		.loc 1 847 17 view .LVU630
 2251 05c2 28E5     		b	.L142
 2252              	.LVL243:
 2253              	.L96:
 848:lvgl/src/misc/lv_printf.c **** 
 849:lvgl/src/misc/lv_printf.c ****             default :
 850:lvgl/src/misc/lv_printf.c ****                 out(*format, buffer, idx++, maxlen);
 2254              		.loc 1 850 17 is_stmt 1 view .LVU631
 2255 05c4 651C     		adds	r5, r4, #1
 2256              	.LVL244:
 2257              		.loc 1 850 17 is_stmt 0 view .LVU632
 2258 05c6 3346     		mov	r3, r6
 2259 05c8 2246     		mov	r2, r4
 2260 05ca 5946     		mov	r1, fp
 2261 05cc B847     		blx	r7
 2262              	.LVL245:
 851:lvgl/src/misc/lv_printf.c ****                 format++;
 2263              		.loc 1 851 17 is_stmt 1 view .LVU633
 2264              		.loc 1 851 23 is_stmt 0 view .LVU634
 2265 05ce 0D9B     		ldr	r3, [sp, #52]
 2266 05d0 0133     		adds	r3, r3, #1
 2267 05d2 0D93     		str	r3, [sp, #52]
 852:lvgl/src/misc/lv_printf.c ****                 break;
 2268              		.loc 1 852 17 is_stmt 1 view .LVU635
 850:lvgl/src/misc/lv_printf.c ****                 format++;
 2269              		.loc 1 850 17 is_stmt 0 view .LVU636
 2270 05d4 2C46     		mov	r4, r5
 2271              		.loc 1 852 17 view .LVU637
 2272 05d6 1EE5     		b	.L142
 2273              	.LVL246:
 2274              	.L161:
 557:lvgl/src/misc/lv_printf.c ****     }
 2275              		.loc 1 557 13 view .LVU638
 2276 05d8 074F     		ldr	r7, .L182
 2277 05da 1BE5     		b	.L69
 2278              	.LVL247:
 2279              	.L162:
 853:lvgl/src/misc/lv_printf.c ****         }
 854:lvgl/src/misc/lv_printf.c ****     }
 855:lvgl/src/misc/lv_printf.c **** 
 856:lvgl/src/misc/lv_printf.c ****     // termination
 857:lvgl/src/misc/lv_printf.c ****     out((char)0, buffer, idx < maxlen ? idx : maxlen - 1U, maxlen);
 2280              		.loc 1 857 5 is_stmt 1 view .LVU639
 2281 05dc B442     		cmp	r4, r6
 2282 05de 08D3     		bcc	.L157
 2283              		.loc 1 857 5 is_stmt 0 discriminator 1 view .LVU640
 2284 05e0 721E     		subs	r2, r6, #1
 2285              	.L144:
 2286              		.loc 1 857 5 discriminator 4 view .LVU641
 2287 05e2 3346     		mov	r3, r6
 2288 05e4 5946     		mov	r1, fp
 2289 05e6 0020     		movs	r0, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 64


 2290 05e8 B847     		blx	r7
 2291              	.LVL248:
 858:lvgl/src/misc/lv_printf.c **** 
 859:lvgl/src/misc/lv_printf.c ****     // return written chars without terminating \0
 860:lvgl/src/misc/lv_printf.c ****     return (int)idx;
 2292              		.loc 1 860 5 is_stmt 1 discriminator 4 view .LVU642
 861:lvgl/src/misc/lv_printf.c **** }
 2293              		.loc 1 861 1 is_stmt 0 discriminator 4 view .LVU643
 2294 05ea 2046     		mov	r0, r4
 2295 05ec 11B0     		add	sp, sp, #68
 2296              		.cfi_remember_state
 2297              		.cfi_def_cfa_offset 36
 2298              		@ sp needed
 2299 05ee BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 2300              	.LVL249:
 2301              	.L157:
 2302              		.cfi_restore_state
 857:lvgl/src/misc/lv_printf.c **** 
 2303              		.loc 1 857 5 view .LVU644
 2304 05f2 2246     		mov	r2, r4
 2305 05f4 F5E7     		b	.L144
 2306              	.L183:
 2307 05f6 00BF     		.align	2
 2308              	.L182:
 2309 05f8 00000000 		.word	_out_null
 2310              		.cfi_endproc
 2311              	.LFE9:
 2313              		.section	.text.lv_snprintf,"ax",%progbits
 2314              		.align	1
 2315              		.global	lv_snprintf
 2316              		.syntax unified
 2317              		.thumb
 2318              		.thumb_func
 2320              	lv_snprintf:
 2321              	.LVL250:
 2322              	.LFB10:
 862:lvgl/src/misc/lv_printf.c **** 
 863:lvgl/src/misc/lv_printf.c **** ///////////////////////////////////////////////////////////////////////////////
 864:lvgl/src/misc/lv_printf.c **** 
 865:lvgl/src/misc/lv_printf.c **** int lv_snprintf(char * buffer, size_t count, const char * format, ...)
 866:lvgl/src/misc/lv_printf.c **** {
 2323              		.loc 1 866 1 is_stmt 1 view -0
 2324              		.cfi_startproc
 2325              		@ args = 4, pretend = 8, frame = 8
 2326              		@ frame_needed = 0, uses_anonymous_args = 1
 2327              		.loc 1 866 1 is_stmt 0 view .LVU646
 2328 0000 0CB4     		push	{r2, r3}
 2329              		.cfi_def_cfa_offset 8
 2330              		.cfi_offset 2, -8
 2331              		.cfi_offset 3, -4
 2332 0002 10B5     		push	{r4, lr}
 2333              		.cfi_def_cfa_offset 16
 2334              		.cfi_offset 4, -16
 2335              		.cfi_offset 14, -12
 2336 0004 84B0     		sub	sp, sp, #16
 2337              		.cfi_def_cfa_offset 32
 2338 0006 0A46     		mov	r2, r1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 65


 2339 0008 06AC     		add	r4, sp, #24
 2340 000a 54F8043B 		ldr	r3, [r4], #4
 867:lvgl/src/misc/lv_printf.c ****     va_list va;
 2341              		.loc 1 867 5 is_stmt 1 view .LVU647
 868:lvgl/src/misc/lv_printf.c ****     va_start(va, format);
 2342              		.loc 1 868 5 view .LVU648
 2343 000e 0394     		str	r4, [sp, #12]
 869:lvgl/src/misc/lv_printf.c ****     const int ret = _vsnprintf(_out_buffer, buffer, count, format, va);
 2344              		.loc 1 869 5 view .LVU649
 2345              		.loc 1 869 21 is_stmt 0 view .LVU650
 2346 0010 0094     		str	r4, [sp]
 2347 0012 0146     		mov	r1, r0
 2348              	.LVL251:
 2349              		.loc 1 869 21 view .LVU651
 2350 0014 0348     		ldr	r0, .L186
 2351              	.LVL252:
 2352              		.loc 1 869 21 view .LVU652
 2353 0016 FFF7FEFF 		bl	_vsnprintf
 2354              	.LVL253:
 870:lvgl/src/misc/lv_printf.c ****     va_end(va);
 2355              		.loc 1 870 5 is_stmt 1 view .LVU653
 871:lvgl/src/misc/lv_printf.c ****     return ret;
 2356              		.loc 1 871 5 view .LVU654
 872:lvgl/src/misc/lv_printf.c **** }
 2357              		.loc 1 872 1 is_stmt 0 view .LVU655
 2358 001a 04B0     		add	sp, sp, #16
 2359              		.cfi_def_cfa_offset 16
 2360              		@ sp needed
 2361 001c BDE81040 		pop	{r4, lr}
 2362              		.cfi_restore 14
 2363              		.cfi_restore 4
 2364              		.cfi_def_cfa_offset 8
 2365 0020 02B0     		add	sp, sp, #8
 2366              		.cfi_restore 3
 2367              		.cfi_restore 2
 2368              		.cfi_def_cfa_offset 0
 2369 0022 7047     		bx	lr
 2370              	.L187:
 2371              		.align	2
 2372              	.L186:
 2373 0024 00000000 		.word	_out_buffer
 2374              		.cfi_endproc
 2375              	.LFE10:
 2377              		.section	.text.lv_vsnprintf,"ax",%progbits
 2378              		.align	1
 2379              		.global	lv_vsnprintf
 2380              		.syntax unified
 2381              		.thumb
 2382              		.thumb_func
 2384              	lv_vsnprintf:
 2385              	.LVL254:
 2386              	.LFB11:
 873:lvgl/src/misc/lv_printf.c **** 
 874:lvgl/src/misc/lv_printf.c **** int lv_vsnprintf(char * buffer, size_t count, const char * format, va_list va)
 875:lvgl/src/misc/lv_printf.c **** {
 2387              		.loc 1 875 1 is_stmt 1 view -0
 2388              		.cfi_startproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 66


 2389              		@ args = 0, pretend = 0, frame = 0
 2390              		@ frame_needed = 0, uses_anonymous_args = 0
 2391              		.loc 1 875 1 is_stmt 0 view .LVU657
 2392 0000 00B5     		push	{lr}
 2393              		.cfi_def_cfa_offset 4
 2394              		.cfi_offset 14, -4
 2395 0002 83B0     		sub	sp, sp, #12
 2396              		.cfi_def_cfa_offset 16
 876:lvgl/src/misc/lv_printf.c ****     return _vsnprintf(_out_buffer, buffer, count, format, va);
 2397              		.loc 1 876 5 is_stmt 1 view .LVU658
 2398              		.loc 1 876 12 is_stmt 0 view .LVU659
 2399 0004 0093     		str	r3, [sp]
 2400 0006 1346     		mov	r3, r2
 2401              	.LVL255:
 2402              		.loc 1 876 12 view .LVU660
 2403 0008 0A46     		mov	r2, r1
 2404              	.LVL256:
 2405              		.loc 1 876 12 view .LVU661
 2406 000a 0146     		mov	r1, r0
 2407              	.LVL257:
 2408              		.loc 1 876 12 view .LVU662
 2409 000c 0248     		ldr	r0, .L190
 2410              	.LVL258:
 2411              		.loc 1 876 12 view .LVU663
 2412 000e FFF7FEFF 		bl	_vsnprintf
 2413              	.LVL259:
 877:lvgl/src/misc/lv_printf.c **** }
 2414              		.loc 1 877 1 view .LVU664
 2415 0012 03B0     		add	sp, sp, #12
 2416              		.cfi_def_cfa_offset 4
 2417              		@ sp needed
 2418 0014 5DF804FB 		ldr	pc, [sp], #4
 2419              	.L191:
 2420              		.align	2
 2421              	.L190:
 2422 0018 00000000 		.word	_out_buffer
 2423              		.cfi_endproc
 2424              	.LFE11:
 2426              		.text
 2427              	.Letext0:
 2428              		.file 2 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stdarg.h"
 2429              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 2430              		.file 4 "lvgl/src/misc/lv_printf.h"
 2431              		.file 5 "<built-in>"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s 			page 67


DEFINED SYMBOLS
                            *ABS*:00000000 lv_printf.c
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:19     .text._out_buffer:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:24     .text._out_buffer:00000000 _out_buffer
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:47     .text._out_null:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:52     .text._out_null:00000000 _out_null
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:70     .text._atoi:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:75     .text._atoi:00000000 _atoi
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:140    .text._out_rev:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:145    .text._out_rev:00000000 _out_rev
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:275    .text._ntoa_format:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:280    .text._ntoa_format:00000000 _ntoa_format
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:556    .text._ntoa_long:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:561    .text._ntoa_long:00000000 _ntoa_long
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:712    .text._ntoa_long_long:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:717    .text._ntoa_long_long:00000000 _ntoa_long_long
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:891    .text._vsnprintf:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:896    .text._vsnprintf:00000000 _vsnprintf
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:987    .text._vsnprintf:0000004e $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1056   .text._vsnprintf:0000008c $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1345   .text._vsnprintf:0000018a $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1429   .text._vsnprintf:00000232 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2309   .text._vsnprintf:000005f8 $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2314   .text.lv_snprintf:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2320   .text.lv_snprintf:00000000 lv_snprintf
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2373   .text.lv_snprintf:00000024 $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2378   .text.lv_vsnprintf:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2384   .text.lv_vsnprintf:00000000 lv_vsnprintf
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:2422   .text.lv_vsnprintf:00000018 $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1004   .text._vsnprintf:0000005f $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1004   .text._vsnprintf:00000060 $t
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1076   .text._vsnprintf:0000009f $d
C:\Users\OSD\AppData\Local\Temp\cc1kDnyk.s:1076   .text._vsnprintf:000000a0 $t

UNDEFINED SYMBOLS
__aeabi_uldivmod
