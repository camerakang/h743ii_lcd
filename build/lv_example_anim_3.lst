ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_anim_3.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.anim_path_bezier3_cb,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	anim_path_bezier3_cb:
  25              	.LVL0:
  26              	.LFB205:
  27              		.file 1 "lvgl/examples/anim/lv_example_anim_3.c"
   1:lvgl/examples/anim/lv_example_anim_3.c **** #include "../lv_examples.h"
   2:lvgl/examples/anim/lv_example_anim_3.c **** #if LV_BUILD_EXAMPLES && LV_USE_SLIDER && LV_USE_CHART && LV_USE_BTN && LV_USE_GRID
   3:lvgl/examples/anim/lv_example_anim_3.c **** 
   4:lvgl/examples/anim/lv_example_anim_3.c **** /**
   5:lvgl/examples/anim/lv_example_anim_3.c ****  * the example show the use of cubic-bezier3 in animation.
   6:lvgl/examples/anim/lv_example_anim_3.c ****  * the control point P1,P2 of cubic-bezier3 can be adjusted by slider.
   7:lvgl/examples/anim/lv_example_anim_3.c ****  * and the chart shows the cubic-bezier3 in real time. you can click
   8:lvgl/examples/anim/lv_example_anim_3.c ****  * run button see animation in current point of cubic-bezier3.
   9:lvgl/examples/anim/lv_example_anim_3.c ****  */
  10:lvgl/examples/anim/lv_example_anim_3.c **** 
  11:lvgl/examples/anim/lv_example_anim_3.c **** #define CHART_POINTS_NUM 256
  12:lvgl/examples/anim/lv_example_anim_3.c **** 
  13:lvgl/examples/anim/lv_example_anim_3.c **** struct {
  14:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * anim_obj;
  15:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * chart;
  16:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_series_t * ser1;
  17:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * p1_slider;
  18:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * p1_label;
  19:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * p2_slider;
  20:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * p2_label;
  21:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * run_btn;
  22:lvgl/examples/anim/lv_example_anim_3.c ****     uint16_t p1;
  23:lvgl/examples/anim/lv_example_anim_3.c ****     uint16_t p2;
  24:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_t a;
  25:lvgl/examples/anim/lv_example_anim_3.c **** } ginfo;
  26:lvgl/examples/anim/lv_example_anim_3.c **** 
  27:lvgl/examples/anim/lv_example_anim_3.c **** static int32_t anim_path_bezier3_cb(const lv_anim_t * a);
  28:lvgl/examples/anim/lv_example_anim_3.c **** static void refer_chart_cubic_bezier(void);
  29:lvgl/examples/anim/lv_example_anim_3.c **** static void run_btn_event_handler(lv_event_t * e);
  30:lvgl/examples/anim/lv_example_anim_3.c **** static void slider_event_cb(lv_event_t * e);
  31:lvgl/examples/anim/lv_example_anim_3.c **** static void page_obj_init(lv_obj_t * par);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 2


  32:lvgl/examples/anim/lv_example_anim_3.c **** static void anim_x_cb(void * var, int32_t v);
  33:lvgl/examples/anim/lv_example_anim_3.c **** 
  34:lvgl/examples/anim/lv_example_anim_3.c **** /**
  35:lvgl/examples/anim/lv_example_anim_3.c ****  * create an animation
  36:lvgl/examples/anim/lv_example_anim_3.c ****  */
  37:lvgl/examples/anim/lv_example_anim_3.c **** void lv_example_anim_3(void)
  38:lvgl/examples/anim/lv_example_anim_3.c **** {
  39:lvgl/examples/anim/lv_example_anim_3.c ****     static lv_coord_t col_dsc[] = {LV_GRID_FR(1), 200, LV_GRID_FR(1), LV_GRID_TEMPLATE_LAST};
  40:lvgl/examples/anim/lv_example_anim_3.c ****     static lv_coord_t row_dsc[] = {30, 10, 10, LV_GRID_FR(1), LV_GRID_TEMPLATE_LAST};
  41:lvgl/examples/anim/lv_example_anim_3.c **** 
  42:lvgl/examples/anim/lv_example_anim_3.c ****     /*Create a container with grid*/
  43:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * cont = lv_obj_create(lv_scr_act());
  44:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(cont, 2, LV_PART_MAIN);
  45:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_column(cont, 10, LV_PART_MAIN);
  46:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_row(cont, 10, LV_PART_MAIN);
  47:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_dsc_array(cont, col_dsc, row_dsc);
  48:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_size(cont, 320, 240);
  49:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_center(cont);
  50:lvgl/examples/anim/lv_example_anim_3.c **** 
  51:lvgl/examples/anim/lv_example_anim_3.c ****     page_obj_init(cont);
  52:lvgl/examples/anim/lv_example_anim_3.c **** 
  53:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_init(&ginfo.a);
  54:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_var(&ginfo.a, ginfo.anim_obj);
  55:lvgl/examples/anim/lv_example_anim_3.c ****     int32_t end = lv_obj_get_style_width(cont, LV_PART_MAIN) -
  56:lvgl/examples/anim/lv_example_anim_3.c ****                   lv_obj_get_style_width(ginfo.anim_obj, LV_PART_MAIN) - 10;
  57:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_values(&ginfo.a, 5, end);
  58:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_time(&ginfo.a, 2000);
  59:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_exec_cb(&ginfo.a, anim_x_cb);
  60:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_path_cb(&ginfo.a, anim_path_bezier3_cb);
  61:lvgl/examples/anim/lv_example_anim_3.c **** 
  62:lvgl/examples/anim/lv_example_anim_3.c ****     refer_chart_cubic_bezier();
  63:lvgl/examples/anim/lv_example_anim_3.c **** }
  64:lvgl/examples/anim/lv_example_anim_3.c **** 
  65:lvgl/examples/anim/lv_example_anim_3.c **** static int32_t anim_path_bezier3_cb(const lv_anim_t * a)
  66:lvgl/examples/anim/lv_example_anim_3.c **** {
  28              		.loc 1 66 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 66 1 is_stmt 0 view .LVU1
  33 0000 30B5     		push	{r4, r5, lr}
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 83B0     		sub	sp, sp, #12
  39              		.cfi_def_cfa_offset 24
  40 0004 0446     		mov	r4, r0
  67:lvgl/examples/anim/lv_example_anim_3.c ****     uint32_t t = lv_map(a->act_time, 0, a->time, 0, 1024);
  41              		.loc 1 67 5 is_stmt 1 view .LVU2
  42              		.loc 1 67 18 is_stmt 0 view .LVU3
  43 0006 4FF48065 		mov	r5, #1024
  44 000a 0095     		str	r5, [sp]
  45 000c 0023     		movs	r3, #0
  46 000e C26A     		ldr	r2, [r0, #44]
  47 0010 1946     		mov	r1, r3
  48 0012 006B     		ldr	r0, [r0, #48]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 3


  49              	.LVL1:
  50              		.loc 1 67 18 view .LVU4
  51 0014 FFF7FEFF 		bl	lv_map
  52              	.LVL2:
  68:lvgl/examples/anim/lv_example_anim_3.c ****     int32_t step = lv_bezier3(t, 0, ginfo.p1, ginfo.p2, 1024);
  53              		.loc 1 68 5 is_stmt 1 view .LVU5
  54              		.loc 1 68 42 is_stmt 0 view .LVU6
  55 0018 074A     		ldr	r2, .L3
  56              		.loc 1 68 20 view .LVU7
  57 001a 0095     		str	r5, [sp]
  58 001c 538C     		ldrh	r3, [r2, #34]
  59 001e 128C     		ldrh	r2, [r2, #32]
  60 0020 0021     		movs	r1, #0
  61 0022 FFF7FEFF 		bl	lv_bezier3
  62              	.LVL3:
  69:lvgl/examples/anim/lv_example_anim_3.c ****     int32_t new_value;
  63              		.loc 1 69 5 is_stmt 1 view .LVU8
  70:lvgl/examples/anim/lv_example_anim_3.c ****     new_value = step * (a->end_value - a->start_value);
  64              		.loc 1 70 5 view .LVU9
  65              		.loc 1 70 26 is_stmt 0 view .LVU10
  66 0026 A36A     		ldr	r3, [r4, #40]
  67              		.loc 1 70 41 view .LVU11
  68 0028 226A     		ldr	r2, [r4, #32]
  69              		.loc 1 70 38 view .LVU12
  70 002a 9B1A     		subs	r3, r3, r2
  71              		.loc 1 70 15 view .LVU13
  72 002c 03FB00F0 		mul	r0, r3, r0
  73              	.LVL4:
  71:lvgl/examples/anim/lv_example_anim_3.c ****     new_value = new_value >> 10;
  74              		.loc 1 71 5 is_stmt 1 view .LVU14
  72:lvgl/examples/anim/lv_example_anim_3.c ****     new_value += a->start_value;
  75              		.loc 1 72 5 view .LVU15
  73:lvgl/examples/anim/lv_example_anim_3.c ****     return new_value;
  76              		.loc 1 73 5 view .LVU16
  74:lvgl/examples/anim/lv_example_anim_3.c **** }
  77              		.loc 1 74 1 is_stmt 0 view .LVU17
  78 0030 02EBA020 		add	r0, r2, r0, asr #10
  79              	.LVL5:
  80              		.loc 1 74 1 view .LVU18
  81 0034 03B0     		add	sp, sp, #12
  82              		.cfi_def_cfa_offset 12
  83              		@ sp needed
  84 0036 30BD     		pop	{r4, r5, pc}
  85              	.LVL6:
  86              	.L4:
  87              		.loc 1 74 1 view .LVU19
  88              		.align	2
  89              	.L3:
  90 0038 00000000 		.word	.LANCHOR0
  91              		.cfi_endproc
  92              	.LFE205:
  94              		.section	.text.anim_x_cb,"ax",%progbits
  95              		.align	1
  96              		.syntax unified
  97              		.thumb
  98              		.thumb_func
 100              	anim_x_cb:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 4


 101              	.LVL7:
 102              	.LFB207:
  75:lvgl/examples/anim/lv_example_anim_3.c **** 
  76:lvgl/examples/anim/lv_example_anim_3.c **** static void refer_chart_cubic_bezier(void)
  77:lvgl/examples/anim/lv_example_anim_3.c **** {
  78:lvgl/examples/anim/lv_example_anim_3.c ****     for(uint16_t i = 0; i <= CHART_POINTS_NUM; i ++) {
  79:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
  80:lvgl/examples/anim/lv_example_anim_3.c ****         int32_t step = lv_bezier3(t, 0, ginfo.p1, ginfo.p2, 1024);
  81:lvgl/examples/anim/lv_example_anim_3.c ****         lv_chart_set_value_by_id2(ginfo.chart, ginfo.ser1, i, t, step);
  82:lvgl/examples/anim/lv_example_anim_3.c ****     }
  83:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_refresh(ginfo.chart);
  84:lvgl/examples/anim/lv_example_anim_3.c **** }
  85:lvgl/examples/anim/lv_example_anim_3.c **** 
  86:lvgl/examples/anim/lv_example_anim_3.c **** static void anim_x_cb(void * var, int32_t v)
  87:lvgl/examples/anim/lv_example_anim_3.c **** {
 103              		.loc 1 87 1 is_stmt 1 view -0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107              		.loc 1 87 1 is_stmt 0 view .LVU21
 108 0000 08B5     		push	{r3, lr}
 109              		.cfi_def_cfa_offset 8
 110              		.cfi_offset 3, -8
 111              		.cfi_offset 14, -4
  88:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_translate_x(var, v, LV_PART_MAIN);
 112              		.loc 1 88 5 is_stmt 1 view .LVU22
 113 0002 0022     		movs	r2, #0
 114 0004 09B2     		sxth	r1, r1
 115              	.LVL8:
 116              		.loc 1 88 5 is_stmt 0 view .LVU23
 117 0006 FFF7FEFF 		bl	lv_obj_set_style_translate_x
 118              	.LVL9:
  89:lvgl/examples/anim/lv_example_anim_3.c **** }
 119              		.loc 1 89 1 view .LVU24
 120 000a 08BD     		pop	{r3, pc}
 121              		.cfi_endproc
 122              	.LFE207:
 124              		.section	.text.run_btn_event_handler,"ax",%progbits
 125              		.align	1
 126              		.syntax unified
 127              		.thumb
 128              		.thumb_func
 130              	run_btn_event_handler:
 131              	.LVL10:
 132              	.LFB208:
  90:lvgl/examples/anim/lv_example_anim_3.c **** 
  91:lvgl/examples/anim/lv_example_anim_3.c **** static void run_btn_event_handler(lv_event_t * e)
  92:lvgl/examples/anim/lv_example_anim_3.c **** {
 133              		.loc 1 92 1 is_stmt 1 view -0
 134              		.cfi_startproc
 135              		@ args = 0, pretend = 0, frame = 0
 136              		@ frame_needed = 0, uses_anonymous_args = 0
 137              		.loc 1 92 1 is_stmt 0 view .LVU26
 138 0000 08B5     		push	{r3, lr}
 139              		.cfi_def_cfa_offset 8
 140              		.cfi_offset 3, -8
 141              		.cfi_offset 14, -4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 5


  93:lvgl/examples/anim/lv_example_anim_3.c ****     lv_event_code_t code = lv_event_get_code(e);
 142              		.loc 1 93 5 is_stmt 1 view .LVU27
 143              		.loc 1 93 28 is_stmt 0 view .LVU28
 144 0002 FFF7FEFF 		bl	lv_event_get_code
 145              	.LVL11:
  94:lvgl/examples/anim/lv_example_anim_3.c ****     if(code == LV_EVENT_CLICKED) {
 146              		.loc 1 94 5 is_stmt 1 view .LVU29
 147              		.loc 1 94 7 is_stmt 0 view .LVU30
 148 0006 0728     		cmp	r0, #7
 149 0008 00D0     		beq	.L10
 150              	.LVL12:
 151              	.L7:
  95:lvgl/examples/anim/lv_example_anim_3.c ****         lv_anim_start(&ginfo.a);
  96:lvgl/examples/anim/lv_example_anim_3.c ****     }
  97:lvgl/examples/anim/lv_example_anim_3.c **** }
 152              		.loc 1 97 1 view .LVU31
 153 000a 08BD     		pop	{r3, pc}
 154              	.LVL13:
 155              	.L10:
  95:lvgl/examples/anim/lv_example_anim_3.c ****         lv_anim_start(&ginfo.a);
 156              		.loc 1 95 9 is_stmt 1 view .LVU32
 157 000c 0148     		ldr	r0, .L11
 158              	.LVL14:
  95:lvgl/examples/anim/lv_example_anim_3.c ****         lv_anim_start(&ginfo.a);
 159              		.loc 1 95 9 is_stmt 0 view .LVU33
 160 000e FFF7FEFF 		bl	lv_anim_start
 161              	.LVL15:
 162              		.loc 1 97 1 view .LVU34
 163 0012 FAE7     		b	.L7
 164              	.L12:
 165              		.align	2
 166              	.L11:
 167 0014 24000000 		.word	.LANCHOR0+36
 168              		.cfi_endproc
 169              	.LFE208:
 171              		.section	.text.refer_chart_cubic_bezier,"ax",%progbits
 172              		.align	1
 173              		.syntax unified
 174              		.thumb
 175              		.thumb_func
 177              	refer_chart_cubic_bezier:
 178              	.LFB206:
  77:lvgl/examples/anim/lv_example_anim_3.c ****     for(uint16_t i = 0; i <= CHART_POINTS_NUM; i ++) {
 179              		.loc 1 77 1 is_stmt 1 view -0
 180              		.cfi_startproc
 181              		@ args = 0, pretend = 0, frame = 0
 182              		@ frame_needed = 0, uses_anonymous_args = 0
 183 0000 70B5     		push	{r4, r5, r6, lr}
 184              		.cfi_def_cfa_offset 16
 185              		.cfi_offset 4, -16
 186              		.cfi_offset 5, -12
 187              		.cfi_offset 6, -8
 188              		.cfi_offset 14, -4
 189 0002 82B0     		sub	sp, sp, #8
 190              		.cfi_def_cfa_offset 24
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 191              		.loc 1 78 5 view .LVU36
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 6


 192              	.LBB28:
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 193              		.loc 1 78 9 view .LVU37
 194              	.LVL16:
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 195              		.loc 1 78 18 is_stmt 0 view .LVU38
 196 0004 0024     		movs	r4, #0
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 197              		.loc 1 78 5 view .LVU39
 198 0006 14E0     		b	.L14
 199              	.LVL17:
 200              	.L15:
 201              	.LBB29:
  79:lvgl/examples/anim/lv_example_anim_3.c ****         int32_t step = lv_bezier3(t, 0, ginfo.p1, ginfo.p2, 1024);
 202              		.loc 1 79 9 is_stmt 1 discriminator 3 view .LVU40
  79:lvgl/examples/anim/lv_example_anim_3.c ****         int32_t step = lv_bezier3(t, 0, ginfo.p1, ginfo.p2, 1024);
 203              		.loc 1 79 24 is_stmt 0 discriminator 3 view .LVU41
 204 0008 A600     		lsls	r6, r4, #2
 205              	.LVL18:
  80:lvgl/examples/anim/lv_example_anim_3.c ****         lv_chart_set_value_by_id2(ginfo.chart, ginfo.ser1, i, t, step);
 206              		.loc 1 80 9 is_stmt 1 discriminator 3 view .LVU42
  80:lvgl/examples/anim/lv_example_anim_3.c ****         lv_chart_set_value_by_id2(ginfo.chart, ginfo.ser1, i, t, step);
 207              		.loc 1 80 46 is_stmt 0 discriminator 3 view .LVU43
 208 000a 0E4D     		ldr	r5, .L17
  80:lvgl/examples/anim/lv_example_anim_3.c ****         lv_chart_set_value_by_id2(ginfo.chart, ginfo.ser1, i, t, step);
 209              		.loc 1 80 24 discriminator 3 view .LVU44
 210 000c 4FF48063 		mov	r3, #1024
 211 0010 0093     		str	r3, [sp]
 212 0012 6B8C     		ldrh	r3, [r5, #34]
 213 0014 2A8C     		ldrh	r2, [r5, #32]
 214 0016 0021     		movs	r1, #0
 215 0018 3046     		mov	r0, r6
 216 001a FFF7FEFF 		bl	lv_bezier3
 217              	.LVL19:
  81:lvgl/examples/anim/lv_example_anim_3.c ****     }
 218              		.loc 1 81 9 is_stmt 1 discriminator 3 view .LVU45
 219 001e 00B2     		sxth	r0, r0
 220              	.LVL20:
  81:lvgl/examples/anim/lv_example_anim_3.c ****     }
 221              		.loc 1 81 9 is_stmt 0 discriminator 3 view .LVU46
 222 0020 0090     		str	r0, [sp]
 223 0022 33B2     		sxth	r3, r6
 224 0024 2246     		mov	r2, r4
 225 0026 A968     		ldr	r1, [r5, #8]
 226 0028 6868     		ldr	r0, [r5, #4]
 227 002a FFF7FEFF 		bl	lv_chart_set_value_by_id2
 228              	.LVL21:
 229              	.LBE29:
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 230              		.loc 1 78 48 is_stmt 1 discriminator 3 view .LVU47
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 231              		.loc 1 78 50 is_stmt 0 discriminator 3 view .LVU48
 232 002e 0134     		adds	r4, r4, #1
 233              	.LVL22:
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 234              		.loc 1 78 50 discriminator 3 view .LVU49
 235 0030 A4B2     		uxth	r4, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 7


 236              	.LVL23:
 237              	.L14:
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 238              		.loc 1 78 25 is_stmt 1 discriminator 1 view .LVU50
  78:lvgl/examples/anim/lv_example_anim_3.c ****         uint32_t t = i * (1024 / CHART_POINTS_NUM);
 239              		.loc 1 78 5 is_stmt 0 discriminator 1 view .LVU51
 240 0032 B4F5807F 		cmp	r4, #256
 241 0036 E7D9     		bls	.L15
 242              	.LBE28:
  83:lvgl/examples/anim/lv_example_anim_3.c **** }
 243              		.loc 1 83 5 is_stmt 1 view .LVU52
 244 0038 024B     		ldr	r3, .L17
 245 003a 5868     		ldr	r0, [r3, #4]
 246 003c FFF7FEFF 		bl	lv_chart_refresh
 247              	.LVL24:
  84:lvgl/examples/anim/lv_example_anim_3.c **** 
 248              		.loc 1 84 1 is_stmt 0 view .LVU53
 249 0040 02B0     		add	sp, sp, #8
 250              		.cfi_def_cfa_offset 16
 251              		@ sp needed
 252 0042 70BD     		pop	{r4, r5, r6, pc}
 253              	.LVL25:
 254              	.L18:
  84:lvgl/examples/anim/lv_example_anim_3.c **** 
 255              		.loc 1 84 1 view .LVU54
 256              		.align	2
 257              	.L17:
 258 0044 00000000 		.word	.LANCHOR0
 259              		.cfi_endproc
 260              	.LFE206:
 262              		.section	.rodata.slider_event_cb.str1.4,"aMS",%progbits,1
 263              		.align	2
 264              	.LC0:
 265 0000 70313A25 		.ascii	"p1:%d\000"
 265      6400
 266 0006 0000     		.align	2
 267              	.LC1:
 268 0008 70323A25 		.ascii	"p2:%d\000"
 268      6400
 269              		.section	.text.slider_event_cb,"ax",%progbits
 270              		.align	1
 271              		.syntax unified
 272              		.thumb
 273              		.thumb_func
 275              	slider_event_cb:
 276              	.LVL26:
 277              	.LFB209:
  98:lvgl/examples/anim/lv_example_anim_3.c **** 
  99:lvgl/examples/anim/lv_example_anim_3.c **** static void slider_event_cb(lv_event_t * e)
 100:lvgl/examples/anim/lv_example_anim_3.c **** {
 278              		.loc 1 100 1 is_stmt 1 view -0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 16
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              		.loc 1 100 1 is_stmt 0 view .LVU56
 283 0000 30B5     		push	{r4, r5, lr}
 284              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 8


 285              		.cfi_offset 4, -12
 286              		.cfi_offset 5, -8
 287              		.cfi_offset 14, -4
 288 0002 85B0     		sub	sp, sp, #20
 289              		.cfi_def_cfa_offset 32
 101:lvgl/examples/anim/lv_example_anim_3.c ****     char buf[16];
 290              		.loc 1 101 5 is_stmt 1 view .LVU57
 102:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * label;
 291              		.loc 1 102 5 view .LVU58
 103:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * slider = lv_event_get_target(e);
 292              		.loc 1 103 5 view .LVU59
 293              		.loc 1 103 25 is_stmt 0 view .LVU60
 294 0004 FFF7FEFF 		bl	lv_event_get_target
 295              	.LVL27:
 104:lvgl/examples/anim/lv_example_anim_3.c **** 
 105:lvgl/examples/anim/lv_example_anim_3.c ****     if(slider == ginfo.p1_slider) {
 296              		.loc 1 105 5 is_stmt 1 view .LVU61
 297              		.loc 1 105 23 is_stmt 0 view .LVU62
 298 0008 114B     		ldr	r3, .L24
 299 000a DB68     		ldr	r3, [r3, #12]
 300              		.loc 1 105 7 view .LVU63
 301 000c 8342     		cmp	r3, r0
 302 000e 12D0     		beq	.L23
 106:lvgl/examples/anim/lv_example_anim_3.c ****         label = ginfo.p1_label;
 107:lvgl/examples/anim/lv_example_anim_3.c ****         ginfo.p1 = lv_slider_get_value(slider);
 108:lvgl/examples/anim/lv_example_anim_3.c ****         lv_snprintf(buf, sizeof(buf), "p1:%d", ginfo.p1);
 109:lvgl/examples/anim/lv_example_anim_3.c ****     }
 110:lvgl/examples/anim/lv_example_anim_3.c ****     else {
 111:lvgl/examples/anim/lv_example_anim_3.c ****         label = ginfo.p2_label;
 303              		.loc 1 111 9 is_stmt 1 view .LVU64
 304              		.loc 1 111 15 is_stmt 0 view .LVU65
 305 0010 0F4C     		ldr	r4, .L24
 306 0012 A569     		ldr	r5, [r4, #24]
 307              	.LVL28:
 112:lvgl/examples/anim/lv_example_anim_3.c ****         ginfo.p2 = lv_slider_get_value(slider);
 308              		.loc 1 112 9 is_stmt 1 view .LVU66
 309              	.LBB30:
 310              	.LBI30:
 311              		.file 2 "lvgl/examples/anim/../../src/widgets/lv_slider.h"
   1:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
   2:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *
   4:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
   5:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
   6:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
   9:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:lvgl/examples/anim/../../src/widgets/lv_slider.h **** extern "C" {
  11:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #endif
  12:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  13:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /*********************
  14:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *      INCLUDES
  15:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *********************/
  16:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  18:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 9


  19:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  20:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #endif
  24:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  25:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:lvgl/examples/anim/../../src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  28:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /*********************
  29:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *      DEFINES
  30:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *********************/
  31:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  32:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**********************
  33:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  **********************/
  35:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  36:lvgl/examples/anim/../../src/widgets/lv_slider.h **** enum {
  37:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:lvgl/examples/anim/../../src/widgets/lv_slider.h **** };
  41:lvgl/examples/anim/../../src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  43:lvgl/examples/anim/../../src/widgets/lv_slider.h **** typedef struct {
  44:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:lvgl/examples/anim/../../src/widgets/lv_slider.h **** } lv_slider_t;
  51:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  52:lvgl/examples/anim/../../src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  54:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
  55:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
  58:lvgl/examples/anim/../../src/widgets/lv_slider.h **** typedef enum {
  59:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:lvgl/examples/anim/../../src/widgets/lv_slider.h **** } lv_slider_draw_part_type_t;
  62:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  63:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**********************
  64:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  65:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  **********************/
  66:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  67:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
  68:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Create a slider object
  69:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  71:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
  72:lvgl/examples/anim/../../src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  74:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /*=====================
  75:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Setter functions
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 10


  76:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *====================*/
  77:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  78:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
  79:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Set a new value on the slider
  80:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  81:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param value     the new value
  82:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
  84:lvgl/examples/anim/../../src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
  86:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
  88:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
  89:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
  90:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Set a new value for the left knob of a slider
  91:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  92:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param value     new value
  93:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
  95:lvgl/examples/anim/../../src/widgets/lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
  97:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
  99:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
 100:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
 101:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param obj       pointer to the slider object
 103:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param min       minimum value
 104:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param max       maximum value
 105:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
 106:lvgl/examples/anim/../../src/widgets/lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 107:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 108:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_bar_set_range(obj, min, max);
 109:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 110:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
 111:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
 112:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Set the mode of slider.
 113:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 114:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param mode      the mode of the slider. See ::lv_slider_mode_t
 115:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
 116:lvgl/examples/anim/../../src/widgets/lv_slider.h **** static inline void lv_slider_set_mode(lv_obj_t * obj, lv_slider_mode_t mode)
 117:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 118:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     lv_bar_set_mode(obj, (lv_bar_mode_t)mode);
 119:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 120:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
 121:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /*=====================
 122:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Getter functions
 123:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  *====================*/
 124:lvgl/examples/anim/../../src/widgets/lv_slider.h **** 
 125:lvgl/examples/anim/../../src/widgets/lv_slider.h **** /**
 126:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * Get the value of the main knob of a slider
 127:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
 128:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  * @return          the value of the main knob of the slider
 129:lvgl/examples/anim/../../src/widgets/lv_slider.h ****  */
 130:lvgl/examples/anim/../../src/widgets/lv_slider.h **** static inline int32_t lv_slider_get_value(const lv_obj_t * obj)
 312              		.loc 2 130 23 view .LVU67
 313              	.LBB31:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 11


 131:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 132:lvgl/examples/anim/../../src/widgets/lv_slider.h ****     return lv_bar_get_value(obj);
 314              		.loc 2 132 5 view .LVU68
 315              		.loc 2 132 12 is_stmt 0 view .LVU69
 316 0014 FFF7FEFF 		bl	lv_bar_get_value
 317              	.LVL29:
 318              		.loc 2 132 12 view .LVU70
 319              	.LBE31:
 320              	.LBE30:
 321              		.loc 1 112 18 view .LVU71
 322 0018 83B2     		uxth	r3, r0
 323 001a 6384     		strh	r3, [r4, #34]	@ movhi
 113:lvgl/examples/anim/lv_example_anim_3.c ****         lv_snprintf(buf, sizeof(buf), "p2:%d", ginfo.p2);
 324              		.loc 1 113 9 is_stmt 1 view .LVU72
 325 001c 0D4A     		ldr	r2, .L24+4
 326 001e 1021     		movs	r1, #16
 327 0020 6846     		mov	r0, sp
 328 0022 FFF7FEFF 		bl	lv_snprintf
 329              	.LVL30:
 330              	.L21:
 114:lvgl/examples/anim/lv_example_anim_3.c ****     }
 115:lvgl/examples/anim/lv_example_anim_3.c **** 
 116:lvgl/examples/anim/lv_example_anim_3.c ****     lv_label_set_text(label, buf);
 331              		.loc 1 116 5 view .LVU73
 332 0026 6946     		mov	r1, sp
 333 0028 2846     		mov	r0, r5
 334 002a FFF7FEFF 		bl	lv_label_set_text
 335              	.LVL31:
 117:lvgl/examples/anim/lv_example_anim_3.c ****     refer_chart_cubic_bezier();
 336              		.loc 1 117 5 view .LVU74
 337 002e FFF7FEFF 		bl	refer_chart_cubic_bezier
 338              	.LVL32:
 118:lvgl/examples/anim/lv_example_anim_3.c **** }
 339              		.loc 1 118 1 is_stmt 0 view .LVU75
 340 0032 05B0     		add	sp, sp, #20
 341              		.cfi_remember_state
 342              		.cfi_def_cfa_offset 12
 343              		@ sp needed
 344 0034 30BD     		pop	{r4, r5, pc}
 345              	.LVL33:
 346              	.L23:
 347              		.cfi_restore_state
 106:lvgl/examples/anim/lv_example_anim_3.c ****         ginfo.p1 = lv_slider_get_value(slider);
 348              		.loc 1 106 9 is_stmt 1 view .LVU76
 106:lvgl/examples/anim/lv_example_anim_3.c ****         ginfo.p1 = lv_slider_get_value(slider);
 349              		.loc 1 106 15 is_stmt 0 view .LVU77
 350 0036 064C     		ldr	r4, .L24
 351 0038 2569     		ldr	r5, [r4, #16]
 352              	.LVL34:
 107:lvgl/examples/anim/lv_example_anim_3.c ****         lv_snprintf(buf, sizeof(buf), "p1:%d", ginfo.p1);
 353              		.loc 1 107 9 is_stmt 1 view .LVU78
 354              	.LBB32:
 355              	.LBI32:
 130:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 356              		.loc 2 130 23 view .LVU79
 357              	.LBB33:
 358              		.loc 2 132 5 view .LVU80
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 12


 359              		.loc 2 132 12 is_stmt 0 view .LVU81
 360 003a FFF7FEFF 		bl	lv_bar_get_value
 361              	.LVL35:
 362              		.loc 2 132 12 view .LVU82
 363              	.LBE33:
 364              	.LBE32:
 107:lvgl/examples/anim/lv_example_anim_3.c ****         lv_snprintf(buf, sizeof(buf), "p1:%d", ginfo.p1);
 365              		.loc 1 107 18 view .LVU83
 366 003e 83B2     		uxth	r3, r0
 367 0040 2384     		strh	r3, [r4, #32]	@ movhi
 108:lvgl/examples/anim/lv_example_anim_3.c ****     }
 368              		.loc 1 108 9 is_stmt 1 view .LVU84
 369 0042 054A     		ldr	r2, .L24+8
 370 0044 1021     		movs	r1, #16
 371 0046 6846     		mov	r0, sp
 372 0048 FFF7FEFF 		bl	lv_snprintf
 373              	.LVL36:
 374 004c EBE7     		b	.L21
 375              	.L25:
 376 004e 00BF     		.align	2
 377              	.L24:
 378 0050 00000000 		.word	.LANCHOR0
 379 0054 08000000 		.word	.LC1
 380 0058 00000000 		.word	.LC0
 381              		.cfi_endproc
 382              	.LFE209:
 384              		.section	.rodata.page_obj_init.str1.4,"aMS",%progbits,1
 385              		.align	2
 386              	.LC2:
 387 0000 70313A30 		.ascii	"p1:0\000"
 387      00
 388 0005 000000   		.align	2
 389              	.LC3:
 390 0008 70323A30 		.ascii	"p2:0\000"
 390      00
 391 000d 000000   		.align	2
 392              	.LC4:
 393 0010 EF818B00 		.ascii	"\357\201\213\000"
 394              		.section	.text.page_obj_init,"ax",%progbits
 395              		.align	1
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 400              	page_obj_init:
 401              	.LVL37:
 402              	.LFB210:
 119:lvgl/examples/anim/lv_example_anim_3.c **** 
 120:lvgl/examples/anim/lv_example_anim_3.c **** static void page_obj_init(lv_obj_t * par)
 121:lvgl/examples/anim/lv_example_anim_3.c **** {
 403              		.loc 1 121 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407              		.loc 1 121 1 is_stmt 0 view .LVU86
 408 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 409              		.cfi_def_cfa_offset 28
 410              		.cfi_offset 4, -28
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 13


 411              		.cfi_offset 5, -24
 412              		.cfi_offset 6, -20
 413              		.cfi_offset 7, -16
 414              		.cfi_offset 8, -12
 415              		.cfi_offset 9, -8
 416              		.cfi_offset 14, -4
 417 0004 85B0     		sub	sp, sp, #20
 418              		.cfi_def_cfa_offset 48
 419 0006 8046     		mov	r8, r0
 122:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.anim_obj = lv_obj_create(par);
 420              		.loc 1 122 5 is_stmt 1 view .LVU87
 421              		.loc 1 122 22 is_stmt 0 view .LVU88
 422 0008 FFF7FEFF 		bl	lv_obj_create
 423              	.LVL38:
 424              		.loc 1 122 20 view .LVU89
 425 000c 924D     		ldr	r5, .L28
 426 000e 2860     		str	r0, [r5]
 123:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_size(ginfo.anim_obj, 30, 30);
 427              		.loc 1 123 5 is_stmt 1 view .LVU90
 428 0010 1E22     		movs	r2, #30
 429 0012 1146     		mov	r1, r2
 430 0014 FFF7FEFF 		bl	lv_obj_set_size
 431              	.LVL39:
 124:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_align(ginfo.anim_obj, LV_ALIGN_TOP_LEFT);
 432              		.loc 1 124 5 view .LVU91
 433 0018 0121     		movs	r1, #1
 434 001a 2868     		ldr	r0, [r5]
 435 001c FFF7FEFF 		bl	lv_obj_set_align
 436              	.LVL40:
 125:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_clear_flag(ginfo.anim_obj, LV_OBJ_FLAG_SCROLLABLE);
 437              		.loc 1 125 5 view .LVU92
 438 0020 1021     		movs	r1, #16
 439 0022 2868     		ldr	r0, [r5]
 440 0024 FFF7FEFF 		bl	lv_obj_clear_flag
 441              	.LVL41:
 126:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_bg_color(ginfo.anim_obj, lv_palette_main(LV_PALETTE_RED), LV_PART_MAIN);
 442              		.loc 1 126 5 view .LVU93
 443              		.loc 1 126 36 is_stmt 0 view .LVU94
 444 0028 2C68     		ldr	r4, [r5]
 445              		.loc 1 126 5 view .LVU95
 446 002a 0020     		movs	r0, #0
 447 002c FFF7FEFF 		bl	lv_palette_main
 448              	.LVL42:
 449 0030 0146     		mov	r1, r0
 450 0032 0022     		movs	r2, #0
 451 0034 2046     		mov	r0, r4
 452 0036 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 453              	.LVL43:
 127:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.anim_obj, LV_GRID_ALIGN_START, 0, 1, LV_GRID_ALIGN_START, 0, 1);
 454              		.loc 1 127 5 is_stmt 1 view .LVU96
 455 003a 0126     		movs	r6, #1
 456 003c 0296     		str	r6, [sp, #8]
 457 003e 0024     		movs	r4, #0
 458 0040 0194     		str	r4, [sp, #4]
 459 0042 0094     		str	r4, [sp]
 460 0044 3346     		mov	r3, r6
 461 0046 2246     		mov	r2, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 14


 462 0048 2146     		mov	r1, r4
 463 004a 2868     		ldr	r0, [r5]
 464 004c FFF7FEFF 		bl	lv_obj_set_grid_cell
 465              	.LVL44:
 128:lvgl/examples/anim/lv_example_anim_3.c **** 
 129:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.p1_label = lv_label_create(par);
 466              		.loc 1 129 5 view .LVU97
 467              		.loc 1 129 22 is_stmt 0 view .LVU98
 468 0050 4046     		mov	r0, r8
 469 0052 FFF7FEFF 		bl	lv_label_create
 470              	.LVL45:
 471              		.loc 1 129 20 view .LVU99
 472 0056 2861     		str	r0, [r5, #16]
 130:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.p2_label = lv_label_create(par);
 473              		.loc 1 130 5 is_stmt 1 view .LVU100
 474              		.loc 1 130 22 is_stmt 0 view .LVU101
 475 0058 4046     		mov	r0, r8
 476 005a FFF7FEFF 		bl	lv_label_create
 477              	.LVL46:
 478              		.loc 1 130 20 view .LVU102
 479 005e A861     		str	r0, [r5, #24]
 131:lvgl/examples/anim/lv_example_anim_3.c ****     lv_label_set_text(ginfo.p1_label, "p1:0");
 480              		.loc 1 131 5 is_stmt 1 view .LVU103
 481 0060 7E49     		ldr	r1, .L28+4
 482 0062 2869     		ldr	r0, [r5, #16]
 483 0064 FFF7FEFF 		bl	lv_label_set_text
 484              	.LVL47:
 132:lvgl/examples/anim/lv_example_anim_3.c ****     lv_label_set_text(ginfo.p2_label, "p2:0");
 485              		.loc 1 132 5 view .LVU104
 486 0068 7D49     		ldr	r1, .L28+8
 487 006a A869     		ldr	r0, [r5, #24]
 488 006c FFF7FEFF 		bl	lv_label_set_text
 489              	.LVL48:
 133:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.p1_label, LV_GRID_ALIGN_START, 0, 1, LV_GRID_ALIGN_START, 1, 1);
 490              		.loc 1 133 5 view .LVU105
 491 0070 0296     		str	r6, [sp, #8]
 492 0072 0196     		str	r6, [sp, #4]
 493 0074 0094     		str	r4, [sp]
 494 0076 3346     		mov	r3, r6
 495 0078 2246     		mov	r2, r4
 496 007a 2146     		mov	r1, r4
 497 007c 2869     		ldr	r0, [r5, #16]
 498 007e FFF7FEFF 		bl	lv_obj_set_grid_cell
 499              	.LVL49:
 134:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.p2_label, LV_GRID_ALIGN_START, 0, 1, LV_GRID_ALIGN_START, 2, 1);
 500              		.loc 1 134 5 view .LVU106
 501 0082 0296     		str	r6, [sp, #8]
 502 0084 0227     		movs	r7, #2
 503 0086 0197     		str	r7, [sp, #4]
 504 0088 0094     		str	r4, [sp]
 505 008a 3346     		mov	r3, r6
 506 008c 2246     		mov	r2, r4
 507 008e 2146     		mov	r1, r4
 508 0090 A869     		ldr	r0, [r5, #24]
 509 0092 FFF7FEFF 		bl	lv_obj_set_grid_cell
 510              	.LVL50:
 135:lvgl/examples/anim/lv_example_anim_3.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 15


 136:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.p1_slider = lv_slider_create(par);
 511              		.loc 1 136 5 view .LVU107
 512              		.loc 1 136 23 is_stmt 0 view .LVU108
 513 0096 4046     		mov	r0, r8
 514 0098 FFF7FEFF 		bl	lv_slider_create
 515              	.LVL51:
 516              		.loc 1 136 21 view .LVU109
 517 009c E860     		str	r0, [r5, #12]
 137:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.p2_slider = lv_slider_create(par);
 518              		.loc 1 137 5 is_stmt 1 view .LVU110
 519              		.loc 1 137 23 is_stmt 0 view .LVU111
 520 009e 4046     		mov	r0, r8
 521 00a0 FFF7FEFF 		bl	lv_slider_create
 522              	.LVL52:
 523              		.loc 1 137 21 view .LVU112
 524 00a4 6861     		str	r0, [r5, #20]
 138:lvgl/examples/anim/lv_example_anim_3.c ****     lv_slider_set_range(ginfo.p1_slider, 0, 1024);
 525              		.loc 1 138 5 is_stmt 1 view .LVU113
 526              	.LVL53:
 527              	.LBB48:
 528              	.LBI48:
 106:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 529              		.loc 2 106 20 view .LVU114
 530              	.LBB49:
 108:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 531              		.loc 2 108 5 view .LVU115
 532 00a6 4FF48062 		mov	r2, #1024
 533 00aa 2146     		mov	r1, r4
 534 00ac E868     		ldr	r0, [r5, #12]
 535 00ae FFF7FEFF 		bl	lv_bar_set_range
 536              	.LVL54:
 108:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 537              		.loc 2 108 5 is_stmt 0 view .LVU116
 538              	.LBE49:
 539              	.LBE48:
 139:lvgl/examples/anim/lv_example_anim_3.c ****     lv_slider_set_range(ginfo.p2_slider, 0, 1024);
 540              		.loc 1 139 5 is_stmt 1 view .LVU117
 541              	.LBB50:
 542              	.LBI50:
 106:lvgl/examples/anim/../../src/widgets/lv_slider.h **** {
 543              		.loc 2 106 20 view .LVU118
 544              	.LBB51:
 108:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 545              		.loc 2 108 5 view .LVU119
 546 00b2 4FF48062 		mov	r2, #1024
 547 00b6 2146     		mov	r1, r4
 548 00b8 6869     		ldr	r0, [r5, #20]
 549 00ba FFF7FEFF 		bl	lv_bar_set_range
 550              	.LVL55:
 108:lvgl/examples/anim/../../src/widgets/lv_slider.h **** }
 551              		.loc 2 108 5 is_stmt 0 view .LVU120
 552              	.LBE51:
 553              	.LBE50:
 140:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(ginfo.p1_slider, 2, LV_PART_KNOB);
 554              		.loc 1 140 5 is_stmt 1 view .LVU121
 555              		.loc 1 140 35 is_stmt 0 view .LVU122
 556 00be D5F80C90 		ldr	r9, [r5, #12]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 16


 557              	.LVL56:
 558              	.LBB52:
 559              	.LBI52:
 560              		.file 3 "lvgl/examples/anim/../../src/core/lv_obj_style.h"
   1:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
   2:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *
   4:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
   5:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
   6:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
   9:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:lvgl/examples/anim/../../src/core/lv_obj_style.h **** extern "C" {
  11:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #endif
  12:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  13:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /*********************
  14:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *      INCLUDES
  15:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *********************/
  16:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #include <stdint.h>
  17:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #include <stdbool.h>
  18:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  20:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /*********************
  21:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *      DEFINES
  22:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *********************/
  23:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  24:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**********************
  25:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  **********************/
  27:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:lvgl/examples/anim/../../src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  30:lvgl/examples/anim/../../src/core/lv_obj_style.h **** typedef enum {
  31:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:lvgl/examples/anim/../../src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  37:lvgl/examples/anim/../../src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  39:lvgl/examples/anim/../../src/core/lv_obj_style.h **** typedef struct {
  40:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_style_t * style;
  41:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     uint32_t selector : 24;
  42:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     uint32_t is_local : 1;
  43:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     uint32_t is_trans : 1;
  44:lvgl/examples/anim/../../src/core/lv_obj_style.h **** } _lv_obj_style_t;
  45:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  46:lvgl/examples/anim/../../src/core/lv_obj_style.h **** typedef struct {
  47:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     uint16_t time;
  48:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     uint16_t delay;
  49:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     void * user_data;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 17


  54:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #endif
  55:lvgl/examples/anim/../../src/core/lv_obj_style.h **** } _lv_obj_style_transition_dsc_t;
  56:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  57:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**********************
  58:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  **********************/
  60:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  61:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
  62:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
  65:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  67:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
  68:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Add a style to an object.
  69:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
  75:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  77:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
  78:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Add a style to an object.
  79:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
  86:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  88:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
  89:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
  92:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
  94:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, (lv_style_selector_t)LV_PART_ANY | (lv_style_selector_t)LV_STATE
  95:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
  96:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
  97:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
  98:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Notify all object if a style is modified
  99:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 102:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 104:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 105:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 107:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 18


 111:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 112:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 114:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 115:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * or any other style change happens.
 117:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 119:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 121:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 122:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Inherited properties will be inherited.
 124:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 126:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param part      a part from which the property should be get
 127:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param prop      the property to get
 128:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @return          the value of the property.
 129:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 131:lvgl/examples/anim/../../src/core/lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 133:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 134:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 136:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param prop      the property
 137:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 138:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state for which the style should be set
 139:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 140:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 141:lvgl/examples/anim/../../src/core/lv_obj_style.h ****                                  lv_style_selector_t selector);
 142:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 143:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_set_local_style_prop_meta(struct _lv_obj_t * obj, lv_style_prop_t prop, uint16_t meta,
 144:lvgl/examples/anim/../../src/core/lv_obj_style.h ****                                       lv_style_selector_t selector);
 145:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 146:lvgl/examples/anim/../../src/core/lv_obj_style.h **** lv_style_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_v
 147:lvgl/examples/anim/../../src/core/lv_obj_style.h ****                                            lv_style_selector_t selector);
 148:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 149:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 150:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 151:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
 152:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param prop      a style property to remove.
 153:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state for which the style should be removed
 154:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 155:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 156:lvgl/examples/anim/../../src/core/lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 157:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 158:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 159:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Used internally for color filtering
 160:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 161:lvgl/examples/anim/../../src/core/lv_obj_style.h **** lv_style_value_t _lv_obj_style_apply_color_filter(const struct _lv_obj_t * obj, uint32_t part, lv_s
 162:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 163:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 164:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Used internally to create a style transition
 165:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj
 166:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param part
 167:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param prev_state
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 19


 168:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param new_state
 169:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param tr
 170:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 171:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 172:lvgl/examples/anim/../../src/core/lv_obj_style.h ****                                      lv_state_t new_state, const _lv_obj_style_transition_dsc_t * t
 173:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 174:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 175:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 176:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj
 177:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param state1
 178:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param state2
 179:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @return
 180:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 181:lvgl/examples/anim/../../src/core/lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 182:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 183:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 184:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Fade in an an object and all its children.
 185:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       the object to fade in
 186:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param time      time of fade
 187:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 188:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 189:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 190:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 191:lvgl/examples/anim/../../src/core/lv_obj_style.h **** /**
 192:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * Fade out an an object and all its children.
 193:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param obj       the object to fade out
 194:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param time      time of fade
 195:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  * @param delay     delay to start the animation
 196:lvgl/examples/anim/../../src/core/lv_obj_style.h ****  */
 197:lvgl/examples/anim/../../src/core/lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 198:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 199:lvgl/examples/anim/../../src/core/lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 200:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 201:lvgl/examples/anim/../../src/core/lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 202:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 203:lvgl/examples/anim/../../src/core/lv_obj_style.h **** #include "lv_obj_style_gen.h"
 204:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 205:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 561              		.loc 3 205 20 is_stmt 1 view .LVU123
 562              	.LBB53:
 206:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 207:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 563              		.loc 3 207 5 view .LVU124
 564 00c2 4FF44032 		mov	r2, #196608
 565 00c6 3946     		mov	r1, r7
 566 00c8 4846     		mov	r0, r9
 567 00ca FFF7FEFF 		bl	lv_obj_set_style_pad_left
 568              	.LVL57:
 208:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 569              		.loc 3 208 5 view .LVU125
 570 00ce 4FF44032 		mov	r2, #196608
 571 00d2 3946     		mov	r1, r7
 572 00d4 4846     		mov	r0, r9
 573 00d6 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 574              	.LVL58:
 209:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 575              		.loc 3 209 5 view .LVU126
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 20


 576 00da 4FF44032 		mov	r2, #196608
 577 00de 3946     		mov	r1, r7
 578 00e0 4846     		mov	r0, r9
 579 00e2 FFF7FEFF 		bl	lv_obj_set_style_pad_top
 580              	.LVL59:
 210:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 581              		.loc 3 210 5 view .LVU127
 582 00e6 4FF44032 		mov	r2, #196608
 583 00ea 3946     		mov	r1, r7
 584 00ec 4846     		mov	r0, r9
 585 00ee FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 586              	.LVL60:
 587              		.loc 3 210 5 is_stmt 0 view .LVU128
 588              	.LBE53:
 589              	.LBE52:
 141:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(ginfo.p2_slider, 2, LV_PART_KNOB);
 590              		.loc 1 141 5 is_stmt 1 view .LVU129
 591              		.loc 1 141 35 is_stmt 0 view .LVU130
 592 00f2 D5F81490 		ldr	r9, [r5, #20]
 593              	.LVL61:
 594              	.LBB54:
 595              	.LBI54:
 205:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 596              		.loc 3 205 20 is_stmt 1 view .LVU131
 597              	.LBB55:
 207:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 598              		.loc 3 207 5 view .LVU132
 599 00f6 4FF44032 		mov	r2, #196608
 600 00fa 3946     		mov	r1, r7
 601 00fc 4846     		mov	r0, r9
 602 00fe FFF7FEFF 		bl	lv_obj_set_style_pad_left
 603              	.LVL62:
 208:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 604              		.loc 3 208 5 view .LVU133
 605 0102 4FF44032 		mov	r2, #196608
 606 0106 3946     		mov	r1, r7
 607 0108 4846     		mov	r0, r9
 608 010a FFF7FEFF 		bl	lv_obj_set_style_pad_right
 609              	.LVL63:
 209:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 610              		.loc 3 209 5 view .LVU134
 611 010e 4FF44032 		mov	r2, #196608
 612 0112 3946     		mov	r1, r7
 613 0114 4846     		mov	r0, r9
 614 0116 FFF7FEFF 		bl	lv_obj_set_style_pad_top
 615              	.LVL64:
 616              		.loc 3 210 5 view .LVU135
 617 011a 4FF44032 		mov	r2, #196608
 618 011e 3946     		mov	r1, r7
 619 0120 4846     		mov	r0, r9
 620 0122 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 621              	.LVL65:
 622              		.loc 3 210 5 is_stmt 0 view .LVU136
 623              	.LBE55:
 624              	.LBE54:
 142:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_add_event_cb(ginfo.p1_slider, slider_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 625              		.loc 1 142 5 is_stmt 1 view .LVU137
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 21


 626 0126 DFF84491 		ldr	r9, .L28+20
 627 012a 2346     		mov	r3, r4
 628 012c 1C22     		movs	r2, #28
 629 012e 4946     		mov	r1, r9
 630 0130 E868     		ldr	r0, [r5, #12]
 631 0132 FFF7FEFF 		bl	lv_obj_add_event_cb
 632              	.LVL66:
 143:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_add_event_cb(ginfo.p2_slider, slider_event_cb, LV_EVENT_VALUE_CHANGED, NULL);
 633              		.loc 1 143 5 view .LVU138
 634 0136 2346     		mov	r3, r4
 635 0138 1C22     		movs	r2, #28
 636 013a 4946     		mov	r1, r9
 637 013c 6869     		ldr	r0, [r5, #20]
 638 013e FFF7FEFF 		bl	lv_obj_add_event_cb
 639              	.LVL67:
 144:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.p1_slider, LV_GRID_ALIGN_STRETCH, 1, 1, LV_GRID_ALIGN_START, 1, 1);
 640              		.loc 1 144 5 view .LVU139
 641 0142 0296     		str	r6, [sp, #8]
 642 0144 0196     		str	r6, [sp, #4]
 643 0146 0094     		str	r4, [sp]
 644 0148 3346     		mov	r3, r6
 645 014a 3246     		mov	r2, r6
 646 014c 0321     		movs	r1, #3
 647 014e E868     		ldr	r0, [r5, #12]
 648 0150 FFF7FEFF 		bl	lv_obj_set_grid_cell
 649              	.LVL68:
 145:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.p2_slider, LV_GRID_ALIGN_STRETCH, 1, 1, LV_GRID_ALIGN_START, 2, 1);
 650              		.loc 1 145 5 view .LVU140
 651 0154 0296     		str	r6, [sp, #8]
 652 0156 0197     		str	r7, [sp, #4]
 653 0158 0094     		str	r4, [sp]
 654 015a 3346     		mov	r3, r6
 655 015c 3246     		mov	r2, r6
 656 015e 0321     		movs	r1, #3
 657 0160 6869     		ldr	r0, [r5, #20]
 658 0162 FFF7FEFF 		bl	lv_obj_set_grid_cell
 659              	.LVL69:
 146:lvgl/examples/anim/lv_example_anim_3.c **** 
 147:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.run_btn = lv_btn_create(par);
 660              		.loc 1 147 5 view .LVU141
 661              		.loc 1 147 21 is_stmt 0 view .LVU142
 662 0166 4046     		mov	r0, r8
 663 0168 FFF7FEFF 		bl	lv_btn_create
 664              	.LVL70:
 665              		.loc 1 147 19 view .LVU143
 666 016c E861     		str	r0, [r5, #28]
 148:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_add_event_cb(ginfo.run_btn, run_btn_event_handler, LV_EVENT_CLICKED, NULL);
 667              		.loc 1 148 5 is_stmt 1 view .LVU144
 668 016e 2346     		mov	r3, r4
 669 0170 0722     		movs	r2, #7
 670 0172 3C49     		ldr	r1, .L28+12
 671 0174 FFF7FEFF 		bl	lv_obj_add_event_cb
 672              	.LVL71:
 149:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_t * btn_label = lv_label_create(ginfo.run_btn);
 673              		.loc 1 149 5 view .LVU145
 674              		.loc 1 149 28 is_stmt 0 view .LVU146
 675 0178 E869     		ldr	r0, [r5, #28]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 22


 676 017a FFF7FEFF 		bl	lv_label_create
 677              	.LVL72:
 678 017e 8146     		mov	r9, r0
 679              	.LVL73:
 150:lvgl/examples/anim/lv_example_anim_3.c ****     lv_label_set_text(btn_label, LV_SYMBOL_PLAY);
 680              		.loc 1 150 5 is_stmt 1 view .LVU147
 681 0180 3949     		ldr	r1, .L28+16
 682 0182 FFF7FEFF 		bl	lv_label_set_text
 683              	.LVL74:
 151:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_center(btn_label);
 684              		.loc 1 151 5 view .LVU148
 685              	.LBB56:
 686              	.LBI56:
 687              		.file 4 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 23


  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 24


 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param cb        the layout update callback
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 25


 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 688              		.loc 4 199 20 view .LVU149
 689              	.LBB57:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 690              		.loc 4 201 5 view .LVU150
 691 0186 2346     		mov	r3, r4
 692 0188 2246     		mov	r2, r4
 693 018a 0921     		movs	r1, #9
 694 018c 4846     		mov	r0, r9
 695 018e FFF7FEFF 		bl	lv_obj_align
 696              	.LVL75:
 697              		.loc 4 201 5 is_stmt 0 view .LVU151
 698              	.LBE57:
 699              	.LBE56:
 152:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.run_btn, LV_GRID_ALIGN_STRETCH, 2, 1, LV_GRID_ALIGN_STRETCH, 1, 2);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 26


 700              		.loc 1 152 5 is_stmt 1 view .LVU152
 701 0192 0297     		str	r7, [sp, #8]
 702 0194 0196     		str	r6, [sp, #4]
 703 0196 4FF00309 		mov	r9, #3
 704              	.LVL76:
 705              		.loc 1 152 5 is_stmt 0 view .LVU153
 706 019a CDF80090 		str	r9, [sp]
 707 019e 3346     		mov	r3, r6
 708 01a0 3A46     		mov	r2, r7
 709 01a2 4946     		mov	r1, r9
 710 01a4 E869     		ldr	r0, [r5, #28]
 711 01a6 FFF7FEFF 		bl	lv_obj_set_grid_cell
 712              	.LVL77:
 153:lvgl/examples/anim/lv_example_anim_3.c **** 
 154:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.chart = lv_chart_create(par);
 713              		.loc 1 154 5 is_stmt 1 view .LVU154
 714              		.loc 1 154 19 is_stmt 0 view .LVU155
 715 01aa 4046     		mov	r0, r8
 716 01ac FFF7FEFF 		bl	lv_chart_create
 717              	.LVL78:
 718 01b0 8046     		mov	r8, r0
 719              	.LVL79:
 720              		.loc 1 154 17 view .LVU156
 721 01b2 6860     		str	r0, [r5, #4]
 155:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(ginfo.chart, 0, LV_PART_MAIN);
 722              		.loc 1 155 5 is_stmt 1 view .LVU157
 723              	.LVL80:
 724              	.LBB58:
 725              	.LBI58:
 205:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 726              		.loc 3 205 20 view .LVU158
 727              	.LBB59:
 207:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 728              		.loc 3 207 5 view .LVU159
 729 01b4 2246     		mov	r2, r4
 730 01b6 2146     		mov	r1, r4
 731 01b8 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 732              	.LVL81:
 208:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 733              		.loc 3 208 5 view .LVU160
 734 01bc 2246     		mov	r2, r4
 735 01be 2146     		mov	r1, r4
 736 01c0 4046     		mov	r0, r8
 737 01c2 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 738              	.LVL82:
 209:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 739              		.loc 3 209 5 view .LVU161
 740 01c6 2246     		mov	r2, r4
 741 01c8 2146     		mov	r1, r4
 742 01ca 4046     		mov	r0, r8
 743 01cc FFF7FEFF 		bl	lv_obj_set_style_pad_top
 744              	.LVL83:
 745              		.loc 3 210 5 view .LVU162
 746 01d0 2246     		mov	r2, r4
 747 01d2 2146     		mov	r1, r4
 748 01d4 4046     		mov	r0, r8
 749 01d6 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 27


 750              	.LVL84:
 751              		.loc 3 210 5 is_stmt 0 view .LVU163
 752              	.LBE59:
 753              	.LBE58:
 156:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_size(ginfo.chart, 0, LV_PART_INDICATOR);
 754              		.loc 1 156 5 is_stmt 1 view .LVU164
 755              		.loc 1 156 32 is_stmt 0 view .LVU165
 756 01da D5F80480 		ldr	r8, [r5, #4]
 757              	.LVL85:
 758              	.LBB60:
 759              	.LBI60:
 211:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 212:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 213:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 214:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 215:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 216:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 217:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 218:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 219:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_ver(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 220:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 221:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 222:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 223:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 224:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 225:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_set_style_pad_gap(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 226:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 227:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_row(obj, value, selector);
 228:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_column(obj, value, selector);
 229:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 230:lvgl/examples/anim/../../src/core/lv_obj_style.h **** 
 231:lvgl/examples/anim/../../src/core/lv_obj_style.h **** static inline void lv_obj_set_style_size(struct _lv_obj_t * obj, lv_coord_t value, lv_style_selecto
 760              		.loc 3 231 20 is_stmt 1 view .LVU166
 761              	.LBB61:
 232:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 233:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_width(obj, value, selector);
 762              		.loc 3 233 5 view .LVU167
 763 01de 4FF40032 		mov	r2, #131072
 764 01e2 2146     		mov	r1, r4
 765 01e4 4046     		mov	r0, r8
 766 01e6 FFF7FEFF 		bl	lv_obj_set_style_width
 767              	.LVL86:
 234:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_height(obj, value, selector);
 768              		.loc 3 234 5 view .LVU168
 769 01ea 4FF40032 		mov	r2, #131072
 770 01ee 2146     		mov	r1, r4
 771 01f0 4046     		mov	r0, r8
 772 01f2 FFF7FEFF 		bl	lv_obj_set_style_height
 773              	.LVL87:
 774              		.loc 3 234 5 is_stmt 0 view .LVU169
 775              	.LBE61:
 776              	.LBE60:
 157:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_set_type(ginfo.chart, LV_CHART_TYPE_SCATTER);
 777              		.loc 1 157 5 is_stmt 1 view .LVU170
 778 01f6 4946     		mov	r1, r9
 779 01f8 6868     		ldr	r0, [r5, #4]
 780 01fa FFF7FEFF 		bl	lv_chart_set_type
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 28


 781              	.LVL88:
 158:lvgl/examples/anim/lv_example_anim_3.c ****     ginfo.ser1 = lv_chart_add_series(ginfo.chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_AXIS_PR
 782              		.loc 1 158 5 view .LVU171
 783              		.loc 1 158 18 is_stmt 0 view .LVU172
 784 01fe D5F80480 		ldr	r8, [r5, #4]
 785 0202 2046     		mov	r0, r4
 786 0204 FFF7FEFF 		bl	lv_palette_main
 787              	.LVL89:
 788 0208 0146     		mov	r1, r0
 789 020a 2246     		mov	r2, r4
 790 020c 4046     		mov	r0, r8
 791 020e FFF7FEFF 		bl	lv_chart_add_series
 792              	.LVL90:
 793              		.loc 1 158 16 view .LVU173
 794 0212 A860     		str	r0, [r5, #8]
 159:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_set_range(ginfo.chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1024);
 795              		.loc 1 159 5 is_stmt 1 view .LVU174
 796 0214 4FF48063 		mov	r3, #1024
 797 0218 2246     		mov	r2, r4
 798 021a 2146     		mov	r1, r4
 799 021c 6868     		ldr	r0, [r5, #4]
 800 021e FFF7FEFF 		bl	lv_chart_set_range
 801              	.LVL91:
 160:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_set_range(ginfo.chart, LV_CHART_AXIS_PRIMARY_X, 0, 1024);
 802              		.loc 1 160 5 view .LVU175
 803 0222 4FF48063 		mov	r3, #1024
 804 0226 2246     		mov	r2, r4
 805 0228 3946     		mov	r1, r7
 806 022a 6868     		ldr	r0, [r5, #4]
 807 022c FFF7FEFF 		bl	lv_chart_set_range
 808              	.LVL92:
 161:lvgl/examples/anim/lv_example_anim_3.c ****     lv_chart_set_point_count(ginfo.chart, CHART_POINTS_NUM);
 809              		.loc 1 161 5 view .LVU176
 810 0230 4FF48071 		mov	r1, #256
 811 0234 6868     		ldr	r0, [r5, #4]
 812 0236 FFF7FEFF 		bl	lv_chart_set_point_count
 813              	.LVL93:
 162:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_cell(ginfo.chart, LV_GRID_ALIGN_STRETCH, 0, 3, LV_GRID_ALIGN_STRETCH, 3, 1);
 814              		.loc 1 162 5 view .LVU177
 815 023a 0296     		str	r6, [sp, #8]
 816 023c CDF80490 		str	r9, [sp, #4]
 817 0240 CDF80090 		str	r9, [sp]
 818 0244 4B46     		mov	r3, r9
 819 0246 2246     		mov	r2, r4
 820 0248 4946     		mov	r1, r9
 821 024a 6868     		ldr	r0, [r5, #4]
 822 024c FFF7FEFF 		bl	lv_obj_set_grid_cell
 823              	.LVL94:
 163:lvgl/examples/anim/lv_example_anim_3.c **** }
 824              		.loc 1 163 1 is_stmt 0 view .LVU178
 825 0250 05B0     		add	sp, sp, #20
 826              		.cfi_def_cfa_offset 28
 827              		@ sp needed
 828 0252 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 829              	.L29:
 830 0256 00BF     		.align	2
 831              	.L28:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 29


 832 0258 00000000 		.word	.LANCHOR0
 833 025c 00000000 		.word	.LC2
 834 0260 08000000 		.word	.LC3
 835 0264 00000000 		.word	run_btn_event_handler
 836 0268 10000000 		.word	.LC4
 837 026c 00000000 		.word	slider_event_cb
 838              		.cfi_endproc
 839              	.LFE210:
 841              		.section	.text.lv_example_anim_3,"ax",%progbits
 842              		.align	1
 843              		.global	lv_example_anim_3
 844              		.syntax unified
 845              		.thumb
 846              		.thumb_func
 848              	lv_example_anim_3:
 849              	.LFB204:
  38:lvgl/examples/anim/lv_example_anim_3.c ****     static lv_coord_t col_dsc[] = {LV_GRID_FR(1), 200, LV_GRID_FR(1), LV_GRID_TEMPLATE_LAST};
 850              		.loc 1 38 1 is_stmt 1 view -0
 851              		.cfi_startproc
 852              		@ args = 0, pretend = 0, frame = 0
 853              		@ frame_needed = 0, uses_anonymous_args = 0
 854 0000 38B5     		push	{r3, r4, r5, lr}
 855              		.cfi_def_cfa_offset 16
 856              		.cfi_offset 3, -16
 857              		.cfi_offset 4, -12
 858              		.cfi_offset 5, -8
 859              		.cfi_offset 14, -4
  39:lvgl/examples/anim/lv_example_anim_3.c ****     static lv_coord_t row_dsc[] = {30, 10, 10, LV_GRID_FR(1), LV_GRID_TEMPLATE_LAST};
 860              		.loc 1 39 5 view .LVU180
  40:lvgl/examples/anim/lv_example_anim_3.c **** 
 861              		.loc 1 40 5 view .LVU181
  43:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(cont, 2, LV_PART_MAIN);
 862              		.loc 1 43 5 view .LVU182
 863              	.LBB82:
 864              	.LBI82:
 865              		.file 5 "lvgl/examples/anim/../../src/core/lv_disp.h"
   1:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
   2:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/examples/anim/../../src/core/lv_disp.h ****  *
   4:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
   5:lvgl/examples/anim/../../src/core/lv_disp.h **** 
   6:lvgl/examples/anim/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/examples/anim/../../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/examples/anim/../../src/core/lv_disp.h **** 
   9:lvgl/examples/anim/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/examples/anim/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/examples/anim/../../src/core/lv_disp.h **** #endif
  12:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  13:lvgl/examples/anim/../../src/core/lv_disp.h **** /*********************
  14:lvgl/examples/anim/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/examples/anim/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/examples/anim/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/examples/anim/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/examples/anim/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  20:lvgl/examples/anim/../../src/core/lv_disp.h **** /*********************
  21:lvgl/examples/anim/../../src/core/lv_disp.h ****  *      DEFINES
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 30


  22:lvgl/examples/anim/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  24:lvgl/examples/anim/../../src/core/lv_disp.h **** /**********************
  25:lvgl/examples/anim/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/examples/anim/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  28:lvgl/examples/anim/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/examples/anim/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/examples/anim/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  47:lvgl/examples/anim/../../src/core/lv_disp.h **** /**********************
  48:lvgl/examples/anim/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/examples/anim/../../src/core/lv_disp.h ****  **********************/
  50:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  51:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  52:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  53:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/examples/anim/../../src/core/lv_disp.h ****  * screen)
  55:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  57:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  59:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  60:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/examples/anim/../../src/core/lv_disp.h ****  * screen)
  63:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  65:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  67:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  68:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  71:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  73:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  74:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  78:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 31


  79:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  80:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  81:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/examples/anim/../../src/core/lv_disp.h ****  * layer)
  83:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  86:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  88:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  89:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Set the theme of a display
  90:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  92:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/examples/anim/../../src/core/lv_disp.h **** 
  94:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
  95:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
  99:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 101:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 102:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 106:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 108:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 109:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Set the background image of a display
 110:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 113:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 115:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 116:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 118:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 120:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 122:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 123:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param delay delay before the transition
 128:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 130:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 132:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 133:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 32


 136:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 137:lvgl/examples/anim/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 139:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 140:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 143:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 145:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 146:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 149:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 151:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 152:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 156:lvgl/examples/anim/../../src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 158:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 159:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 163:lvgl/examples/anim/../../src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 165:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 166:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:lvgl/examples/anim/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 171:lvgl/examples/anim/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 173:lvgl/examples/anim/../../src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/examples/anim/../../src/core/lv_disp.h ****  * To improve backward compatibility
 175:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/examples/anim/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/examples/anim/../../src/core/lv_disp.h **** 
 178:lvgl/examples/anim/../../src/core/lv_disp.h **** /**
 179:lvgl/examples/anim/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/examples/anim/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/examples/anim/../../src/core/lv_disp.h ****  */
 182:lvgl/examples/anim/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 866              		.loc 5 182 26 view .LVU183
 867              	.LBB83:
 183:lvgl/examples/anim/../../src/core/lv_disp.h **** {
 184:lvgl/examples/anim/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 868              		.loc 5 184 5 view .LVU184
 869              		.loc 5 184 12 is_stmt 0 view .LVU185
 870 0002 FFF7FEFF 		bl	lv_disp_get_default
 871              	.LVL95:
 872 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 873              	.LVL96:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 33


 874              	.LBE83:
 875              	.LBE82:
  43:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_all(cont, 2, LV_PART_MAIN);
 876              		.loc 1 43 23 view .LVU186
 877 000a FFF7FEFF 		bl	lv_obj_create
 878              	.LVL97:
 879 000e 0446     		mov	r4, r0
 880              	.LVL98:
  44:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_column(cont, 10, LV_PART_MAIN);
 881              		.loc 1 44 5 is_stmt 1 view .LVU187
 882              	.LBB84:
 883              	.LBI84:
 205:lvgl/examples/anim/../../src/core/lv_obj_style.h **** {
 884              		.loc 3 205 20 view .LVU188
 885              	.LBB85:
 207:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 886              		.loc 3 207 5 view .LVU189
 887 0010 0022     		movs	r2, #0
 888 0012 0221     		movs	r1, #2
 889 0014 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 890              	.LVL99:
 208:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 891              		.loc 3 208 5 view .LVU190
 892 0018 0022     		movs	r2, #0
 893 001a 0221     		movs	r1, #2
 894 001c 2046     		mov	r0, r4
 895 001e FFF7FEFF 		bl	lv_obj_set_style_pad_right
 896              	.LVL100:
 209:lvgl/examples/anim/../../src/core/lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 897              		.loc 3 209 5 view .LVU191
 898 0022 0022     		movs	r2, #0
 899 0024 0221     		movs	r1, #2
 900 0026 2046     		mov	r0, r4
 901 0028 FFF7FEFF 		bl	lv_obj_set_style_pad_top
 902              	.LVL101:
 210:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 903              		.loc 3 210 5 view .LVU192
 904 002c 0022     		movs	r2, #0
 905 002e 0221     		movs	r1, #2
 906 0030 2046     		mov	r0, r4
 907 0032 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 908              	.LVL102:
 210:lvgl/examples/anim/../../src/core/lv_obj_style.h **** }
 909              		.loc 3 210 5 is_stmt 0 view .LVU193
 910              	.LBE85:
 911              	.LBE84:
  45:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_style_pad_row(cont, 10, LV_PART_MAIN);
 912              		.loc 1 45 5 is_stmt 1 view .LVU194
 913 0036 0022     		movs	r2, #0
 914 0038 0A21     		movs	r1, #10
 915 003a 2046     		mov	r0, r4
 916 003c FFF7FEFF 		bl	lv_obj_set_style_pad_column
 917              	.LVL103:
  46:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_grid_dsc_array(cont, col_dsc, row_dsc);
 918              		.loc 1 46 5 view .LVU195
 919 0040 0022     		movs	r2, #0
 920 0042 0A21     		movs	r1, #10
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 34


 921 0044 2046     		mov	r0, r4
 922 0046 FFF7FEFF 		bl	lv_obj_set_style_pad_row
 923              	.LVL104:
  47:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_set_size(cont, 320, 240);
 924              		.loc 1 47 5 view .LVU196
 925 004a 1B4A     		ldr	r2, .L32
 926 004c 1B49     		ldr	r1, .L32+4
 927 004e 2046     		mov	r0, r4
 928 0050 FFF7FEFF 		bl	lv_obj_set_grid_dsc_array
 929              	.LVL105:
  48:lvgl/examples/anim/lv_example_anim_3.c ****     lv_obj_center(cont);
 930              		.loc 1 48 5 view .LVU197
 931 0054 F022     		movs	r2, #240
 932 0056 4FF4A071 		mov	r1, #320
 933 005a 2046     		mov	r0, r4
 934 005c FFF7FEFF 		bl	lv_obj_set_size
 935              	.LVL106:
  49:lvgl/examples/anim/lv_example_anim_3.c **** 
 936              		.loc 1 49 5 view .LVU198
 937              	.LBB86:
 938              	.LBI86:
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 939              		.loc 4 199 20 view .LVU199
 940              	.LBB87:
 941              		.loc 4 201 5 view .LVU200
 942 0060 0023     		movs	r3, #0
 943 0062 1A46     		mov	r2, r3
 944 0064 0921     		movs	r1, #9
 945 0066 2046     		mov	r0, r4
 946 0068 FFF7FEFF 		bl	lv_obj_align
 947              	.LVL107:
 948              		.loc 4 201 5 is_stmt 0 view .LVU201
 949              	.LBE87:
 950              	.LBE86:
  51:lvgl/examples/anim/lv_example_anim_3.c **** 
 951              		.loc 1 51 5 is_stmt 1 view .LVU202
 952 006c 2046     		mov	r0, r4
 953 006e FFF7FEFF 		bl	page_obj_init
 954              	.LVL108:
  53:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_var(&ginfo.a, ginfo.anim_obj);
 955              		.loc 1 53 5 view .LVU203
 956 0072 134D     		ldr	r5, .L32+8
 957 0074 05F12400 		add	r0, r5, #36
 958 0078 FFF7FEFF 		bl	lv_anim_init
 959              	.LVL109:
  54:lvgl/examples/anim/lv_example_anim_3.c ****     int32_t end = lv_obj_get_style_width(cont, LV_PART_MAIN) -
 960              		.loc 1 54 5 view .LVU204
  54:lvgl/examples/anim/lv_example_anim_3.c ****     int32_t end = lv_obj_get_style_width(cont, LV_PART_MAIN) -
 961              		.loc 1 54 36 is_stmt 0 view .LVU205
 962 007c 2B68     		ldr	r3, [r5]
 963              	.LVL110:
 964              	.LBB88:
 965              	.LBI88:
 966              		.file 6 "lvgl/examples/anim/../../src/misc/lv_anim.h"
   1:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
   2:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @file lv_anim.h
   3:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 35


   4:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
   5:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
   6:lvgl/examples/anim/../../src/misc/lv_anim.h **** #ifndef LV_ANIM_H
   7:lvgl/examples/anim/../../src/misc/lv_anim.h **** #define LV_ANIM_H
   8:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
   9:lvgl/examples/anim/../../src/misc/lv_anim.h **** #ifdef __cplusplus
  10:lvgl/examples/anim/../../src/misc/lv_anim.h **** extern "C" {
  11:lvgl/examples/anim/../../src/misc/lv_anim.h **** #endif
  12:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  13:lvgl/examples/anim/../../src/misc/lv_anim.h **** /*********************
  14:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *      INCLUDES
  15:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *********************/
  16:lvgl/examples/anim/../../src/misc/lv_anim.h **** #include "../lv_conf_internal.h"
  17:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  18:lvgl/examples/anim/../../src/misc/lv_anim.h **** #include <stdint.h>
  19:lvgl/examples/anim/../../src/misc/lv_anim.h **** #include <stdbool.h>
  20:lvgl/examples/anim/../../src/misc/lv_anim.h **** #include <stddef.h>
  21:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  22:lvgl/examples/anim/../../src/misc/lv_anim.h **** /*********************
  23:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *      DEFINES
  24:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *********************/
  25:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  26:lvgl/examples/anim/../../src/misc/lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  27:lvgl/examples/anim/../../src/misc/lv_anim.h **** #define LV_ANIM_PLAYTIME_INFINITE    0xFFFFFFFF
  28:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  29:lvgl/examples/anim/../../src/misc/lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  30:lvgl/examples/anim/../../src/misc/lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_PLAYTIME_INFINITE);
  31:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  32:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**********************
  33:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *      TYPEDEFS
  34:lvgl/examples/anim/../../src/misc/lv_anim.h ****  **********************/
  35:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  36:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  37:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef enum {
  38:lvgl/examples/anim/../../src/misc/lv_anim.h ****     LV_ANIM_OFF,
  39:lvgl/examples/anim/../../src/misc/lv_anim.h ****     LV_ANIM_ON,
  40:lvgl/examples/anim/../../src/misc/lv_anim.h **** } lv_anim_enable_t;
  41:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  42:lvgl/examples/anim/../../src/misc/lv_anim.h **** struct _lv_anim_t;
  43:lvgl/examples/anim/../../src/misc/lv_anim.h **** struct _lv_timer_t;
  44:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  45:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Get the current value during an animation*/
  46:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  47:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  48:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Generic prototype of "animator" functions.
  49:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * First parameter is the variable to animate.
  50:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Second parameter is the value to set.
  51:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  52:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * The `x` in `_xcb_t` means it's not a fully generic prototype because
  53:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  54:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  55:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  56:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  57:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  58:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  59:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  60:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Callback to call when the animation is ready*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 36


  61:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  62:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  63:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  64:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  65:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  66:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  67:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  68:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  69:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Callback used when the animation is deleted*/
  70:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef void (*lv_anim_deleted_cb_t)(struct _lv_anim_t *);
  71:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  72:lvgl/examples/anim/../../src/misc/lv_anim.h **** /** Describes an animation*/
  73:lvgl/examples/anim/../../src/misc/lv_anim.h **** typedef struct _lv_anim_t {
  74:lvgl/examples/anim/../../src/misc/lv_anim.h ****     void * var;                          /**<Variable to animate*/
  75:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  76:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  77:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  78:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_deleted_cb_t deleted_cb;     /**< Call it when the animation is deleted*/
  79:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  80:lvgl/examples/anim/../../src/misc/lv_anim.h **** #if LV_USE_USER_DATA
  81:lvgl/examples/anim/../../src/misc/lv_anim.h ****     void * user_data; /**< Custom user data*/
  82:lvgl/examples/anim/../../src/misc/lv_anim.h **** #endif
  83:lvgl/examples/anim/../../src/misc/lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  84:lvgl/examples/anim/../../src/misc/lv_anim.h ****     int32_t start_value;               /**< Start value*/
  85:lvgl/examples/anim/../../src/misc/lv_anim.h ****     int32_t current_value;             /**< Current value*/
  86:lvgl/examples/anim/../../src/misc/lv_anim.h ****     int32_t end_value;                 /**< End value*/
  87:lvgl/examples/anim/../../src/misc/lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  88:lvgl/examples/anim/../../src/misc/lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  89:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  90:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  91:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  92:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  93:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
  94:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
  95:lvgl/examples/anim/../../src/misc/lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  97:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  98:lvgl/examples/anim/../../src/misc/lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  99:lvgl/examples/anim/../../src/misc/lv_anim.h **** } lv_anim_t;
 100:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 101:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**********************
 102:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * GLOBAL PROTOTYPES
 103:lvgl/examples/anim/../../src/misc/lv_anim.h ****  **********************/
 104:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 105:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 106:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Init. the animation module
 107:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 108:lvgl/examples/anim/../../src/misc/lv_anim.h **** void _lv_anim_core_init(void);
 109:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 110:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 111:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Initialize an animation variable.
 112:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * E.g.:
 113:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * lv_anim_t a;
 114:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * lv_anim_init(&a);
 115:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * lv_anim_set_...(&a);
 116:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * lv_anim_start(&a);
 117:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 37


 118:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 119:lvgl/examples/anim/../../src/misc/lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 120:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 121:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 122:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set a variable to animate
 123:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
 124:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param var   pointer to a variable to animate
 125:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 126:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 967              		.loc 6 126 20 is_stmt 1 view .LVU206
 968              	.LBB89:
 127:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 128:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->var = var;
 969              		.loc 6 128 5 view .LVU207
 970              		.loc 6 128 12 is_stmt 0 view .LVU208
 971 007e 6B62     		str	r3, [r5, #36]
 972              	.LVL111:
 973              		.loc 6 128 12 view .LVU209
 974              	.LBE89:
 975              	.LBE88:
  55:lvgl/examples/anim/lv_example_anim_3.c ****                   lv_obj_get_style_width(ginfo.anim_obj, LV_PART_MAIN) - 10;
 976              		.loc 1 55 5 is_stmt 1 view .LVU210
 977              	.LBB90:
 978              	.LBI90:
 979              		.file 7 "lvgl/examples/anim/../../src/core/lv_obj_style_gen.h"
   1:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
 980              		.loc 7 1 26 view .LVU211
 981              	.LBB91:
   2:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h **** {
   3:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
 982              		.loc 7 3 5 view .LVU212
 983              		.loc 7 3 26 is_stmt 0 view .LVU213
 984 0080 0122     		movs	r2, #1
 985 0082 0021     		movs	r1, #0
 986 0084 2046     		mov	r0, r4
 987 0086 FFF7FEFF 		bl	lv_obj_get_style_prop
 988              	.LVL112:
   4:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 989              		.loc 7 4 5 is_stmt 1 view .LVU214
 990              		.loc 7 4 12 is_stmt 0 view .LVU215
 991 008a 04B2     		sxth	r4, r0
 992              	.LVL113:
 993              		.loc 7 4 12 view .LVU216
 994              	.LBE91:
 995              	.LBE90:
 996              	.LBB92:
 997              	.LBI92:
   1:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
 998              		.loc 7 1 26 is_stmt 1 view .LVU217
 999              	.LBB93:
   3:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1000              		.loc 7 3 5 view .LVU218
   3:lvgl/examples/anim/../../src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1001              		.loc 7 3 26 is_stmt 0 view .LVU219
 1002 008c 0122     		movs	r2, #1
 1003 008e 0021     		movs	r1, #0
 1004 0090 2868     		ldr	r0, [r5]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 38


 1005 0092 FFF7FEFF 		bl	lv_obj_get_style_prop
 1006              	.LVL114:
 1007              		.loc 7 4 5 is_stmt 1 view .LVU220
 1008              		.loc 7 4 12 is_stmt 0 view .LVU221
 1009 0096 00B2     		sxth	r0, r0
 1010              	.LVL115:
 1011              		.loc 7 4 12 view .LVU222
 1012              	.LBE93:
 1013              	.LBE92:
  55:lvgl/examples/anim/lv_example_anim_3.c ****                   lv_obj_get_style_width(ginfo.anim_obj, LV_PART_MAIN) - 10;
 1014              		.loc 1 55 62 view .LVU223
 1015 0098 241A     		subs	r4, r4, r0
  55:lvgl/examples/anim/lv_example_anim_3.c ****                   lv_obj_get_style_width(ginfo.anim_obj, LV_PART_MAIN) - 10;
 1016              		.loc 1 55 13 view .LVU224
 1017 009a 0A3C     		subs	r4, r4, #10
 1018              	.LVL116:
  57:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_time(&ginfo.a, 2000);
 1019              		.loc 1 57 5 is_stmt 1 view .LVU225
 1020              	.LBB94:
 1021              	.LBI94:
 129:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 130:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 131:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 132:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set a function to animate `var`
 133:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 134:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param exec_cb   a function to execute during animation
 135:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *                  LVGL's built-in functions can be used.
 136:lvgl/examples/anim/../../src/misc/lv_anim.h ****  *                  E.g. lv_obj_set_x
 137:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 138:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 139:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 140:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->exec_cb = exec_cb;
 141:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 142:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 143:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 144:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set the duration of an animation
 145:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 146:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 147:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 148:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 149:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 150:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->time = duration;
 151:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 152:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 153:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 154:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set a delay before starting the animation
 155:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 156:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 157:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 158:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 159:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 160:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->act_time = -(int32_t)(delay);
 161:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 162:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 163:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 164:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set the start and end values of an animation
 165:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 39


 166:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param start     the start value
 167:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param end       the end value
 168:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 169:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 1022              		.loc 6 169 20 view .LVU226
 1023              	.LBB95:
 170:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 171:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->start_value = start;
 1024              		.loc 6 171 5 view .LVU227
 1025              		.loc 6 171 20 is_stmt 0 view .LVU228
 1026 009c 0523     		movs	r3, #5
 1027 009e 6B64     		str	r3, [r5, #68]
 172:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->current_value = start;
 1028              		.loc 6 172 5 is_stmt 1 view .LVU229
 1029              		.loc 6 172 22 is_stmt 0 view .LVU230
 1030 00a0 AB64     		str	r3, [r5, #72]
 173:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->end_value = end;
 1031              		.loc 6 173 5 is_stmt 1 view .LVU231
 1032              		.loc 6 173 18 is_stmt 0 view .LVU232
 1033 00a2 EC64     		str	r4, [r5, #76]
 1034              	.LVL117:
 1035              		.loc 6 173 18 view .LVU233
 1036              	.LBE95:
 1037              	.LBE94:
  58:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_exec_cb(&ginfo.a, anim_x_cb);
 1038              		.loc 1 58 5 is_stmt 1 view .LVU234
 1039              	.LBB96:
 1040              	.LBI96:
 148:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 1041              		.loc 6 148 20 view .LVU235
 1042              	.LBB97:
 150:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 1043              		.loc 6 150 5 view .LVU236
 150:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 1044              		.loc 6 150 13 is_stmt 0 view .LVU237
 1045 00a4 4FF4FA63 		mov	r3, #2000
 1046 00a8 2B65     		str	r3, [r5, #80]
 1047              	.LVL118:
 150:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 1048              		.loc 6 150 13 view .LVU238
 1049              	.LBE97:
 1050              	.LBE96:
  59:lvgl/examples/anim/lv_example_anim_3.c ****     lv_anim_set_path_cb(&ginfo.a, anim_path_bezier3_cb);
 1051              		.loc 1 59 5 is_stmt 1 view .LVU239
 1052              	.LBB98:
 1053              	.LBI98:
 138:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 1054              		.loc 6 138 20 view .LVU240
 1055              	.LBB99:
 140:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 1056              		.loc 6 140 5 view .LVU241
 140:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 1057              		.loc 6 140 16 is_stmt 0 view .LVU242
 1058 00aa 064B     		ldr	r3, .L32+12
 1059 00ac AB62     		str	r3, [r5, #40]
 1060              	.LVL119:
 140:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 40


 1061              		.loc 6 140 16 view .LVU243
 1062              	.LBE99:
 1063              	.LBE98:
  60:lvgl/examples/anim/lv_example_anim_3.c **** 
 1064              		.loc 1 60 5 is_stmt 1 view .LVU244
 1065              	.LBB100:
 1066              	.LBI100:
 174:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 175:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 176:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 177:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 178:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 179:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * This function might be used when LVGL is bound to other languages because
 180:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 181:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * The variable to animate can be stored in the animation's `user_data`
 182:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 183:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param exec_cb   a function to execute.
 184:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 185:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 186:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 187:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->var     = a;
 188:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 189:lvgl/examples/anim/../../src/misc/lv_anim.h **** }
 190:lvgl/examples/anim/../../src/misc/lv_anim.h **** 
 191:lvgl/examples/anim/../../src/misc/lv_anim.h **** /**
 192:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * Set the path (curve) of the animation.
 193:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 194:lvgl/examples/anim/../../src/misc/lv_anim.h ****  * @param path_cb a function to set the current value of the animation.
 195:lvgl/examples/anim/../../src/misc/lv_anim.h ****  */
 196:lvgl/examples/anim/../../src/misc/lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
 1067              		.loc 6 196 20 view .LVU245
 1068              	.LBB101:
 197:lvgl/examples/anim/../../src/misc/lv_anim.h **** {
 198:lvgl/examples/anim/../../src/misc/lv_anim.h ****     a->path_cb = path_cb;
 1069              		.loc 6 198 5 view .LVU246
 1070              		.loc 6 198 16 is_stmt 0 view .LVU247
 1071 00ae 064B     		ldr	r3, .L32+16
 1072 00b0 2B64     		str	r3, [r5, #64]
 1073              	.LVL120:
 1074              		.loc 6 198 16 view .LVU248
 1075              	.LBE101:
 1076              	.LBE100:
  62:lvgl/examples/anim/lv_example_anim_3.c **** }
 1077              		.loc 1 62 5 is_stmt 1 view .LVU249
 1078 00b2 FFF7FEFF 		bl	refer_chart_cubic_bezier
 1079              	.LVL121:
  63:lvgl/examples/anim/lv_example_anim_3.c **** 
 1080              		.loc 1 63 1 is_stmt 0 view .LVU250
 1081 00b6 38BD     		pop	{r3, r4, r5, pc}
 1082              	.LVL122:
 1083              	.L33:
  63:lvgl/examples/anim/lv_example_anim_3.c **** 
 1084              		.loc 1 63 1 view .LVU251
 1085              		.align	2
 1086              	.L32:
 1087 00b8 00000000 		.word	.LANCHOR1
 1088 00bc 00000000 		.word	.LANCHOR2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 41


 1089 00c0 00000000 		.word	.LANCHOR0
 1090 00c4 00000000 		.word	anim_x_cb
 1091 00c8 00000000 		.word	anim_path_bezier3_cb
 1092              		.cfi_endproc
 1093              	.LFE204:
 1095              		.global	ginfo
 1096              		.section	.bss.ginfo,"aw",%nobits
 1097              		.align	2
 1098              		.set	.LANCHOR0,. + 0
 1101              	ginfo:
 1102 0000 00000000 		.space	104
 1102      00000000 
 1102      00000000 
 1102      00000000 
 1102      00000000 
 1103              		.section	.data.col_dsc.1,"aw"
 1104              		.align	2
 1105              		.set	.LANCHOR2,. + 0
 1108              	col_dsc.1:
 1109 0000 9C1F     		.short	8092
 1110 0002 C800     		.short	200
 1111 0004 9C1F     		.short	8092
 1112 0006 FF1F     		.short	8191
 1113              		.section	.data.row_dsc.0,"aw"
 1114              		.align	2
 1115              		.set	.LANCHOR1,. + 0
 1118              	row_dsc.0:
 1119 0000 1E00     		.short	30
 1120 0002 0A00     		.short	10
 1121 0004 0A00     		.short	10
 1122 0006 9C1F     		.short	8092
 1123 0008 FF1F     		.short	8191
 1124              		.text
 1125              	.Letext0:
 1126              		.file 8 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 1127              		.file 9 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 1128              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 1129              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 1130              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 1131              		.file 13 "lvgl/examples/anim/../../src/core/lv_obj.h"
 1132              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 1133              		.file 15 "lvgl/examples/anim/../../src/core/lv_group.h"
 1134              		.file 16 "lvgl/examples/anim/../../src/core/lv_obj_scroll.h"
 1135              		.file 17 "lvgl/examples/anim/../../src/core/lv_obj_class.h"
 1136              		.file 18 "lvgl/examples/anim/../../src/core/lv_event.h"
 1137              		.file 19 "lvgl/examples/anim/../../src/widgets/lv_bar.h"
 1138              		.file 20 "lvgl/examples/anim/../../src/extra/layouts/grid/lv_grid.h"
 1139              		.file 21 "lvgl/examples/anim/../../src/extra/widgets/chart/lv_chart.h"
 1140              		.file 22 "lvgl/examples/anim/../../src/extra/widgets/imgbtn/lv_imgbtn.h"
 1141              		.file 23 "lvgl/examples/anim/../../src/widgets/lv_label.h"
 1142              		.file 24 "lvgl/examples/anim/../../src/widgets/lv_btn.h"
 1143              		.file 25 "lvgl/examples/anim/../../src/misc/lv_printf.h"
 1144              		.file 26 "lvgl/examples/anim/../../src/misc/lv_math.h"
 1145              		.file 27 "lvgl/examples/anim/../../src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 42


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_anim_3.c
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:19     .text.anim_path_bezier3_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:24     .text.anim_path_bezier3_cb:00000000 anim_path_bezier3_cb
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:90     .text.anim_path_bezier3_cb:00000038 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:95     .text.anim_x_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:100    .text.anim_x_cb:00000000 anim_x_cb
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:125    .text.run_btn_event_handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:130    .text.run_btn_event_handler:00000000 run_btn_event_handler
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:167    .text.run_btn_event_handler:00000014 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:172    .text.refer_chart_cubic_bezier:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:177    .text.refer_chart_cubic_bezier:00000000 refer_chart_cubic_bezier
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:258    .text.refer_chart_cubic_bezier:00000044 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:263    .rodata.slider_event_cb.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:270    .text.slider_event_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:275    .text.slider_event_cb:00000000 slider_event_cb
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:378    .text.slider_event_cb:00000050 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:385    .rodata.page_obj_init.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:395    .text.page_obj_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:400    .text.page_obj_init:00000000 page_obj_init
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:832    .text.page_obj_init:00000258 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:842    .text.lv_example_anim_3:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:848    .text.lv_example_anim_3:00000000 lv_example_anim_3
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1087   .text.lv_example_anim_3:000000b8 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1101   .bss.ginfo:00000000 ginfo
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1097   .bss.ginfo:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1104   .data.col_dsc.1:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1108   .data.col_dsc.1:00000000 col_dsc.1
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1114   .data.row_dsc.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s:1118   .data.row_dsc.0:00000000 row_dsc.0

UNDEFINED SYMBOLS
lv_map
lv_bezier3
lv_obj_set_style_translate_x
lv_event_get_code
lv_anim_start
lv_chart_set_value_by_id2
lv_chart_refresh
lv_event_get_target
lv_bar_get_value
lv_snprintf
lv_label_set_text
lv_obj_create
lv_obj_set_size
lv_obj_set_align
lv_obj_clear_flag
lv_palette_main
lv_obj_set_style_bg_color
lv_obj_set_grid_cell
lv_label_create
lv_slider_create
lv_bar_set_range
lv_obj_set_style_pad_left
lv_obj_set_style_pad_right
lv_obj_set_style_pad_top
lv_obj_set_style_pad_bottom
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBGaxfx.s 			page 43


lv_obj_add_event_cb
lv_btn_create
lv_obj_align
lv_chart_create
lv_obj_set_style_width
lv_obj_set_style_height
lv_chart_set_type
lv_chart_add_series
lv_chart_set_range
lv_chart_set_point_count
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_set_style_pad_column
lv_obj_set_style_pad_row
lv_obj_set_grid_dsc_array
lv_anim_init
lv_obj_get_style_prop
