ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_event_4.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.timer_cb.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 25642073 		.ascii	"%d sides\000"
  21      69646573 
  21      00
  22              		.section	.text.timer_cb,"ax",%progbits
  23              		.align	1
  24              		.syntax unified
  25              		.thumb
  26              		.thumb_func
  28              	timer_cb:
  29              	.LVL0:
  30              	.LFB204:
  31              		.file 1 "lvgl/examples/event/lv_example_event_4.c"
   1:lvgl/examples/event/lv_example_event_4.c **** #include "../lv_examples.h"
   2:lvgl/examples/event/lv_example_event_4.c **** 
   3:lvgl/examples/event/lv_example_event_4.c **** #if LV_BUILD_EXAMPLES
   4:lvgl/examples/event/lv_example_event_4.c **** 
   5:lvgl/examples/event/lv_example_event_4.c **** static int n = 3;
   6:lvgl/examples/event/lv_example_event_4.c **** static lv_obj_t * label = NULL;
   7:lvgl/examples/event/lv_example_event_4.c **** 
   8:lvgl/examples/event/lv_example_event_4.c **** static void timer_cb(lv_timer_t * timer)
   9:lvgl/examples/event/lv_example_event_4.c **** {
  32              		.loc 1 9 1 view -0
  33              		.cfi_startproc
  34              		@ args = 0, pretend = 0, frame = 0
  35              		@ frame_needed = 0, uses_anonymous_args = 0
  36              		.loc 1 9 1 is_stmt 0 view .LVU1
  37 0000 38B5     		push	{r3, r4, r5, lr}
  38              		.cfi_def_cfa_offset 16
  39              		.cfi_offset 3, -16
  40              		.cfi_offset 4, -12
  41              		.cfi_offset 5, -8
  42              		.cfi_offset 14, -4
  43 0002 0446     		mov	r4, r0
  10:lvgl/examples/event/lv_example_event_4.c ****     if(n < 3 || n > 32) {
  44              		.loc 1 10 5 is_stmt 1 view .LVU2
  45              		.loc 1 10 14 is_stmt 0 view .LVU3
  46 0004 134B     		ldr	r3, .L6
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 2


  47 0006 1B68     		ldr	r3, [r3]
  48 0008 033B     		subs	r3, r3, #3
  49              		.loc 1 10 7 view .LVU4
  50 000a 1D2B     		cmp	r3, #29
  51 000c 06D9     		bls	.L2
  11:lvgl/examples/event/lv_example_event_4.c ****         n = 3;
  52              		.loc 1 11 9 is_stmt 1 view .LVU5
  53              		.loc 1 11 11 is_stmt 0 view .LVU6
  54 000e 114B     		ldr	r3, .L6
  55 0010 0322     		movs	r2, #3
  56 0012 1A60     		str	r2, [r3]
  57              	.LVL1:
  58              	.L3:
  12:lvgl/examples/event/lv_example_event_4.c ****     }
  13:lvgl/examples/event/lv_example_event_4.c ****     else {
  14:lvgl/examples/event/lv_example_event_4.c ****         static uint32_t old_tick = 0;
  15:lvgl/examples/event/lv_example_event_4.c ****         uint32_t tick = lv_tick_get();
  16:lvgl/examples/event/lv_example_event_4.c ****         if(!old_tick) {
  17:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
  18:lvgl/examples/event/lv_example_event_4.c ****         }
  19:lvgl/examples/event/lv_example_event_4.c ****         if(tick - old_tick > 3000) {
  20:lvgl/examples/event/lv_example_event_4.c ****             n++;
  21:lvgl/examples/event/lv_example_event_4.c ****             lv_label_set_text_fmt(label, "%d sides", n);
  22:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
  23:lvgl/examples/event/lv_example_event_4.c ****         }
  24:lvgl/examples/event/lv_example_event_4.c ****     }
  25:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_invalidate(timer->user_data);
  59              		.loc 1 25 5 is_stmt 1 view .LVU7
  60 0014 E068     		ldr	r0, [r4, #12]
  61 0016 FFF7FEFF 		bl	lv_obj_invalidate
  62              	.LVL2:
  26:lvgl/examples/event/lv_example_event_4.c **** }
  63              		.loc 1 26 1 is_stmt 0 view .LVU8
  64 001a 38BD     		pop	{r3, r4, r5, pc}
  65              	.LVL3:
  66              	.L2:
  67              	.LBB9:
  14:lvgl/examples/event/lv_example_event_4.c ****         uint32_t tick = lv_tick_get();
  68              		.loc 1 14 9 is_stmt 1 view .LVU9
  15:lvgl/examples/event/lv_example_event_4.c ****         if(!old_tick) {
  69              		.loc 1 15 9 view .LVU10
  15:lvgl/examples/event/lv_example_event_4.c ****         if(!old_tick) {
  70              		.loc 1 15 25 is_stmt 0 view .LVU11
  71 001c FFF7FEFF 		bl	lv_tick_get
  72              	.LVL4:
  15:lvgl/examples/event/lv_example_event_4.c ****         if(!old_tick) {
  73              		.loc 1 15 25 view .LVU12
  74 0020 0546     		mov	r5, r0
  75              	.LVL5:
  16:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
  76              		.loc 1 16 9 is_stmt 1 view .LVU13
  16:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
  77              		.loc 1 16 12 is_stmt 0 view .LVU14
  78 0022 0D4B     		ldr	r3, .L6+4
  79 0024 1B68     		ldr	r3, [r3]
  16:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
  80              		.loc 1 16 11 view .LVU15
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 3


  81 0026 0BB9     		cbnz	r3, .L4
  17:lvgl/examples/event/lv_example_event_4.c ****         }
  82              		.loc 1 17 13 is_stmt 1 view .LVU16
  17:lvgl/examples/event/lv_example_event_4.c ****         }
  83              		.loc 1 17 22 is_stmt 0 view .LVU17
  84 0028 0B4B     		ldr	r3, .L6+4
  85 002a 1860     		str	r0, [r3]
  86              	.L4:
  19:lvgl/examples/event/lv_example_event_4.c ****             n++;
  87              		.loc 1 19 9 is_stmt 1 view .LVU18
  19:lvgl/examples/event/lv_example_event_4.c ****             n++;
  88              		.loc 1 19 17 is_stmt 0 view .LVU19
  89 002c 0A4B     		ldr	r3, .L6+4
  90 002e 1B68     		ldr	r3, [r3]
  91 0030 EB1A     		subs	r3, r5, r3
  19:lvgl/examples/event/lv_example_event_4.c ****             n++;
  92              		.loc 1 19 11 view .LVU20
  93 0032 40F6B832 		movw	r2, #3000
  94 0036 9342     		cmp	r3, r2
  95 0038 ECD9     		bls	.L3
  20:lvgl/examples/event/lv_example_event_4.c ****             lv_label_set_text_fmt(label, "%d sides", n);
  96              		.loc 1 20 13 is_stmt 1 view .LVU21
  20:lvgl/examples/event/lv_example_event_4.c ****             lv_label_set_text_fmt(label, "%d sides", n);
  97              		.loc 1 20 14 is_stmt 0 view .LVU22
  98 003a 064B     		ldr	r3, .L6
  99 003c 1A68     		ldr	r2, [r3]
 100 003e 0132     		adds	r2, r2, #1
 101 0040 1A60     		str	r2, [r3]
  21:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
 102              		.loc 1 21 13 is_stmt 1 view .LVU23
 103 0042 0649     		ldr	r1, .L6+8
 104 0044 064B     		ldr	r3, .L6+12
 105 0046 1868     		ldr	r0, [r3]
 106              	.LVL6:
  21:lvgl/examples/event/lv_example_event_4.c ****             old_tick = tick;
 107              		.loc 1 21 13 is_stmt 0 view .LVU24
 108 0048 FFF7FEFF 		bl	lv_label_set_text_fmt
 109              	.LVL7:
  22:lvgl/examples/event/lv_example_event_4.c ****         }
 110              		.loc 1 22 13 is_stmt 1 view .LVU25
  22:lvgl/examples/event/lv_example_event_4.c ****         }
 111              		.loc 1 22 22 is_stmt 0 view .LVU26
 112 004c 024B     		ldr	r3, .L6+4
 113 004e 1D60     		str	r5, [r3]
 114 0050 E0E7     		b	.L3
 115              	.L7:
 116 0052 00BF     		.align	2
 117              	.L6:
 118 0054 00000000 		.word	.LANCHOR0
 119 0058 00000000 		.word	.LANCHOR1
 120 005c 00000000 		.word	.LC0
 121 0060 00000000 		.word	.LANCHOR2
 122              	.LBE9:
 123              		.cfi_endproc
 124              	.LFE204:
 126              		.section	.text.event_cb,"ax",%progbits
 127              		.align	1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 4


 128              		.syntax unified
 129              		.thumb
 130              		.thumb_func
 132              	event_cb:
 133              	.LVL8:
 134              	.LFB205:
  27:lvgl/examples/event/lv_example_event_4.c **** 
  28:lvgl/examples/event/lv_example_event_4.c **** static void event_cb(lv_event_t * e)
  29:lvgl/examples/event/lv_example_event_4.c **** {
 135              		.loc 1 29 1 is_stmt 1 view -0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 208
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		.loc 1 29 1 is_stmt 0 view .LVU28
 140 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 141              		.cfi_def_cfa_offset 28
 142              		.cfi_offset 4, -28
 143              		.cfi_offset 5, -24
 144              		.cfi_offset 6, -20
 145              		.cfi_offset 7, -16
 146              		.cfi_offset 8, -12
 147              		.cfi_offset 9, -8
 148              		.cfi_offset 14, -4
 149 0004 B5B0     		sub	sp, sp, #212
 150              		.cfi_def_cfa_offset 240
  30:lvgl/examples/event/lv_example_event_4.c ****     /*The original target of the event. Can be the buttons or the container*/
  31:lvgl/examples/event/lv_example_event_4.c ****     lv_draw_ctx_t * draw_ctx = lv_event_get_draw_ctx(e);
 151              		.loc 1 31 5 is_stmt 1 view .LVU29
 152              		.loc 1 31 32 is_stmt 0 view .LVU30
 153 0006 FFF7FEFF 		bl	lv_event_get_draw_ctx
 154              	.LVL9:
 155              		.loc 1 31 32 view .LVU31
 156 000a 0646     		mov	r6, r0
 157              	.LVL10:
  32:lvgl/examples/event/lv_example_event_4.c ****     lv_draw_rect_dsc_t draw_dsc;
 158              		.loc 1 32 5 is_stmt 1 view .LVU32
  33:lvgl/examples/event/lv_example_event_4.c ****     lv_draw_rect_dsc_init(&draw_dsc);
 159              		.loc 1 33 5 view .LVU33
 160 000c 20A8     		add	r0, sp, #128
 161              	.LVL11:
 162              		.loc 1 33 5 is_stmt 0 view .LVU34
 163 000e FFF7FEFF 		bl	lv_draw_rect_dsc_init
 164              	.LVL12:
  34:lvgl/examples/event/lv_example_event_4.c ****     draw_dsc.bg_color = lv_palette_main(LV_PALETTE_LIGHT_GREEN);
 165              		.loc 1 34 5 is_stmt 1 view .LVU35
 166              		.loc 1 34 25 is_stmt 0 view .LVU36
 167 0012 0A20     		movs	r0, #10
 168 0014 FFF7FEFF 		bl	lv_palette_main
 169              	.LVL13:
 170 0018 2190     		str	r0, [sp, #132]
  35:lvgl/examples/event/lv_example_event_4.c ****     draw_dsc.bg_opa = LV_OPA_COVER;
 171              		.loc 1 35 5 is_stmt 1 view .LVU37
 172              		.loc 1 35 21 is_stmt 0 view .LVU38
 173 001a FF23     		movs	r3, #255
 174 001c 8DF88330 		strb	r3, [sp, #131]
  36:lvgl/examples/event/lv_example_event_4.c ****     lv_point_t points[32];
 175              		.loc 1 36 5 is_stmt 1 view .LVU39
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 5


  37:lvgl/examples/event/lv_example_event_4.c ****     int i, r = 150;
 176              		.loc 1 37 5 view .LVU40
 177              	.LVL14:
  38:lvgl/examples/event/lv_example_event_4.c ****     uint32_t tick = lv_tick_get();
 178              		.loc 1 38 5 view .LVU41
 179              		.loc 1 38 21 is_stmt 0 view .LVU42
 180 0020 FFF7FEFF 		bl	lv_tick_get
 181              	.LVL15:
 182 0024 0546     		mov	r5, r0
 183              	.LVL16:
  39:lvgl/examples/event/lv_example_event_4.c ****     for(i = 0; i < n; i++) {
 184              		.loc 1 39 5 is_stmt 1 view .LVU43
 185              		.loc 1 39 11 is_stmt 0 view .LVU44
 186 0026 0024     		movs	r4, #0
 187              		.loc 1 39 5 view .LVU45
 188 0028 2EE0     		b	.L9
 189              	.LVL17:
 190              	.L10:
 191              	.LBB10:
  40:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 192              		.loc 1 40 9 is_stmt 1 discriminator 3 view .LVU46
 193              		.loc 1 40 23 is_stmt 0 discriminator 3 view .LVU47
 194 002a 4FF4B473 		mov	r3, #360
 195 002e 04FB03F3 		mul	r3, r4, r3
 196              		.loc 1 40 29 discriminator 3 view .LVU48
 197 0032 93FBF0F3 		sdiv	r3, r3, r0
 198              		.loc 1 40 42 discriminator 3 view .LVU49
 199 0036 1B48     		ldr	r0, .L12
 200 0038 A0FB0520 		umull	r2, r0, r0, r5
 201 003c C00B     		lsrs	r0, r0, #15
 202 003e 48F6A042 		movw	r2, #36000
 203 0042 02FB1050 		mls	r0, r2, r0, r5
 204              		.loc 1 40 51 discriminator 3 view .LVU50
 205 0046 184A     		ldr	r2, .L12+4
 206 0048 A2FB0020 		umull	r2, r0, r2, r0
 207              		.loc 1 40 33 discriminator 3 view .LVU51
 208 004c 03EB5013 		add	r3, r3, r0, lsr #5
 209              	.LVL18:
  41:lvgl/examples/event/lv_example_event_4.c ****         lv_coord_t x = 150 + (r * lv_trigo_cos(angle) >> LV_TRIGO_SHIFT), y =
 210              		.loc 1 41 9 is_stmt 1 discriminator 3 view .LVU52
 211              		.loc 1 41 35 is_stmt 0 discriminator 3 view .LVU53
 212 0050 0FFA83F8 		sxth	r8, r3
 213              	.LVL19:
 214              	.LBB11:
 215              	.LBI11:
 216              		.file 2 "lvgl/examples/event/../../src/misc/lv_math.h"
   1:lvgl/examples/event/../../src/misc/lv_math.h **** /**
   2:lvgl/examples/event/../../src/misc/lv_math.h ****  * @file lv_math.h
   3:lvgl/examples/event/../../src/misc/lv_math.h ****  *
   4:lvgl/examples/event/../../src/misc/lv_math.h ****  */
   5:lvgl/examples/event/../../src/misc/lv_math.h **** 
   6:lvgl/examples/event/../../src/misc/lv_math.h **** #ifndef LV_MATH_H
   7:lvgl/examples/event/../../src/misc/lv_math.h **** #define LV_MATH_H
   8:lvgl/examples/event/../../src/misc/lv_math.h **** 
   9:lvgl/examples/event/../../src/misc/lv_math.h **** #ifdef __cplusplus
  10:lvgl/examples/event/../../src/misc/lv_math.h **** extern "C" {
  11:lvgl/examples/event/../../src/misc/lv_math.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 6


  12:lvgl/examples/event/../../src/misc/lv_math.h **** 
  13:lvgl/examples/event/../../src/misc/lv_math.h **** /*********************
  14:lvgl/examples/event/../../src/misc/lv_math.h ****  *      INCLUDES
  15:lvgl/examples/event/../../src/misc/lv_math.h ****  *********************/
  16:lvgl/examples/event/../../src/misc/lv_math.h **** #include "../lv_conf_internal.h"
  17:lvgl/examples/event/../../src/misc/lv_math.h **** #include <stdint.h>
  18:lvgl/examples/event/../../src/misc/lv_math.h **** 
  19:lvgl/examples/event/../../src/misc/lv_math.h **** /*********************
  20:lvgl/examples/event/../../src/misc/lv_math.h ****  *      DEFINES
  21:lvgl/examples/event/../../src/misc/lv_math.h ****  *********************/
  22:lvgl/examples/event/../../src/misc/lv_math.h **** #define LV_TRIGO_SIN_MAX 32767
  23:lvgl/examples/event/../../src/misc/lv_math.h **** #define LV_TRIGO_SHIFT 15 /**<  >> LV_TRIGO_SHIFT to normalize*/
  24:lvgl/examples/event/../../src/misc/lv_math.h **** 
  25:lvgl/examples/event/../../src/misc/lv_math.h **** #define LV_BEZIER_VAL_MAX 1024 /**< Max time in Bezier functions (not [0..1] to use integers)*/
  26:lvgl/examples/event/../../src/misc/lv_math.h **** #define LV_BEZIER_VAL_SHIFT 10 /**< log2(LV_BEZIER_VAL_MAX): used to normalize up scaled values*/
  27:lvgl/examples/event/../../src/misc/lv_math.h **** 
  28:lvgl/examples/event/../../src/misc/lv_math.h **** /**********************
  29:lvgl/examples/event/../../src/misc/lv_math.h ****  *      TYPEDEFS
  30:lvgl/examples/event/../../src/misc/lv_math.h ****  **********************/
  31:lvgl/examples/event/../../src/misc/lv_math.h **** 
  32:lvgl/examples/event/../../src/misc/lv_math.h **** typedef struct {
  33:lvgl/examples/event/../../src/misc/lv_math.h ****     uint16_t i;
  34:lvgl/examples/event/../../src/misc/lv_math.h ****     uint16_t f;
  35:lvgl/examples/event/../../src/misc/lv_math.h **** } lv_sqrt_res_t;
  36:lvgl/examples/event/../../src/misc/lv_math.h **** 
  37:lvgl/examples/event/../../src/misc/lv_math.h **** /**********************
  38:lvgl/examples/event/../../src/misc/lv_math.h ****  * GLOBAL PROTOTYPES
  39:lvgl/examples/event/../../src/misc/lv_math.h ****  **********************/
  40:lvgl/examples/event/../../src/misc/lv_math.h **** 
  41:lvgl/examples/event/../../src/misc/lv_math.h **** //! @cond Doxygen_Suppress
  42:lvgl/examples/event/../../src/misc/lv_math.h **** /**
  43:lvgl/examples/event/../../src/misc/lv_math.h ****  * Return with sinus of an angle
  44:lvgl/examples/event/../../src/misc/lv_math.h ****  * @param angle
  45:lvgl/examples/event/../../src/misc/lv_math.h ****  * @return sinus of 'angle'. sin(-90) = -32767, sin(90) = 32767
  46:lvgl/examples/event/../../src/misc/lv_math.h ****  */
  47:lvgl/examples/event/../../src/misc/lv_math.h **** int16_t /* LV_ATTRIBUTE_FAST_MEM */ lv_trigo_sin(int16_t angle);
  48:lvgl/examples/event/../../src/misc/lv_math.h **** 
  49:lvgl/examples/event/../../src/misc/lv_math.h **** static inline int16_t LV_ATTRIBUTE_FAST_MEM lv_trigo_cos(int16_t angle)
 217              		.loc 2 49 45 is_stmt 1 discriminator 3 view .LVU54
 218              	.LBB12:
  50:lvgl/examples/event/../../src/misc/lv_math.h **** {
  51:lvgl/examples/event/../../src/misc/lv_math.h ****     return lv_trigo_sin(angle + 90);
 219              		.loc 2 51 5 discriminator 3 view .LVU55
 220              		.loc 2 51 31 is_stmt 0 discriminator 3 view .LVU56
 221 0054 5A33     		adds	r3, r3, #90
 222              	.LVL20:
 223              		.loc 2 51 12 discriminator 3 view .LVU57
 224 0056 18B2     		sxth	r0, r3
 225 0058 FFF7FEFF 		bl	lv_trigo_sin
 226              	.LVL21:
 227              		.loc 2 51 12 discriminator 3 view .LVU58
 228              	.LBE12:
 229              	.LBE11:
 230              		.loc 1 41 33 discriminator 3 view .LVU59
 231 005c 4FF09609 		mov	r9, #150
 232 0060 09FB00F7 		mul	r7, r9, r0
 233              		.loc 1 41 55 discriminator 3 view .LVU60
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 7


 234 0064 FF13     		asrs	r7, r7, #15
 235              		.loc 1 41 28 discriminator 3 view .LVU61
 236 0066 4F44     		add	r7, r7, r9
 237              		.loc 1 41 20 discriminator 3 view .LVU62
 238 0068 3FB2     		sxth	r7, r7
 239              	.LVL22:
  42:lvgl/examples/event/lv_example_event_4.c ****                            150 + (r * lv_trigo_sin(angle) >> LV_TRIGO_SHIFT);
 240              		.loc 1 42 39 discriminator 3 view .LVU63
 241 006a 4046     		mov	r0, r8
 242 006c FFF7FEFF 		bl	lv_trigo_sin
 243              	.LVL23:
 244              		.loc 1 42 37 discriminator 3 view .LVU64
 245 0070 09FB00F0 		mul	r0, r9, r0
 246              		.loc 1 42 59 discriminator 3 view .LVU65
 247 0074 C013     		asrs	r0, r0, #15
 248              		.loc 1 42 32 discriminator 3 view .LVU66
 249 0076 4844     		add	r0, r0, r9
 250              	.LVL24:
  43:lvgl/examples/event/lv_example_event_4.c ****         points[i].x = x;
 251              		.loc 1 43 9 is_stmt 1 discriminator 3 view .LVU67
 252              		.loc 1 43 21 is_stmt 0 discriminator 3 view .LVU68
 253 0078 34AB     		add	r3, sp, #208
 254 007a 03EB8403 		add	r3, r3, r4, lsl #2
 255 007e 23F8D07C 		strh	r7, [r3, #-208]	@ movhi
  44:lvgl/examples/event/lv_example_event_4.c ****         points[i].y = y;
 256              		.loc 1 44 9 is_stmt 1 discriminator 3 view .LVU69
 257              		.loc 1 44 21 is_stmt 0 discriminator 3 view .LVU70
 258 0082 23F8CE0C 		strh	r0, [r3, #-206]	@ movhi
 259              	.LBE10:
  39:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 260              		.loc 1 39 23 is_stmt 1 discriminator 3 view .LVU71
  39:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 261              		.loc 1 39 24 is_stmt 0 discriminator 3 view .LVU72
 262 0086 0134     		adds	r4, r4, #1
 263              	.LVL25:
 264              	.L9:
  39:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 265              		.loc 1 39 16 is_stmt 1 discriminator 1 view .LVU73
  39:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 266              		.loc 1 39 18 is_stmt 0 discriminator 1 view .LVU74
 267 0088 084B     		ldr	r3, .L12+8
 268 008a 1868     		ldr	r0, [r3]
  39:lvgl/examples/event/lv_example_event_4.c ****         int angle = i * 360 / n + ((tick % 36000) / 100);
 269              		.loc 1 39 5 discriminator 1 view .LVU75
 270 008c A042     		cmp	r0, r4
 271 008e CCDC     		bgt	.L10
  45:lvgl/examples/event/lv_example_event_4.c ****     }
  46:lvgl/examples/event/lv_example_event_4.c ****     lv_draw_polygon(draw_ctx, &draw_dsc, points, n);
 272              		.loc 1 46 5 is_stmt 1 view .LVU76
 273 0090 83B2     		uxth	r3, r0
 274 0092 6A46     		mov	r2, sp
 275 0094 20A9     		add	r1, sp, #128
 276 0096 3046     		mov	r0, r6
 277 0098 FFF7FEFF 		bl	lv_draw_polygon
 278              	.LVL26:
  47:lvgl/examples/event/lv_example_event_4.c **** }
 279              		.loc 1 47 1 is_stmt 0 view .LVU77
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 8


 280 009c 35B0     		add	sp, sp, #212
 281              		.cfi_def_cfa_offset 28
 282              		@ sp needed
 283 009e BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 284              	.LVL27:
 285              	.L13:
 286              		.loc 1 47 1 view .LVU78
 287 00a2 00BF     		.align	2
 288              	.L12:
 289 00a4 D55204E9 		.word	-385592619
 290 00a8 1F85EB51 		.word	1374389535
 291 00ac 00000000 		.word	.LANCHOR0
 292              		.cfi_endproc
 293              	.LFE205:
 295              		.section	.text.lv_example_event_4,"ax",%progbits
 296              		.align	1
 297              		.global	lv_example_event_4
 298              		.syntax unified
 299              		.thumb
 300              		.thumb_func
 302              	lv_example_event_4:
 303              	.LFB206:
  48:lvgl/examples/event/lv_example_event_4.c **** 
  49:lvgl/examples/event/lv_example_event_4.c **** /**
  50:lvgl/examples/event/lv_example_event_4.c ****  * Demonstrate event bubbling
  51:lvgl/examples/event/lv_example_event_4.c ****  */
  52:lvgl/examples/event/lv_example_event_4.c **** void lv_example_event_4(void)
  53:lvgl/examples/event/lv_example_event_4.c **** {
 304              		.loc 1 53 1 is_stmt 1 view -0
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 0
 307              		@ frame_needed = 0, uses_anonymous_args = 0
 308 0000 38B5     		push	{r3, r4, r5, lr}
 309              		.cfi_def_cfa_offset 16
 310              		.cfi_offset 3, -16
 311              		.cfi_offset 4, -12
 312              		.cfi_offset 5, -8
 313              		.cfi_offset 14, -4
  54:lvgl/examples/event/lv_example_event_4.c **** 
  55:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_t * cont = lv_obj_create(lv_scr_act());
 314              		.loc 1 55 5 view .LVU80
 315              	.LBB19:
 316              	.LBI19:
 317              		.file 3 "lvgl/examples/event/../../src/core/lv_disp.h"
   1:lvgl/examples/event/../../src/core/lv_disp.h **** /**
   2:lvgl/examples/event/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/examples/event/../../src/core/lv_disp.h ****  *
   4:lvgl/examples/event/../../src/core/lv_disp.h ****  */
   5:lvgl/examples/event/../../src/core/lv_disp.h **** 
   6:lvgl/examples/event/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/examples/event/../../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/examples/event/../../src/core/lv_disp.h **** 
   9:lvgl/examples/event/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/examples/event/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/examples/event/../../src/core/lv_disp.h **** #endif
  12:lvgl/examples/event/../../src/core/lv_disp.h **** 
  13:lvgl/examples/event/../../src/core/lv_disp.h **** /*********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 9


  14:lvgl/examples/event/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/examples/event/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/examples/event/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/examples/event/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/examples/event/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/examples/event/../../src/core/lv_disp.h **** 
  20:lvgl/examples/event/../../src/core/lv_disp.h **** /*********************
  21:lvgl/examples/event/../../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/examples/event/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/examples/event/../../src/core/lv_disp.h **** 
  24:lvgl/examples/event/../../src/core/lv_disp.h **** /**********************
  25:lvgl/examples/event/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/examples/event/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/examples/event/../../src/core/lv_disp.h **** 
  28:lvgl/examples/event/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/examples/event/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/examples/event/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/examples/event/../../src/core/lv_disp.h **** 
  47:lvgl/examples/event/../../src/core/lv_disp.h **** /**********************
  48:lvgl/examples/event/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/examples/event/../../src/core/lv_disp.h ****  **********************/
  50:lvgl/examples/event/../../src/core/lv_disp.h **** 
  51:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  52:lvgl/examples/event/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  53:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/examples/event/../../src/core/lv_disp.h ****  * screen)
  55:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  57:lvgl/examples/event/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:lvgl/examples/event/../../src/core/lv_disp.h **** 
  59:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  60:lvgl/examples/event/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/examples/event/../../src/core/lv_disp.h ****  * screen)
  63:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  65:lvgl/examples/event/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/examples/event/../../src/core/lv_disp.h **** 
  67:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  68:lvgl/examples/event/../../src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/examples/event/../../src/core/lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 10


  71:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/examples/event/../../src/core/lv_disp.h **** 
  73:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  74:lvgl/examples/event/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  78:lvgl/examples/event/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:lvgl/examples/event/../../src/core/lv_disp.h **** 
  80:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  81:lvgl/examples/event/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/examples/event/../../src/core/lv_disp.h ****  * layer)
  83:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  86:lvgl/examples/event/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/examples/event/../../src/core/lv_disp.h **** 
  88:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  89:lvgl/examples/event/../../src/core/lv_disp.h ****  * Set the theme of a display
  90:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  92:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/examples/event/../../src/core/lv_disp.h **** 
  94:lvgl/examples/event/../../src/core/lv_disp.h **** /**
  95:lvgl/examples/event/../../src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/examples/event/../../src/core/lv_disp.h ****  */
  99:lvgl/examples/event/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/examples/event/../../src/core/lv_disp.h **** 
 101:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 102:lvgl/examples/event/../../src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 106:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/examples/event/../../src/core/lv_disp.h **** 
 108:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 109:lvgl/examples/event/../../src/core/lv_disp.h ****  * Set the background image of a display
 110:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 113:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/examples/event/../../src/core/lv_disp.h **** 
 115:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 116:lvgl/examples/event/../../src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 118:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 120:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/examples/event/../../src/core/lv_disp.h **** 
 122:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 123:lvgl/examples/event/../../src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param delay delay before the transition
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 11


 128:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 130:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/examples/event/../../src/core/lv_disp.h **** 
 132:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 133:lvgl/examples/event/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 137:lvgl/examples/event/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/examples/event/../../src/core/lv_disp.h **** 
 139:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 140:lvgl/examples/event/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 143:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/examples/event/../../src/core/lv_disp.h **** 
 145:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 146:lvgl/examples/event/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 149:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/examples/event/../../src/core/lv_disp.h **** 
 151:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 152:lvgl/examples/event/../../src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 156:lvgl/examples/event/../../src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/examples/event/../../src/core/lv_disp.h **** 
 158:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 159:lvgl/examples/event/../../src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 163:lvgl/examples/event/../../src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/examples/event/../../src/core/lv_disp.h **** 
 165:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 166:lvgl/examples/event/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:lvgl/examples/event/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/examples/event/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 171:lvgl/examples/event/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:lvgl/examples/event/../../src/core/lv_disp.h **** 
 173:lvgl/examples/event/../../src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/examples/event/../../src/core/lv_disp.h ****  * To improve backward compatibility
 175:lvgl/examples/event/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/examples/event/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/examples/event/../../src/core/lv_disp.h **** 
 178:lvgl/examples/event/../../src/core/lv_disp.h **** /**
 179:lvgl/examples/event/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/examples/event/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/examples/event/../../src/core/lv_disp.h ****  */
 182:lvgl/examples/event/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 318              		.loc 3 182 26 view .LVU81
 319              	.LBB20:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 12


 183:lvgl/examples/event/../../src/core/lv_disp.h **** {
 184:lvgl/examples/event/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 320              		.loc 3 184 5 view .LVU82
 321              		.loc 3 184 12 is_stmt 0 view .LVU83
 322 0002 FFF7FEFF 		bl	lv_disp_get_default
 323              	.LVL28:
 324 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 325              	.LVL29:
 326              	.LBE20:
 327              	.LBE19:
 328              		.loc 1 55 23 view .LVU84
 329 000a FFF7FEFF 		bl	lv_obj_create
 330              	.LVL30:
 331 000e 0446     		mov	r4, r0
 332              	.LVL31:
  56:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_remove_style_all(cont);
 333              		.loc 1 56 5 is_stmt 1 view .LVU85
 334              	.LBB21:
 335              	.LBI21:
 336              		.file 4 "lvgl/examples/event/../../src/core/lv_obj_style.h"
   1:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**
   2:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @file lv_obj_style.h
   3:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *
   4:lvgl/examples/event/../../src/core/lv_obj_style.h ****  */
   5:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
   6:lvgl/examples/event/../../src/core/lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:lvgl/examples/event/../../src/core/lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
   9:lvgl/examples/event/../../src/core/lv_obj_style.h **** #ifdef __cplusplus
  10:lvgl/examples/event/../../src/core/lv_obj_style.h **** extern "C" {
  11:lvgl/examples/event/../../src/core/lv_obj_style.h **** #endif
  12:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  13:lvgl/examples/event/../../src/core/lv_obj_style.h **** /*********************
  14:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *      INCLUDES
  15:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *********************/
  16:lvgl/examples/event/../../src/core/lv_obj_style.h **** #include <stdint.h>
  17:lvgl/examples/event/../../src/core/lv_obj_style.h **** #include <stdbool.h>
  18:lvgl/examples/event/../../src/core/lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  20:lvgl/examples/event/../../src/core/lv_obj_style.h **** /*********************
  21:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *      DEFINES
  22:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *********************/
  23:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  24:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**********************
  25:lvgl/examples/event/../../src/core/lv_obj_style.h ****  *      TYPEDEFS
  26:lvgl/examples/event/../../src/core/lv_obj_style.h ****  **********************/
  27:lvgl/examples/event/../../src/core/lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:lvgl/examples/event/../../src/core/lv_obj_style.h **** struct _lv_obj_t;
  29:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  30:lvgl/examples/event/../../src/core/lv_obj_style.h **** typedef enum {
  31:lvgl/examples/event/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:lvgl/examples/event/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:lvgl/examples/event/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:lvgl/examples/event/../../src/core/lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:lvgl/examples/event/../../src/core/lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  37:lvgl/examples/event/../../src/core/lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 13


  38:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  39:lvgl/examples/event/../../src/core/lv_obj_style.h **** typedef struct {
  40:lvgl/examples/event/../../src/core/lv_obj_style.h ****     lv_style_t * style;
  41:lvgl/examples/event/../../src/core/lv_obj_style.h ****     uint32_t selector : 24;
  42:lvgl/examples/event/../../src/core/lv_obj_style.h ****     uint32_t is_local : 1;
  43:lvgl/examples/event/../../src/core/lv_obj_style.h ****     uint32_t is_trans : 1;
  44:lvgl/examples/event/../../src/core/lv_obj_style.h **** } _lv_obj_style_t;
  45:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  46:lvgl/examples/event/../../src/core/lv_obj_style.h **** typedef struct {
  47:lvgl/examples/event/../../src/core/lv_obj_style.h ****     uint16_t time;
  48:lvgl/examples/event/../../src/core/lv_obj_style.h ****     uint16_t delay;
  49:lvgl/examples/event/../../src/core/lv_obj_style.h ****     lv_style_selector_t selector;
  50:lvgl/examples/event/../../src/core/lv_obj_style.h ****     lv_style_prop_t prop;
  51:lvgl/examples/event/../../src/core/lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:lvgl/examples/event/../../src/core/lv_obj_style.h **** #if LV_USE_USER_DATA
  53:lvgl/examples/event/../../src/core/lv_obj_style.h ****     void * user_data;
  54:lvgl/examples/event/../../src/core/lv_obj_style.h **** #endif
  55:lvgl/examples/event/../../src/core/lv_obj_style.h **** } _lv_obj_style_transition_dsc_t;
  56:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  57:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**********************
  58:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:lvgl/examples/event/../../src/core/lv_obj_style.h ****  **********************/
  60:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  61:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**
  62:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * Initialize the object related style manager module.
  63:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:lvgl/examples/event/../../src/core/lv_obj_style.h ****  */
  65:lvgl/examples/event/../../src/core/lv_obj_style.h **** void _lv_obj_style_init(void);
  66:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  67:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**
  68:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * Add a style to an object.
  69:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  70:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param style     pointer to a style to add
  71:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:lvgl/examples/event/../../src/core/lv_obj_style.h ****  */
  75:lvgl/examples/event/../../src/core/lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  77:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**
  78:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * Add a style to an object.
  79:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  80:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:lvgl/examples/event/../../src/core/lv_obj_style.h ****  */
  86:lvgl/examples/event/../../src/core/lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:lvgl/examples/event/../../src/core/lv_obj_style.h **** 
  88:lvgl/examples/event/../../src/core/lv_obj_style.h **** /**
  89:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * Remove all styles from an object
  90:lvgl/examples/event/../../src/core/lv_obj_style.h ****  * @param obj       pointer to an object
  91:lvgl/examples/event/../../src/core/lv_obj_style.h ****  */
  92:lvgl/examples/event/../../src/core/lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
 337              		.loc 4 92 20 view .LVU86
 338              	.LBB22:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 14


  93:lvgl/examples/event/../../src/core/lv_obj_style.h **** {
  94:lvgl/examples/event/../../src/core/lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, (lv_style_selector_t)LV_PART_ANY | (lv_style_selector_t)LV_STATE
 339              		.loc 4 94 5 view .LVU87
 340 0010 124A     		ldr	r2, .L16
 341 0012 0021     		movs	r1, #0
 342 0014 FFF7FEFF 		bl	lv_obj_remove_style
 343              	.LVL32:
 344              		.loc 4 94 5 is_stmt 0 view .LVU88
 345              	.LBE22:
 346              	.LBE21:
  57:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_set_size(cont, 300, 300);
 347              		.loc 1 57 5 is_stmt 1 view .LVU89
 348 0018 4FF49672 		mov	r2, #300
 349 001c 1146     		mov	r1, r2
 350 001e 2046     		mov	r0, r4
 351 0020 FFF7FEFF 		bl	lv_obj_set_size
 352              	.LVL33:
  58:lvgl/examples/event/lv_example_event_4.c ****     label = lv_label_create(cont);
 353              		.loc 1 58 5 view .LVU90
 354              		.loc 1 58 13 is_stmt 0 view .LVU91
 355 0024 2046     		mov	r0, r4
 356 0026 FFF7FEFF 		bl	lv_label_create
 357              	.LVL34:
 358              		.loc 1 58 11 view .LVU92
 359 002a 0D4D     		ldr	r5, .L16+4
 360 002c 2860     		str	r0, [r5]
  59:lvgl/examples/event/lv_example_event_4.c ****     lv_label_set_text_fmt(label, "%d sides", n);
 361              		.loc 1 59 5 is_stmt 1 view .LVU93
 362 002e 0D4B     		ldr	r3, .L16+8
 363 0030 1A68     		ldr	r2, [r3]
 364 0032 0D49     		ldr	r1, .L16+12
 365 0034 FFF7FEFF 		bl	lv_label_set_text_fmt
 366              	.LVL35:
  60:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_center(label);
 367              		.loc 1 60 5 view .LVU94
 368              	.LBB23:
 369              	.LBI23:
 370              		.file 5 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      DEFINES
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 15


  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 16


  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 17


 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param cb        the layout update callback
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 18


 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 371              		.loc 5 199 20 view .LVU95
 372              	.LBB24:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 373              		.loc 5 201 5 view .LVU96
 374 0038 0023     		movs	r3, #0
 375 003a 1A46     		mov	r2, r3
 376 003c 0921     		movs	r1, #9
 377 003e 2868     		ldr	r0, [r5]
 378 0040 FFF7FEFF 		bl	lv_obj_align
 379              	.LVL36:
 380              		.loc 5 201 5 is_stmt 0 view .LVU97
 381              	.LBE24:
 382              	.LBE23:
  61:lvgl/examples/event/lv_example_event_4.c **** 
  62:lvgl/examples/event/lv_example_event_4.c ****     lv_obj_add_event_cb(cont, event_cb, LV_EVENT_DRAW_MAIN, NULL);
 383              		.loc 1 62 5 is_stmt 1 view .LVU98
 384 0044 0023     		movs	r3, #0
 385 0046 1522     		movs	r2, #21
 386 0048 0849     		ldr	r1, .L16+16
 387 004a 2046     		mov	r0, r4
 388 004c FFF7FEFF 		bl	lv_obj_add_event_cb
 389              	.LVL37:
  63:lvgl/examples/event/lv_example_event_4.c ****     lv_timer_create(timer_cb, 17, cont);
 390              		.loc 1 63 5 view .LVU99
 391 0050 2246     		mov	r2, r4
 392 0052 1121     		movs	r1, #17
 393 0054 0648     		ldr	r0, .L16+20
 394 0056 FFF7FEFF 		bl	lv_timer_create
 395              	.LVL38:
  64:lvgl/examples/event/lv_example_event_4.c **** }
 396              		.loc 1 64 1 is_stmt 0 view .LVU100
 397 005a 38BD     		pop	{r3, r4, r5, pc}
 398              	.LVL39:
 399              	.L17:
 400              		.loc 1 64 1 view .LVU101
 401              		.align	2
 402              	.L16:
 403 005c FFFF0F00 		.word	1048575
 404 0060 00000000 		.word	.LANCHOR2
 405 0064 00000000 		.word	.LANCHOR0
 406 0068 00000000 		.word	.LC0
 407 006c 00000000 		.word	event_cb
 408 0070 00000000 		.word	timer_cb
 409              		.cfi_endproc
 410              	.LFE206:
 412              		.section	.bss.label,"aw",%nobits
 413              		.align	2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 19


 414              		.set	.LANCHOR2,. + 0
 417              	label:
 418 0000 00000000 		.space	4
 419              		.section	.bss.old_tick.0,"aw",%nobits
 420              		.align	2
 421              		.set	.LANCHOR1,. + 0
 424              	old_tick.0:
 425 0000 00000000 		.space	4
 426              		.section	.data.n,"aw"
 427              		.align	2
 428              		.set	.LANCHOR0,. + 0
 431              	n:
 432 0000 03000000 		.word	3
 433              		.text
 434              	.Letext0:
 435              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 436              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 437              		.file 8 "lvgl/examples/event/../../src/misc/lv_types.h"
 438              		.file 9 "lvgl/examples/event/../../src/misc/lv_timer.h"
 439              		.file 10 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 440              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 441              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\font\\lv_font.h"
 442              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 443              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_txt.h"
 444              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_bidi.h"
 445              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 446              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_img_buf.h"
 447              		.file 18 "lvgl/examples/event/../../src/core/lv_obj.h"
 448              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_rect.h"
 449              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_label.h"
 450              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_img.h"
 451              		.file 22 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_line.h"
 452              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_arc.h"
 453              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_layer.h"
 454              		.file 25 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw.h"
 455              		.file 26 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 456              		.file 27 "lvgl/examples/event/../../src/core/lv_group.h"
 457              		.file 28 "lvgl/examples/event/../../src/core/lv_obj_scroll.h"
 458              		.file 29 "lvgl/examples/event/../../src/core/lv_obj_class.h"
 459              		.file 30 "lvgl/examples/event/../../src/core/lv_event.h"
 460              		.file 31 "lvgl/examples/event/../../src/widgets/lv_bar.h"
 461              		.file 32 "lvgl/examples/event/../../src/extra/widgets/imgbtn/lv_imgbtn.h"
 462              		.file 33 "lvgl/examples/event/../../src/hal/lv_hal_disp.h"
 463              		.file 34 "lvgl/examples/event/../../src/widgets/lv_label.h"
 464              		.file 35 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\hal\\lv_hal_tick.h"
 465              		.file 36 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_triangle.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s 			page 20


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_event_4.c
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:19     .rodata.timer_cb.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:23     .text.timer_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:28     .text.timer_cb:00000000 timer_cb
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:118    .text.timer_cb:00000054 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:127    .text.event_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:132    .text.event_cb:00000000 event_cb
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:289    .text.event_cb:000000a4 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:296    .text.lv_example_event_4:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:302    .text.lv_example_event_4:00000000 lv_example_event_4
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:403    .text.lv_example_event_4:0000005c $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:413    .bss.label:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:417    .bss.label:00000000 label
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:420    .bss.old_tick.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:424    .bss.old_tick.0:00000000 old_tick.0
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:427    .data.n:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccBVL4Qp.s:431    .data.n:00000000 n

UNDEFINED SYMBOLS
lv_obj_invalidate
lv_tick_get
lv_label_set_text_fmt
lv_event_get_draw_ctx
lv_draw_rect_dsc_init
lv_palette_main
lv_trigo_sin
lv_draw_polygon
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_create
lv_obj_remove_style
lv_obj_set_size
lv_label_create
lv_obj_align
lv_obj_add_event_cb
lv_timer_create
