ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_blend.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.fill_blended,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	fill_blended:
  25              	.LVL0:
  26              	.LFB165:
  27              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_blend.c"
   1:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  * @file lv_draw_sw_blend.c
   3:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../misc/lv_math.h"
  11:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../hal/lv_hal_disp.h"
  12:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #include "../../core/lv_refr.h"
  13:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  14:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /*********************
  15:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      DEFINES
  16:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *********************/
  17:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  18:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  19:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      TYPEDEFS
  20:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  21:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  22:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  23:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC PROTOTYPES
  24:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  25:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  26:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
  27:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
  28:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  29:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_a
  30:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     lv_coord_t dest_stride, lv_color_t color, lv_op
  31:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                     const lv_opa_t * mask, lv_coord_t mask_stride);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 2


  32:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  33:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
  34:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_are
  35:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   lv_coord_t dest_stride, lv_color_t color, lv_opa_
  36:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   const lv_opa_t * mask, lv_coord_t mask_stride);
  37:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  38:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  39:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  40:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride
  41:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode
  42:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif  /*LV_DRAW_COMPLEX*/
  43:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  44:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  45:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  46:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_opa_t * mask, lv_coord_t mask_stride);
  47:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  48:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ map_normal(lv_color_t * dest_buf, const lv_area_t * dest_ar
  49:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t dest_stride, const lv_color_t * src_b
  50:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t src_stride, lv_opa_t opa, const lv_op
  51:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                    lv_coord_t mask_stride);
  52:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  53:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
  54:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void /* LV_ATTRIBUTE_FAST_MEM */ map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area
  55:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t dest_stride, const lv_color_t * src_buf
  56:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t src_stride, lv_opa_t opa, const lv_opa_
  57:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                  lv_coord_t mask_stride, lv_blend_mode_t blend_mode
  58:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  59:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_COLOR_SCREEN_TRANSP*/
  60:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  61:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
  62:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
  63:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
  64:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode);
  65:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  66:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  67:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
  68:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
  69:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif /*LV_DRAW_COMPLEX*/
  70:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  71:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  72:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *  STATIC VARIABLES
  73:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  74:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  75:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  76:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *      MACROS
  77:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  78:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define FILL_NORMAL_MASK_PX(color)                                                          \
  79:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask == LV_OPA_COVER) *dest_buf = color;                                 \
  80:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else *dest_buf = lv_color_mix(color, *dest_buf, *mask);            \
  81:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask++;                                                         \
  82:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     dest_buf++;
  83:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  84:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #define MAP_NORMAL_MASK_PX(x)                                                          \
  85:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(*mask_tmp_x) {          \
  86:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(*mask_tmp_x == LV_OPA_COVER) dest_buf[x] = src_buf[x];                                 \
  87:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], *mask_tmp_x);            \
  88:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }                                                                                              
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 3


  89:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     mask_tmp_x++;
  90:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  91:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
  92:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   GLOBAL FUNCTIONS
  93:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
  94:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
  95:lvgl/src/draw/sw/lv_draw_sw_blend.c **** void lv_draw_sw_blend(lv_draw_ctx_t * draw_ctx, const lv_draw_sw_blend_dsc_t * dsc)
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  97:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  99:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 102:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 104:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ((lv_draw_sw_ctx_t *)draw_ctx)->blend(draw_ctx, dsc);
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 107:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 108:lvgl/src/draw/sw/lv_draw_sw_blend.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_sw_blend_basic(lv_draw_ctx_t * draw_ctx,
 109:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                   const lv_draw_sw_blend_dsc_t * dsc)
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 115:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 116:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t dest_stride = lv_area_get_width(draw_ctx->buf_area);
 118:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_t blend_area;
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 121:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 127:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 128:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 129:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*With LV_COLOR_DEPTH 16 it means ARGB8565 (3 bytes format)*/
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) * LV_IMG_PX_SIZE_AL
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 134:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 135:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 136:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     const lv_color_t * src_buf = dsc->src_buf;
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 142:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 143:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 144:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = 0;
 145:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 4


 146:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 147:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t mask_stride;
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 149:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->antialiasing == 0) {
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 152:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(i = 0; i < mask_size; i++) {
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 155:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 156:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 157:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = lv_area_get_width(dsc->mask_area);
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 160:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 161:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 162:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask_stride = 0;
 164:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 165:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_area_move(&blend_area, -draw_ctx->buf_area->x1, -draw_ctx->buf_area->y1);
 167:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb) {
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 171:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 172:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_set_px(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 174:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 175:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 176:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 177:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(disp->driver->screen_transp) {
 178:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 179:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_argb(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride);
 180:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 181:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 182:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_argb(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mask_
 183:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 184:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 185:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->blend_mode == LV_BLEND_MODE_NORMAL) {
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 189:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 190:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_normal(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, mas
 192:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 193:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 194:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 195:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 198:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 199:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             map_blended(dest_buf, &blend_area, dest_stride, src_buf, src_stride, dsc->opa, mask, ma
 201:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 202:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 5


 203:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 205:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 206:lvgl/src/draw/sw/lv_draw_sw_blend.c **** /**********************
 207:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  *   STATIC FUNCTIONS
 208:lvgl/src/draw/sw/lv_draw_sw_blend.c ****  **********************/
 209:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 210:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_set_px(lv_color_t * dest_buf, const lv_area_t * blend_area, lv_coord_t dest_stride
 211:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_color_t color, lv_opa_t opa, const lv_opa_t * mask, lv_coord_t mask_stid
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 214:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 215:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 216:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 217:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 222:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 223:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 224:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 225:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t w = lv_area_get_width(blend_area);
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 228:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 232:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, blend_area
 234:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 235:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 236:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stide;
 238:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 239:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 241:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 242:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static LV_ATTRIBUTE_FAST_MEM void fill_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 243:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               lv_coord_t dest_stride, lv_color_t color, lv_opa_t op
 244:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                               const lv_opa_t * mask, lv_coord_t mask_stride)
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 246:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 247:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 248:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 249:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 250:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 251:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 252:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 256:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 258:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 259:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 6


 260:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 261:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color = lv_color_black();
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 264:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 265:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_MIX_ROUND_OFS == 0 && LV_COLOR_DEPTH == 16
 266:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*lv_color_mix work with an optimized algorithm with 16 bit color depth.
 267:lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *However, it introduces some rounded error on opa.
 268:lvgl/src/draw/sw/lv_draw_sw_blend.c ****              *Introduce the same error here too to make lv_color_premult produces the same result *
 269:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = (uint32_t)((uint32_t)opa + 4) >> 3;
 270:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             opa = opa << 3;
 271:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 272:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint16_t color_premult[3];
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 276:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 282:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = last_res_color;
 284:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 286:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 287:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 288:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 289:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 290:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 291:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 292:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         uint32_t c32 = color.full + ((uint32_t)color.full << 16);
 293:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 294:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 300:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 301:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x <= x_end4; x += 4) {
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 305:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 306:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((lv_uintptr_t)dest_buf & 0x3) {
 307:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 0) = color;
 308:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)(dest_buf + 1);
 309:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 310:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(dest_buf + 3) = color;
 311:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 312:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 313:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             uint32_t * d = (uint32_t *)dest_buf;
 314:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *d = c32;
 315:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             *(d + 1) = c32;
 316:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 7


 317:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[0] = color;
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 320:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 321:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
 322:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 325:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else if(mask32) {
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 331:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 332:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 335:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 336:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 337:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 340:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += (dest_stride - w);
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 343:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 344:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 345:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 346:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 347:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 348:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_dest_color;
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 354:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 359:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 365:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = last_res_color;
 367:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 369:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 372:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 373:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 8


 374:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 376:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 377:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 378:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb(uint8_t * buf, lv_color_t color, lv_opa_t opa)
 379:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 380:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 381:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t res_color;
 382:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t bg_opa = buf[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 383:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 384:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 385:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[1]);
 386:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 387:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full;
 388:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 390:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[2]);
 391:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 392:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.full & 0xff;
 393:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.full >> 8;
 394:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 395:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 396:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_mix_with_alpha(bg_color, bg_opa, color, opa, &res_color, &buf[3]);
 397:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 398:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = res_color.ch.blue;
 399:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = res_color.ch.green;
 400:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = res_color.ch.red;
 401:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 402:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 403:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 404:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline void set_px_argb_blend(uint8_t * buf, lv_color_t color, lv_opa_t opa, lv_color_t (*bl
 405:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                                                                    
 406:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 407:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_dest_color;
 408:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_src_color;
 409:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static lv_color_t last_res_color;
 410:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     static uint32_t last_opa = 0xffff; /*Set to an invalid value for first*/
 411:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 412:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t bg_color;
 413:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 414:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the BG color*/
 415:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 416:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[1] <= LV_OPA_MIN) return;
 417:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0];
 418:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 419:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[2] <= LV_OPA_MIN) return;
 420:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color.full = buf[0] + (buf[1] << 8);
 421:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 422:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(buf[3] <= LV_OPA_MIN) return;
 423:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     bg_color = *((lv_color_t *)buf);
 424:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 425:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 426:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Get the result color*/
 427:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(last_dest_color.full != bg_color.full || last_src_color.full != color.full || last_opa != op
 428:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = bg_color;
 429:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = color;
 430:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_opa = opa;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 9


 431:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 432:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 433:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 434:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Set the result color*/
 435:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 436:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.full;
 437:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 438:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.full & 0xff;
 439:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.full >> 8;
 440:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 441:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[0] = last_res_color.ch.blue;
 442:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[1] = last_res_color.ch.green;
 443:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     buf[2] = last_res_color.ch.red;
 444:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 445:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 446:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 447:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 448:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM fill_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
 449:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa,
 450:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             const lv_opa_t * mask, lv_coord_t mask_stride)
 451:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 452:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 453:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 454:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 455:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 456:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 457:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 458:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 459:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE];
 460:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_memcpy(ctmp, &color, sizeof(lv_color_t));
 461:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     ctmp[LV_IMG_PX_SIZE_ALPHA_BYTE - 1] = opa;
 462:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 463:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*No mask*/
 464:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 465:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 466:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 467:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, ctmp, LV_IMG_PX_SIZE_ALPHA_BYTE);
 468:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 469:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 470:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 471:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (dest_stride - w) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 472:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 473:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 1; y < h; y++) {
 474:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf8, (uint8_t *) dest_buf, w * LV_IMG_PX_SIZE_ALPHA_BYTE);
 475:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 476:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 477:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 478:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Has opacity*/
 479:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 480:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 481:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 482:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 483:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color, opa);
 484:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 485:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 486:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 487:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 10


 488:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 489:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 490:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 491:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 492:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 493:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 494:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 495:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 496:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 497:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 498:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     set_px_argb(dest_buf8, color,  *mask);
 499:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 500:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 501:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 502:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 503:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 504:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 505:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 506:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*With opacity*/
 507:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 508:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             /*Buffer the result color to avoid recalculating the same color*/
 509:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 510:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 511:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 512:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 513:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 514:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 515:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 516:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 517:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 518:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 519:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, color,  opa_tmp);
 520:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 521:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 522:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask++;
 523:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 524:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 525:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 526:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 527:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 528:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 529:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 530:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 531:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 532:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 533:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 534:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void fill_blended(lv_color_t * dest_buf, const lv_area_t * dest_area,
 535:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_coord_t dest_stride, lv_color_t color, lv_opa_t opa, const lv_opa_t * m
 536:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                          lv_blend_mode_t blend_mode)
 537:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
  28              		.loc 1 537 1 view -0
  29              		.cfi_startproc
  30              		@ args = 16, pretend = 0, frame = 24
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 537 1 is_stmt 0 view .LVU1
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              		.cfi_def_cfa_offset 36
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 11


  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 87B0     		sub	sp, sp, #28
  45              		.cfi_def_cfa_offset 64
  46 0006 0546     		mov	r5, r0
  47 0008 0492     		str	r2, [sp, #16]
  48 000a 1846     		mov	r0, r3
  49              	.LVL1:
  50              		.loc 1 537 1 view .LVU2
  51 000c 9DF84030 		ldrb	r3, [sp, #64]	@ zero_extendqisi2
  52 0010 0193     		str	r3, [sp, #4]
  53 0012 119F     		ldr	r7, [sp, #68]
  54 0014 BDF94830 		ldrsh	r3, [sp, #72]
  55 0018 0593     		str	r3, [sp, #20]
  56 001a 9DF84C20 		ldrb	r2, [sp, #76]	@ zero_extendqisi2
  57              	.LVL2:
 538:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 539:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
  58              		.loc 1 539 5 is_stmt 1 view .LVU3
  59              	.LBB55:
  60              	.LBI55:
  61              		.file 2 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 12


  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 13


  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
  62              		.loc 2 123 26 view .LVU4
  63              	.LBB56:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
  64              		.loc 2 125 5 view .LVU5
  65              		.loc 2 125 31 is_stmt 0 view .LVU6
  66 001e B1F80480 		ldrh	r8, [r1, #4]
  67              		.loc 2 125 44 view .LVU7
  68 0022 0B88     		ldrh	r3, [r1]
  69              		.loc 2 125 36 view .LVU8
  70 0024 A8EB0308 		sub	r8, r8, r3
  71 0028 1FFA88F8 		uxth	r8, r8
  72              		.loc 2 125 49 view .LVU9
  73 002c 08F10108 		add	r8, r8, #1
  74              		.loc 2 125 12 view .LVU10
  75 0030 0FFA88F8 		sxth	r8, r8
  76              	.LVL3:
  77              		.loc 2 125 12 view .LVU11
  78              	.LBE56:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 14


  79              	.LBE55:
 540:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
  80              		.loc 1 540 5 is_stmt 1 view .LVU12
  81              	.LBB57:
  82              	.LBI57:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
  83              		.loc 2 133 26 view .LVU13
  84              	.LBB58:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
  85              		.loc 2 135 5 view .LVU14
  86              		.loc 2 135 31 is_stmt 0 view .LVU15
  87 0034 CB88     		ldrh	r3, [r1, #6]
  88              		.loc 2 135 44 view .LVU16
  89 0036 4988     		ldrh	r1, [r1, #2]
  90              	.LVL4:
  91              		.loc 2 135 36 view .LVU17
  92 0038 5B1A     		subs	r3, r3, r1
  93 003a 9BB2     		uxth	r3, r3
  94              		.loc 2 135 49 view .LVU18
  95 003c 0133     		adds	r3, r3, #1
  96              		.loc 2 135 12 view .LVU19
  97 003e 1BB2     		sxth	r3, r3
  98 0040 0393     		str	r3, [sp, #12]
  99              	.LVL5:
 100              		.loc 2 135 12 view .LVU20
 101              	.LBE58:
 102              	.LBE57:
 541:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 542:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 103              		.loc 1 542 5 is_stmt 1 view .LVU21
 543:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 104              		.loc 1 543 5 view .LVU22
 544:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 545:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 105              		.loc 1 545 5 view .LVU23
 546:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 106              		.loc 1 546 5 view .LVU24
 107 0042 022A     		cmp	r2, #2
 108 0044 13D0     		beq	.L17
 109 0046 032A     		cmp	r2, #3
 110 0048 14D0     		beq	.L18
 111 004a 012A     		cmp	r2, #1
 112 004c 02D0     		beq	.L24
 113              	.LVL6:
 114              	.L1:
 547:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 548:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 549:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 550:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 15


 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 552:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 553:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 554:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 555:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 556:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 557:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 558:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 559:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 560:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 561:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 570:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 572:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 574:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 575:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 576:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 577:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 578:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Buffer the result color to avoid recalculating the same color*/
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color;
 580:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 585:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 591:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa_tmp);
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 595:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 597:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 600:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 601:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 602:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 115              		.loc 1 602 1 is_stmt 0 view .LVU25
 116 004e 07B0     		add	sp, sp, #28
 117              		.cfi_remember_state
 118              		.cfi_def_cfa_offset 36
 119              		@ sp needed
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 16


 120 0050 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 121              	.LVL7:
 122              	.L24:
 123              		.cfi_restore_state
 546:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 124              		.loc 1 546 5 view .LVU26
 125 0054 DFF8ECA0 		ldr	r10, .L29
 126              	.L2:
 127              	.LVL8:
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 128              		.loc 1 562 5 is_stmt 1 view .LVU27
 562:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_dest_color = dest_buf[0];
 129              		.loc 1 562 7 is_stmt 0 view .LVU28
 130 0058 7FB1     		cbz	r7, .L25
 131              	.LBB59:
 579:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color;
 132              		.loc 1 579 9 is_stmt 1 view .LVU29
 580:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_mask = LV_OPA_TRANSP;
 133              		.loc 1 580 9 view .LVU30
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 134              		.loc 1 581 9 view .LVU31
 135              	.LVL9:
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 136              		.loc 1 582 9 view .LVU32
 582:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t opa_tmp = mask[0] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[0] * opa) >> 8;
 137              		.loc 1 582 25 is_stmt 0 view .LVU33
 138 005a D5F800B0 		ldr	fp, [r5]
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 139              		.loc 1 583 9 is_stmt 1 view .LVU34
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 140              		.loc 1 583 32 is_stmt 0 view .LVU35
 141 005e 3B78     		ldrb	r3, [r7]	@ zero_extendqisi2
 142              	.LVL10:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 143              		.loc 1 583 18 view .LVU36
 144 0060 FC2B     		cmp	r3, #252
 145 0062 33D8     		bhi	.L20
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 146              		.loc 1 583 58 discriminator 1 view .LVU37
 147 0064 019A     		ldr	r2, [sp, #4]
 148 0066 02FB03F3 		mul	r3, r2, r3
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 149              		.loc 1 583 18 discriminator 1 view .LVU38
 150 006a 1A0A     		lsrs	r2, r3, #8
 151 006c 2FE0     		b	.L9
 152              	.LVL11:
 153              	.L17:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 154              		.loc 1 583 18 discriminator 1 view .LVU39
 155              	.LBE59:
 551:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 156              		.loc 1 551 22 view .LVU40
 157 006e DFF8D8A0 		ldr	r10, .L29+4
 158 0072 F1E7     		b	.L2
 159              	.L18:
 554:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 160              		.loc 1 554 22 view .LVU41
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 17


 161 0074 DFF8D4A0 		ldr	r10, .L29+8
 162 0078 EEE7     		b	.L2
 163              	.LVL12:
 164              	.L25:
 165              	.LBB60:
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 166              		.loc 1 563 9 is_stmt 1 view .LVU42
 563:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(color, dest_buf[0], opa);
 167              		.loc 1 563 20 is_stmt 0 view .LVU43
 168 007a 2E68     		ldr	r6, [r5]
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 169              		.loc 1 564 9 is_stmt 1 view .LVU44
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 170              		.loc 1 564 37 is_stmt 0 view .LVU45
 171 007c DDF804B0 		ldr	fp, [sp, #4]
 172 0080 5A46     		mov	r2, fp
 173              	.LVL13:
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 174              		.loc 1 564 37 view .LVU46
 175 0082 3146     		mov	r1, r6
 176              	.LVL14:
 564:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 177              		.loc 1 564 37 view .LVU47
 178 0084 0446     		mov	r4, r0
 179 0086 D047     		blx	r10
 180              	.LVL15:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 181              		.loc 1 565 9 is_stmt 1 view .LVU48
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 182              		.loc 1 565 15 is_stmt 0 view .LVU49
 183 0088 4FF00009 		mov	r9, #0
 184 008c CDF80490 		str	r9, [sp, #4]
 185              	.LVL16:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 186              		.loc 1 565 15 view .LVU50
 187 0090 A146     		mov	r9, r4
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 188              		.loc 1 565 9 view .LVU51
 189 0092 15E0     		b	.L5
 190              	.LVL17:
 191              	.L6:
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 192              		.loc 1 571 17 is_stmt 1 discriminator 2 view .LVU52
 571:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 193              		.loc 1 571 29 is_stmt 0 discriminator 2 view .LVU53
 194 0094 3860     		str	r0, [r7]
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 195              		.loc 1 566 31 is_stmt 1 discriminator 2 view .LVU54
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 196              		.loc 1 566 32 is_stmt 0 discriminator 2 view .LVU55
 197 0096 0134     		adds	r4, r4, #1
 198              	.LVL18:
 199              	.L8:
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 200              		.loc 1 566 24 is_stmt 1 discriminator 1 view .LVU56
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 201              		.loc 1 566 13 is_stmt 0 discriminator 1 view .LVU57
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 18


 202 0098 4445     		cmp	r4, r8
 203 009a 0BDA     		bge	.L26
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 204              		.loc 1 567 17 is_stmt 1 view .LVU58
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 205              		.loc 1 567 52 is_stmt 0 view .LVU59
 206 009c 05EB8407 		add	r7, r5, r4, lsl #2
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 207              		.loc 1 567 55 view .LVU60
 208 00a0 55F82430 		ldr	r3, [r5, r4, lsl #2]
 567:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 209              		.loc 1 567 19 view .LVU61
 210 00a4 9E42     		cmp	r6, r3
 211 00a6 F5D0     		beq	.L6
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 212              		.loc 1 568 21 is_stmt 1 view .LVU62
 568:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(color, dest_buf[x], opa);
 213              		.loc 1 568 37 is_stmt 0 view .LVU63
 214 00a8 1E46     		mov	r6, r3
 215              	.LVL19:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 216              		.loc 1 569 21 is_stmt 1 view .LVU64
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 217              		.loc 1 569 38 is_stmt 0 view .LVU65
 218 00aa 5A46     		mov	r2, fp
 219              	.LVL20:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 220              		.loc 1 569 38 view .LVU66
 221 00ac 1946     		mov	r1, r3
 222 00ae 4846     		mov	r0, r9
 223              	.LVL21:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 224              		.loc 1 569 38 view .LVU67
 225 00b0 D047     		blx	r10
 226              	.LVL22:
 569:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 227              		.loc 1 569 38 view .LVU68
 228 00b2 EFE7     		b	.L6
 229              	.LVL23:
 230              	.L26:
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 231              		.loc 1 573 13 is_stmt 1 discriminator 2 view .LVU69
 573:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 232              		.loc 1 573 22 is_stmt 0 discriminator 2 view .LVU70
 233 00b4 049B     		ldr	r3, [sp, #16]
 234 00b6 05EB8305 		add	r5, r5, r3, lsl #2
 235              	.LVL24:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 236              		.loc 1 565 27 is_stmt 1 discriminator 2 view .LVU71
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 237              		.loc 1 565 28 is_stmt 0 discriminator 2 view .LVU72
 238 00ba 019B     		ldr	r3, [sp, #4]
 239 00bc 0133     		adds	r3, r3, #1
 240 00be 0193     		str	r3, [sp, #4]
 241              	.LVL25:
 242              	.L5:
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 19


 243              		.loc 1 565 20 is_stmt 1 discriminator 1 view .LVU73
 565:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 244              		.loc 1 565 9 is_stmt 0 discriminator 1 view .LVU74
 245 00c0 019B     		ldr	r3, [sp, #4]
 246 00c2 039A     		ldr	r2, [sp, #12]
 247 00c4 9342     		cmp	r3, r2
 248 00c6 C2DA     		bge	.L1
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 249              		.loc 1 566 19 view .LVU75
 250 00c8 0024     		movs	r4, #0
 251              	.LVL26:
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 252              		.loc 1 566 19 view .LVU76
 253 00ca E5E7     		b	.L8
 254              	.LVL27:
 255              	.L20:
 566:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_dest_color.full != dest_buf[x].full) {
 256              		.loc 1 566 19 view .LVU77
 257              	.LBE60:
 258              	.LBB61:
 583:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_res_color = blend_fp(color, last_dest_color, opa_tmp);
 259              		.loc 1 583 18 view .LVU78
 260 00cc 019A     		ldr	r2, [sp, #4]
 261              	.L9:
 262              	.LVL28:
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 263              		.loc 1 584 9 is_stmt 1 discriminator 4 view .LVU79
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 264              		.loc 1 584 26 is_stmt 0 discriminator 4 view .LVU80
 265 00ce 5946     		mov	r1, fp
 266              	.LVL29:
 584:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 267              		.loc 1 584 26 discriminator 4 view .LVU81
 268 00d0 0446     		mov	r4, r0
 269 00d2 D047     		blx	r10
 270              	.LVL30:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 271              		.loc 1 586 9 is_stmt 1 discriminator 4 view .LVU82
 581:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 272              		.loc 1 581 18 is_stmt 0 discriminator 4 view .LVU83
 273 00d4 0023     		movs	r3, #0
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 274              		.loc 1 586 15 discriminator 4 view .LVU84
 275 00d6 0293     		str	r3, [sp, #8]
 276 00d8 5946     		mov	r1, fp
 277              	.LVL31:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 278              		.loc 1 586 15 discriminator 4 view .LVU85
 279 00da A346     		mov	fp, r4
 280              	.LVL32:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 281              		.loc 1 586 9 discriminator 4 view .LVU86
 282 00dc 2AE0     		b	.L10
 283              	.LVL33:
 284              	.L28:
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 285              		.loc 1 589 41 discriminator 1 view .LVU87
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 20


 286 00de 55F82430 		ldr	r3, [r5, r4, lsl #2]
 287 00e2 9942     		cmp	r1, r3
 288 00e4 16D1     		bne	.L12
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 289              		.loc 1 589 41 discriminator 1 view .LVU88
 290 00e6 08E0     		b	.L13
 291              	.L21:
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 292              		.loc 1 590 29 view .LVU89
 293 00e8 019A     		ldr	r2, [sp, #4]
 294              	.L14:
 295              	.LVL34:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 296              		.loc 1 592 21 is_stmt 1 discriminator 4 view .LVU90
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 297              		.loc 1 592 38 is_stmt 0 discriminator 4 view .LVU91
 298 00ea 55F82610 		ldr	r1, [r5, r6, lsl #2]
 299              	.LVL35:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 300              		.loc 1 592 38 discriminator 4 view .LVU92
 301 00ee 5846     		mov	r0, fp
 302              	.LVL36:
 592:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_mask = mask[x];
 303              		.loc 1 592 38 discriminator 4 view .LVU93
 304 00f0 D047     		blx	r10
 305              	.LVL37:
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 306              		.loc 1 593 21 is_stmt 1 discriminator 4 view .LVU94
 593:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color.full = dest_buf[x].full;
 307              		.loc 1 593 31 is_stmt 0 discriminator 4 view .LVU95
 308 00f2 99F800C0 		ldrb	ip, [r9]	@ zero_extendqisi2
 309              	.LVL38:
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 310              		.loc 1 594 21 is_stmt 1 discriminator 4 view .LVU96
 594:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 311              		.loc 1 594 55 is_stmt 0 discriminator 4 view .LVU97
 312 00f6 55F82610 		ldr	r1, [r5, r6, lsl #2]
 313              	.LVL39:
 314              	.L13:
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 315              		.loc 1 596 17 is_stmt 1 view .LVU98
 596:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 316              		.loc 1 596 29 is_stmt 0 view .LVU99
 317 00fa 45F82600 		str	r0, [r5, r6, lsl #2]
 318              	.L11:
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 319              		.loc 1 587 31 is_stmt 1 discriminator 2 view .LVU100
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 320              		.loc 1 587 32 is_stmt 0 discriminator 2 view .LVU101
 321 00fe 0134     		adds	r4, r4, #1
 322              	.LVL40:
 323              	.L16:
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 324              		.loc 1 587 24 is_stmt 1 discriminator 1 view .LVU102
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 325              		.loc 1 587 13 is_stmt 0 discriminator 1 view .LVU103
 326 0100 4445     		cmp	r4, r8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 21


 327 0102 0EDA     		bge	.L27
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 328              		.loc 1 588 17 is_stmt 1 view .LVU104
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 329              		.loc 1 588 24 is_stmt 0 view .LVU105
 330 0104 2646     		mov	r6, r4
 331 0106 07EB0409 		add	r9, r7, r4
 332 010a 3A5D     		ldrb	r2, [r7, r4]	@ zero_extendqisi2
 588:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] != last_mask || last_dest_color.full != dest_buf[x].full) {
 333              		.loc 1 588 19 view .LVU106
 334 010c 002A     		cmp	r2, #0
 335 010e F6D0     		beq	.L11
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 336              		.loc 1 589 17 is_stmt 1 view .LVU107
 589:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     opa_tmp = mask[x] >= LV_OPA_MAX ? opa : (uint32_t)((uint32_t)mask[x] * opa) >> 
 337              		.loc 1 589 19 is_stmt 0 view .LVU108
 338 0110 6245     		cmp	r2, ip
 339 0112 E4D0     		beq	.L28
 340              	.L12:
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 341              		.loc 1 590 21 is_stmt 1 view .LVU109
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 342              		.loc 1 590 29 is_stmt 0 view .LVU110
 343 0114 FC2A     		cmp	r2, #252
 344 0116 E7D8     		bhi	.L21
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 345              		.loc 1 590 61 discriminator 1 view .LVU111
 346 0118 019B     		ldr	r3, [sp, #4]
 347 011a 03FB02F2 		mul	r2, r3, r2
 590:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 348              		.loc 1 590 29 discriminator 1 view .LVU112
 349 011e 120A     		lsrs	r2, r2, #8
 350 0120 E3E7     		b	.L14
 351              	.L27:
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 352              		.loc 1 598 22 discriminator 2 view .LVU113
 353 0122 6346     		mov	r3, ip
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 354              		.loc 1 598 13 is_stmt 1 discriminator 2 view .LVU114
 598:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 355              		.loc 1 598 22 is_stmt 0 discriminator 2 view .LVU115
 356 0124 049A     		ldr	r2, [sp, #16]
 357 0126 05EB8205 		add	r5, r5, r2, lsl #2
 358              	.LVL41:
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 359              		.loc 1 599 13 is_stmt 1 discriminator 2 view .LVU116
 599:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 360              		.loc 1 599 18 is_stmt 0 discriminator 2 view .LVU117
 361 012a 059A     		ldr	r2, [sp, #20]
 362 012c 1744     		add	r7, r7, r2
 363              	.LVL42:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 364              		.loc 1 586 27 is_stmt 1 discriminator 2 view .LVU118
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 365              		.loc 1 586 28 is_stmt 0 discriminator 2 view .LVU119
 366 012e 029A     		ldr	r2, [sp, #8]
 367 0130 0132     		adds	r2, r2, #1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 22


 368 0132 0292     		str	r2, [sp, #8]
 369              	.LVL43:
 370              	.L10:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 371              		.loc 1 586 20 is_stmt 1 discriminator 1 view .LVU120
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 372              		.loc 1 586 9 is_stmt 0 discriminator 1 view .LVU121
 373 0134 029A     		ldr	r2, [sp, #8]
 374 0136 039C     		ldr	r4, [sp, #12]
 375              	.LVL44:
 586:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 376              		.loc 1 586 9 discriminator 1 view .LVU122
 377 0138 A242     		cmp	r2, r4
 378 013a 88DA     		bge	.L1
 587:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 379              		.loc 1 587 19 view .LVU123
 380 013c 0024     		movs	r4, #0
 381 013e 9C46     		mov	ip, r3
 382 0140 DEE7     		b	.L16
 383              	.L30:
 384 0142 00BF     		.align	2
 385              	.L29:
 386 0144 00000000 		.word	color_blend_true_color_additive
 387 0148 00000000 		.word	color_blend_true_color_subtractive
 388 014c 00000000 		.word	color_blend_true_color_multiply
 389              	.LBE61:
 390              		.cfi_endproc
 391              	.LFE165:
 393              		.section	.text.map_blended,"ax",%progbits
 394              		.align	1
 395              		.syntax unified
 396              		.thumb
 397              		.thumb_func
 399              	map_blended:
 400              	.LVL45:
 401              	.LFB168:
 603:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 604:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 605:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_set_px(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 606:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
 607:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                        const lv_opa_t * mask, lv_coord_t mask_stride)
 608:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 611:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 612:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 613:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 614:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 615:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 616:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 617:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 622:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 623:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 23


 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 625:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 626:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 627:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 633:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 634:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 637:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 638:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 640:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 641:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM map_normal(lv_color_t * dest_buf, const lv_area_t * dest_area,
 642:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t dest_stride, const lv_color_t * src_buf,
 643:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t src_stride, lv_opa_t opa, const lv_opa_t * 
 644:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                              lv_coord_t mask_stride)
 645:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 647:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 648:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 649:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 650:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 651:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 652:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 653:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 660:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 661:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 662:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 666:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 669:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 670:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 671:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 672:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 673:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 674:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 677:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 679:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 680:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 24


 681:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 682:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x);
 683:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 684:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)mask_tmp_x & 0x3); x++) {
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 687:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 688:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 689:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint32_t * mask32 = (uint32_t *)mask_tmp_x;
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < x_end4; x += 4) {
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 697:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 698:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         else {
 699:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             mask_tmp_x = (const lv_opa_t *)mask32;
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 704:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 705:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     mask32++;
 707:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 708:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 709:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask_tmp_x = (const lv_opa_t *)mask32;
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(; x < w ; x++) {
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 712:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 713:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 717:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 718:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 719:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 720:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 726:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 727:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 731:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 732:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 733:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 735:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 736:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_SCREEN_TRANSP
 737:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void LV_ATTRIBUTE_FAST_MEM map_argb(lv_color_t * dest_buf, const lv_area_t * dest_area,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 25


 738:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t dest_stride, const lv_color_t * src_buf,
 739:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t src_stride, lv_opa_t opa, const lv_opa_t * ma
 740:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                            lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 741:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 742:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 743:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint8_t * dest_buf8 = (uint8_t *) dest_buf;
 744:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 745:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 746:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 747:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 748:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 749:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 750:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 751:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 752:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 753:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 754:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 755:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 756:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 757:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 758:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 759:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 760:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 761:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 762:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 763:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = NULL;
 764:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 765:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 766:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 767:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 768:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 769:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             if(blend_fp == NULL && LV_COLOR_DEPTH == 32) {
 770:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
 771:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 772:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf += dest_stride;
 773:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
 774:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 775:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 776:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             else {
 777:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 uint8_t * dest_buf8_row = dest_buf8;
 778:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(y = 0; y < h; y++) {
 779:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(blend_fp == NULL) {
 780:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 781:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], LV_OPA_COVER);
 782:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 783:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 784:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 785:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     else {
 786:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         for(x = 0; x < w; x++) {
 787:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], LV_OPA_COVER, blend_fp);
 788:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 789:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 790:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 791:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 792:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 793:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf8 = dest_buf8_row;
 794:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     src_buf += src_stride;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 26


 795:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 796:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 797:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 798:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*No mask but opacity*/
 799:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 800:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 801:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 802:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 803:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 804:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], opa);
 805:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 806:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 807:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 808:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 809:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 810:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], opa, blend_fp);
 811:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 812:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 813:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 814:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 815:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 816:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 817:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 818:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 819:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 820:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 821:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 822:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
 823:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Only the mask matters*/
 824:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa > LV_OPA_MAX) {
 825:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 826:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 827:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 828:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 829:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb(dest_buf8, src_buf[x], mask[x]);
 830:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 831:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 832:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 833:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 834:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 835:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         set_px_argb_blend(dest_buf8, src_buf[x], mask[x], blend_fp);
 836:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 837:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 838:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 839:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 840:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 841:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 842:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 843:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 844:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 845:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Handle opa and mask values too*/
 846:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         else {
 847:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             uint8_t * dest_buf8_row = dest_buf8;
 848:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 849:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(blend_fp == NULL) {
 850:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 851:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 27


 852:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 853:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb(dest_buf8, src_buf[x], opa_tmp);
 854:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 855:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 856:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 857:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 858:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 else {
 859:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     for(x = 0; x < w; x++) {
 860:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(mask[x]) {
 861:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8)
 862:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             set_px_argb_blend(dest_buf8, src_buf[x], opa_tmp, blend_fp);
 863:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 864:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf8 += LV_IMG_PX_SIZE_ALPHA_BYTE;
 865:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 866:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 867:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8_row += dest_stride * LV_IMG_PX_SIZE_ALPHA_BYTE;
 868:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf8 = dest_buf8_row;
 869:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 870:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 871:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 872:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 873:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 874:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 875:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 876:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 877:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_DRAW_COMPLEX
 878:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static void map_blended(lv_color_t * dest_buf, const lv_area_t * dest_area, lv_coord_t dest_stride,
 879:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_color_t * src_buf, lv_coord_t src_stride, lv_opa_t opa,
 880:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         const lv_opa_t * mask, lv_coord_t mask_stride, lv_blend_mode_t blend_mode)
 881:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 402              		.loc 1 881 1 is_stmt 1 view -0
 403              		.cfi_startproc
 404              		@ args = 20, pretend = 0, frame = 32
 405              		@ frame_needed = 0, uses_anonymous_args = 0
 406              		.loc 1 881 1 is_stmt 0 view .LVU125
 407 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 408              		.cfi_def_cfa_offset 36
 409              		.cfi_offset 4, -36
 410              		.cfi_offset 5, -32
 411              		.cfi_offset 6, -28
 412              		.cfi_offset 7, -24
 413              		.cfi_offset 8, -20
 414              		.cfi_offset 9, -16
 415              		.cfi_offset 10, -12
 416              		.cfi_offset 11, -8
 417              		.cfi_offset 14, -4
 418 0004 89B0     		sub	sp, sp, #36
 419              		.cfi_def_cfa_offset 72
 420 0006 8046     		mov	r8, r0
 421 0008 0592     		str	r2, [sp, #20]
 422 000a 9946     		mov	r9, r3
 423 000c BDF94830 		ldrsh	r3, [sp, #72]
 424              	.LVL46:
 425              		.loc 1 881 1 view .LVU126
 426 0010 0693     		str	r3, [sp, #24]
 427 0012 9DF84C30 		ldrb	r3, [sp, #76]	@ zero_extendqisi2
 428 0016 0193     		str	r3, [sp, #4]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 28


 429 0018 BDF95430 		ldrsh	r3, [sp, #84]
 430 001c 0793     		str	r3, [sp, #28]
 431 001e 9DF85820 		ldrb	r2, [sp, #88]	@ zero_extendqisi2
 432              	.LVL47:
 882:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 883:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 433              		.loc 1 883 5 is_stmt 1 view .LVU127
 434              	.LBB62:
 435              	.LBI62:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 436              		.loc 2 123 26 view .LVU128
 437              	.LBB63:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 438              		.loc 2 125 5 view .LVU129
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 439              		.loc 2 125 31 is_stmt 0 view .LVU130
 440 0022 B1F804B0 		ldrh	fp, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 441              		.loc 2 125 44 view .LVU131
 442 0026 0B88     		ldrh	r3, [r1]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 443              		.loc 2 125 36 view .LVU132
 444 0028 ABEB030B 		sub	fp, fp, r3
 445 002c 1FFA8BFB 		uxth	fp, fp
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 446              		.loc 2 125 49 view .LVU133
 447 0030 0BF1010B 		add	fp, fp, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 448              		.loc 2 125 12 view .LVU134
 449 0034 0FFA8BFB 		sxth	fp, fp
 450              	.LVL48:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 451              		.loc 2 125 12 view .LVU135
 452              	.LBE63:
 453              	.LBE62:
 884:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 454              		.loc 1 884 5 is_stmt 1 view .LVU136
 455              	.LBB64:
 456              	.LBI64:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 457              		.loc 2 133 26 view .LVU137
 458              	.LBB65:
 459              		.loc 2 135 5 view .LVU138
 460              		.loc 2 135 31 is_stmt 0 view .LVU139
 461 0038 CB88     		ldrh	r3, [r1, #6]
 462              		.loc 2 135 44 view .LVU140
 463 003a 4988     		ldrh	r1, [r1, #2]
 464              	.LVL49:
 465              		.loc 2 135 36 view .LVU141
 466 003c 5B1A     		subs	r3, r3, r1
 467 003e 9BB2     		uxth	r3, r3
 468              		.loc 2 135 49 view .LVU142
 469 0040 0133     		adds	r3, r3, #1
 470              		.loc 2 135 12 view .LVU143
 471 0042 1BB2     		sxth	r3, r3
 472 0044 0493     		str	r3, [sp, #16]
 473              	.LVL50:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 29


 474              		.loc 2 135 12 view .LVU144
 475              	.LBE65:
 476              	.LBE64:
 885:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 886:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t x;
 477              		.loc 1 886 5 is_stmt 1 view .LVU145
 887:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 478              		.loc 1 887 5 view .LVU146
 888:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 889:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t (*blend_fp)(lv_color_t, lv_color_t, lv_opa_t);
 479              		.loc 1 889 5 view .LVU147
 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 480              		.loc 1 890 5 view .LVU148
 481 0046 022A     		cmp	r2, #2
 482 0048 17D0     		beq	.L50
 483 004a 032A     		cmp	r2, #3
 484 004c 18D0     		beq	.L51
 485 004e 012A     		cmp	r2, #1
 486 0050 02D0     		beq	.L57
 487              	.LVL51:
 488              	.L31:
 891:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_ADDITIVE:
 892:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_additive;
 893:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 894:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_SUBTRACTIVE:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_subtractive;
 896:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 897:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         case LV_BLEND_MODE_MULTIPLY:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             blend_fp = color_blend_true_color_multiply;
 899:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 900:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         default:
 901:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             LV_LOG_WARN("fill_blended: unsupported blend mode");
 902:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             return;
 903:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 904:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 905:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_dest_color;
 906:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_src_color;
 907:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask == NULL) {
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 918:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 920:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 923:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 924:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 925:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Masked*/
 926:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 30


 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 940:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf[x] = last_res_color;
 942:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride;
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 946:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 947:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 948:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 489              		.loc 1 948 1 is_stmt 0 view .LVU149
 490 0052 09B0     		add	sp, sp, #36
 491              		.cfi_remember_state
 492              		.cfi_def_cfa_offset 36
 493              		@ sp needed
 494 0054 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 495              	.LVL52:
 496              	.L57:
 497              		.cfi_restore_state
 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 498              		.loc 1 890 5 view .LVU150
 499 0058 4A4B     		ldr	r3, .L62
 500              	.LVL53:
 890:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     switch(blend_mode) {
 501              		.loc 1 890 5 view .LVU151
 502 005a 0293     		str	r3, [sp, #8]
 503              	.L32:
 504              	.LVL54:
 905:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t last_src_color;
 505              		.loc 1 905 5 is_stmt 1 view .LVU152
 906:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Simple fill (maybe with opacity), no masking*/
 506              		.loc 1 906 5 view .LVU153
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 507              		.loc 1 908 5 view .LVU154
 908:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_dest_color = dest_buf[0];
 508              		.loc 1 908 7 is_stmt 0 view .LVU155
 509 005c 149B     		ldr	r3, [sp, #80]
 510 005e 93B1     		cbz	r3, .L58
 511              	.LBB66:
 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 512              		.loc 1 927 9 is_stmt 1 view .LVU156
 927:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 513              		.loc 1 927 25 is_stmt 0 view .LVU157
 514 0060 D8F800A0 		ldr	r10, [r8]
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 31


 515              		.loc 1 928 9 is_stmt 1 view .LVU158
 928:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_opa_t last_opa = mask[0] >= LV_OPA_MAX ? opa : ((opa * mask[0]) >> 8);
 516              		.loc 1 928 24 is_stmt 0 view .LVU159
 517 0064 D9F80070 		ldr	r7, [r9]
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 518              		.loc 1 929 9 is_stmt 1 view .LVU160
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 519              		.loc 1 929 33 is_stmt 0 view .LVU161
 520 0068 149B     		ldr	r3, [sp, #80]
 521 006a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 522              		.loc 1 929 18 view .LVU162
 523 006c FC2B     		cmp	r3, #252
 524 006e 3FD8     		bhi	.L53
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 525              		.loc 1 929 65 discriminator 1 view .LVU163
 526 0070 019A     		ldr	r2, [sp, #4]
 527 0072 02FB03F3 		mul	r3, r2, r3
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 528              		.loc 1 929 18 discriminator 1 view .LVU164
 529 0076 1B0A     		lsrs	r3, r3, #8
 530 0078 3BE0     		b	.L41
 531              	.LVL55:
 532              	.L50:
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 533              		.loc 1 929 18 discriminator 1 view .LVU165
 534              	.LBE66:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 535              		.loc 1 895 22 view .LVU166
 536 007a 434B     		ldr	r3, .L62+4
 537              	.LVL56:
 895:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 538              		.loc 1 895 22 view .LVU167
 539 007c 0293     		str	r3, [sp, #8]
 540 007e EDE7     		b	.L32
 541              	.LVL57:
 542              	.L51:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 543              		.loc 1 898 22 view .LVU168
 544 0080 424B     		ldr	r3, .L62+8
 545              	.LVL58:
 898:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             break;
 546              		.loc 1 898 22 view .LVU169
 547 0082 0293     		str	r3, [sp, #8]
 548 0084 EAE7     		b	.L32
 549              	.LVL59:
 550              	.L58:
 551              	.LBB69:
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 552              		.loc 1 909 9 is_stmt 1 view .LVU170
 909:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         last_src_color = src_buf[0];
 553              		.loc 1 909 25 is_stmt 0 view .LVU171
 554 0086 D8F800A0 		ldr	r10, [r8]
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 555              		.loc 1 910 9 is_stmt 1 view .LVU172
 910:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 556              		.loc 1 910 24 is_stmt 0 view .LVU173
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 32


 557 008a D9F80070 		ldr	r7, [r9]
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 558              		.loc 1 911 9 is_stmt 1 view .LVU174
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 559              		.loc 1 911 37 is_stmt 0 view .LVU175
 560 008e 019A     		ldr	r2, [sp, #4]
 561              	.LVL60:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 562              		.loc 1 911 37 view .LVU176
 563 0090 5146     		mov	r1, r10
 564              	.LVL61:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 565              		.loc 1 911 37 view .LVU177
 566 0092 3846     		mov	r0, r7
 567              	.LVL62:
 911:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 568              		.loc 1 911 37 view .LVU178
 569 0094 029C     		ldr	r4, [sp, #8]
 570 0096 A047     		blx	r4
 571              	.LVL63:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 572              		.loc 1 912 9 is_stmt 1 view .LVU179
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 573              		.loc 1 912 15 is_stmt 0 view .LVU180
 574 0098 0026     		movs	r6, #0
 575 009a 0096     		str	r6, [sp]
 576 009c 5646     		mov	r6, r10
 577 009e A246     		mov	r10, r4
 578              	.LVL64:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 579              		.loc 1 912 9 view .LVU181
 580 00a0 20E0     		b	.L35
 581              	.LVL65:
 582              	.L36:
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 583              		.loc 1 915 21 is_stmt 1 view .LVU182
 915:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 584              		.loc 1 915 37 is_stmt 0 view .LVU183
 585 00a2 58F80560 		ldr	r6, [r8, r5]
 586              	.LVL66:
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 587              		.loc 1 916 21 is_stmt 1 view .LVU184
 916:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, opa);
 588              		.loc 1 916 36 is_stmt 0 view .LVU185
 589 00a6 1768     		ldr	r7, [r2]
 590              	.LVL67:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 591              		.loc 1 917 21 is_stmt 1 view .LVU186
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 592              		.loc 1 917 38 is_stmt 0 view .LVU187
 593 00a8 019A     		ldr	r2, [sp, #4]
 594              	.LVL68:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 595              		.loc 1 917 38 view .LVU188
 596 00aa 3146     		mov	r1, r6
 597              	.LVL69:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 33


 598              		.loc 1 917 38 view .LVU189
 599 00ac 3846     		mov	r0, r7
 600              	.LVL70:
 917:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 601              		.loc 1 917 38 view .LVU190
 602 00ae D047     		blx	r10
 603              	.LVL71:
 604              	.L37:
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 605              		.loc 1 919 17 is_stmt 1 discriminator 2 view .LVU191
 919:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 606              		.loc 1 919 29 is_stmt 0 discriminator 2 view .LVU192
 607 00b0 48F80500 		str	r0, [r8, r5]
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 608              		.loc 1 913 31 is_stmt 1 discriminator 2 view .LVU193
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 609              		.loc 1 913 32 is_stmt 0 discriminator 2 view .LVU194
 610 00b4 0134     		adds	r4, r4, #1
 611              	.LVL72:
 612              	.L39:
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 613              		.loc 1 913 24 is_stmt 1 discriminator 1 view .LVU195
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 614              		.loc 1 913 13 is_stmt 0 discriminator 1 view .LVU196
 615 00b6 5C45     		cmp	r4, fp
 616 00b8 0BDA     		bge	.L59
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 617              		.loc 1 914 17 is_stmt 1 view .LVU197
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 618              		.loc 1 914 50 is_stmt 0 view .LVU198
 619 00ba A500     		lsls	r5, r4, #2
 620 00bc 09EB8402 		add	r2, r9, r4, lsl #2
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 621              		.loc 1 914 53 view .LVU199
 622 00c0 59F82430 		ldr	r3, [r9, r4, lsl #2]
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 623              		.loc 1 914 19 view .LVU200
 624 00c4 9F42     		cmp	r7, r3
 625 00c6 ECD1     		bne	.L36
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 626              		.loc 1 914 97 discriminator 1 view .LVU201
 627 00c8 58F82430 		ldr	r3, [r8, r4, lsl #2]
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 628              		.loc 1 914 59 discriminator 1 view .LVU202
 629 00cc 9E42     		cmp	r6, r3
 630 00ce E8D1     		bne	.L36
 914:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 631              		.loc 1 914 59 discriminator 1 view .LVU203
 632 00d0 EEE7     		b	.L37
 633              	.L59:
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 634              		.loc 1 921 13 is_stmt 1 discriminator 2 view .LVU204
 921:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 635              		.loc 1 921 22 is_stmt 0 discriminator 2 view .LVU205
 636 00d2 059B     		ldr	r3, [sp, #20]
 637 00d4 08EB8308 		add	r8, r8, r3, lsl #2
 638              	.LVL73:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 34


 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 639              		.loc 1 922 13 is_stmt 1 discriminator 2 view .LVU206
 922:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 640              		.loc 1 922 21 is_stmt 0 discriminator 2 view .LVU207
 641 00d8 069B     		ldr	r3, [sp, #24]
 642 00da 09EB8309 		add	r9, r9, r3, lsl #2
 643              	.LVL74:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 644              		.loc 1 912 27 is_stmt 1 discriminator 2 view .LVU208
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 645              		.loc 1 912 28 is_stmt 0 discriminator 2 view .LVU209
 646 00de 009B     		ldr	r3, [sp]
 647 00e0 0133     		adds	r3, r3, #1
 648 00e2 0093     		str	r3, [sp]
 649              	.LVL75:
 650              	.L35:
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 651              		.loc 1 912 20 is_stmt 1 discriminator 1 view .LVU210
 912:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 652              		.loc 1 912 9 is_stmt 0 discriminator 1 view .LVU211
 653 00e4 009B     		ldr	r3, [sp]
 654 00e6 049A     		ldr	r2, [sp, #16]
 655 00e8 9342     		cmp	r3, r2
 656 00ea B2DA     		bge	.L31
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 657              		.loc 1 913 19 view .LVU212
 658 00ec 0024     		movs	r4, #0
 659 00ee E2E7     		b	.L39
 660              	.LVL76:
 661              	.L53:
 913:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 662              		.loc 1 913 19 view .LVU213
 663              	.LBE69:
 664              	.LBB70:
 929:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         lv_color_t last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 665              		.loc 1 929 18 view .LVU214
 666 00f0 019B     		ldr	r3, [sp, #4]
 667              	.L41:
 668              	.LVL77:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 669              		.loc 1 930 9 is_stmt 1 discriminator 4 view .LVU215
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 670              		.loc 1 930 37 is_stmt 0 discriminator 4 view .LVU216
 671 00f2 1C46     		mov	r4, r3
 672 00f4 1A46     		mov	r2, r3
 673              	.LVL78:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 674              		.loc 1 930 37 discriminator 4 view .LVU217
 675 00f6 5146     		mov	r1, r10
 676              	.LVL79:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 677              		.loc 1 930 37 discriminator 4 view .LVU218
 678 00f8 3846     		mov	r0, r7
 679              	.LVL80:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 680              		.loc 1 930 37 discriminator 4 view .LVU219
 681 00fa 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 35


 682              	.LVL81:
 930:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 683              		.loc 1 930 37 discriminator 4 view .LVU220
 684 00fc 9847     		blx	r3
 685              	.LVL82:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 686              		.loc 1 931 9 is_stmt 1 discriminator 4 view .LVU221
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 687              		.loc 1 931 15 is_stmt 0 discriminator 4 view .LVU222
 688 00fe 0023     		movs	r3, #0
 689 0100 0393     		str	r3, [sp, #12]
 690 0102 2146     		mov	r1, r4
 691 0104 CDF800B0 		str	fp, [sp]
 692 0108 DDF850B0 		ldr	fp, [sp, #80]
 693              	.LVL83:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 694              		.loc 1 931 9 discriminator 4 view .LVU223
 695 010c 33E0     		b	.L42
 696              	.LVL84:
 697              	.L54:
 698              	.LBB67:
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 699              		.loc 1 934 26 view .LVU224
 700 010e 019C     		ldr	r4, [sp, #4]
 701              	.L44:
 702              	.LVL85:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 703              		.loc 1 935 17 is_stmt 1 discriminator 4 view .LVU225
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 704              		.loc 1 935 50 is_stmt 0 discriminator 4 view .LVU226
 705 0110 09EB8602 		add	r2, r9, r6, lsl #2
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 706              		.loc 1 935 53 discriminator 4 view .LVU227
 707 0114 59F82630 		ldr	r3, [r9, r6, lsl #2]
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 708              		.loc 1 935 19 discriminator 4 view .LVU228
 709 0118 9F42     		cmp	r7, r3
 710 011a 1AD0     		beq	.L60
 711              	.L45:
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 712              		.loc 1 936 21 is_stmt 1 view .LVU229
 936:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_src_color = src_buf[x];
 713              		.loc 1 936 37 is_stmt 0 view .LVU230
 714 011c 58F826A0 		ldr	r10, [r8, r6, lsl #2]
 715              	.LVL86:
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 716              		.loc 1 937 21 is_stmt 1 view .LVU231
 937:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_opa = opa_tmp;
 717              		.loc 1 937 36 is_stmt 0 view .LVU232
 718 0120 1768     		ldr	r7, [r2]
 719              	.LVL87:
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 720              		.loc 1 938 21 is_stmt 1 view .LVU233
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 721              		.loc 1 939 21 view .LVU234
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 722              		.loc 1 939 38 is_stmt 0 view .LVU235
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 36


 723 0122 2246     		mov	r2, r4
 724              	.LVL88:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 725              		.loc 1 939 38 view .LVU236
 726 0124 5146     		mov	r1, r10
 727              	.LVL89:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 728              		.loc 1 939 38 view .LVU237
 729 0126 3846     		mov	r0, r7
 730              	.LVL90:
 939:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 731              		.loc 1 939 38 view .LVU238
 732 0128 029B     		ldr	r3, [sp, #8]
 733 012a 9847     		blx	r3
 734              	.LVL91:
 938:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_res_color = blend_fp(last_src_color, last_dest_color, last_opa);
 735              		.loc 1 938 30 view .LVU239
 736 012c 2146     		mov	r1, r4
 737              	.LVL92:
 738              	.L46:
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 739              		.loc 1 941 17 is_stmt 1 view .LVU240
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 740              		.loc 1 941 29 is_stmt 0 view .LVU241
 741 012e 48F82600 		str	r0, [r8, r6, lsl #2]
 742              	.LVL93:
 743              	.L43:
 941:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 744              		.loc 1 941 29 view .LVU242
 745              	.LBE67:
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 746              		.loc 1 932 31 is_stmt 1 discriminator 2 view .LVU243
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 747              		.loc 1 932 32 is_stmt 0 discriminator 2 view .LVU244
 748 0132 0135     		adds	r5, r5, #1
 749              	.LVL94:
 750              	.L48:
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 751              		.loc 1 932 24 is_stmt 1 discriminator 1 view .LVU245
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 752              		.loc 1 932 13 is_stmt 0 discriminator 1 view .LVU246
 753 0134 009B     		ldr	r3, [sp]
 754 0136 9D42     		cmp	r5, r3
 755 0138 12DA     		bge	.L61
 756              	.LBB68:
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 757              		.loc 1 933 17 is_stmt 1 view .LVU247
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 758              		.loc 1 933 24 is_stmt 0 view .LVU248
 759 013a 2E46     		mov	r6, r5
 760 013c 1BF80540 		ldrb	r4, [fp, r5]	@ zero_extendqisi2
 933:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 761              		.loc 1 933 19 view .LVU249
 762 0140 002C     		cmp	r4, #0
 763 0142 F6D0     		beq	.L43
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 764              		.loc 1 934 17 is_stmt 1 view .LVU250
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 37


 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 765              		.loc 1 934 26 is_stmt 0 view .LVU251
 766 0144 FC2C     		cmp	r4, #252
 767 0146 E2D8     		bhi	.L54
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 768              		.loc 1 934 72 discriminator 1 view .LVU252
 769 0148 019B     		ldr	r3, [sp, #4]
 770 014a 03FB04F4 		mul	r4, r3, r4
 934:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(last_src_color.full != src_buf[x].full || last_dest_color.full != dest_buf[x].fu
 771              		.loc 1 934 26 discriminator 1 view .LVU253
 772 014e 240A     		lsrs	r4, r4, #8
 773 0150 DEE7     		b	.L44
 774              	.LVL95:
 775              	.L60:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 776              		.loc 1 935 97 discriminator 1 view .LVU254
 777 0152 58F82630 		ldr	r3, [r8, r6, lsl #2]
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 778              		.loc 1 935 59 discriminator 1 view .LVU255
 779 0156 9A45     		cmp	r10, r3
 780 0158 E0D1     		bne	.L45
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 781              		.loc 1 935 103 discriminator 2 view .LVU256
 782 015a A142     		cmp	r1, r4
 783 015c DED1     		bne	.L45
 784 015e E6E7     		b	.L46
 785              	.LVL96:
 786              	.L61:
 935:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     last_dest_color = dest_buf[x];
 787              		.loc 1 935 103 discriminator 2 view .LVU257
 788              	.LBE68:
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 789              		.loc 1 943 13 is_stmt 1 discriminator 2 view .LVU258
 943:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 790              		.loc 1 943 22 is_stmt 0 discriminator 2 view .LVU259
 791 0160 059B     		ldr	r3, [sp, #20]
 792 0162 08EB8308 		add	r8, r8, r3, lsl #2
 793              	.LVL97:
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 794              		.loc 1 944 13 is_stmt 1 discriminator 2 view .LVU260
 944:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             mask += mask_stride;
 795              		.loc 1 944 21 is_stmt 0 discriminator 2 view .LVU261
 796 0166 069B     		ldr	r3, [sp, #24]
 797 0168 09EB8309 		add	r9, r9, r3, lsl #2
 798              	.LVL98:
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 799              		.loc 1 945 13 is_stmt 1 discriminator 2 view .LVU262
 945:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 800              		.loc 1 945 18 is_stmt 0 discriminator 2 view .LVU263
 801 016c 079B     		ldr	r3, [sp, #28]
 802 016e 9B44     		add	fp, fp, r3
 803              	.LVL99:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 804              		.loc 1 931 27 is_stmt 1 discriminator 2 view .LVU264
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 805              		.loc 1 931 28 is_stmt 0 discriminator 2 view .LVU265
 806 0170 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 38


 807 0172 0133     		adds	r3, r3, #1
 808 0174 0393     		str	r3, [sp, #12]
 809              	.LVL100:
 810              	.L42:
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 811              		.loc 1 931 20 is_stmt 1 discriminator 1 view .LVU266
 931:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 812              		.loc 1 931 9 is_stmt 0 discriminator 1 view .LVU267
 813 0176 039B     		ldr	r3, [sp, #12]
 814 0178 049A     		ldr	r2, [sp, #16]
 815 017a 9342     		cmp	r3, r2
 816 017c BFF669AF 		bge	.L31
 932:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x] == 0) continue;
 817              		.loc 1 932 19 view .LVU268
 818 0180 0025     		movs	r5, #0
 819 0182 D7E7     		b	.L48
 820              	.L63:
 821              		.align	2
 822              	.L62:
 823 0184 00000000 		.word	color_blend_true_color_additive
 824 0188 00000000 		.word	color_blend_true_color_subtractive
 825 018c 00000000 		.word	color_blend_true_color_multiply
 826              	.LBE70:
 827              		.cfi_endproc
 828              	.LFE168:
 830              		.section	.text.fill_set_px,"ax",%progbits
 831              		.align	1
 832              		.syntax unified
 833              		.thumb
 834              		.thumb_func
 836              	fill_set_px:
 837              	.LVL101:
 838              	.LFB163:
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 839              		.loc 1 212 1 is_stmt 1 view -0
 840              		.cfi_startproc
 841              		@ args = 12, pretend = 0, frame = 24
 842              		@ frame_needed = 0, uses_anonymous_args = 0
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 843              		.loc 1 212 1 is_stmt 0 view .LVU270
 844 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 845              		.cfi_def_cfa_offset 36
 846              		.cfi_offset 4, -36
 847              		.cfi_offset 5, -32
 848              		.cfi_offset 6, -28
 849              		.cfi_offset 7, -24
 850              		.cfi_offset 8, -20
 851              		.cfi_offset 9, -16
 852              		.cfi_offset 10, -12
 853              		.cfi_offset 11, -8
 854              		.cfi_offset 14, -4
 855 0004 8BB0     		sub	sp, sp, #44
 856              		.cfi_def_cfa_offset 80
 857 0006 0690     		str	r0, [sp, #24]
 858 0008 0D46     		mov	r5, r1
 859 000a 0792     		str	r2, [sp, #28]
 860 000c 0893     		str	r3, [sp, #32]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 39


 861 000e 9DF850B0 		ldrb	fp, [sp, #80]	@ zero_extendqisi2
 862 0012 159E     		ldr	r6, [sp, #84]
 863 0014 BDF95830 		ldrsh	r3, [sp, #88]
 864              	.LVL102:
 212:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 865              		.loc 1 212 1 view .LVU271
 866 0018 0993     		str	r3, [sp, #36]
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 867              		.loc 1 213 5 is_stmt 1 view .LVU272
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 868              		.loc 1 213 24 is_stmt 0 view .LVU273
 869 001a FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 870              	.LVL103:
 213:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 871              		.loc 1 213 24 view .LVU274
 872 001e 8146     		mov	r9, r0
 873              	.LVL104:
 215:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 874              		.loc 1 215 5 is_stmt 1 view .LVU275
 216:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 875              		.loc 1 216 5 view .LVU276
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 876              		.loc 1 218 5 view .LVU277
 218:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = blend_area->y1; y <= blend_area->y2; y++) {
 877              		.loc 1 218 7 is_stmt 0 view .LVU278
 878 0020 7EB1     		cbz	r6, .L77
 879              	.LBB71:
 226:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         int32_t h = lv_area_get_height(blend_area);
 880              		.loc 1 226 9 is_stmt 1 view .LVU279
 881              	.LVL105:
 882              	.LBB72:
 883              	.LBI72:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 884              		.loc 2 123 26 view .LVU280
 885              	.LBB73:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 886              		.loc 2 125 5 view .LVU281
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 887              		.loc 2 125 31 is_stmt 0 view .LVU282
 888 0022 AF88     		ldrh	r7, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 889              		.loc 2 125 44 view .LVU283
 890 0024 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 891              		.loc 2 125 36 view .LVU284
 892 0026 FF1A     		subs	r7, r7, r3
 893 0028 BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 894              		.loc 2 125 49 view .LVU285
 895 002a 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 896              		.loc 2 125 12 view .LVU286
 897 002c 3FB2     		sxth	r7, r7
 898              	.LVL106:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 899              		.loc 2 125 12 view .LVU287
 900              	.LBE73:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 40


 901              	.LBE72:
 227:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 902              		.loc 1 227 9 is_stmt 1 view .LVU288
 903              	.LBB74:
 904              	.LBI74:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 905              		.loc 2 133 26 view .LVU289
 906              	.LBB75:
 907              		.loc 2 135 5 view .LVU290
 908              		.loc 2 135 31 is_stmt 0 view .LVU291
 909 002e EB88     		ldrh	r3, [r5, #6]
 910              		.loc 2 135 44 view .LVU292
 911 0030 6A88     		ldrh	r2, [r5, #2]
 912              		.loc 2 135 36 view .LVU293
 913 0032 9B1A     		subs	r3, r3, r2
 914 0034 9BB2     		uxth	r3, r3
 915              		.loc 2 135 49 view .LVU294
 916 0036 0133     		adds	r3, r3, #1
 917              		.loc 2 135 12 view .LVU295
 918 0038 1BB2     		sxth	r3, r3
 919 003a 0593     		str	r3, [sp, #20]
 920              	.LVL107:
 921              		.loc 2 135 12 view .LVU296
 922              	.LBE75:
 923              	.LBE74:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 924              		.loc 1 229 9 is_stmt 1 view .LVU297
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 925              		.loc 1 229 15 is_stmt 0 view .LVU298
 926 003c 4FF0000A 		mov	r10, #0
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 927              		.loc 1 229 9 view .LVU299
 928 0040 45E0     		b	.L71
 929              	.LVL108:
 930              	.L77:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 931              		.loc 1 229 9 view .LVU300
 932              	.LBE71:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 933              		.loc 1 219 9 is_stmt 1 view .LVU301
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 934              		.loc 1 219 27 is_stmt 0 view .LVU302
 935 0042 B5F90270 		ldrsh	r7, [r5, #2]
 936              	.LVL109:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 937              		.loc 1 219 27 view .LVU303
 938 0046 0597     		str	r7, [sp, #20]
 939 0048 069F     		ldr	r7, [sp, #24]
 940              	.LVL110:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 941              		.loc 1 219 27 view .LVU304
 942 004a DDF81C80 		ldr	r8, [sp, #28]
 943 004e DDF820A0 		ldr	r10, [sp, #32]
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 944              		.loc 1 219 9 view .LVU305
 945 0052 15E0     		b	.L66
 946              	.LVL111:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 41


 947              	.L68:
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 948              		.loc 1 221 17 is_stmt 1 discriminator 3 view .LVU306
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 949              		.loc 1 221 21 is_stmt 0 discriminator 3 view .LVU307
 950 0054 D9F80000 		ldr	r0, [r9]
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 951              		.loc 1 221 29 discriminator 3 view .LVU308
 952 0058 C669     		ldr	r6, [r0, #28]
 221:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 953              		.loc 1 221 17 discriminator 3 view .LVU309
 954 005a CDF808B0 		str	fp, [sp, #8]
 955 005e CDF804A0 		str	r10, [sp, #4]
 956 0062 BDF91430 		ldrsh	r3, [sp, #20]
 957 0066 0093     		str	r3, [sp]
 958 0068 23B2     		sxth	r3, r4
 959 006a 4246     		mov	r2, r8
 960 006c 3946     		mov	r1, r7
 961 006e B047     		blx	r6
 962              	.LVL112:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 963              		.loc 1 220 58 is_stmt 1 discriminator 3 view .LVU310
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 964              		.loc 1 220 59 is_stmt 0 discriminator 3 view .LVU311
 965 0070 0134     		adds	r4, r4, #1
 966              	.LVL113:
 967              	.L67:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 968              		.loc 1 220 37 is_stmt 1 discriminator 1 view .LVU312
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 969              		.loc 1 220 52 is_stmt 0 discriminator 1 view .LVU313
 970 0072 B5F90430 		ldrsh	r3, [r5, #4]
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 971              		.loc 1 220 13 discriminator 1 view .LVU314
 972 0076 A342     		cmp	r3, r4
 973 0078 ECDA     		bge	.L68
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 974              		.loc 1 219 54 is_stmt 1 discriminator 2 view .LVU315
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 975              		.loc 1 219 55 is_stmt 0 discriminator 2 view .LVU316
 976 007a 059B     		ldr	r3, [sp, #20]
 977 007c 0133     		adds	r3, r3, #1
 978 007e 0593     		str	r3, [sp, #20]
 979              	.LVL114:
 980              	.L66:
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 981              		.loc 1 219 33 is_stmt 1 discriminator 1 view .LVU317
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 982              		.loc 1 219 48 is_stmt 0 discriminator 1 view .LVU318
 983 0080 B5F90630 		ldrsh	r3, [r5, #6]
 219:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = blend_area->x1; x <= blend_area->x2; x++) {
 984              		.loc 1 219 9 discriminator 1 view .LVU319
 985 0084 059A     		ldr	r2, [sp, #20]
 986 0086 9342     		cmp	r3, r2
 987 0088 26DB     		blt	.L64
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 988              		.loc 1 220 13 is_stmt 1 view .LVU320
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 42


 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 989              		.loc 1 220 31 is_stmt 0 view .LVU321
 990 008a B5F90040 		ldrsh	r4, [r5]
 991              	.LVL115:
 220:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, x, y, color, o
 992              		.loc 1 220 13 view .LVU322
 993 008e F0E7     		b	.L67
 994              	.LVL116:
 995              	.L72:
 996              	.LBB76:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 997              		.loc 1 230 31 is_stmt 1 discriminator 2 view .LVU323
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 998              		.loc 1 230 32 is_stmt 0 discriminator 2 view .LVU324
 999 0090 0134     		adds	r4, r4, #1
 1000              	.LVL117:
 1001              	.L74:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1002              		.loc 1 230 24 is_stmt 1 discriminator 1 view .LVU325
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1003              		.loc 1 230 13 is_stmt 0 discriminator 1 view .LVU326
 1004 0092 BC42     		cmp	r4, r7
 1005 0094 17DA     		bge	.L78
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1006              		.loc 1 231 17 is_stmt 1 view .LVU327
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1007              		.loc 1 231 24 is_stmt 0 view .LVU328
 1008 0096 325D     		ldrb	r2, [r6, r4]	@ zero_extendqisi2
 231:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1009              		.loc 1 231 19 view .LVU329
 1010 0098 002A     		cmp	r2, #0
 1011 009a F9D0     		beq	.L72
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1012              		.loc 1 233 21 is_stmt 1 view .LVU330
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1013              		.loc 1 233 25 is_stmt 0 view .LVU331
 1014 009c D9F80000 		ldr	r0, [r9]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1015              		.loc 1 233 33 view .LVU332
 1016 00a0 D0F81C80 		ldr	r8, [r0, #28]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1017              		.loc 1 233 100 view .LVU333
 1018 00a4 2B88     		ldrh	r3, [r5]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1019              		.loc 1 233 105 view .LVU334
 1020 00a6 2344     		add	r3, r3, r4
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1021              		.loc 1 233 120 view .LVU335
 1022 00a8 6988     		ldrh	r1, [r5, #2]
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1023              		.loc 1 233 125 view .LVU336
 1024 00aa 5144     		add	r1, r1, r10
 234:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1025              		.loc 1 234 45 view .LVU337
 1026 00ac 02FB0BF2 		mul	r2, r2, fp
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1027              		.loc 1 233 21 view .LVU338
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 43


 1028 00b0 120A     		lsrs	r2, r2, #8
 1029 00b2 0292     		str	r2, [sp, #8]
 1030 00b4 089A     		ldr	r2, [sp, #32]
 1031              	.LVL118:
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1032              		.loc 1 233 21 view .LVU339
 1033 00b6 0192     		str	r2, [sp, #4]
 1034 00b8 09B2     		sxth	r1, r1
 1035 00ba 0091     		str	r1, [sp]
 1036 00bc 1BB2     		sxth	r3, r3
 1037 00be 079A     		ldr	r2, [sp, #28]
 1038              	.LVL119:
 233:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1039              		.loc 1 233 21 view .LVU340
 1040 00c0 0699     		ldr	r1, [sp, #24]
 1041 00c2 C047     		blx	r8
 1042              	.LVL120:
 1043 00c4 E4E7     		b	.L72
 1044              	.L78:
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1045              		.loc 1 237 13 is_stmt 1 discriminator 2 view .LVU341
 237:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1046              		.loc 1 237 18 is_stmt 0 discriminator 2 view .LVU342
 1047 00c6 099B     		ldr	r3, [sp, #36]
 1048 00c8 1E44     		add	r6, r6, r3
 1049              	.LVL121:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1050              		.loc 1 229 27 is_stmt 1 discriminator 2 view .LVU343
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1051              		.loc 1 229 28 is_stmt 0 discriminator 2 view .LVU344
 1052 00ca 0AF1010A 		add	r10, r10, #1
 1053              	.LVL122:
 1054              	.L71:
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1055              		.loc 1 229 20 is_stmt 1 discriminator 1 view .LVU345
 229:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1056              		.loc 1 229 9 is_stmt 0 discriminator 1 view .LVU346
 1057 00ce 059B     		ldr	r3, [sp, #20]
 1058 00d0 9A45     		cmp	r10, r3
 1059 00d2 01DA     		bge	.L64
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1060              		.loc 1 230 19 view .LVU347
 1061 00d4 0024     		movs	r4, #0
 1062 00d6 DCE7     		b	.L74
 1063              	.LVL123:
 1064              	.L64:
 230:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1065              		.loc 1 230 19 view .LVU348
 1066              	.LBE76:
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1067              		.loc 1 240 1 view .LVU349
 1068 00d8 0BB0     		add	sp, sp, #44
 1069              		.cfi_def_cfa_offset 36
 1070              		@ sp needed
 1071 00da BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 240:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1072              		.loc 1 240 1 view .LVU350
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 44


 1073              		.cfi_endproc
 1074              	.LFE163:
 1076              		.section	.text.map_set_px,"ax",%progbits
 1077              		.align	1
 1078              		.syntax unified
 1079              		.thumb
 1080              		.thumb_func
 1082              	map_set_px:
 1083              	.LVL124:
 1084              	.LFB166:
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1085              		.loc 1 609 1 is_stmt 1 view -0
 1086              		.cfi_startproc
 1087              		@ args = 16, pretend = 0, frame = 24
 1088              		@ frame_needed = 0, uses_anonymous_args = 0
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1089              		.loc 1 609 1 is_stmt 0 view .LVU352
 1090 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1091              		.cfi_def_cfa_offset 36
 1092              		.cfi_offset 4, -36
 1093              		.cfi_offset 5, -32
 1094              		.cfi_offset 6, -28
 1095              		.cfi_offset 7, -24
 1096              		.cfi_offset 8, -20
 1097              		.cfi_offset 9, -16
 1098              		.cfi_offset 10, -12
 1099              		.cfi_offset 11, -8
 1100              		.cfi_offset 14, -4
 1101 0004 8BB0     		sub	sp, sp, #44
 1102              		.cfi_def_cfa_offset 80
 1103 0006 0490     		str	r0, [sp, #16]
 1104 0008 0D46     		mov	r5, r1
 1105 000a 0592     		str	r2, [sp, #20]
 1106 000c 1F46     		mov	r7, r3
 1107 000e BDF95030 		ldrsh	r3, [sp, #80]
 1108              	.LVL125:
 609:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_disp_t * disp = _lv_refr_get_disp_refreshing();
 1109              		.loc 1 609 1 view .LVU353
 1110 0012 0893     		str	r3, [sp, #32]
 1111 0014 9DF85430 		ldrb	r3, [sp, #84]	@ zero_extendqisi2
 1112 0018 0693     		str	r3, [sp, #24]
 1113 001a DDF85880 		ldr	r8, [sp, #88]
 1114 001e BDF95C30 		ldrsh	r3, [sp, #92]
 1115 0022 0993     		str	r3, [sp, #36]
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1116              		.loc 1 610 5 is_stmt 1 view .LVU354
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1117              		.loc 1 610 24 is_stmt 0 view .LVU355
 1118 0024 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 1119              	.LVL126:
 610:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1120              		.loc 1 610 24 view .LVU356
 1121 0028 8246     		mov	r10, r0
 1122              	.LVL127:
 612:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1123              		.loc 1 612 5 is_stmt 1 view .LVU357
 1124              	.LBB77:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 45


 1125              	.LBI77:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1126              		.loc 2 123 26 view .LVU358
 1127              	.LBB78:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1128              		.loc 2 125 5 view .LVU359
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1129              		.loc 2 125 31 is_stmt 0 view .LVU360
 1130 002a AE88     		ldrh	r6, [r5, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1131              		.loc 2 125 44 view .LVU361
 1132 002c 2B88     		ldrh	r3, [r5]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1133              		.loc 2 125 36 view .LVU362
 1134 002e F61A     		subs	r6, r6, r3
 1135 0030 B6B2     		uxth	r6, r6
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1136              		.loc 2 125 49 view .LVU363
 1137 0032 0136     		adds	r6, r6, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1138              		.loc 2 125 12 view .LVU364
 1139 0034 36B2     		sxth	r6, r6
 1140              	.LVL128:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1141              		.loc 2 125 12 view .LVU365
 1142              	.LBE78:
 1143              	.LBE77:
 613:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1144              		.loc 1 613 5 is_stmt 1 view .LVU366
 1145              	.LBB79:
 1146              	.LBI79:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1147              		.loc 2 133 26 view .LVU367
 1148              	.LBB80:
 1149              		.loc 2 135 5 view .LVU368
 1150              		.loc 2 135 31 is_stmt 0 view .LVU369
 1151 0036 EB88     		ldrh	r3, [r5, #6]
 1152              		.loc 2 135 44 view .LVU370
 1153 0038 6A88     		ldrh	r2, [r5, #2]
 1154              		.loc 2 135 36 view .LVU371
 1155 003a 9B1A     		subs	r3, r3, r2
 1156 003c 9BB2     		uxth	r3, r3
 1157              		.loc 2 135 49 view .LVU372
 1158 003e 0133     		adds	r3, r3, #1
 1159              		.loc 2 135 12 view .LVU373
 1160 0040 1BB2     		sxth	r3, r3
 1161 0042 0793     		str	r3, [sp, #28]
 1162              	.LVL129:
 1163              		.loc 2 135 12 view .LVU374
 1164              	.LBE80:
 1165              	.LBE79:
 615:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1166              		.loc 1 615 5 is_stmt 1 view .LVU375
 616:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1167              		.loc 1 616 5 view .LVU376
 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1168              		.loc 1 618 5 view .LVU377
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 46


 618:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         for(y = 0; y < h; y++) {
 1169              		.loc 1 618 7 is_stmt 0 view .LVU378
 1170 0044 B8F1000F 		cmp	r8, #0
 1171 0048 22D0     		beq	.L88
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1172              		.loc 1 628 15 view .LVU379
 1173 004a 4FF0000B 		mov	fp, #0
 1174 004e B946     		mov	r9, r7
 1175 0050 4AE0     		b	.L81
 1176              	.LVL130:
 1177              	.L82:
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1178              		.loc 1 621 17 is_stmt 1 discriminator 3 view .LVU380
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1179              		.loc 1 621 21 is_stmt 0 discriminator 3 view .LVU381
 1180 0052 DAF80000 		ldr	r0, [r10]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1181              		.loc 1 621 29 discriminator 3 view .LVU382
 1182 0056 C669     		ldr	r6, [r0, #28]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1183              		.loc 1 621 95 discriminator 3 view .LVU383
 1184 0058 2B88     		ldrh	r3, [r5]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1185              		.loc 1 621 100 discriminator 3 view .LVU384
 1186 005a 2344     		add	r3, r3, r4
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1187              		.loc 1 621 114 discriminator 3 view .LVU385
 1188 005c 6A88     		ldrh	r2, [r5, #2]
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1189              		.loc 1 621 119 discriminator 3 view .LVU386
 1190 005e 4A44     		add	r2, r2, r9
 621:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                         opa);
 1191              		.loc 1 621 17 discriminator 3 view .LVU387
 1192 0060 CDF808B0 		str	fp, [sp, #8]
 1193 0064 57F82410 		ldr	r1, [r7, r4, lsl #2]
 1194 0068 0191     		str	r1, [sp, #4]
 1195 006a 12B2     		sxth	r2, r2
 1196 006c 0092     		str	r2, [sp]
 1197 006e 1BB2     		sxth	r3, r3
 1198 0070 059A     		ldr	r2, [sp, #20]
 1199 0072 0499     		ldr	r1, [sp, #16]
 1200 0074 B047     		blx	r6
 1201              	.LVL131:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1202              		.loc 1 620 31 is_stmt 1 discriminator 3 view .LVU388
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1203              		.loc 1 620 32 is_stmt 0 discriminator 3 view .LVU389
 1204 0076 0134     		adds	r4, r4, #1
 1205              	.LVL132:
 1206              	.L83:
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1207              		.loc 1 620 24 is_stmt 1 discriminator 1 view .LVU390
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1208              		.loc 1 620 13 is_stmt 0 discriminator 1 view .LVU391
 1209 0078 4445     		cmp	r4, r8
 1210 007a EADB     		blt	.L82
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 47


 1211              		.loc 1 624 13 is_stmt 1 discriminator 2 view .LVU392
 624:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1212              		.loc 1 624 21 is_stmt 0 discriminator 2 view .LVU393
 1213 007c 089B     		ldr	r3, [sp, #32]
 1214 007e 07EB8307 		add	r7, r7, r3, lsl #2
 1215              	.LVL133:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1216              		.loc 1 619 27 is_stmt 1 discriminator 2 view .LVU394
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1217              		.loc 1 619 28 is_stmt 0 discriminator 2 view .LVU395
 1218 0082 09F10109 		add	r9, r9, #1
 1219              	.LVL134:
 1220              	.L80:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1221              		.loc 1 619 20 is_stmt 1 discriminator 1 view .LVU396
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1222              		.loc 1 619 9 is_stmt 0 discriminator 1 view .LVU397
 1223 0086 079B     		ldr	r3, [sp, #28]
 1224 0088 9945     		cmp	r9, r3
 1225 008a 32DA     		bge	.L79
 620:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area->x1 
 1226              		.loc 1 620 19 view .LVU398
 1227 008c 0024     		movs	r4, #0
 1228 008e F3E7     		b	.L83
 1229              	.LVL135:
 1230              	.L88:
 619:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1231              		.loc 1 619 15 view .LVU399
 1232 0090 4FF00009 		mov	r9, #0
 1233 0094 B046     		mov	r8, r6
 1234 0096 DDF818B0 		ldr	fp, [sp, #24]
 1235 009a F4E7     		b	.L80
 1236              	.LVL136:
 1237              	.L85:
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1238              		.loc 1 629 31 is_stmt 1 discriminator 2 view .LVU400
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1239              		.loc 1 629 32 is_stmt 0 discriminator 2 view .LVU401
 1240 009c 0134     		adds	r4, r4, #1
 1241              	.LVL137:
 1242              	.L87:
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1243              		.loc 1 629 24 is_stmt 1 discriminator 1 view .LVU402
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1244              		.loc 1 629 13 is_stmt 0 discriminator 1 view .LVU403
 1245 009e B442     		cmp	r4, r6
 1246 00a0 1BDA     		bge	.L92
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1247              		.loc 1 630 17 is_stmt 1 view .LVU404
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1248              		.loc 1 630 24 is_stmt 0 view .LVU405
 1249 00a2 18F80420 		ldrb	r2, [r8, r4]	@ zero_extendqisi2
 630:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     disp->driver->set_px_cb(disp->driver, (void *)dest_buf, dest_stride, dest_area-
 1250              		.loc 1 630 19 view .LVU406
 1251 00a6 002A     		cmp	r2, #0
 1252 00a8 F8D0     		beq	.L85
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 48


 1253              		.loc 1 631 21 is_stmt 1 view .LVU407
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1254              		.loc 1 631 25 is_stmt 0 view .LVU408
 1255 00aa DAF80000 		ldr	r0, [r10]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1256              		.loc 1 631 33 view .LVU409
 1257 00ae C769     		ldr	r7, [r0, #28]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1258              		.loc 1 631 99 view .LVU410
 1259 00b0 2B88     		ldrh	r3, [r5]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1260              		.loc 1 631 104 view .LVU411
 1261 00b2 03EB040C 		add	ip, r3, r4
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1262              		.loc 1 631 118 view .LVU412
 1263 00b6 6988     		ldrh	r1, [r5, #2]
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1264              		.loc 1 631 123 view .LVU413
 1265 00b8 5944     		add	r1, r1, fp
 632:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1266              		.loc 1 632 45 view .LVU414
 1267 00ba 069B     		ldr	r3, [sp, #24]
 1268 00bc 03FB02F2 		mul	r2, r3, r2
 631:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                             (uint32_t)((uint32_t)opa * mask[x]) >> 8);
 1269              		.loc 1 631 21 view .LVU415
 1270 00c0 120A     		lsrs	r2, r2, #8
 1271 00c2 0292     		str	r2, [sp, #8]
 1272 00c4 59F82420 		ldr	r2, [r9, r4, lsl #2]
 1273 00c8 0192     		str	r2, [sp, #4]
 1274 00ca 09B2     		sxth	r1, r1
 1275 00cc 0091     		str	r1, [sp]
 1276 00ce 0FFA8CF3 		sxth	r3, ip
 1277 00d2 059A     		ldr	r2, [sp, #20]
 1278 00d4 0499     		ldr	r1, [sp, #16]
 1279 00d6 B847     		blx	r7
 1280              	.LVL138:
 1281 00d8 E0E7     		b	.L85
 1282              	.L92:
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1283              		.loc 1 635 13 is_stmt 1 discriminator 2 view .LVU416
 635:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             src_buf += src_stride;
 1284              		.loc 1 635 18 is_stmt 0 discriminator 2 view .LVU417
 1285 00da 099B     		ldr	r3, [sp, #36]
 1286 00dc 9844     		add	r8, r8, r3
 1287              	.LVL139:
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1288              		.loc 1 636 13 is_stmt 1 discriminator 2 view .LVU418
 636:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 1289              		.loc 1 636 21 is_stmt 0 discriminator 2 view .LVU419
 1290 00de 089B     		ldr	r3, [sp, #32]
 1291 00e0 09EB8309 		add	r9, r9, r3, lsl #2
 1292              	.LVL140:
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1293              		.loc 1 628 27 is_stmt 1 discriminator 2 view .LVU420
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1294              		.loc 1 628 28 is_stmt 0 discriminator 2 view .LVU421
 1295 00e4 0BF1010B 		add	fp, fp, #1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 49


 1296              	.LVL141:
 1297              	.L81:
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1298              		.loc 1 628 20 is_stmt 1 discriminator 1 view .LVU422
 628:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(x = 0; x < w; x++) {
 1299              		.loc 1 628 9 is_stmt 0 discriminator 1 view .LVU423
 1300 00e8 079B     		ldr	r3, [sp, #28]
 1301 00ea 9B45     		cmp	fp, r3
 1302 00ec 01DA     		bge	.L79
 629:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 if(mask[x]) {
 1303              		.loc 1 629 19 view .LVU424
 1304 00ee 0024     		movs	r4, #0
 1305 00f0 D5E7     		b	.L87
 1306              	.LVL142:
 1307              	.L79:
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1308              		.loc 1 639 1 view .LVU425
 1309 00f2 0BB0     		add	sp, sp, #44
 1310              		.cfi_def_cfa_offset 36
 1311              		@ sp needed
 1312 00f4 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 639:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1313              		.loc 1 639 1 view .LVU426
 1314              		.cfi_endproc
 1315              	.LFE166:
 1317              		.section	.text.fill_normal,"ax",%progbits
 1318              		.align	1
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1323              	fill_normal:
 1324              	.LVL143:
 1325              	.LFB164:
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1326              		.loc 1 245 1 is_stmt 1 view -0
 1327              		.cfi_startproc
 1328              		@ args = 12, pretend = 0, frame = 48
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1330              		.loc 1 245 1 is_stmt 0 view .LVU428
 1331 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1332              		.cfi_def_cfa_offset 36
 1333              		.cfi_offset 4, -36
 1334              		.cfi_offset 5, -32
 1335              		.cfi_offset 6, -28
 1336              		.cfi_offset 7, -24
 1337              		.cfi_offset 8, -20
 1338              		.cfi_offset 9, -16
 1339              		.cfi_offset 10, -12
 1340              		.cfi_offset 11, -8
 1341              		.cfi_offset 14, -4
 1342 0004 8DB0     		sub	sp, sp, #52
 1343              		.cfi_def_cfa_offset 88
 1344 0006 0446     		mov	r4, r0
 1345 0008 0492     		str	r2, [sp, #16]
 1346 000a 1D46     		mov	r5, r3
 1347              	.LVL144:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 50


 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1348              		.loc 1 245 1 view .LVU429
 1349 000c 9DF858B0 		ldrb	fp, [sp, #88]	@ zero_extendqisi2
 1350 0010 179A     		ldr	r2, [sp, #92]
 1351              	.LVL145:
 245:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 1352              		.loc 1 245 1 view .LVU430
 1353 0012 BDF96030 		ldrsh	r3, [sp, #96]
 1354 0016 0593     		str	r3, [sp, #20]
 246:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 1355              		.loc 1 246 5 is_stmt 1 view .LVU431
 1356              	.LVL146:
 1357              	.LBB112:
 1358              	.LBI112:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1359              		.loc 2 123 26 view .LVU432
 1360              	.LBB113:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1361              		.loc 2 125 5 view .LVU433
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1362              		.loc 2 125 31 is_stmt 0 view .LVU434
 1363 0018 8B88     		ldrh	r3, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1364              		.loc 2 125 44 view .LVU435
 1365 001a 0888     		ldrh	r0, [r1]
 1366              	.LVL147:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1367              		.loc 2 125 36 view .LVU436
 1368 001c 1F1A     		subs	r7, r3, r0
 1369 001e BFB2     		uxth	r7, r7
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1370              		.loc 2 125 49 view .LVU437
 1371 0020 0137     		adds	r7, r7, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1372              		.loc 2 125 12 view .LVU438
 1373 0022 3FB2     		sxth	r7, r7
 1374              	.LVL148:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 1375              		.loc 2 125 12 view .LVU439
 1376              	.LBE113:
 1377              	.LBE112:
 247:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1378              		.loc 1 247 5 is_stmt 1 view .LVU440
 1379              	.LBB114:
 1380              	.LBI114:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 1381              		.loc 2 133 26 view .LVU441
 1382              	.LBB115:
 1383              		.loc 2 135 5 view .LVU442
 1384              		.loc 2 135 31 is_stmt 0 view .LVU443
 1385 0024 CB88     		ldrh	r3, [r1, #6]
 1386              		.loc 2 135 44 view .LVU444
 1387 0026 4988     		ldrh	r1, [r1, #2]
 1388              	.LVL149:
 1389              		.loc 2 135 36 view .LVU445
 1390 0028 5B1A     		subs	r3, r3, r1
 1391 002a 9BB2     		uxth	r3, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 51


 1392              		.loc 2 135 49 view .LVU446
 1393 002c 0133     		adds	r3, r3, #1
 1394              		.loc 2 135 12 view .LVU447
 1395 002e 1BB2     		sxth	r3, r3
 1396 0030 0393     		str	r3, [sp, #12]
 1397              	.LVL150:
 1398              		.loc 2 135 12 view .LVU448
 1399              	.LBE115:
 1400              	.LBE114:
 249:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 1401              		.loc 1 249 5 is_stmt 1 view .LVU449
 250:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1402              		.loc 1 250 5 view .LVU450
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1403              		.loc 1 253 5 view .LVU451
 253:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 1404              		.loc 1 253 7 is_stmt 0 view .LVU452
 1405 0032 6AB1     		cbz	r2, .L144
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1406              		.loc 1 295 9 is_stmt 1 view .LVU453
 295:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 1407              		.loc 1 295 11 is_stmt 0 view .LVU454
 1408 0034 BBF1FC0F 		cmp	fp, #252
 1409 0038 40F26B82 		bls	.L103
 1410              	.LBB116:
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1411              		.loc 1 296 13 is_stmt 1 view .LVU455
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1412              		.loc 1 296 21 is_stmt 0 view .LVU456
 1413 003c 3B1F     		subs	r3, r7, #4
 1414              	.LVL151:
 296:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1415              		.loc 1 296 21 view .LVU457
 1416 003e 0693     		str	r3, [sp, #24]
 1417              	.LVL152:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1418              		.loc 1 297 13 is_stmt 1 view .LVU458
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1419              		.loc 1 297 19 is_stmt 0 view .LVU459
 1420 0040 0023     		movs	r3, #0
 1421              	.LVL153:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1422              		.loc 1 297 19 view .LVU460
 1423 0042 0293     		str	r3, [sp, #8]
 1424 0044 0197     		str	r7, [sp, #4]
 1425              	.LVL154:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1426              		.loc 1 297 19 view .LVU461
 1427 0046 CDF81CC0 		str	ip, [sp, #28]
 1428 004a DDF824A0 		ldr	r10, [sp, #36]
 1429              	.LVL155:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 1430              		.loc 1 297 13 view .LVU462
 1431 004e 57E2     		b	.L104
 1432              	.LVL156:
 1433              	.L144:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 52


 1434              		.loc 1 297 13 view .LVU463
 1435              	.LBE116:
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1436              		.loc 1 254 9 is_stmt 1 view .LVU464
 254:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 1437              		.loc 1 254 11 is_stmt 0 view .LVU465
 1438 0050 BBF1FC0F 		cmp	fp, #252
 1439 0054 57D8     		bhi	.L136
 1440              	.LBB131:
 262:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color = lv_color_mix(color, last_dest_color, opa);
 1441              		.loc 1 262 13 is_stmt 1 view .LVU466
 1442              	.LBB132:
 1443              	.LBI132:
 1444              		.file 3 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 53


  44:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 54


 101:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 55


 158:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 201:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 208:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 56


 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 57


 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 281:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 298:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 300:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 307:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 309:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 314:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 316:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 321:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 323:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 324:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 325:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 326:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 58


 329:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 332:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 348:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 349:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 350:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 356:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 372:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 373:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 374:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 380:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 59


 386:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 417:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 427:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 428:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 429:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 432:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 442:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 60


 443:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/sw/../../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 447:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 457:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 467:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 471:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 472:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 473:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 476:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 481:lvgl/src/draw/sw/../../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 487:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 488:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 489:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 490:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 491:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/sw/../../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 499:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 61


 500:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 501:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 509:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 517:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 518:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 519:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 520:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 521:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 522:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 530:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/draw/sw/../../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 534:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 539:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 544:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/sw/../../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 549:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 551:lvgl/src/draw/sw/../../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 62


 557:lvgl/src/draw/sw/../../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 559:lvgl/src/draw/sw/../../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/sw/../../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/sw/../../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/sw/../../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/sw/../../misc/lv_color.h ****             /*Info:
 566:lvgl/src/draw/sw/../../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/sw/../../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/sw/../../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/draw/sw/../../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 572:lvgl/src/draw/sw/../../misc/lv_color.h ****         }
 573:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 574:lvgl/src/draw/sw/../../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/sw/../../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 577:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 578:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 579:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 581:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 582:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 586:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 588:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/draw/sw/../../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/sw/../../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 593:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 596:lvgl/src/draw/sw/../../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 598:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 599:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 601:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/sw/../../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 612:lvgl/src/draw/sw/../../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/sw/../../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 63


 614:lvgl/src/draw/sw/../../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/sw/../../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/sw/../../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/sw/../../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 620:lvgl/src/draw/sw/../../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 623:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 624:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/draw/sw/../../misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/draw/sw/../../misc/lv_color.h ****     return r;
 628:lvgl/src/draw/sw/../../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 631:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 632:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 633:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 635:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/draw/sw/../../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 638:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 639:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 641:lvgl/src/draw/sw/../../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 643:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 644:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/draw/sw/../../misc/lv_color.h **** //!
 646:lvgl/src/draw/sw/../../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 648:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 649:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 651:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 653:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 655:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 656:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 662:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 664:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 665:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 64


 671:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 673:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 674:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param color color
 676:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 678:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 680:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 681:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 684:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 686:lvgl/src/draw/sw/../../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 688:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 689:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 690:lvgl/src/draw/sw/../../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 692:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 694:lvgl/src/draw/sw/../../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 696:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 697:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 698:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 699:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 1445              		.loc 3 699 26 view .LVU467
 1446              	.LBE132:
 1447              	.LBE131:
 700:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 701:lvgl/src/draw/sw/../../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 1448              		.loc 3 701 5 view .LVU468
 1449              	.LVL157:
 1450              	.LBB142:
 1451              	.LBB135:
 1452              	.LBB133:
 1453              	.LBI133:
 594:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1454              		.loc 3 594 26 view .LVU469
 1455              	.LBB134:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1456              		.loc 3 596 5 view .LVU470
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1457              		.loc 3 596 12 is_stmt 0 view .LVU471
 1458 0056 0020     		movs	r0, #0
 1459 0058 6FF30700 		bfc	r0, #0, #8
 1460 005c 6FF30F20 		bfc	r0, #8, #8
 1461 0060 6FF31740 		bfc	r0, #16, #8
 1462 0064 40F07F40 		orr	r0, r0, #-16777216
 1463              	.LVL158:
 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1464              		.loc 3 596 12 view .LVU472
 1465 0068 0146     		mov	r1, r0
 1466              	.LVL159:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 65


 596:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1467              		.loc 3 596 12 view .LVU473
 1468              	.LBE134:
 1469              	.LBE133:
 1470              	.LBE135:
 263:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1471              		.loc 1 263 13 is_stmt 1 view .LVU474
 1472              	.LBB136:
 1473              	.LBI136:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1474              		.loc 3 438 48 view .LVU475
 1475              	.LBB137:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1476              		.loc 3 440 5 view .LVU476
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1477              		.loc 3 459 5 view .LVU477
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1478              		.loc 3 459 5 is_stmt 0 view .LVU478
 1479 006a C5F30746 		ubfx	r6, r5, #16, #8
 1480 006e C0F30742 		ubfx	r2, r0, #16, #8
 1481 0072 CBF1FF03 		rsb	r3, fp, #255
 1482              	.LVL160:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1483              		.loc 3 459 5 view .LVU479
 1484 0076 03FB02F2 		mul	r2, r3, r2
 1485 007a 0BFB0622 		mla	r2, fp, r6, r2
 1486 007e 02EB0226 		add	r6, r2, r2, lsl #8
 1487 0082 02EBC612 		add	r2, r2, r6, lsl #7
 1488 0086 C2F3C752 		ubfx	r2, r2, #23, #8
 1489 008a 4FF0000C 		mov	ip, #0
 1490              	.LVL161:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1491              		.loc 3 459 5 view .LVU480
 1492 008e 62F3174C 		bfi	ip, r2, #16, #8
 1493              	.LVL162:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1494              		.loc 3 461 5 is_stmt 1 view .LVU481
 1495 0092 C5F30726 		ubfx	r6, r5, #8, #8
 1496 0096 C0F30722 		ubfx	r2, r0, #8, #8
 1497 009a 03FB02F2 		mul	r2, r3, r2
 1498 009e 06FB0B22 		mla	r2, r6, fp, r2
 1499 00a2 02EB0226 		add	r6, r2, r2, lsl #8
 1500 00a6 02EBC612 		add	r2, r2, r6, lsl #7
 1501 00aa C2F3C752 		ubfx	r2, r2, #23, #8
 1502 00ae 62F30F2C 		bfi	ip, r2, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1503              		.loc 3 463 5 view .LVU482
 1504 00b2 EAB2     		uxtb	r2, r5
 1505 00b4 C0B2     		uxtb	r0, r0
 1506 00b6 00FB03F3 		mul	r3, r0, r3
 1507 00ba 02FB0B33 		mla	r3, r2, fp, r3
 1508 00be 03EB0320 		add	r0, r3, r3, lsl #8
 1509 00c2 03EBC013 		add	r3, r3, r0, lsl #7
 1510 00c6 C3F3C753 		ubfx	r3, r3, #23, #8
 1511 00ca 63F3070C 		bfi	ip, r3, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1512              		.loc 3 465 5 view .LVU483
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 66


 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1513              		.loc 3 471 5 view .LVU484
 1514 00ce 4CF07F43 		orr	r3, ip, #-16777216
 1515              	.LVL163:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1516              		.loc 3 471 5 is_stmt 0 view .LVU485
 1517              	.LBE137:
 1518              	.LBE136:
 273:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_premult(color, opa, color_premult);
 1519              		.loc 1 273 13 is_stmt 1 view .LVU486
 274:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_inv = 255 - opa;
 1520              		.loc 1 274 13 view .LVU487
 1521              	.LBB138:
 1522              	.LBI138:
 474:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1523              		.loc 3 474 42 view .LVU488
 1524              	.LBB139:
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1525              		.loc 3 477 5 view .LVU489
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1526              		.loc 3 477 24 is_stmt 0 view .LVU490
 1527 00d2 C5F30740 		ubfx	r0, r5, #16, #8
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1528              		.loc 3 477 42 view .LVU491
 1529 00d6 00FB0BF0 		mul	r0, r0, fp
 477:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 1530              		.loc 3 477 12 view .LVU492
 1531 00da ADF82800 		strh	r0, [sp, #40]	@ movhi
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1532              		.loc 3 478 5 is_stmt 1 view .LVU493
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1533              		.loc 3 478 24 is_stmt 0 view .LVU494
 1534 00de C5F30720 		ubfx	r0, r5, #8, #8
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1535              		.loc 3 478 42 view .LVU495
 1536 00e2 0BFB00F0 		mul	r0, fp, r0
 478:lvgl/src/draw/sw/../../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 1537              		.loc 3 478 12 view .LVU496
 1538 00e6 ADF82A00 		strh	r0, [sp, #42]	@ movhi
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1539              		.loc 3 479 5 is_stmt 1 view .LVU497
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1540              		.loc 3 479 42 is_stmt 0 view .LVU498
 1541 00ea 02FB0BF2 		mul	r2, r2, fp
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1542              		.loc 3 479 12 view .LVU499
 1543 00ee ADF82C20 		strh	r2, [sp, #44]	@ movhi
 1544              	.LVL164:
 479:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1545              		.loc 3 479 12 view .LVU500
 1546              	.LBE139:
 1547              	.LBE138:
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1548              		.loc 1 275 13 is_stmt 1 view .LVU501
 275:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 1549              		.loc 1 275 22 is_stmt 0 view .LVU502
 1550 00f2 6FEA0B00 		mvn	r0, fp
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 67


 1551 00f6 C0B2     		uxtb	r0, r0
 1552              	.LVL165:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1553              		.loc 1 277 13 is_stmt 1 view .LVU503
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1554              		.loc 1 277 19 is_stmt 0 view .LVU504
 1555 00f8 0026     		movs	r6, #0
 1556 00fa B146     		mov	r9, r6
 1557 00fc DDF80CC0 		ldr	ip, [sp, #12]
 1558              	.LVL166:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1559              		.loc 1 277 19 view .LVU505
 1560 0100 DDF810E0 		ldr	lr, [sp, #16]
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1561              		.loc 1 277 13 view .LVU506
 1562 0104 4DE0     		b	.L99
 1563              	.LVL167:
 1564              	.L136:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1565              		.loc 1 277 13 view .LVU507
 1566              	.LBE142:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1567              		.loc 1 255 19 view .LVU508
 1568 0106 0026     		movs	r6, #0
 1569 0108 DDF80C80 		ldr	r8, [sp, #12]
 1570 010c DDF81090 		ldr	r9, [sp, #16]
 1571              	.LVL168:
 1572              	.L95:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1573              		.loc 1 255 24 is_stmt 1 discriminator 1 view .LVU509
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1574              		.loc 1 255 13 is_stmt 0 discriminator 1 view .LVU510
 1575 0110 4645     		cmp	r6, r8
 1576 0112 80F26D82 		bge	.L93
 256:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 1577              		.loc 1 256 17 is_stmt 1 discriminator 3 view .LVU511
 1578 0116 3A46     		mov	r2, r7
 1579 0118 2946     		mov	r1, r5
 1580 011a 2046     		mov	r0, r4
 1581 011c FFF7FEFF 		bl	lv_color_fill
 1582              	.LVL169:
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1583              		.loc 1 257 17 discriminator 3 view .LVU512
 257:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1584              		.loc 1 257 26 is_stmt 0 discriminator 3 view .LVU513
 1585 0120 04EB8904 		add	r4, r4, r9, lsl #2
 1586              	.LVL170:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1587              		.loc 1 255 31 is_stmt 1 discriminator 3 view .LVU514
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1588              		.loc 1 255 32 is_stmt 0 discriminator 3 view .LVU515
 1589 0124 0136     		adds	r6, r6, #1
 1590              	.LVL171:
 255:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_color_fill(dest_buf, color, w);
 1591              		.loc 1 255 32 discriminator 3 view .LVU516
 1592 0126 F3E7     		b	.L95
 1593              	.LVL172:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 68


 1594              	.L146:
 1595              	.LBB143:
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 1596              		.loc 1 280 25 is_stmt 1 view .LVU517
 280:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_res_color = lv_color_mix_premult(color_premult, dest_buf[x], opa_inv);
 1597              		.loc 1 280 41 is_stmt 0 view .LVU518
 1598 0128 3146     		mov	r1, r6
 1599              	.LVL173:
 281:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1600              		.loc 1 281 25 is_stmt 1 view .LVU519
 1601              	.LBB140:
 1602              	.LBI140:
 499:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1603              		.loc 3 499 48 view .LVU520
 1604              	.LBB141:
 501:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 1605              		.loc 3 501 5 view .LVU521
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1606              		.loc 3 504 5 view .LVU522
 1607 012a BDF82830 		ldrh	r3, [sp, #40]
 1608              	.LVL174:
 504:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1609              		.loc 3 504 5 is_stmt 0 view .LVU523
 1610 012e C6F30748 		ubfx	r8, r6, #16, #8
 1611 0132 00FB0833 		mla	r3, r0, r8, r3
 1612 0136 03EB0328 		add	r8, r3, r3, lsl #8
 1613 013a 03EBC813 		add	r3, r3, r8, lsl #7
 1614 013e C3F3C753 		ubfx	r3, r3, #23, #8
 1615 0142 63F3174A 		bfi	r10, r3, #16, #8
 505:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 1616              		.loc 3 505 5 is_stmt 1 view .LVU524
 1617 0146 BDF82A30 		ldrh	r3, [sp, #42]
 1618 014a C6F30728 		ubfx	r8, r6, #8, #8
 1619 014e 08FB0033 		mla	r3, r8, r0, r3
 1620 0152 03EB0328 		add	r8, r3, r3, lsl #8
 1621 0156 03EBC813 		add	r3, r3, r8, lsl #7
 1622 015a C3F3C753 		ubfx	r3, r3, #23, #8
 1623 015e 63F30F2A 		bfi	r10, r3, #8, #8
 506:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1624              		.loc 3 506 5 view .LVU525
 1625 0162 BDF82C30 		ldrh	r3, [sp, #44]
 1626 0166 5FFA86F8 		uxtb	r8, r6
 1627 016a 08FB0033 		mla	r3, r8, r0, r3
 1628 016e 03EB0328 		add	r8, r3, r3, lsl #8
 1629 0172 03EBC813 		add	r3, r3, r8, lsl #7
 1630 0176 C3F3C753 		ubfx	r3, r3, #23, #8
 1631 017a 63F3070A 		bfi	r10, r3, #0, #8
 507:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1632              		.loc 3 507 5 view .LVU526
 1633 017e 4AF07F4A 		orr	r10, r10, #-16777216
 1634              	.LVL175:
 518:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1635              		.loc 3 518 5 view .LVU527
 518:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1636              		.loc 3 518 5 is_stmt 0 view .LVU528
 1637 0182 5346     		mov	r3, r10
 1638              	.LVL176:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 69


 1639              	.L100:
 518:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1640              		.loc 3 518 5 view .LVU529
 1641              	.LBE141:
 1642              	.LBE140:
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1643              		.loc 1 283 21 is_stmt 1 discriminator 2 view .LVU530
 283:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1644              		.loc 1 283 33 is_stmt 0 discriminator 2 view .LVU531
 1645 0184 2B60     		str	r3, [r5]
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1646              		.loc 1 278 35 is_stmt 1 discriminator 2 view .LVU532
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1647              		.loc 1 278 36 is_stmt 0 discriminator 2 view .LVU533
 1648 0186 0132     		adds	r2, r2, #1
 1649              	.LVL177:
 1650              	.L102:
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1651              		.loc 1 278 28 is_stmt 1 discriminator 1 view .LVU534
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1652              		.loc 1 278 17 is_stmt 0 discriminator 1 view .LVU535
 1653 0188 BA42     		cmp	r2, r7
 1654 018a 06DA     		bge	.L145
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1655              		.loc 1 279 21 is_stmt 1 view .LVU536
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1656              		.loc 1 279 56 is_stmt 0 view .LVU537
 1657 018c 04EB8205 		add	r5, r4, r2, lsl #2
 1658              	.LVL178:
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1659              		.loc 1 279 23 view .LVU538
 1660 0190 54F82260 		ldr	r6, [r4, r2, lsl #2]
 1661 0194 B142     		cmp	r1, r6
 1662 0196 C7D1     		bne	.L146
 279:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         last_dest_color = dest_buf[x];
 1663              		.loc 1 279 23 view .LVU539
 1664 0198 F4E7     		b	.L100
 1665              	.LVL179:
 1666              	.L145:
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1667              		.loc 1 285 17 is_stmt 1 discriminator 2 view .LVU540
 285:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 1668              		.loc 1 285 26 is_stmt 0 discriminator 2 view .LVU541
 1669 019a 04EB8E04 		add	r4, r4, lr, lsl #2
 1670              	.LVL180:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1671              		.loc 1 277 31 is_stmt 1 discriminator 2 view .LVU542
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1672              		.loc 1 277 32 is_stmt 0 discriminator 2 view .LVU543
 1673 019e 09F10109 		add	r9, r9, #1
 1674              	.LVL181:
 1675              	.L99:
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1676              		.loc 1 277 24 is_stmt 1 discriminator 1 view .LVU544
 277:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 1677              		.loc 1 277 13 is_stmt 0 discriminator 1 view .LVU545
 1678 01a2 E145     		cmp	r9, ip
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 70


 1679 01a4 80F22482 		bge	.L93
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1680              		.loc 1 278 23 view .LVU546
 1681 01a8 0022     		movs	r2, #0
 1682 01aa EDE7     		b	.L102
 1683              	.LVL182:
 1684              	.L148:
 278:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(last_dest_color.full != dest_buf[x].full) {
 1685              		.loc 1 278 23 view .LVU547
 1686              	.LBE143:
 1687              	.LBB144:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1688              		.loc 1 299 21 is_stmt 1 discriminator 1 view .LVU548
 1689 01ac 2560     		str	r5, [r4]
 1690              	.L106:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1691              		.loc 1 299 21 discriminator 4 view .LVU549
 1692 01ae 0132     		adds	r2, r2, #1
 1693              	.LVL183:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1694              		.loc 1 299 21 discriminator 4 view .LVU550
 1695 01b0 0434     		adds	r4, r4, #4
 1696              	.LVL184:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1697              		.loc 1 298 67 discriminator 4 view .LVU551
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1698              		.loc 1 298 68 is_stmt 0 discriminator 4 view .LVU552
 1699 01b2 0CF1010C 		add	ip, ip, #1
 1700              	.LVL185:
 1701              	.L126:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1702              		.loc 1 298 28 is_stmt 1 discriminator 2 view .LVU553
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1703              		.loc 1 298 17 is_stmt 0 discriminator 2 view .LVU554
 1704 01b6 CC45     		cmp	ip, r9
 1705 01b8 80F24881 		bge	.L142
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 1706              		.loc 1 298 34 discriminator 3 view .LVU555
 1707 01bc 12F0030F 		tst	r2, #3
 1708 01c0 37D0     		beq	.L147
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1709              		.loc 1 299 21 is_stmt 1 view .LVU556
 1710 01c2 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
 1711 01c4 FF2F     		cmp	r7, #255
 1712 01c6 F1D0     		beq	.L148
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1713              		.loc 1 299 21 discriminator 2 view .LVU557
 1714 01c8 2068     		ldr	r0, [r4]
 1715              	.LVL186:
 1716              	.LBB117:
 1717              	.LBI117:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1718              		.loc 3 438 48 discriminator 2 view .LVU558
 1719              	.LBB118:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1720              		.loc 3 440 5 discriminator 2 view .LVU559
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 71


 1721              		.loc 3 459 5 discriminator 2 view .LVU560
 1722 01ca C5F30741 		ubfx	r1, r5, #16, #8
 1723              	.LVL187:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1724              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU561
 1725 01ce C0F3074B 		ubfx	fp, r0, #16, #8
 1726 01d2 C7F1FF03 		rsb	r3, r7, #255
 1727 01d6 03FB0BFB 		mul	fp, r3, fp
 1728 01da 07FB01B1 		mla	r1, r7, r1, fp
 1729 01de 01EB012B 		add	fp, r1, r1, lsl #8
 1730 01e2 01EBCB11 		add	r1, r1, fp, lsl #7
 1731 01e6 C1F3C751 		ubfx	r1, r1, #23, #8
 1732 01ea 61F31746 		bfi	r6, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1733              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU562
 1734 01ee C5F30721 		ubfx	r1, r5, #8, #8
 1735 01f2 C0F3072B 		ubfx	fp, r0, #8, #8
 1736 01f6 0BFB03FB 		mul	fp, fp, r3
 1737 01fa 01FB07B1 		mla	r1, r1, r7, fp
 1738 01fe 01EB012B 		add	fp, r1, r1, lsl #8
 1739 0202 01EBCB11 		add	r1, r1, fp, lsl #7
 1740 0206 C1F3C751 		ubfx	r1, r1, #23, #8
 1741 020a 61F30F26 		bfi	r6, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1742              		.loc 3 463 5 discriminator 2 view .LVU563
 1743 020e E9B2     		uxtb	r1, r5
 1744 0210 C0B2     		uxtb	r0, r0
 1745              	.LVL188:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1746              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU564
 1747 0212 00FB03F3 		mul	r3, r0, r3
 1748 0216 01FB0737 		mla	r7, r1, r7, r3
 1749              	.LVL189:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1750              		.loc 3 463 5 discriminator 2 view .LVU565
 1751 021a 07EB0723 		add	r3, r7, r7, lsl #8
 1752 021e 07EBC317 		add	r7, r7, r3, lsl #7
 1753 0222 C7F3C757 		ubfx	r7, r7, #23, #8
 1754 0226 67F30706 		bfi	r6, r7, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1755              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU566
 1756 022a 46F07F46 		orr	r6, r6, #-16777216
 1757              	.LVL190:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1758              		.loc 3 471 5 discriminator 2 view .LVU567
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1759              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU568
 1760              	.LBE118:
 1761              	.LBE117:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1762              		.loc 1 299 21 discriminator 2 view .LVU569
 1763 022e 2660     		str	r6, [r4]
 1764 0230 BDE7     		b	.L106
 1765              	.L147:
 1766 0232 6046     		mov	r0, ip
 1767 0234 069F     		ldr	r7, [sp, #24]
 1768 0236 0996     		str	r6, [sp, #36]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 72


 1769 0238 089E     		ldr	r6, [sp, #32]
 1770              	.LVL191:
 299:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 1771              		.loc 1 299 21 discriminator 2 view .LVU570
 1772 023a 06E0     		b	.L120
 1773              	.LVL192:
 1774              	.L150:
 1775              	.LBB119:
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 1776              		.loc 1 318 25 is_stmt 1 view .LVU571
 318:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[1] = color;
 1777              		.loc 1 318 37 is_stmt 0 view .LVU572
 1778 023c 2560     		str	r5, [r4]
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 1779              		.loc 1 319 25 is_stmt 1 view .LVU573
 319:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[2] = color;
 1780              		.loc 1 319 37 is_stmt 0 view .LVU574
 1781 023e 6560     		str	r5, [r4, #4]
 320:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
 1782              		.loc 1 320 25 is_stmt 1 view .LVU575
 320:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[3] = color;
 1783              		.loc 1 320 37 is_stmt 0 view .LVU576
 1784 0240 A560     		str	r5, [r4, #8]
 321:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1785              		.loc 1 321 25 is_stmt 1 view .LVU577
 321:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 1786              		.loc 1 321 37 is_stmt 0 view .LVU578
 1787 0242 E560     		str	r5, [r4, #12]
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 1788              		.loc 1 323 25 is_stmt 1 view .LVU579
 323:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         mask += 4;
 1789              		.loc 1 323 34 is_stmt 0 view .LVU580
 1790 0244 1034     		adds	r4, r4, #16
 1791              	.LVL193:
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1792              		.loc 1 324 25 is_stmt 1 view .LVU581
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1793              		.loc 1 324 30 is_stmt 0 view .LVU582
 1794 0246 0432     		adds	r2, r2, #4
 1795              	.LVL194:
 1796              	.L110:
 324:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1797              		.loc 1 324 30 view .LVU583
 1798              	.LBE119:
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1799              		.loc 1 302 36 is_stmt 1 view .LVU584
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1800              		.loc 1 302 38 is_stmt 0 view .LVU585
 1801 0248 0430     		adds	r0, r0, #4
 1802              	.LVL195:
 1803              	.L120:
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1804              		.loc 1 302 23 is_stmt 1 discriminator 1 view .LVU586
 302:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     uint32_t mask32 = *((uint32_t *)mask);
 1805              		.loc 1 302 17 is_stmt 0 discriminator 1 view .LVU587
 1806 024a B842     		cmp	r0, r7
 1807 024c 00F30381 		bgt	.L149
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 73


 1808              	.LBB128:
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1809              		.loc 1 303 21 is_stmt 1 view .LVU588
 303:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask32 == 0xFFFFFFFF) {
 1810              		.loc 1 303 30 is_stmt 0 view .LVU589
 1811 0250 1368     		ldr	r3, [r2]
 1812              	.LVL196:
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 1813              		.loc 1 304 21 is_stmt 1 view .LVU590
 304:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 16
 1814              		.loc 1 304 23 is_stmt 0 view .LVU591
 1815 0252 B3F1FF3F 		cmp	r3, #-1
 1816 0256 F1D0     		beq	.L150
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1817              		.loc 1 326 26 is_stmt 1 view .LVU592
 326:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1818              		.loc 1 326 28 is_stmt 0 view .LVU593
 1819 0258 002B     		cmp	r3, #0
 1820 025a 00F0F480 		beq	.L111
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1821              		.loc 1 327 25 is_stmt 1 view .LVU594
 1822 025e 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
 1823 0262 BCF1FF0F 		cmp	ip, #255
 1824 0266 00F0E680 		beq	.L151
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1825              		.loc 1 327 25 discriminator 2 view .LVU595
 1826 026a 2368     		ldr	r3, [r4]
 1827              	.LVL197:
 1828              	.LBB120:
 1829              	.LBI120:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1830              		.loc 3 438 48 discriminator 2 view .LVU596
 1831              	.LBB121:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1832              		.loc 3 440 5 discriminator 2 view .LVU597
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1833              		.loc 3 459 5 discriminator 2 view .LVU598
 1834 026c C5F30741 		ubfx	r1, r5, #16, #8
 1835              	.LVL198:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1836              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU599
 1837 0270 C3F3074B 		ubfx	fp, r3, #16, #8
 1838 0274 CCF1FF09 		rsb	r9, ip, #255
 1839 0278 09FB0BFB 		mul	fp, r9, fp
 1840 027c 0CFB01B1 		mla	r1, ip, r1, fp
 1841 0280 01EB012B 		add	fp, r1, r1, lsl #8
 1842 0284 01EBCB11 		add	r1, r1, fp, lsl #7
 1843 0288 C1F3C751 		ubfx	r1, r1, #23, #8
 1844 028c 61F31748 		bfi	r8, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1845              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU600
 1846 0290 C5F30721 		ubfx	r1, r5, #8, #8
 1847 0294 C3F3072B 		ubfx	fp, r3, #8, #8
 1848 0298 0BFB09FB 		mul	fp, fp, r9
 1849 029c 01FB0CB1 		mla	r1, r1, ip, fp
 1850 02a0 01EB012B 		add	fp, r1, r1, lsl #8
 1851 02a4 01EBCB11 		add	r1, r1, fp, lsl #7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 74


 1852 02a8 C1F3C751 		ubfx	r1, r1, #23, #8
 1853 02ac 61F30F28 		bfi	r8, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1854              		.loc 3 463 5 discriminator 2 view .LVU601
 1855 02b0 E9B2     		uxtb	r1, r5
 1856 02b2 DBB2     		uxtb	r3, r3
 1857              	.LVL199:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1858              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU602
 1859 02b4 03FB09F3 		mul	r3, r3, r9
 1860 02b8 01FB0C3C 		mla	ip, r1, ip, r3
 1861              	.LVL200:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1862              		.loc 3 463 5 discriminator 2 view .LVU603
 1863 02bc 0CEB0C23 		add	r3, ip, ip, lsl #8
 1864 02c0 0CEBC31C 		add	ip, ip, r3, lsl #7
 1865 02c4 CCF3C75C 		ubfx	ip, ip, #23, #8
 1866 02c8 6CF30708 		bfi	r8, ip, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1867              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU604
 1868 02cc 48F07F48 		orr	r8, r8, #-16777216
 1869              	.LVL201:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1870              		.loc 3 471 5 discriminator 2 view .LVU605
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1871              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU606
 1872              	.LBE121:
 1873              	.LBE120:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1874              		.loc 1 327 25 discriminator 2 view .LVU607
 1875 02d0 C4F80080 		str	r8, [r4]
 1876              	.LVL202:
 1877              	.L113:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1878              		.loc 1 327 25 is_stmt 1 discriminator 4 view .LVU608
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1879              		.loc 1 327 25 discriminator 4 view .LVU609
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1880              		.loc 1 328 25 discriminator 4 view .LVU610
 1881 02d4 92F801C0 		ldrb	ip, [r2, #1]	@ zero_extendqisi2
 1882 02d8 BCF1FF0F 		cmp	ip, #255
 1883 02dc 00F0AD80 		beq	.L152
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1884              		.loc 1 328 25 discriminator 2 view .LVU611
 1885 02e0 6368     		ldr	r3, [r4, #4]
 1886              	.LVL203:
 1887              	.LBB122:
 1888              	.LBI122:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1889              		.loc 3 438 48 discriminator 2 view .LVU612
 1890              	.LBB123:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1891              		.loc 3 440 5 discriminator 2 view .LVU613
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1892              		.loc 3 459 5 discriminator 2 view .LVU614
 1893 02e2 C5F30741 		ubfx	r1, r5, #16, #8
 1894              	.LVL204:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 75


 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1895              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU615
 1896 02e6 C3F3074B 		ubfx	fp, r3, #16, #8
 1897 02ea CCF1FF09 		rsb	r9, ip, #255
 1898 02ee 09FB0BFB 		mul	fp, r9, fp
 1899 02f2 0CFB01B1 		mla	r1, ip, r1, fp
 1900 02f6 01EB012B 		add	fp, r1, r1, lsl #8
 1901 02fa 01EBCB11 		add	r1, r1, fp, lsl #7
 1902 02fe C1F3C751 		ubfx	r1, r1, #23, #8
 1903 0302 61F3174E 		bfi	lr, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1904              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU616
 1905 0306 C5F30721 		ubfx	r1, r5, #8, #8
 1906 030a C3F3072B 		ubfx	fp, r3, #8, #8
 1907 030e 0BFB09FB 		mul	fp, fp, r9
 1908 0312 01FB0CB1 		mla	r1, r1, ip, fp
 1909 0316 01EB012B 		add	fp, r1, r1, lsl #8
 1910 031a 01EBCB11 		add	r1, r1, fp, lsl #7
 1911 031e C1F3C751 		ubfx	r1, r1, #23, #8
 1912 0322 61F30F2E 		bfi	lr, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1913              		.loc 3 463 5 discriminator 2 view .LVU617
 1914 0326 E9B2     		uxtb	r1, r5
 1915 0328 DBB2     		uxtb	r3, r3
 1916              	.LVL205:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1917              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU618
 1918 032a 03FB09F3 		mul	r3, r3, r9
 1919 032e 01FB0C3C 		mla	ip, r1, ip, r3
 1920              	.LVL206:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1921              		.loc 3 463 5 discriminator 2 view .LVU619
 1922 0332 0CEB0C23 		add	r3, ip, ip, lsl #8
 1923 0336 0CEBC31C 		add	ip, ip, r3, lsl #7
 1924 033a CCF3C75C 		ubfx	ip, ip, #23, #8
 1925 033e 6CF3070E 		bfi	lr, ip, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1926              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU620
 1927 0342 4EF07F4E 		orr	lr, lr, #-16777216
 1928              	.LVL207:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1929              		.loc 3 471 5 discriminator 2 view .LVU621
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1930              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU622
 1931              	.LBE123:
 1932              	.LBE122:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1933              		.loc 1 328 25 discriminator 2 view .LVU623
 1934 0346 C4F804E0 		str	lr, [r4, #4]
 1935              	.L115:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1936              		.loc 1 328 25 is_stmt 1 discriminator 4 view .LVU624
 1937              	.LVL208:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1938              		.loc 1 328 25 discriminator 4 view .LVU625
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1939              		.loc 1 329 25 discriminator 4 view .LVU626
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 76


 1940 034a 92F802C0 		ldrb	ip, [r2, #2]	@ zero_extendqisi2
 1941 034e BCF1FF0F 		cmp	ip, #255
 1942 0352 74D0     		beq	.L153
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1943              		.loc 1 329 25 discriminator 2 view .LVU627
 1944 0354 A368     		ldr	r3, [r4, #8]
 1945              	.LVL209:
 1946              	.LBB124:
 1947              	.LBI124:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1948              		.loc 3 438 48 discriminator 2 view .LVU628
 1949              	.LBB125:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1950              		.loc 3 440 5 discriminator 2 view .LVU629
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1951              		.loc 3 459 5 discriminator 2 view .LVU630
 1952 0356 C5F30741 		ubfx	r1, r5, #16, #8
 1953              	.LVL210:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1954              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU631
 1955 035a C3F3074B 		ubfx	fp, r3, #16, #8
 1956 035e CCF1FF09 		rsb	r9, ip, #255
 1957 0362 09FB0BFB 		mul	fp, r9, fp
 1958 0366 0CFB01B1 		mla	r1, ip, r1, fp
 1959 036a 01EB012B 		add	fp, r1, r1, lsl #8
 1960 036e 01EBCB11 		add	r1, r1, fp, lsl #7
 1961 0372 C1F3C751 		ubfx	r1, r1, #23, #8
 1962 0376 61F3174A 		bfi	r10, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1963              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU632
 1964 037a C5F30721 		ubfx	r1, r5, #8, #8
 1965 037e C3F3072B 		ubfx	fp, r3, #8, #8
 1966 0382 0BFB09FB 		mul	fp, fp, r9
 1967 0386 01FB0CB1 		mla	r1, r1, ip, fp
 1968 038a 01EB012B 		add	fp, r1, r1, lsl #8
 1969 038e 01EBCB11 		add	r1, r1, fp, lsl #7
 1970 0392 C1F3C751 		ubfx	r1, r1, #23, #8
 1971 0396 61F30F2A 		bfi	r10, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1972              		.loc 3 463 5 discriminator 2 view .LVU633
 1973 039a E9B2     		uxtb	r1, r5
 1974 039c DBB2     		uxtb	r3, r3
 1975              	.LVL211:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1976              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU634
 1977 039e 03FB09F3 		mul	r3, r3, r9
 1978 03a2 01FB0C3C 		mla	ip, r1, ip, r3
 1979              	.LVL212:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1980              		.loc 3 463 5 discriminator 2 view .LVU635
 1981 03a6 0CEB0C23 		add	r3, ip, ip, lsl #8
 1982 03aa 0CEBC31C 		add	ip, ip, r3, lsl #7
 1983 03ae CCF3C75C 		ubfx	ip, ip, #23, #8
 1984 03b2 6CF3070A 		bfi	r10, ip, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1985              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU636
 1986 03b6 4AF07F4A 		orr	r10, r10, #-16777216
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 77


 1987              	.LVL213:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1988              		.loc 3 471 5 discriminator 2 view .LVU637
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 1989              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU638
 1990              	.LBE125:
 1991              	.LBE124:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1992              		.loc 1 329 25 discriminator 2 view .LVU639
 1993 03ba C4F808A0 		str	r10, [r4, #8]
 1994              	.L117:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1995              		.loc 1 329 25 is_stmt 1 discriminator 4 view .LVU640
 1996              	.LVL214:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 1997              		.loc 1 329 25 discriminator 4 view .LVU641
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 1998              		.loc 1 330 25 discriminator 4 view .LVU642
 1999 03be 92F803C0 		ldrb	ip, [r2, #3]	@ zero_extendqisi2
 2000 03c2 BCF1FF0F 		cmp	ip, #255
 2001 03c6 3CD0     		beq	.L154
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2002              		.loc 1 330 25 discriminator 2 view .LVU643
 2003 03c8 E368     		ldr	r3, [r4, #12]
 2004              	.LVL215:
 2005              	.LBB126:
 2006              	.LBI126:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2007              		.loc 3 438 48 discriminator 2 view .LVU644
 2008              	.LBB127:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2009              		.loc 3 440 5 discriminator 2 view .LVU645
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2010              		.loc 3 459 5 discriminator 2 view .LVU646
 2011 03ca C5F30741 		ubfx	r1, r5, #16, #8
 2012              	.LVL216:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2013              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU647
 2014 03ce C3F3074B 		ubfx	fp, r3, #16, #8
 2015 03d2 CCF1FF09 		rsb	r9, ip, #255
 2016 03d6 09FB0BFB 		mul	fp, r9, fp
 2017 03da 0CFB01B1 		mla	r1, ip, r1, fp
 2018 03de 01EB012B 		add	fp, r1, r1, lsl #8
 2019 03e2 01EBCB11 		add	r1, r1, fp, lsl #7
 2020 03e6 C1F3C751 		ubfx	r1, r1, #23, #8
 2021 03ea 61F31746 		bfi	r6, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2022              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU648
 2023 03ee C5F30721 		ubfx	r1, r5, #8, #8
 2024 03f2 C3F3072B 		ubfx	fp, r3, #8, #8
 2025 03f6 0BFB09FB 		mul	fp, fp, r9
 2026 03fa 01FB0CB1 		mla	r1, r1, ip, fp
 2027 03fe 01EB012B 		add	fp, r1, r1, lsl #8
 2028 0402 01EBCB11 		add	r1, r1, fp, lsl #7
 2029 0406 C1F3C751 		ubfx	r1, r1, #23, #8
 2030 040a 61F30F26 		bfi	r6, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 78


 2031              		.loc 3 463 5 discriminator 2 view .LVU649
 2032 040e E9B2     		uxtb	r1, r5
 2033 0410 DBB2     		uxtb	r3, r3
 2034              	.LVL217:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2035              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU650
 2036 0412 03FB09F3 		mul	r3, r3, r9
 2037 0416 01FB0C3C 		mla	ip, r1, ip, r3
 2038              	.LVL218:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2039              		.loc 3 463 5 discriminator 2 view .LVU651
 2040 041a 0CEB0C23 		add	r3, ip, ip, lsl #8
 2041 041e 0CEBC31C 		add	ip, ip, r3, lsl #7
 2042 0422 CCF3C75C 		ubfx	ip, ip, #23, #8
 2043 0426 6CF30706 		bfi	r6, ip, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2044              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU652
 2045 042a 46F07F46 		orr	r6, r6, #-16777216
 2046              	.LVL219:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2047              		.loc 3 471 5 discriminator 2 view .LVU653
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2048              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU654
 2049              	.LBE127:
 2050              	.LBE126:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2051              		.loc 1 330 25 discriminator 2 view .LVU655
 2052 042e E660     		str	r6, [r4, #12]
 2053              	.L119:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2054              		.loc 1 330 25 is_stmt 1 discriminator 4 view .LVU656
 2055 0430 0432     		adds	r2, r2, #4
 2056              	.LVL220:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2057              		.loc 1 330 25 discriminator 4 view .LVU657
 2058 0432 1034     		adds	r4, r4, #16
 2059              	.LVL221:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2060              		.loc 1 330 25 is_stmt 0 discriminator 4 view .LVU658
 2061 0434 08E7     		b	.L110
 2062              	.LVL222:
 2063              	.L151:
 327:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2064              		.loc 1 327 25 is_stmt 1 discriminator 1 view .LVU659
 2065 0436 2560     		str	r5, [r4]
 2066 0438 4CE7     		b	.L113
 2067              	.LVL223:
 2068              	.L152:
 328:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2069              		.loc 1 328 25 discriminator 1 view .LVU660
 2070 043a 6560     		str	r5, [r4, #4]
 2071 043c 85E7     		b	.L115
 2072              	.LVL224:
 2073              	.L153:
 329:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         FILL_NORMAL_MASK_PX(color)
 2074              		.loc 1 329 25 discriminator 1 view .LVU661
 2075 043e A560     		str	r5, [r4, #8]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 79


 2076 0440 BDE7     		b	.L117
 2077              	.LVL225:
 2078              	.L154:
 330:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2079              		.loc 1 330 25 discriminator 1 view .LVU662
 2080 0442 E560     		str	r5, [r4, #12]
 2081 0444 F4E7     		b	.L119
 2082              	.LVL226:
 2083              	.L111:
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2084              		.loc 1 333 25 view .LVU663
 333:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf += 4;
 2085              		.loc 1 333 30 is_stmt 0 view .LVU664
 2086 0446 0432     		adds	r2, r2, #4
 2087              	.LVL227:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2088              		.loc 1 334 25 is_stmt 1 view .LVU665
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2089              		.loc 1 334 34 is_stmt 0 view .LVU666
 2090 0448 1034     		adds	r4, r4, #16
 2091              	.LVL228:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2092              		.loc 1 334 34 view .LVU667
 2093 044a FDE6     		b	.L110
 2094              	.LVL229:
 2095              	.L142:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2096              		.loc 1 334 34 view .LVU668
 2097 044c 6046     		mov	r0, ip
 2098 044e 069F     		ldr	r7, [sp, #24]
 2099 0450 0996     		str	r6, [sp, #36]
 2100 0452 089E     		ldr	r6, [sp, #32]
 2101              	.LVL230:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2102              		.loc 1 334 34 view .LVU669
 2103 0454 F9E6     		b	.L120
 2104              	.LVL231:
 2105              	.L149:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2106              		.loc 1 334 34 view .LVU670
 2107              	.LBE128:
 2108 0456 0697     		str	r7, [sp, #24]
 2109 0458 0896     		str	r6, [sp, #32]
 2110 045a 099E     		ldr	r6, [sp, #36]
 2111              	.LVL232:
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2112              		.loc 1 334 34 view .LVU671
 2113 045c 8146     		mov	r9, r0
 2114 045e DDF81CC0 		ldr	ip, [sp, #28]
 334:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2115              		.loc 1 334 34 view .LVU672
 2116 0462 04E0     		b	.L122
 2117              	.LVL233:
 2118              	.L156:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2119              		.loc 1 339 21 is_stmt 1 discriminator 1 view .LVU673
 2120 0464 2560     		str	r5, [r4]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 80


 2121              	.L124:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2122              		.loc 1 339 21 discriminator 4 view .LVU674
 2123 0466 0132     		adds	r2, r2, #1
 2124              	.LVL234:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2125              		.loc 1 339 21 discriminator 4 view .LVU675
 2126 0468 0434     		adds	r4, r4, #4
 2127              	.LVL235:
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2128              		.loc 1 338 31 discriminator 4 view .LVU676
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2129              		.loc 1 338 32 is_stmt 0 discriminator 4 view .LVU677
 2130 046a 09F10109 		add	r9, r9, #1
 2131              	.LVL236:
 2132              	.L122:
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2133              		.loc 1 338 23 is_stmt 1 discriminator 1 view .LVU678
 338:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2134              		.loc 1 338 17 is_stmt 0 discriminator 1 view .LVU679
 2135 046e 019B     		ldr	r3, [sp, #4]
 2136 0470 9945     		cmp	r9, r3
 2137 0472 38DA     		bge	.L155
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2138              		.loc 1 339 21 is_stmt 1 view .LVU680
 2139 0474 1778     		ldrb	r7, [r2]	@ zero_extendqisi2
 2140 0476 FF2F     		cmp	r7, #255
 2141 0478 F4D0     		beq	.L156
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2142              		.loc 1 339 21 discriminator 2 view .LVU681
 2143 047a 2068     		ldr	r0, [r4]
 2144              	.LVL237:
 2145              	.LBB129:
 2146              	.LBI129:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2147              		.loc 3 438 48 discriminator 2 view .LVU682
 2148              	.LBB130:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2149              		.loc 3 440 5 discriminator 2 view .LVU683
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2150              		.loc 3 459 5 discriminator 2 view .LVU684
 2151 047c C5F30741 		ubfx	r1, r5, #16, #8
 2152              	.LVL238:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2153              		.loc 3 459 5 is_stmt 0 discriminator 2 view .LVU685
 2154 0480 C0F3074B 		ubfx	fp, r0, #16, #8
 2155 0484 C7F1FF03 		rsb	r3, r7, #255
 2156 0488 03FB0BFB 		mul	fp, r3, fp
 2157 048c 07FB01B1 		mla	r1, r7, r1, fp
 2158 0490 01EB012B 		add	fp, r1, r1, lsl #8
 2159 0494 01EBCB11 		add	r1, r1, fp, lsl #7
 2160 0498 C1F3C751 		ubfx	r1, r1, #23, #8
 2161 049c 61F3174C 		bfi	ip, r1, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2162              		.loc 3 461 5 is_stmt 1 discriminator 2 view .LVU686
 2163 04a0 C5F30721 		ubfx	r1, r5, #8, #8
 2164 04a4 C0F3072B 		ubfx	fp, r0, #8, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 81


 2165 04a8 0BFB03FB 		mul	fp, fp, r3
 2166 04ac 01FB07B1 		mla	r1, r1, r7, fp
 2167 04b0 01EB012B 		add	fp, r1, r1, lsl #8
 2168 04b4 01EBCB11 		add	r1, r1, fp, lsl #7
 2169 04b8 C1F3C751 		ubfx	r1, r1, #23, #8
 2170 04bc 61F30F2C 		bfi	ip, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2171              		.loc 3 463 5 discriminator 2 view .LVU687
 2172 04c0 E9B2     		uxtb	r1, r5
 2173 04c2 C0B2     		uxtb	r0, r0
 2174              	.LVL239:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2175              		.loc 3 463 5 is_stmt 0 discriminator 2 view .LVU688
 2176 04c4 00FB03F3 		mul	r3, r0, r3
 2177 04c8 01FB0737 		mla	r7, r1, r7, r3
 2178              	.LVL240:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2179              		.loc 3 463 5 discriminator 2 view .LVU689
 2180 04cc 07EB0723 		add	r3, r7, r7, lsl #8
 2181 04d0 07EBC317 		add	r7, r7, r3, lsl #7
 2182 04d4 C7F3C757 		ubfx	r7, r7, #23, #8
 2183 04d8 67F3070C 		bfi	ip, r7, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2184              		.loc 3 465 5 is_stmt 1 discriminator 2 view .LVU690
 2185 04dc 4CF07F4C 		orr	ip, ip, #-16777216
 2186              	.LVL241:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2187              		.loc 3 471 5 discriminator 2 view .LVU691
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2188              		.loc 3 471 5 is_stmt 0 discriminator 2 view .LVU692
 2189              	.LBE130:
 2190              	.LBE129:
 339:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2191              		.loc 1 339 21 discriminator 2 view .LVU693
 2192 04e0 C4F800C0 		str	ip, [r4]
 2193 04e4 BFE7     		b	.L124
 2194              	.L155:
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2195              		.loc 1 341 42 discriminator 2 view .LVU694
 2196 04e6 CDF81CC0 		str	ip, [sp, #28]
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2197              		.loc 1 341 17 is_stmt 1 discriminator 2 view .LVU695
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2198              		.loc 1 341 42 is_stmt 0 discriminator 2 view .LVU696
 2199 04ea 049B     		ldr	r3, [sp, #16]
 2200 04ec 0199     		ldr	r1, [sp, #4]
 2201 04ee 5B1A     		subs	r3, r3, r1
 341:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2202              		.loc 1 341 26 discriminator 2 view .LVU697
 2203 04f0 04EB8304 		add	r4, r4, r3, lsl #2
 2204              	.LVL242:
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2205              		.loc 1 342 17 is_stmt 1 discriminator 2 view .LVU698
 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2206              		.loc 1 342 38 is_stmt 0 discriminator 2 view .LVU699
 2207 04f4 059B     		ldr	r3, [sp, #20]
 2208 04f6 5B1A     		subs	r3, r3, r1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 82


 342:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2209              		.loc 1 342 22 discriminator 2 view .LVU700
 2210 04f8 1A44     		add	r2, r2, r3
 2211              	.LVL243:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2212              		.loc 1 297 31 is_stmt 1 discriminator 2 view .LVU701
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2213              		.loc 1 297 32 is_stmt 0 discriminator 2 view .LVU702
 2214 04fa 029B     		ldr	r3, [sp, #8]
 2215 04fc 0133     		adds	r3, r3, #1
 2216 04fe 0293     		str	r3, [sp, #8]
 2217              	.LVL244:
 2218              	.L104:
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2219              		.loc 1 297 24 is_stmt 1 discriminator 1 view .LVU703
 297:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w && ((lv_uintptr_t)(mask) & 0x3); x++) {
 2220              		.loc 1 297 13 is_stmt 0 discriminator 1 view .LVU704
 2221 0500 029B     		ldr	r3, [sp, #8]
 2222 0502 0399     		ldr	r1, [sp, #12]
 2223 0504 8B42     		cmp	r3, r1
 2224 0506 73DA     		bge	.L93
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2225              		.loc 1 298 23 view .LVU705
 2226 0508 0020     		movs	r0, #0
 2227 050a 8446     		mov	ip, r0
 2228              	.LVL245:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2229              		.loc 1 298 23 view .LVU706
 2230 050c DDF80490 		ldr	r9, [sp, #4]
 2231 0510 51E6     		b	.L126
 2232              	.LVL246:
 2233              	.L103:
 298:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     FILL_NORMAL_MASK_PX(color)
 2234              		.loc 1 298 23 view .LVU707
 2235              	.LBE144:
 2236              	.LBB145:
 348:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_color_t last_res_color;
 2237              		.loc 1 348 13 is_stmt 1 view .LVU708
 349:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t last_mask = LV_OPA_TRANSP;
 2238              		.loc 1 349 13 view .LVU709
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2239              		.loc 1 350 13 view .LVU710
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2240              		.loc 1 351 13 view .LVU711
 351:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_res_color.full = dest_buf[0].full;
 2241              		.loc 1 351 47 is_stmt 0 view .LVU712
 2242 0512 D4F800A0 		ldr	r10, [r4]
 2243              	.LVL247:
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 2244              		.loc 1 352 13 is_stmt 1 view .LVU713
 352:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             lv_opa_t opa_tmp = LV_OPA_TRANSP;
 2245              		.loc 1 352 33 is_stmt 0 view .LVU714
 2246 0516 5146     		mov	r1, r10
 2247              	.LVL248:
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2248              		.loc 1 353 13 is_stmt 1 view .LVU715
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 83


 2249              		.loc 1 355 13 view .LVU716
 353:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2250              		.loc 1 353 22 is_stmt 0 view .LVU717
 2251 0518 0026     		movs	r6, #0
 350:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             last_dest_color.full = dest_buf[0].full;
 2252              		.loc 1 350 22 view .LVU718
 2253 051a B446     		mov	ip, r6
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2254              		.loc 1 355 19 view .LVU719
 2255 051c B646     		mov	lr, r6
 2256 051e A046     		mov	r8, r4
 2257 0520 5446     		mov	r4, r10
 2258              	.LVL249:
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2259              		.loc 1 355 13 view .LVU720
 2260 0522 5FE0     		b	.L127
 2261              	.LVL250:
 2262              	.L139:
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2263              		.loc 1 358 56 view .LVU721
 2264 0524 5E46     		mov	r6, fp
 2265              	.LVL251:
 2266              	.L129:
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2267              		.loc 1 360 25 is_stmt 1 view .LVU722
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2268              		.loc 1 360 27 is_stmt 0 view .LVU723
 2269 0526 6245     		cmp	r2, ip
 2270 0528 4CD0     		beq	.L157
 2271              	.L130:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2272              		.loc 1 361 29 is_stmt 1 view .LVU724
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2273              		.loc 1 361 31 is_stmt 0 view .LVU725
 2274 052a FF2E     		cmp	r6, #255
 2275 052c 4FD0     		beq	.L158
 362:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_mask = *mask;
 2276              		.loc 1 362 34 is_stmt 1 view .LVU726
 2277 052e 58F82310 		ldr	r1, [r8, r3, lsl #2]
 2278              	.LVL252:
 2279              	.LBB146:
 2280              	.LBI146:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2281              		.loc 3 438 48 view .LVU727
 2282              	.LBB147:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2283              		.loc 3 440 5 view .LVU728
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2284              		.loc 3 459 5 view .LVU729
 2285 0532 C5F30744 		ubfx	r4, r5, #16, #8
 2286              	.LVL253:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2287              		.loc 3 459 5 is_stmt 0 view .LVU730
 2288 0536 C1F3074C 		ubfx	ip, r1, #16, #8
 2289              	.LVL254:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2290              		.loc 3 459 5 view .LVU731
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 84


 2291 053a C6F1FF00 		rsb	r0, r6, #255
 2292 053e 00FB0CFC 		mul	ip, r0, ip
 2293 0542 06FB04C4 		mla	r4, r6, r4, ip
 2294 0546 04EB042C 		add	ip, r4, r4, lsl #8
 2295 054a 04EBCC14 		add	r4, r4, ip, lsl #7
 2296 054e C4F3C754 		ubfx	r4, r4, #23, #8
 2297 0552 64F31749 		bfi	r9, r4, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2298              		.loc 3 461 5 is_stmt 1 view .LVU732
 2299 0556 C5F30724 		ubfx	r4, r5, #8, #8
 2300 055a C1F3072C 		ubfx	ip, r1, #8, #8
 2301 055e 0CFB00FC 		mul	ip, ip, r0
 2302 0562 04FB06C4 		mla	r4, r4, r6, ip
 2303 0566 04EB042C 		add	ip, r4, r4, lsl #8
 2304 056a 04EBCC14 		add	r4, r4, ip, lsl #7
 2305 056e C4F3C754 		ubfx	r4, r4, #23, #8
 2306 0572 64F30F29 		bfi	r9, r4, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2307              		.loc 3 463 5 view .LVU733
 2308 0576 ECB2     		uxtb	r4, r5
 2309 0578 C9B2     		uxtb	r1, r1
 2310              	.LVL255:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2311              		.loc 3 463 5 is_stmt 0 view .LVU734
 2312 057a 01FB00F0 		mul	r0, r1, r0
 2313 057e 04FB0601 		mla	r1, r4, r6, r0
 2314 0582 01EB0120 		add	r0, r1, r1, lsl #8
 2315 0586 01EBC011 		add	r1, r1, r0, lsl #7
 2316 058a C1F3C751 		ubfx	r1, r1, #23, #8
 2317 058e 61F30709 		bfi	r9, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2318              		.loc 3 465 5 is_stmt 1 view .LVU735
 2319 0592 49F07F49 		orr	r9, r9, #-16777216
 2320              	.LVL256:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2321              		.loc 3 471 5 view .LVU736
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2322              		.loc 3 471 5 is_stmt 0 view .LVU737
 2323 0596 4946     		mov	r1, r9
 2324              	.LVL257:
 2325              	.L133:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2326              		.loc 3 471 5 view .LVU738
 2327              	.LBE147:
 2328              	.LBE146:
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 2329              		.loc 1 363 29 is_stmt 1 view .LVU739
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2330              		.loc 1 364 29 view .LVU740
 364:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 2331              		.loc 1 364 63 is_stmt 0 view .LVU741
 2332 0598 58F82340 		ldr	r4, [r8, r3, lsl #2]
 2333              	.LVL258:
 363:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             last_dest_color.full = dest_buf[x].full;
 2334              		.loc 1 363 39 view .LVU742
 2335 059c 9446     		mov	ip, r2
 2336              	.LVL259:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 85


 2337              	.L131:
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2338              		.loc 1 366 25 is_stmt 1 view .LVU743
 366:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 2339              		.loc 1 366 37 is_stmt 0 view .LVU744
 2340 059e 48F82310 		str	r1, [r8, r3, lsl #2]
 2341              	.L128:
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2342              		.loc 1 368 21 is_stmt 1 discriminator 2 view .LVU745
 368:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 2343              		.loc 1 368 25 is_stmt 0 discriminator 2 view .LVU746
 2344 05a2 0AF1010A 		add	r10, r10, #1
 2345              	.LVL260:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2346              		.loc 1 356 35 is_stmt 1 discriminator 2 view .LVU747
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2347              		.loc 1 356 36 is_stmt 0 discriminator 2 view .LVU748
 2348 05a6 0133     		adds	r3, r3, #1
 2349              	.LVL261:
 2350              	.L135:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2351              		.loc 1 356 28 is_stmt 1 discriminator 1 view .LVU749
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2352              		.loc 1 356 17 is_stmt 0 discriminator 1 view .LVU750
 2353 05a8 BB42     		cmp	r3, r7
 2354 05aa 12DA     		bge	.L159
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2355              		.loc 1 357 21 is_stmt 1 view .LVU751
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2356              		.loc 1 357 24 is_stmt 0 view .LVU752
 2357 05ac 9AF80020 		ldrb	r2, [r10]	@ zero_extendqisi2
 357:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask) opa_tmp = *mask == LV_OPA_COVER ? opa :
 2358              		.loc 1 357 23 view .LVU753
 2359 05b0 002A     		cmp	r2, #0
 2360 05b2 F6D0     		beq	.L128
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2361              		.loc 1 358 25 is_stmt 1 view .LVU754
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2362              		.loc 1 358 27 is_stmt 0 view .LVU755
 2363 05b4 6245     		cmp	r2, ip
 2364 05b6 B6D0     		beq	.L129
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2365              		.loc 1 358 48 is_stmt 1 discriminator 1 view .LVU756
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2366              		.loc 1 358 56 is_stmt 0 discriminator 1 view .LVU757
 2367 05b8 FF2A     		cmp	r2, #255
 2368 05ba B3D0     		beq	.L139
 359:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if(*mask != last_mask || last_dest_color.full != dest_buf[x].full) {
 2369              		.loc 1 359 62 discriminator 2 view .LVU758
 2370 05bc 02FB0BF6 		mul	r6, r2, fp
 2371              	.LVL262:
 358:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                                                              (uint32_t)((uint32_t)(*mask) * opa) >>
 2372              		.loc 1 358 56 discriminator 2 view .LVU759
 2373 05c0 360A     		lsrs	r6, r6, #8
 2374 05c2 B0E7     		b	.L129
 2375              	.LVL263:
 2376              	.L157:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 86


 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2377              		.loc 1 360 85 discriminator 1 view .LVU760
 2378 05c4 58F82300 		ldr	r0, [r8, r3, lsl #2]
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2379              		.loc 1 360 47 discriminator 1 view .LVU761
 2380 05c8 8442     		cmp	r4, r0
 2381 05ca AED1     		bne	.L130
 360:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             if(opa_tmp == LV_OPA_COVER) last_res_color = color;
 2382              		.loc 1 360 47 discriminator 1 view .LVU762
 2383 05cc E7E7     		b	.L131
 2384              	.L158:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2385              		.loc 1 361 57 is_stmt 1 discriminator 1 view .LVU763
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2386              		.loc 1 361 72 is_stmt 0 discriminator 1 view .LVU764
 2387 05ce 2946     		mov	r1, r5
 2388              	.LVL264:
 361:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             else last_res_color = lv_color_mix(color, dest_buf[x], opa_tmp);
 2389              		.loc 1 361 72 discriminator 1 view .LVU765
 2390 05d0 E2E7     		b	.L133
 2391              	.LVL265:
 2392              	.L159:
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2393              		.loc 1 370 26 discriminator 2 view .LVU766
 2394 05d2 5246     		mov	r2, r10
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2395              		.loc 1 370 17 is_stmt 1 discriminator 2 view .LVU767
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2396              		.loc 1 370 26 is_stmt 0 discriminator 2 view .LVU768
 2397 05d4 049B     		ldr	r3, [sp, #16]
 2398              	.LVL266:
 370:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += (mask_stride - w);
 2399              		.loc 1 370 26 discriminator 2 view .LVU769
 2400 05d6 08EB8308 		add	r8, r8, r3, lsl #2
 2401              	.LVL267:
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2402              		.loc 1 371 17 is_stmt 1 discriminator 2 view .LVU770
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2403              		.loc 1 371 38 is_stmt 0 discriminator 2 view .LVU771
 2404 05da 059B     		ldr	r3, [sp, #20]
 2405 05dc DB1B     		subs	r3, r3, r7
 371:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 2406              		.loc 1 371 22 discriminator 2 view .LVU772
 2407 05de 1A44     		add	r2, r2, r3
 2408              	.LVL268:
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2409              		.loc 1 355 31 is_stmt 1 discriminator 2 view .LVU773
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2410              		.loc 1 355 32 is_stmt 0 discriminator 2 view .LVU774
 2411 05e0 0EF1010E 		add	lr, lr, #1
 2412              	.LVL269:
 2413              	.L127:
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2414              		.loc 1 355 24 is_stmt 1 discriminator 1 view .LVU775
 355:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2415              		.loc 1 355 13 is_stmt 0 discriminator 1 view .LVU776
 2416 05e4 039B     		ldr	r3, [sp, #12]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 87


 2417 05e6 9E45     		cmp	lr, r3
 2418 05e8 02DA     		bge	.L93
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2419              		.loc 1 356 23 view .LVU777
 2420 05ea 0023     		movs	r3, #0
 2421 05ec 9246     		mov	r10, r2
 2422              	.LVL270:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2423              		.loc 1 356 23 view .LVU778
 2424 05ee DBE7     		b	.L135
 2425              	.LVL271:
 2426              	.L93:
 356:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask) {
 2427              		.loc 1 356 23 view .LVU779
 2428              	.LBE145:
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2429              		.loc 1 375 1 view .LVU780
 2430 05f0 0DB0     		add	sp, sp, #52
 2431              		.cfi_def_cfa_offset 36
 2432              		@ sp needed
 2433 05f2 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 375:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2434              		.loc 1 375 1 view .LVU781
 2435              		.cfi_endproc
 2436              	.LFE164:
 2438              		.section	.text.color_blend_true_color_additive,"ax",%progbits
 2439              		.align	1
 2440              		.syntax unified
 2441              		.thumb
 2442              		.thumb_func
 2444              	color_blend_true_color_additive:
 2445              	.LVL272:
 2446              	.LFB169:
 949:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 950:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_additive(lv_color_t fg, lv_color_t bg, lv_opa_t opa
 951:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 2447              		.loc 1 951 1 is_stmt 1 view -0
 2448              		.cfi_startproc
 2449              		@ args = 0, pretend = 0, frame = 0
 2450              		@ frame_needed = 0, uses_anonymous_args = 0
 952:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 2451              		.loc 1 953 5 view .LVU783
 2452              		.loc 1 953 7 is_stmt 0 view .LVU784
 2453 0000 022A     		cmp	r2, #2
 2454 0002 53D9     		bls	.L168
 954:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 955:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     uint32_t tmp;
 2455              		.loc 1 955 5 is_stmt 1 view .LVU785
 956:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 1
 957:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.full + fg.full;
 958:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.full = LV_MIN(tmp, 1);
 959:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 960:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red + fg.ch.red;
 2456              		.loc 1 960 5 view .LVU786
 2457              		.loc 1 960 16 is_stmt 0 view .LVU787
 2458 0004 C1F30743 		ubfx	r3, r1, #16, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 88


 2459              		.loc 1 960 28 view .LVU788
 2460 0008 C0F3074C 		ubfx	ip, r0, #16, #8
 2461              		.loc 1 960 21 view .LVU789
 2462 000c 6344     		add	r3, r3, ip
 2463              	.LVL273:
 961:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 962:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 7);
 963:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 964:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 31);
 965:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 966:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MIN(tmp, 255);
 2464              		.loc 1 966 5 is_stmt 1 view .LVU790
 2465              		.loc 1 966 17 is_stmt 0 view .LVU791
 2466 000e FF2B     		cmp	r3, #255
 2467 0010 28BF     		it	cs
 2468 0012 FF23     		movcs	r3, #255
 2469              	.LVL274:
 2470              		.loc 1 966 15 view .LVU792
 2471 0014 63F31740 		bfi	r0, r3, #16, #8
 967:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 968:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 969:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 970:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 971:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 7);
 972:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 973:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
 974:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 975:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 63);
 976:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
 977:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
 978:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MIN(tmp, 63);
 979:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
 980:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
 981:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 982:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 983:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 984:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green + fg.ch.green;
 2472              		.loc 1 984 5 is_stmt 1 view .LVU793
 2473              		.loc 1 984 16 is_stmt 0 view .LVU794
 2474 0018 C1F30723 		ubfx	r3, r1, #8, #8
 2475              		.loc 1 984 30 view .LVU795
 2476 001c C0F3072C 		ubfx	ip, r0, #8, #8
 2477              	.LVL275:
 2478              		.loc 1 984 23 view .LVU796
 2479 0020 6344     		add	r3, r3, ip
 2480              	.LVL276:
 985:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MIN(tmp, 255);
 2481              		.loc 1 985 5 is_stmt 1 view .LVU797
 2482              		.loc 1 985 19 is_stmt 0 view .LVU798
 2483 0022 FF2B     		cmp	r3, #255
 2484 0024 28BF     		it	cs
 2485 0026 FF23     		movcs	r3, #255
 2486              	.LVL277:
 2487              		.loc 1 985 17 view .LVU799
 2488 0028 63F30F20 		bfi	r0, r3, #8, #8
 986:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 987:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 89


 988:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue + fg.ch.blue;
 2489              		.loc 1 988 5 is_stmt 1 view .LVU800
 2490              		.loc 1 988 29 is_stmt 0 view .LVU801
 2491 002c C3B2     		uxtb	r3, r0
 2492              		.loc 1 988 22 view .LVU802
 2493 002e 53FA81F3 		uxtab	r3, r3, r1
 2494              	.LVL278:
 989:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 8
 990:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 4);
 991:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
 992:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 31);
 993:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 32
 994:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MIN(tmp, 255);
 2495              		.loc 1 994 5 is_stmt 1 view .LVU803
 2496              		.loc 1 994 18 is_stmt 0 view .LVU804
 2497 0032 FF2B     		cmp	r3, #255
 2498 0034 28BF     		it	cs
 2499 0036 FF23     		movcs	r3, #255
 2500              	.LVL279:
 2501              		.loc 1 994 16 view .LVU805
 2502 0038 63F30700 		bfi	r0, r3, #0, #8
 2503              	.LVL280:
 995:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 996:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
 997:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 998:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 2504              		.loc 1 998 5 is_stmt 1 view .LVU806
 2505              		.loc 1 998 7 is_stmt 0 view .LVU807
 2506 003c FF2A     		cmp	r2, #255
 2507 003e 37D0     		beq	.L165
 951:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2508              		.loc 1 951 1 view .LVU808
 2509 0040 10B5     		push	{r4, lr}
 2510              		.cfi_def_cfa_offset 8
 2511              		.cfi_offset 4, -8
 2512              		.cfi_offset 14, -4
 999:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1000:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 2513              		.loc 1 1000 5 is_stmt 1 view .LVU809
 2514              	.LVL281:
 2515              	.LBB150:
 2516              	.LBI150:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2517              		.loc 3 438 48 view .LVU810
 2518              	.LBB151:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2519              		.loc 3 440 5 view .LVU811
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2520              		.loc 3 459 5 view .LVU812
 2521 0042 C0F30744 		ubfx	r4, r0, #16, #8
 2522 0046 C1F3074C 		ubfx	ip, r1, #16, #8
 2523 004a C2F1FF03 		rsb	r3, r2, #255
 2524 004e 03FB0CFC 		mul	ip, r3, ip
 2525 0052 02FB04CC 		mla	ip, r2, r4, ip
 2526 0056 0CEB0C24 		add	r4, ip, ip, lsl #8
 2527 005a 0CEBC41C 		add	ip, ip, r4, lsl #7
 2528 005e CCF3C75C 		ubfx	ip, ip, #23, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 90


 2529 0062 4FF0000E 		mov	lr, #0
 2530              	.LVL282:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2531              		.loc 3 459 5 is_stmt 0 view .LVU813
 2532 0066 6CF3174E 		bfi	lr, ip, #16, #8
 2533              	.LVL283:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2534              		.loc 3 461 5 is_stmt 1 view .LVU814
 2535 006a C0F30724 		ubfx	r4, r0, #8, #8
 2536 006e C1F3072C 		ubfx	ip, r1, #8, #8
 2537 0072 0CFB03FC 		mul	ip, ip, r3
 2538 0076 04FB02CC 		mla	ip, r4, r2, ip
 2539 007a 0CEB0C24 		add	r4, ip, ip, lsl #8
 2540 007e 0CEBC41C 		add	ip, ip, r4, lsl #7
 2541 0082 CCF3C75C 		ubfx	ip, ip, #23, #8
 2542 0086 6CF30F2E 		bfi	lr, ip, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2543              		.loc 3 463 5 view .LVU815
 2544 008a C0B2     		uxtb	r0, r0
 2545              	.LVL284:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2546              		.loc 3 463 5 is_stmt 0 view .LVU816
 2547 008c C9B2     		uxtb	r1, r1
 2548              	.LVL285:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2549              		.loc 3 463 5 view .LVU817
 2550 008e 03FB01F1 		mul	r1, r3, r1
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2551              		.loc 3 463 5 view .LVU818
 2552 0092 00FB0210 		mla	r0, r0, r2, r1
 2553 0096 00EB0021 		add	r1, r0, r0, lsl #8
 2554 009a 00EBC110 		add	r0, r0, r1, lsl #7
 2555 009e C0F3C750 		ubfx	r0, r0, #23, #8
 2556 00a2 60F3070E 		bfi	lr, r0, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2557              		.loc 3 465 5 is_stmt 1 view .LVU819
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2558              		.loc 3 471 5 view .LVU820
 2559 00a6 4EF07F40 		orr	r0, lr, #-16777216
 2560              	.LVL286:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2561              		.loc 3 471 5 is_stmt 0 view .LVU821
 2562              	.LBE151:
 2563              	.LBE150:
1001:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2564              		.loc 1 1001 1 view .LVU822
 2565 00aa 10BD     		pop	{r4, pc}
 2566              	.LVL287:
 2567              	.L168:
 2568              		.cfi_def_cfa_offset 0
 2569              		.cfi_restore 4
 2570              		.cfi_restore 14
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2571              		.loc 1 953 27 is_stmt 1 discriminator 1 view .LVU823
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2572              		.loc 1 953 34 is_stmt 0 discriminator 1 view .LVU824
 2573 00ac 0846     		mov	r0, r1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 91


 2574              	.LVL288:
 953:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2575              		.loc 1 953 34 discriminator 1 view .LVU825
 2576 00ae 7047     		bx	lr
 2577              	.LVL289:
 2578              	.L165:
 2579              	.LVL290:
 2580              		.loc 1 1001 1 view .LVU826
 2581 00b0 7047     		bx	lr
 2582              		.cfi_endproc
 2583              	.LFE169:
 2585              		.section	.text.color_blend_true_color_subtractive,"ax",%progbits
 2586              		.align	1
 2587              		.syntax unified
 2588              		.thumb
 2589              		.thumb_func
 2591              	color_blend_true_color_subtractive:
 2592              	.LVL291:
 2593              	.LFB170:
1002:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1003:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_subtractive(lv_color_t fg, lv_color_t bg, lv_opa_t 
1004:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 2594              		.loc 1 1004 1 is_stmt 1 view -0
 2595              		.cfi_startproc
 2596              		@ args = 0, pretend = 0, frame = 0
 2597              		@ frame_needed = 0, uses_anonymous_args = 0
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 2598              		.loc 1 1005 5 view .LVU828
 2599              		.loc 1 1005 7 is_stmt 0 view .LVU829
 2600 0000 022A     		cmp	r2, #2
 2601 0002 54D9     		bls	.L177
1006:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1007:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t tmp;
 2602              		.loc 1 1007 5 is_stmt 1 view .LVU830
1008:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.red - fg.ch.red;
 2603              		.loc 1 1008 5 view .LVU831
 2604              		.loc 1 1008 16 is_stmt 0 view .LVU832
 2605 0004 C1F30743 		ubfx	r3, r1, #16, #8
 2606              		.loc 1 1008 28 view .LVU833
 2607 0008 C0F3074C 		ubfx	ip, r0, #16, #8
 2608              		.loc 1 1008 9 view .LVU834
 2609 000c A3EB0C03 		sub	r3, r3, ip
 2610              	.LVL292:
1009:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = LV_MAX(tmp, 0);
 2611              		.loc 1 1009 5 is_stmt 1 view .LVU835
 2612              		.loc 1 1009 17 is_stmt 0 view .LVU836
 2613 0010 23EAE373 		bic	r3, r3, r3, asr #31
 2614              	.LVL293:
 2615              		.loc 1 1009 15 view .LVU837
 2616 0014 63F31740 		bfi	r0, r3, #16, #8
1010:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1011:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_16_SWAP == 0
1012:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.green - fg.ch.green;
 2617              		.loc 1 1012 5 is_stmt 1 view .LVU838
 2618              		.loc 1 1012 16 is_stmt 0 view .LVU839
 2619 0018 C1F30723 		ubfx	r3, r1, #8, #8
 2620              		.loc 1 1012 30 view .LVU840
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 92


 2621 001c C0F3072C 		ubfx	ip, r0, #8, #8
 2622              	.LVL294:
 2623              		.loc 1 1012 9 view .LVU841
 2624 0020 A3EB0C03 		sub	r3, r3, ip
 2625              	.LVL295:
1013:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = LV_MAX(tmp, 0);
 2626              		.loc 1 1013 5 is_stmt 1 view .LVU842
 2627              		.loc 1 1013 19 is_stmt 0 view .LVU843
 2628 0024 23EAE373 		bic	r3, r3, r3, asr #31
 2629              	.LVL296:
 2630              		.loc 1 1013 17 view .LVU844
 2631 0028 63F30F20 		bfi	r0, r3, #8, #8
1014:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #else
1015:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = (bg.ch.green_h << 3) + bg.ch.green_l + (fg.ch.green_h << 3) + fg.ch.green_l;
1016:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = LV_MAX(tmp, 0);
1017:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_h = tmp >> 3;
1018:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green_l = tmp & 0x7;
1019:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1020:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1021:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     tmp = bg.ch.blue - fg.ch.blue;
 2632              		.loc 1 1021 5 is_stmt 1 view .LVU845
 2633              		.loc 1 1021 16 is_stmt 0 view .LVU846
 2634 002c CBB2     		uxtb	r3, r1
 2635              		.loc 1 1021 29 view .LVU847
 2636 002e 5FFA80FC 		uxtb	ip, r0
 2637              	.LVL297:
 2638              		.loc 1 1021 9 view .LVU848
 2639 0032 A3EB0C03 		sub	r3, r3, ip
 2640              	.LVL298:
1022:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = LV_MAX(tmp, 0);
 2641              		.loc 1 1022 5 is_stmt 1 view .LVU849
 2642              		.loc 1 1022 18 is_stmt 0 view .LVU850
 2643 0036 23EAE373 		bic	r3, r3, r3, asr #31
 2644              	.LVL299:
 2645              		.loc 1 1022 16 view .LVU851
 2646 003a 63F30700 		bfi	r0, r3, #0, #8
1023:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1024:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 2647              		.loc 1 1024 5 is_stmt 1 view .LVU852
 2648              		.loc 1 1024 7 is_stmt 0 view .LVU853
 2649 003e FF2A     		cmp	r2, #255
 2650 0040 37D0     		beq	.L174
1004:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 2651              		.loc 1 1004 1 view .LVU854
 2652 0042 10B5     		push	{r4, lr}
 2653              		.cfi_def_cfa_offset 8
 2654              		.cfi_offset 4, -8
 2655              		.cfi_offset 14, -4
1025:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1026:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 2656              		.loc 1 1026 5 is_stmt 1 view .LVU855
 2657              	.LVL300:
 2658              	.LBB154:
 2659              	.LBI154:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2660              		.loc 3 438 48 view .LVU856
 2661              	.LBB155:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 93


 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2662              		.loc 3 440 5 view .LVU857
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2663              		.loc 3 459 5 view .LVU858
 2664 0044 C0F30744 		ubfx	r4, r0, #16, #8
 2665 0048 C1F3074C 		ubfx	ip, r1, #16, #8
 2666              	.LVL301:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2667              		.loc 3 459 5 is_stmt 0 view .LVU859
 2668 004c C2F1FF03 		rsb	r3, r2, #255
 2669 0050 03FB0CFC 		mul	ip, r3, ip
 2670 0054 02FB04CC 		mla	ip, r2, r4, ip
 2671 0058 0CEB0C24 		add	r4, ip, ip, lsl #8
 2672 005c 0CEBC41C 		add	ip, ip, r4, lsl #7
 2673 0060 CCF3C75C 		ubfx	ip, ip, #23, #8
 2674 0064 4FF0000E 		mov	lr, #0
 2675              	.LVL302:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2676              		.loc 3 459 5 view .LVU860
 2677 0068 6CF3174E 		bfi	lr, ip, #16, #8
 2678              	.LVL303:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2679              		.loc 3 461 5 is_stmt 1 view .LVU861
 2680 006c C0F30724 		ubfx	r4, r0, #8, #8
 2681 0070 C1F3072C 		ubfx	ip, r1, #8, #8
 2682 0074 0CFB03FC 		mul	ip, ip, r3
 2683 0078 04FB02CC 		mla	ip, r4, r2, ip
 2684 007c 0CEB0C24 		add	r4, ip, ip, lsl #8
 2685 0080 0CEBC41C 		add	ip, ip, r4, lsl #7
 2686 0084 CCF3C75C 		ubfx	ip, ip, #23, #8
 2687 0088 6CF30F2E 		bfi	lr, ip, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2688              		.loc 3 463 5 view .LVU862
 2689 008c C0B2     		uxtb	r0, r0
 2690              	.LVL304:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2691              		.loc 3 463 5 is_stmt 0 view .LVU863
 2692 008e C9B2     		uxtb	r1, r1
 2693              	.LVL305:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2694              		.loc 3 463 5 view .LVU864
 2695 0090 03FB01F1 		mul	r1, r3, r1
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2696              		.loc 3 463 5 view .LVU865
 2697 0094 00FB0210 		mla	r0, r0, r2, r1
 2698 0098 00EB0021 		add	r1, r0, r0, lsl #8
 2699 009c 00EBC110 		add	r0, r0, r1, lsl #7
 2700 00a0 C0F3C750 		ubfx	r0, r0, #23, #8
 2701 00a4 60F3070E 		bfi	lr, r0, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2702              		.loc 3 465 5 is_stmt 1 view .LVU866
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2703              		.loc 3 471 5 view .LVU867
 2704 00a8 4EF07F40 		orr	r0, lr, #-16777216
 2705              	.LVL306:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2706              		.loc 3 471 5 is_stmt 0 view .LVU868
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 94


 2707              	.LBE155:
 2708              	.LBE154:
1027:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2709              		.loc 1 1027 1 view .LVU869
 2710 00ac 10BD     		pop	{r4, pc}
 2711              	.LVL307:
 2712              	.L177:
 2713              		.cfi_def_cfa_offset 0
 2714              		.cfi_restore 4
 2715              		.cfi_restore 14
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2716              		.loc 1 1005 27 is_stmt 1 discriminator 1 view .LVU870
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2717              		.loc 1 1005 34 is_stmt 0 discriminator 1 view .LVU871
 2718 00ae 0846     		mov	r0, r1
 2719              	.LVL308:
1005:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2720              		.loc 1 1005 34 discriminator 1 view .LVU872
 2721 00b0 7047     		bx	lr
 2722              	.LVL309:
 2723              	.L174:
 2724              	.LVL310:
 2725              		.loc 1 1027 1 view .LVU873
 2726 00b2 7047     		bx	lr
 2727              		.cfi_endproc
 2728              	.LFE170:
 2730              		.section	.text.color_blend_true_color_multiply,"ax",%progbits
 2731              		.align	1
 2732              		.syntax unified
 2733              		.thumb
 2734              		.thumb_func
 2736              	color_blend_true_color_multiply:
 2737              	.LVL311:
 2738              	.LFB171:
1028:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1029:lvgl/src/draw/sw/lv_draw_sw_blend.c **** static inline lv_color_t color_blend_true_color_multiply(lv_color_t fg, lv_color_t bg, lv_opa_t opa
1030:lvgl/src/draw/sw/lv_draw_sw_blend.c **** {
 2739              		.loc 1 1030 1 is_stmt 1 view -0
 2740              		.cfi_startproc
 2741              		@ args = 0, pretend = 0, frame = 0
 2742              		@ frame_needed = 0, uses_anonymous_args = 0
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 2743              		.loc 1 1031 5 view .LVU875
 2744              		.loc 1 1031 7 is_stmt 0 view .LVU876
 2745 0000 022A     		cmp	r2, #2
 2746 0002 51D9     		bls	.L186
1032:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1033:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if LV_COLOR_DEPTH == 32
1034:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 8;
 2747              		.loc 1 1034 5 is_stmt 1 view .LVU877
 2748              		.loc 1 1034 23 is_stmt 0 view .LVU878
 2749 0004 C0F30743 		ubfx	r3, r0, #16, #8
 2750              		.loc 1 1034 35 view .LVU879
 2751 0008 C1F3074C 		ubfx	ip, r1, #16, #8
 2752              		.loc 1 1034 28 view .LVU880
 2753 000c 0CFB03F3 		mul	r3, ip, r3
 2754              		.loc 1 1034 41 view .LVU881
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 95


 2755 0010 1B12     		asrs	r3, r3, #8
 2756              		.loc 1 1034 15 view .LVU882
 2757 0012 63F31740 		bfi	r0, r3, #16, #8
1035:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 8;
 2758              		.loc 1 1035 5 is_stmt 1 view .LVU883
 2759              		.loc 1 1035 25 is_stmt 0 view .LVU884
 2760 0016 C0F30723 		ubfx	r3, r0, #8, #8
 2761              		.loc 1 1035 39 view .LVU885
 2762 001a C1F3072C 		ubfx	ip, r1, #8, #8
 2763              		.loc 1 1035 32 view .LVU886
 2764 001e 0CFB03F3 		mul	r3, ip, r3
 2765              		.loc 1 1035 47 view .LVU887
 2766 0022 1B12     		asrs	r3, r3, #8
 2767              		.loc 1 1035 17 view .LVU888
 2768 0024 63F30F20 		bfi	r0, r3, #8, #8
1036:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 8;
 2769              		.loc 1 1036 5 is_stmt 1 view .LVU889
 2770              		.loc 1 1036 24 is_stmt 0 view .LVU890
 2771 0028 C3B2     		uxtb	r3, r0
 2772              		.loc 1 1036 37 view .LVU891
 2773 002a 5FFA81FC 		uxtb	ip, r1
 2774              		.loc 1 1036 30 view .LVU892
 2775 002e 0CFB03F3 		mul	r3, ip, r3
 2776              		.loc 1 1036 44 view .LVU893
 2777 0032 1B12     		asrs	r3, r3, #8
 2778              		.loc 1 1036 16 view .LVU894
 2779 0034 63F30700 		bfi	r0, r3, #0, #8
1037:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 16
1038:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 5;
1039:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 5;
1040:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     LV_COLOR_SET_G(fg, (LV_COLOR_GET_G(fg) * LV_COLOR_GET_G(bg)) >> 6);
1041:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #elif LV_COLOR_DEPTH == 8
1042:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.red = (fg.ch.red * bg.ch.red) >> 3;
1043:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.green = (fg.ch.green * bg.ch.green) >> 3;
1044:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     fg.ch.blue = (fg.ch.blue * bg.ch.blue) >> 2;
1045:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #endif
1046:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1047:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa == LV_OPA_COVER) return fg;
 2780              		.loc 1 1047 5 is_stmt 1 view .LVU895
 2781              		.loc 1 1047 7 is_stmt 0 view .LVU896
 2782 0038 FF2A     		cmp	r2, #255
 2783 003a 37D0     		beq	.L183
1030:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(opa <= LV_OPA_MIN) return bg;
 2784              		.loc 1 1030 1 view .LVU897
 2785 003c 10B5     		push	{r4, lr}
 2786              		.cfi_def_cfa_offset 8
 2787              		.cfi_offset 4, -8
 2788              		.cfi_offset 14, -4
1048:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
1049:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     return lv_color_mix(fg, bg, opa);
 2789              		.loc 1 1049 5 is_stmt 1 view .LVU898
 2790              	.LVL312:
 2791              	.LBB158:
 2792              	.LBI158:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 2793              		.loc 3 438 48 view .LVU899
 2794              	.LBB159:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 96


 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 2795              		.loc 3 440 5 view .LVU900
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2796              		.loc 3 459 5 view .LVU901
 2797 003e C0F30744 		ubfx	r4, r0, #16, #8
 2798 0042 C1F3074C 		ubfx	ip, r1, #16, #8
 2799 0046 C2F1FF03 		rsb	r3, r2, #255
 2800 004a 03FB0CFC 		mul	ip, r3, ip
 2801 004e 02FB04CC 		mla	ip, r2, r4, ip
 2802 0052 0CEB0C24 		add	r4, ip, ip, lsl #8
 2803 0056 0CEBC41C 		add	ip, ip, r4, lsl #7
 2804 005a CCF3C75C 		ubfx	ip, ip, #23, #8
 2805 005e 4FF0000E 		mov	lr, #0
 2806              	.LVL313:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2807              		.loc 3 459 5 is_stmt 0 view .LVU902
 2808 0062 6CF3174E 		bfi	lr, ip, #16, #8
 2809              	.LVL314:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2810              		.loc 3 461 5 is_stmt 1 view .LVU903
 2811 0066 C0F30724 		ubfx	r4, r0, #8, #8
 2812 006a C1F3072C 		ubfx	ip, r1, #8, #8
 2813 006e 0CFB03FC 		mul	ip, ip, r3
 2814 0072 04FB02CC 		mla	ip, r4, r2, ip
 2815 0076 0CEB0C24 		add	r4, ip, ip, lsl #8
 2816 007a 0CEBC41C 		add	ip, ip, r4, lsl #7
 2817 007e CCF3C75C 		ubfx	ip, ip, #23, #8
 2818 0082 6CF30F2E 		bfi	lr, ip, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2819              		.loc 3 463 5 view .LVU904
 2820 0086 C0B2     		uxtb	r0, r0
 2821              	.LVL315:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2822              		.loc 3 463 5 is_stmt 0 view .LVU905
 2823 0088 C9B2     		uxtb	r1, r1
 2824              	.LVL316:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 2825              		.loc 3 463 5 view .LVU906
 2826 008a 03FB01F1 		mul	r1, r3, r1
 2827 008e 00FB0210 		mla	r0, r0, r2, r1
 2828 0092 00EB0021 		add	r1, r0, r0, lsl #8
 2829 0096 00EBC110 		add	r0, r0, r1, lsl #7
 2830 009a C0F3C750 		ubfx	r0, r0, #23, #8
 2831 009e 60F3070E 		bfi	lr, r0, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 2832              		.loc 3 465 5 is_stmt 1 view .LVU907
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2833              		.loc 3 471 5 view .LVU908
 2834 00a2 4EF07F40 		orr	r0, lr, #-16777216
 2835              	.LVL317:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 2836              		.loc 3 471 5 is_stmt 0 view .LVU909
 2837              	.LBE159:
 2838              	.LBE158:
1050:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 2839              		.loc 1 1050 1 view .LVU910
 2840 00a6 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 97


 2841              	.LVL318:
 2842              	.L186:
 2843              		.cfi_def_cfa_offset 0
 2844              		.cfi_restore 4
 2845              		.cfi_restore 14
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2846              		.loc 1 1031 27 is_stmt 1 discriminator 1 view .LVU911
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2847              		.loc 1 1031 34 is_stmt 0 discriminator 1 view .LVU912
 2848 00a8 0846     		mov	r0, r1
 2849              	.LVL319:
1031:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2850              		.loc 1 1031 34 discriminator 1 view .LVU913
 2851 00aa 7047     		bx	lr
 2852              	.LVL320:
 2853              	.L183:
 2854              	.LVL321:
 2855              		.loc 1 1050 1 view .LVU914
 2856 00ac 7047     		bx	lr
 2857              		.cfi_endproc
 2858              	.LFE171:
 2860              		.section	.text.map_normal,"ax",%progbits
 2861              		.align	1
 2862              		.syntax unified
 2863              		.thumb
 2864              		.thumb_func
 2866              	map_normal:
 2867              	.LVL322:
 2868              	.LFB167:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2869              		.loc 1 646 1 is_stmt 1 view -0
 2870              		.cfi_startproc
 2871              		@ args = 16, pretend = 0, frame = 48
 2872              		@ frame_needed = 0, uses_anonymous_args = 0
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2873              		.loc 1 646 1 is_stmt 0 view .LVU916
 2874 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 2875              		.cfi_def_cfa_offset 36
 2876              		.cfi_offset 4, -36
 2877              		.cfi_offset 5, -32
 2878              		.cfi_offset 6, -28
 2879              		.cfi_offset 7, -24
 2880              		.cfi_offset 8, -20
 2881              		.cfi_offset 9, -16
 2882              		.cfi_offset 10, -12
 2883              		.cfi_offset 11, -8
 2884              		.cfi_offset 14, -4
 2885 0004 8DB0     		sub	sp, sp, #52
 2886              		.cfi_def_cfa_offset 88
 2887 0006 0446     		mov	r4, r0
 2888 0008 0292     		str	r2, [sp, #8]
 2889 000a 1D46     		mov	r5, r3
 2890 000c BDF95830 		ldrsh	r3, [sp, #88]
 2891              	.LVL323:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2892              		.loc 1 646 1 view .LVU917
 2893 0010 0493     		str	r3, [sp, #16]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 98


 2894 0012 9DF85C00 		ldrb	r0, [sp, #92]	@ zero_extendqisi2
 2895              	.LVL324:
 646:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t w = lv_area_get_width(dest_area);
 2896              		.loc 1 646 1 view .LVU918
 2897 0016 BDF96430 		ldrsh	r3, [sp, #100]
 2898 001a 0593     		str	r3, [sp, #20]
 647:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t h = lv_area_get_height(dest_area);
 2899              		.loc 1 647 5 is_stmt 1 view .LVU919
 2900              	.LVL325:
 2901              	.LBB183:
 2902              	.LBI183:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2903              		.loc 2 123 26 view .LVU920
 2904              	.LBB184:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2905              		.loc 2 125 5 view .LVU921
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2906              		.loc 2 125 31 is_stmt 0 view .LVU922
 2907 001c 8B88     		ldrh	r3, [r1, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2908              		.loc 2 125 44 view .LVU923
 2909 001e 0A88     		ldrh	r2, [r1]
 2910              	.LVL326:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2911              		.loc 2 125 36 view .LVU924
 2912 0020 9E1A     		subs	r6, r3, r2
 2913 0022 B6B2     		uxth	r6, r6
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2914              		.loc 2 125 49 view .LVU925
 2915 0024 0136     		adds	r6, r6, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2916              		.loc 2 125 12 view .LVU926
 2917 0026 36B2     		sxth	r6, r6
 2918              	.LVL327:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 2919              		.loc 2 125 12 view .LVU927
 2920              	.LBE184:
 2921              	.LBE183:
 648:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2922              		.loc 1 648 5 is_stmt 1 view .LVU928
 2923              	.LBB185:
 2924              	.LBI185:
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 2925              		.loc 2 133 26 view .LVU929
 2926              	.LBB186:
 2927              		.loc 2 135 5 view .LVU930
 2928              		.loc 2 135 31 is_stmt 0 view .LVU931
 2929 0028 CB88     		ldrh	r3, [r1, #6]
 2930              		.loc 2 135 44 view .LVU932
 2931 002a 4A88     		ldrh	r2, [r1, #2]
 2932              		.loc 2 135 36 view .LVU933
 2933 002c 9B1A     		subs	r3, r3, r2
 2934 002e 9BB2     		uxth	r3, r3
 2935              		.loc 2 135 49 view .LVU934
 2936 0030 0133     		adds	r3, r3, #1
 2937              		.loc 2 135 12 view .LVU935
 2938 0032 1BB2     		sxth	r3, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 99


 2939 0034 0393     		str	r3, [sp, #12]
 2940              	.LVL328:
 2941              		.loc 2 135 12 view .LVU936
 2942              	.LBE186:
 2943              	.LBE185:
 650:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     int32_t y;
 2944              		.loc 1 650 5 is_stmt 1 view .LVU937
 651:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2945              		.loc 1 651 5 view .LVU938
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2946              		.loc 1 654 5 view .LVU939
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2947              		.loc 1 654 7 is_stmt 0 view .LVU940
 2948 0036 189B     		ldr	r3, [sp, #96]
 2949              	.LVL329:
 654:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(opa >= LV_OPA_MAX) {
 2950              		.loc 1 654 7 view .LVU941
 2951 0038 3BB1     		cbz	r3, .L229
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2952              		.loc 1 675 9 is_stmt 1 view .LVU942
 675:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t x_end4 = w - 4;
 2953              		.loc 1 675 11 is_stmt 0 view .LVU943
 2954 003a FD28     		cmp	r0, #253
 2955 003c 40F2D582 		bls	.L223
 2956              	.LBB187:
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2957              		.loc 1 676 13 is_stmt 1 view .LVU944
 676:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 2958              		.loc 1 676 21 is_stmt 0 view .LVU945
 2959 0040 331F     		subs	r3, r6, #4
 2960 0042 0093     		str	r3, [sp]
 2961              	.LVL330:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2962              		.loc 1 678 13 is_stmt 1 view .LVU946
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2963              		.loc 1 678 19 is_stmt 0 view .LVU947
 2964 0044 0023     		movs	r3, #0
 2965              	.LVL331:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2966              		.loc 1 678 19 view .LVU948
 2967 0046 0193     		str	r3, [sp, #4]
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2968              		.loc 1 678 13 view .LVU949
 2969 0048 71E2     		b	.L196
 2970              	.LVL332:
 2971              	.L229:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 2972              		.loc 1 678 13 view .LVU950
 2973              	.LBE187:
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2974              		.loc 1 655 9 is_stmt 1 view .LVU951
 655:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(y = 0; y < h; y++) {
 2975              		.loc 1 655 11 is_stmt 0 view .LVU952
 2976 004a FC28     		cmp	r0, #252
 2977 004c 09D8     		bhi	.L221
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2978              		.loc 1 663 19 view .LVU953
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 100


 2979 004e 4FF0000E 		mov	lr, #0
 2980 0052 DDF80C90 		ldr	r9, [sp, #12]
 2981              	.LVL333:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2982              		.loc 1 663 19 view .LVU954
 2983 0056 4746     		mov	r7, r8
 2984 0058 A046     		mov	r8, r4
 2985              	.LVL334:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 2986              		.loc 1 663 19 view .LVU955
 2987 005a DDF810A0 		ldr	r10, [sp, #16]
 2988 005e 8446     		mov	ip, r0
 2989 0060 1BE0     		b	.L190
 2990              	.L221:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2991              		.loc 1 656 19 view .LVU956
 2992 0062 0027     		movs	r7, #0
 2993 0064 DDF80C80 		ldr	r8, [sp, #12]
 2994 0068 DDF80890 		ldr	r9, [sp, #8]
 2995 006c DDF810A0 		ldr	r10, [sp, #16]
 2996              	.LVL335:
 2997              	.L189:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2998              		.loc 1 656 24 is_stmt 1 discriminator 1 view .LVU957
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 2999              		.loc 1 656 13 is_stmt 0 discriminator 1 view .LVU958
 3000 0070 4745     		cmp	r7, r8
 3001 0072 80F2C382 		bge	.L187
 657:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 dest_buf += dest_stride;
 3002              		.loc 1 657 17 is_stmt 1 discriminator 3 view .LVU959
 3003 0076 B200     		lsls	r2, r6, #2
 3004 0078 2946     		mov	r1, r5
 3005 007a 2046     		mov	r0, r4
 3006 007c FFF7FEFF 		bl	lv_memcpy
 3007              	.LVL336:
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3008              		.loc 1 658 17 discriminator 3 view .LVU960
 658:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3009              		.loc 1 658 26 is_stmt 0 discriminator 3 view .LVU961
 3010 0080 04EB8904 		add	r4, r4, r9, lsl #2
 3011              	.LVL337:
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3012              		.loc 1 659 17 is_stmt 1 discriminator 3 view .LVU962
 659:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3013              		.loc 1 659 25 is_stmt 0 discriminator 3 view .LVU963
 3014 0084 05EB8A05 		add	r5, r5, r10, lsl #2
 3015              	.LVL338:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 3016              		.loc 1 656 31 is_stmt 1 discriminator 3 view .LVU964
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 3017              		.loc 1 656 32 is_stmt 0 discriminator 3 view .LVU965
 3018 0088 0137     		adds	r7, r7, #1
 3019              	.LVL339:
 656:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 lv_memcpy(dest_buf, src_buf, w * sizeof(lv_color_t));
 3020              		.loc 1 656 32 discriminator 3 view .LVU966
 3021 008a F1E7     		b	.L189
 3022              	.LVL340:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 101


 3023              	.L230:
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3024              		.loc 1 667 17 is_stmt 1 discriminator 2 view .LVU967
 667:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3025              		.loc 1 667 26 is_stmt 0 discriminator 2 view .LVU968
 3026 008c 029B     		ldr	r3, [sp, #8]
 3027 008e 08EB8308 		add	r8, r8, r3, lsl #2
 3028              	.LVL341:
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3029              		.loc 1 668 17 is_stmt 1 discriminator 2 view .LVU969
 668:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3030              		.loc 1 668 25 is_stmt 0 discriminator 2 view .LVU970
 3031 0092 05EB8A05 		add	r5, r5, r10, lsl #2
 3032              	.LVL342:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3033              		.loc 1 663 31 is_stmt 1 discriminator 2 view .LVU971
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3034              		.loc 1 663 32 is_stmt 0 discriminator 2 view .LVU972
 3035 0096 0EF1010E 		add	lr, lr, #1
 3036              	.LVL343:
 3037              	.L190:
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3038              		.loc 1 663 24 is_stmt 1 discriminator 1 view .LVU973
 663:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3039              		.loc 1 663 13 is_stmt 0 discriminator 1 view .LVU974
 3040 009a CE45     		cmp	lr, r9
 3041 009c 80F2AE82 		bge	.L187
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3042              		.loc 1 664 23 view .LVU975
 3043 00a0 0021     		movs	r1, #0
 3044              	.L194:
 3045              	.LVL344:
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3046              		.loc 1 664 28 is_stmt 1 discriminator 1 view .LVU976
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3047              		.loc 1 664 17 is_stmt 0 discriminator 1 view .LVU977
 3048 00a2 B142     		cmp	r1, r6
 3049 00a4 F2DA     		bge	.L230
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3050              		.loc 1 665 21 is_stmt 1 discriminator 3 view .LVU978
 3051 00a6 55F82140 		ldr	r4, [r5, r1, lsl #2]
 3052              	.LVL345:
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3053              		.loc 1 665 21 is_stmt 0 discriminator 3 view .LVU979
 3054 00aa 58F82130 		ldr	r3, [r8, r1, lsl #2]
 3055              	.LVL346:
 3056              	.LBB202:
 3057              	.LBI202:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3058              		.loc 3 438 48 is_stmt 1 discriminator 3 view .LVU980
 3059              	.LBB203:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3060              		.loc 3 440 5 discriminator 3 view .LVU981
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3061              		.loc 3 459 5 discriminator 3 view .LVU982
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3062              		.loc 3 459 5 is_stmt 0 discriminator 3 view .LVU983
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 102


 3063 00ae C4F3074B 		ubfx	fp, r4, #16, #8
 3064              	.LVL347:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3065              		.loc 3 459 5 discriminator 3 view .LVU984
 3066 00b2 C3F30740 		ubfx	r0, r3, #16, #8
 3067 00b6 CCF1FF02 		rsb	r2, ip, #255
 3068 00ba 02FB00F0 		mul	r0, r2, r0
 3069 00be 0CFB0B00 		mla	r0, ip, fp, r0
 3070 00c2 00EB002B 		add	fp, r0, r0, lsl #8
 3071 00c6 00EBCB10 		add	r0, r0, fp, lsl #7
 3072 00ca C0F3C750 		ubfx	r0, r0, #23, #8
 3073 00ce 60F31747 		bfi	r7, r0, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3074              		.loc 3 461 5 is_stmt 1 discriminator 3 view .LVU985
 3075 00d2 C4F3072B 		ubfx	fp, r4, #8, #8
 3076 00d6 C3F30720 		ubfx	r0, r3, #8, #8
 3077 00da 02FB00F0 		mul	r0, r2, r0
 3078 00de 0BFB0C00 		mla	r0, fp, ip, r0
 3079 00e2 00EB002B 		add	fp, r0, r0, lsl #8
 3080 00e6 00EBCB10 		add	r0, r0, fp, lsl #7
 3081 00ea C0F3C750 		ubfx	r0, r0, #23, #8
 3082 00ee 60F30F27 		bfi	r7, r0, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3083              		.loc 3 463 5 discriminator 3 view .LVU986
 3084 00f2 E4B2     		uxtb	r4, r4
 3085              	.LVL348:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3086              		.loc 3 463 5 is_stmt 0 discriminator 3 view .LVU987
 3087 00f4 DBB2     		uxtb	r3, r3
 3088              	.LVL349:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3089              		.loc 3 463 5 discriminator 3 view .LVU988
 3090 00f6 02FB03F3 		mul	r3, r2, r3
 3091 00fa 04FB0C33 		mla	r3, r4, ip, r3
 3092 00fe 03EB0322 		add	r2, r3, r3, lsl #8
 3093 0102 03EBC213 		add	r3, r3, r2, lsl #7
 3094 0106 C3F3C753 		ubfx	r3, r3, #23, #8
 3095 010a 63F30707 		bfi	r7, r3, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3096              		.loc 3 465 5 is_stmt 1 discriminator 3 view .LVU989
 3097 010e 47F07F47 		orr	r7, r7, #-16777216
 3098              	.LVL350:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3099              		.loc 3 471 5 discriminator 3 view .LVU990
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3100              		.loc 3 471 5 is_stmt 0 discriminator 3 view .LVU991
 3101              	.LBE203:
 3102              	.LBE202:
 665:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3103              		.loc 1 665 35 discriminator 3 view .LVU992
 3104 0112 48F82170 		str	r7, [r8, r1, lsl #2]
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3105              		.loc 1 664 35 is_stmt 1 discriminator 3 view .LVU993
 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3106              		.loc 1 664 36 is_stmt 0 discriminator 3 view .LVU994
 3107 0116 0131     		adds	r1, r1, #1
 3108              	.LVL351:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 103


 664:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa);
 3109              		.loc 1 664 36 discriminator 3 view .LVU995
 3110 0118 C3E7     		b	.L194
 3111              	.LVL352:
 3112              	.L232:
 3113              	.LBB204:
 3114              	.LBB188:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3115              		.loc 1 686 21 is_stmt 1 discriminator 3 view .LVU996
 3116 011a 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3117 011e 44F82310 		str	r1, [r4, r3, lsl #2]
 3118              	.L197:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3119              		.loc 1 686 21 discriminator 6 view .LVU997
 3120 0122 0132     		adds	r2, r2, #1
 3121              	.LVL353:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3122              		.loc 1 685 71 discriminator 6 view .LVU998
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3123              		.loc 1 685 72 is_stmt 0 discriminator 6 view .LVU999
 3124 0124 0133     		adds	r3, r3, #1
 3125              	.LVL354:
 3126              	.L216:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3127              		.loc 1 685 28 is_stmt 1 discriminator 2 view .LVU1000
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3128              		.loc 1 685 17 is_stmt 0 discriminator 2 view .LVU1001
 3129 0126 B342     		cmp	r3, r6
 3130 0128 80F29481 		bge	.L227
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3131              		.loc 1 685 34 discriminator 3 view .LVU1002
 3132 012c 12F0030F 		tst	r2, #3
 3133 0130 3FD0     		beq	.L231
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3134              		.loc 1 686 21 is_stmt 1 view .LVU1003
 3135 0132 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3136 0134 0029     		cmp	r1, #0
 3137 0136 F4D0     		beq	.L197
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3138              		.loc 1 686 21 discriminator 1 view .LVU1004
 3139 0138 FF29     		cmp	r1, #255
 3140 013a EED0     		beq	.L232
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3141              		.loc 1 686 21 discriminator 4 view .LVU1005
 3142 013c 55F82380 		ldr	r8, [r5, r3, lsl #2]
 3143              	.LVL355:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3144              		.loc 1 686 21 is_stmt 0 discriminator 4 view .LVU1006
 3145 0140 54F82390 		ldr	r9, [r4, r3, lsl #2]
 3146              	.LVL356:
 3147              	.LBB189:
 3148              	.LBI189:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3149              		.loc 3 438 48 is_stmt 1 discriminator 4 view .LVU1007
 3150              	.LBB190:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3151              		.loc 3 440 5 discriminator 4 view .LVU1008
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 104


 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3152              		.loc 3 459 5 discriminator 4 view .LVU1009
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3153              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1010
 3154 0144 C8F3074A 		ubfx	r10, r8, #16, #8
 3155              	.LVL357:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3156              		.loc 3 459 5 discriminator 4 view .LVU1011
 3157 0148 C9F3074E 		ubfx	lr, r9, #16, #8
 3158              	.LVL358:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3159              		.loc 3 459 5 discriminator 4 view .LVU1012
 3160 014c C1F1FF00 		rsb	r0, r1, #255
 3161 0150 00FB0EFE 		mul	lr, r0, lr
 3162 0154 01FB0AEE 		mla	lr, r1, r10, lr
 3163 0158 0EEB0E2A 		add	r10, lr, lr, lsl #8
 3164 015c 0EEBCA1E 		add	lr, lr, r10, lsl #7
 3165 0160 CEF3C75E 		ubfx	lr, lr, #23, #8
 3166 0164 6EF31747 		bfi	r7, lr, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3167              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1013
 3168 0168 C8F3072A 		ubfx	r10, r8, #8, #8
 3169 016c C9F3072E 		ubfx	lr, r9, #8, #8
 3170 0170 0EFB00FE 		mul	lr, lr, r0
 3171 0174 0AFB01EE 		mla	lr, r10, r1, lr
 3172 0178 0EEB0E2A 		add	r10, lr, lr, lsl #8
 3173 017c 0EEBCA1E 		add	lr, lr, r10, lsl #7
 3174 0180 CEF3C75E 		ubfx	lr, lr, #23, #8
 3175 0184 6EF30F27 		bfi	r7, lr, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3176              		.loc 3 463 5 discriminator 4 view .LVU1014
 3177 0188 5FFA88F8 		uxtb	r8, r8
 3178              	.LVL359:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3179              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1015
 3180 018c 5FFA89F9 		uxtb	r9, r9
 3181              	.LVL360:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3182              		.loc 3 463 5 discriminator 4 view .LVU1016
 3183 0190 09FB00F0 		mul	r0, r9, r0
 3184 0194 08FB0101 		mla	r1, r8, r1, r0
 3185              	.LVL361:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3186              		.loc 3 463 5 discriminator 4 view .LVU1017
 3187 0198 01EB0120 		add	r0, r1, r1, lsl #8
 3188 019c 01EBC011 		add	r1, r1, r0, lsl #7
 3189 01a0 C1F3C751 		ubfx	r1, r1, #23, #8
 3190 01a4 61F30707 		bfi	r7, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3191              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1018
 3192 01a8 47F07F47 		orr	r7, r7, #-16777216
 3193              	.LVL362:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3194              		.loc 3 471 5 discriminator 4 view .LVU1019
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3195              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1020
 3196              	.LBE190:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 105


 3197              	.LBE189:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3198              		.loc 1 686 21 discriminator 4 view .LVU1021
 3199 01ac 44F82370 		str	r7, [r4, r3, lsl #2]
 3200 01b0 B7E7     		b	.L197
 3201              	.LVL363:
 3202              	.L231:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3203              		.loc 1 686 21 discriminator 4 view .LVU1022
 3204 01b2 0996     		str	r6, [sp, #36]
 3205 01b4 CDF828C0 		str	ip, [sp, #40]
 3206 01b8 DDF818C0 		ldr	ip, [sp, #24]
 3207              	.LVL364:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3208              		.loc 1 686 21 discriminator 4 view .LVU1023
 3209 01bc DDF81CE0 		ldr	lr, [sp, #28]
 3210              	.LVL365:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3211              		.loc 1 686 21 discriminator 4 view .LVU1024
 3212 01c0 DDF82080 		ldr	r8, [sp, #32]
 3213              	.LVL366:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3214              		.loc 1 686 21 discriminator 4 view .LVU1025
 3215 01c4 0B97     		str	r7, [sp, #44]
 3216              	.LVL367:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3217              		.loc 1 686 21 discriminator 4 view .LVU1026
 3218 01c6 5F46     		mov	r7, fp
 3219              	.LVL368:
 686:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3220              		.loc 1 686 21 discriminator 4 view .LVU1027
 3221 01c8 14E0     		b	.L210
 3222              	.LVL369:
 3223              	.L234:
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 3224              		.loc 1 693 29 is_stmt 1 view .LVU1028
 693:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 1] = src_buf[x + 1];
 3225              		.loc 1 693 41 is_stmt 0 view .LVU1029
 3226 01ca 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3227 01ce 44F82310 		str	r1, [r4, r3, lsl #2]
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 3228              		.loc 1 694 29 is_stmt 1 view .LVU1030
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 3229              		.loc 1 694 54 is_stmt 0 view .LVU1031
 3230 01d2 581C     		adds	r0, r3, #1
 694:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 2] = src_buf[x + 2];
 3231              		.loc 1 694 45 view .LVU1032
 3232 01d4 55F82010 		ldr	r1, [r5, r0, lsl #2]
 3233 01d8 44F82010 		str	r1, [r4, r0, lsl #2]
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 3234              		.loc 1 695 29 is_stmt 1 view .LVU1033
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 3235              		.loc 1 695 54 is_stmt 0 view .LVU1034
 3236 01dc 981C     		adds	r0, r3, #2
 695:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x + 3] = src_buf[x + 3];
 3237              		.loc 1 695 45 view .LVU1035
 3238 01de 55F82010 		ldr	r1, [r5, r0, lsl #2]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 106


 3239 01e2 44F82010 		str	r1, [r4, r0, lsl #2]
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3240              		.loc 1 696 29 is_stmt 1 view .LVU1036
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3241              		.loc 1 696 54 is_stmt 0 view .LVU1037
 3242 01e6 D81C     		adds	r0, r3, #3
 696:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3243              		.loc 1 696 45 view .LVU1038
 3244 01e8 55F82010 		ldr	r1, [r5, r0, lsl #2]
 3245 01ec 44F82010 		str	r1, [r4, r0, lsl #2]
 3246              	.L201:
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3247              		.loc 1 706 21 is_stmt 1 view .LVU1039
 706:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3248              		.loc 1 706 27 is_stmt 0 view .LVU1040
 3249 01f0 0432     		adds	r2, r2, #4
 3250              	.LVL370:
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 3251              		.loc 1 690 35 is_stmt 1 view .LVU1041
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 3252              		.loc 1 690 37 is_stmt 0 view .LVU1042
 3253 01f2 0433     		adds	r3, r3, #4
 3254              	.LVL371:
 3255              	.L210:
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 3256              		.loc 1 690 23 is_stmt 1 discriminator 1 view .LVU1043
 690:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(*mask32) {
 3257              		.loc 1 690 17 is_stmt 0 discriminator 1 view .LVU1044
 3258 01f4 0099     		ldr	r1, [sp]
 3259 01f6 8B42     		cmp	r3, r1
 3260 01f8 80F23881 		bge	.L233
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3261              		.loc 1 691 21 is_stmt 1 view .LVU1045
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3262              		.loc 1 691 24 is_stmt 0 view .LVU1046
 3263 01fc 1168     		ldr	r1, [r2]
 691:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         if((*mask32) == 0xFFFFFFFF) {
 3264              		.loc 1 691 23 view .LVU1047
 3265 01fe 0029     		cmp	r1, #0
 3266 0200 F6D0     		beq	.L201
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 3267              		.loc 1 692 25 is_stmt 1 view .LVU1048
 692:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             dest_buf[x] = src_buf[x];
 3268              		.loc 1 692 27 is_stmt 0 view .LVU1049
 3269 0202 B1F1FF3F 		cmp	r1, #-1
 3270 0206 E0D0     		beq	.L234
 699:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x)
 3271              		.loc 1 699 29 is_stmt 1 view .LVU1050
 3272              	.LVL372:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3273              		.loc 1 700 29 view .LVU1051
 3274 0208 1678     		ldrb	r6, [r2]	@ zero_extendqisi2
 3275 020a E6B3     		cbz	r6, .L203
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3276              		.loc 1 700 29 discriminator 1 view .LVU1052
 3277 020c FF2E     		cmp	r6, #255
 3278 020e 00F00A81 		beq	.L235
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 107


 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3279              		.loc 1 700 29 discriminator 4 view .LVU1053
 3280 0212 55F82390 		ldr	r9, [r5, r3, lsl #2]
 3281              	.LVL373:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3282              		.loc 1 700 29 is_stmt 0 discriminator 4 view .LVU1054
 3283 0216 54F823A0 		ldr	r10, [r4, r3, lsl #2]
 3284              	.LVL374:
 3285              	.LBB191:
 3286              	.LBI191:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3287              		.loc 3 438 48 is_stmt 1 discriminator 4 view .LVU1055
 3288              	.LBB192:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3289              		.loc 3 440 5 discriminator 4 view .LVU1056
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3290              		.loc 3 459 5 discriminator 4 view .LVU1057
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3291              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1058
 3292 021a C9F3074B 		ubfx	fp, r9, #16, #8
 3293              	.LVL375:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3294              		.loc 3 459 5 discriminator 4 view .LVU1059
 3295 021e CAF30740 		ubfx	r0, r10, #16, #8
 3296 0222 C6F1FF01 		rsb	r1, r6, #255
 3297 0226 01FB00F0 		mul	r0, r1, r0
 3298 022a 06FB0B00 		mla	r0, r6, fp, r0
 3299 022e 00EB002B 		add	fp, r0, r0, lsl #8
 3300 0232 00EBCB10 		add	r0, r0, fp, lsl #7
 3301 0236 C0F3C750 		ubfx	r0, r0, #23, #8
 3302 023a 60F31748 		bfi	r8, r0, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3303              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1060
 3304 023e C9F3072B 		ubfx	fp, r9, #8, #8
 3305 0242 CAF30720 		ubfx	r0, r10, #8, #8
 3306 0246 01FB00F0 		mul	r0, r1, r0
 3307 024a 0BFB0600 		mla	r0, fp, r6, r0
 3308 024e 00EB002B 		add	fp, r0, r0, lsl #8
 3309 0252 00EBCB10 		add	r0, r0, fp, lsl #7
 3310 0256 C0F3C750 		ubfx	r0, r0, #23, #8
 3311 025a 60F30F28 		bfi	r8, r0, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3312              		.loc 3 463 5 discriminator 4 view .LVU1061
 3313 025e 5FFA89F9 		uxtb	r9, r9
 3314              	.LVL376:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3315              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1062
 3316 0262 5FFA8AFA 		uxtb	r10, r10
 3317              	.LVL377:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3318              		.loc 3 463 5 discriminator 4 view .LVU1063
 3319 0266 0AFB01FA 		mul	r10, r10, r1
 3320 026a 09FB06AA 		mla	r10, r9, r6, r10
 3321 026e 0AEB0A29 		add	r9, r10, r10, lsl #8
 3322 0272 0AEBC91A 		add	r10, r10, r9, lsl #7
 3323 0276 CAF3C75A 		ubfx	r10, r10, #23, #8
 3324 027a 6AF30708 		bfi	r8, r10, #0, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 108


 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3325              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1064
 3326 027e 48F07F48 		orr	r8, r8, #-16777216
 3327              	.LVL378:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3328              		.loc 3 471 5 discriminator 4 view .LVU1065
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3329              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1066
 3330              	.LBE192:
 3331              	.LBE191:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3332              		.loc 1 700 29 discriminator 4 view .LVU1067
 3333 0282 44F82380 		str	r8, [r4, r3, lsl #2]
 3334              	.LVL379:
 3335              	.L203:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3336              		.loc 1 700 29 is_stmt 1 discriminator 6 view .LVU1068
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3337              		.loc 1 701 29 discriminator 6 view .LVU1069
 3338 0286 5678     		ldrb	r6, [r2, #1]	@ zero_extendqisi2
 3339 0288 002E     		cmp	r6, #0
 3340 028a 41D0     		beq	.L205
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3341              		.loc 1 701 29 discriminator 1 view .LVU1070
 3342 028c FF2E     		cmp	r6, #255
 3343 028e 00F0CF80 		beq	.L236
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3344              		.loc 1 701 29 discriminator 4 view .LVU1071
 3345 0292 03F1010A 		add	r10, r3, #1
 3346 0296 55F82A90 		ldr	r9, [r5, r10, lsl #2]
 3347              	.LVL380:
 3348              	.LBB193:
 3349              	.LBI193:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3350              		.loc 3 438 48 discriminator 4 view .LVU1072
 3351              	.LBB194:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3352              		.loc 3 440 5 discriminator 4 view .LVU1073
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3353              		.loc 3 459 5 discriminator 4 view .LVU1074
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3354              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1075
 3355 029a C9F3074B 		ubfx	fp, r9, #16, #8
 3356              	.LVL381:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3357              		.loc 3 459 5 discriminator 4 view .LVU1076
 3358 029e 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3359 02a2 C1F30740 		ubfx	r0, r1, #16, #8
 3360 02a6 C6F1FF01 		rsb	r1, r6, #255
 3361 02aa 01FB00F0 		mul	r0, r1, r0
 3362 02ae 06FB0B00 		mla	r0, r6, fp, r0
 3363 02b2 00EB002B 		add	fp, r0, r0, lsl #8
 3364 02b6 00EBCB10 		add	r0, r0, fp, lsl #7
 3365 02ba C0F3C750 		ubfx	r0, r0, #23, #8
 3366 02be 60F3174E 		bfi	lr, r0, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3367              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1077
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 109


 3368 02c2 C9F3072B 		ubfx	fp, r9, #8, #8
 3369 02c6 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3370 02ca C0F30720 		ubfx	r0, r0, #8, #8
 3371 02ce 01FB00F0 		mul	r0, r1, r0
 3372 02d2 0BFB0600 		mla	r0, fp, r6, r0
 3373 02d6 00EB002B 		add	fp, r0, r0, lsl #8
 3374 02da 00EBCB10 		add	r0, r0, fp, lsl #7
 3375 02de C0F3C750 		ubfx	r0, r0, #23, #8
 3376 02e2 60F30F2E 		bfi	lr, r0, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3377              		.loc 3 463 5 discriminator 4 view .LVU1078
 3378 02e6 5FFA89F9 		uxtb	r9, r9
 3379              	.LVL382:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3380              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1079
 3381 02ea 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3382 02ee C0B2     		uxtb	r0, r0
 3383 02f0 00FB01F1 		mul	r1, r0, r1
 3384 02f4 09FB0619 		mla	r9, r9, r6, r1
 3385 02f8 09EB0921 		add	r1, r9, r9, lsl #8
 3386 02fc 09EBC111 		add	r1, r9, r1, lsl #7
 3387 0300 C1F3C751 		ubfx	r1, r1, #23, #8
 3388 0304 61F3070E 		bfi	lr, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3389              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1080
 3390 0308 4EF07F4E 		orr	lr, lr, #-16777216
 3391              	.LVL383:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3392              		.loc 3 471 5 discriminator 4 view .LVU1081
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3393              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1082
 3394              	.LBE194:
 3395              	.LBE193:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3396              		.loc 1 701 29 discriminator 4 view .LVU1083
 3397 030c 44F82AE0 		str	lr, [r4, r10, lsl #2]
 3398              	.LVL384:
 3399              	.L205:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3400              		.loc 1 701 29 is_stmt 1 discriminator 6 view .LVU1084
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3401              		.loc 1 702 29 discriminator 6 view .LVU1085
 3402 0310 9678     		ldrb	r6, [r2, #2]	@ zero_extendqisi2
 3403 0312 002E     		cmp	r6, #0
 3404 0314 41D0     		beq	.L207
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3405              		.loc 1 702 29 discriminator 1 view .LVU1086
 3406 0316 FF2E     		cmp	r6, #255
 3407 0318 00F09080 		beq	.L237
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3408              		.loc 1 702 29 discriminator 4 view .LVU1087
 3409 031c 03F1020A 		add	r10, r3, #2
 3410 0320 55F82A90 		ldr	r9, [r5, r10, lsl #2]
 3411              	.LVL385:
 3412              	.LBB195:
 3413              	.LBI195:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 110


 3414              		.loc 3 438 48 discriminator 4 view .LVU1088
 3415              	.LBB196:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3416              		.loc 3 440 5 discriminator 4 view .LVU1089
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3417              		.loc 3 459 5 discriminator 4 view .LVU1090
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3418              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1091
 3419 0324 C9F3074B 		ubfx	fp, r9, #16, #8
 3420              	.LVL386:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3421              		.loc 3 459 5 discriminator 4 view .LVU1092
 3422 0328 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3423 032c C1F30740 		ubfx	r0, r1, #16, #8
 3424 0330 C6F1FF01 		rsb	r1, r6, #255
 3425 0334 01FB00F0 		mul	r0, r1, r0
 3426 0338 06FB0B00 		mla	r0, r6, fp, r0
 3427 033c 00EB002B 		add	fp, r0, r0, lsl #8
 3428 0340 00EBCB10 		add	r0, r0, fp, lsl #7
 3429 0344 C0F3C750 		ubfx	r0, r0, #23, #8
 3430 0348 60F3174C 		bfi	ip, r0, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3431              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1093
 3432 034c C9F3072B 		ubfx	fp, r9, #8, #8
 3433 0350 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3434 0354 C0F30720 		ubfx	r0, r0, #8, #8
 3435 0358 01FB00F0 		mul	r0, r1, r0
 3436 035c 0BFB0600 		mla	r0, fp, r6, r0
 3437 0360 00EB002B 		add	fp, r0, r0, lsl #8
 3438 0364 00EBCB10 		add	r0, r0, fp, lsl #7
 3439 0368 C0F3C750 		ubfx	r0, r0, #23, #8
 3440 036c 60F30F2C 		bfi	ip, r0, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3441              		.loc 3 463 5 discriminator 4 view .LVU1094
 3442 0370 5FFA89F9 		uxtb	r9, r9
 3443              	.LVL387:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3444              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1095
 3445 0374 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3446 0378 C0B2     		uxtb	r0, r0
 3447 037a 00FB01F1 		mul	r1, r0, r1
 3448 037e 09FB0619 		mla	r9, r9, r6, r1
 3449 0382 09EB0921 		add	r1, r9, r9, lsl #8
 3450 0386 09EBC111 		add	r1, r9, r1, lsl #7
 3451 038a C1F3C751 		ubfx	r1, r1, #23, #8
 3452 038e 61F3070C 		bfi	ip, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3453              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1096
 3454 0392 4CF07F4C 		orr	ip, ip, #-16777216
 3455              	.LVL388:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3456              		.loc 3 471 5 discriminator 4 view .LVU1097
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3457              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1098
 3458              	.LBE196:
 3459              	.LBE195:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 111


 3460              		.loc 1 702 29 discriminator 4 view .LVU1099
 3461 0396 44F82AC0 		str	ip, [r4, r10, lsl #2]
 3462              	.LVL389:
 3463              	.L207:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3464              		.loc 1 702 29 is_stmt 1 discriminator 6 view .LVU1100
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3465              		.loc 1 703 29 discriminator 6 view .LVU1101
 3466 039a D678     		ldrb	r6, [r2, #3]	@ zero_extendqisi2
 3467 039c 002E     		cmp	r6, #0
 3468 039e 3FF427AF 		beq	.L201
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3469              		.loc 1 703 29 discriminator 1 view .LVU1102
 3470 03a2 FF2E     		cmp	r6, #255
 3471 03a4 50D0     		beq	.L238
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3472              		.loc 1 703 29 discriminator 4 view .LVU1103
 3473 03a6 03F1030A 		add	r10, r3, #3
 3474 03aa 55F82A90 		ldr	r9, [r5, r10, lsl #2]
 3475              	.LVL390:
 3476              	.LBB197:
 3477              	.LBI197:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3478              		.loc 3 438 48 discriminator 4 view .LVU1104
 3479              	.LBB198:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3480              		.loc 3 440 5 discriminator 4 view .LVU1105
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3481              		.loc 3 459 5 discriminator 4 view .LVU1106
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3482              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1107
 3483 03ae C9F3074B 		ubfx	fp, r9, #16, #8
 3484              	.LVL391:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3485              		.loc 3 459 5 discriminator 4 view .LVU1108
 3486 03b2 54F82A10 		ldr	r1, [r4, r10, lsl #2]
 3487 03b6 C1F30740 		ubfx	r0, r1, #16, #8
 3488 03ba C6F1FF01 		rsb	r1, r6, #255
 3489 03be 01FB00F0 		mul	r0, r1, r0
 3490 03c2 06FB0B00 		mla	r0, r6, fp, r0
 3491 03c6 00EB002B 		add	fp, r0, r0, lsl #8
 3492 03ca 00EBCB10 		add	r0, r0, fp, lsl #7
 3493 03ce C0F3C750 		ubfx	r0, r0, #23, #8
 3494 03d2 60F31747 		bfi	r7, r0, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3495              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1109
 3496 03d6 C9F3072B 		ubfx	fp, r9, #8, #8
 3497 03da 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3498 03de C0F30720 		ubfx	r0, r0, #8, #8
 3499 03e2 01FB00F0 		mul	r0, r1, r0
 3500 03e6 0BFB0600 		mla	r0, fp, r6, r0
 3501 03ea 00EB002B 		add	fp, r0, r0, lsl #8
 3502 03ee 00EBCB10 		add	r0, r0, fp, lsl #7
 3503 03f2 C0F3C750 		ubfx	r0, r0, #23, #8
 3504 03f6 60F30F27 		bfi	r7, r0, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3505              		.loc 3 463 5 discriminator 4 view .LVU1110
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 112


 3506 03fa 5FFA89F9 		uxtb	r9, r9
 3507              	.LVL392:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3508              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1111
 3509 03fe 54F82A00 		ldr	r0, [r4, r10, lsl #2]
 3510 0402 C0B2     		uxtb	r0, r0
 3511 0404 00FB01F1 		mul	r1, r0, r1
 3512 0408 09FB0619 		mla	r9, r9, r6, r1
 3513 040c 09EB0921 		add	r1, r9, r9, lsl #8
 3514 0410 09EBC111 		add	r1, r9, r1, lsl #7
 3515 0414 C1F3C751 		ubfx	r1, r1, #23, #8
 3516 0418 61F30707 		bfi	r7, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3517              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1112
 3518 041c 47F07F47 		orr	r7, r7, #-16777216
 3519              	.LVL393:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3520              		.loc 3 471 5 discriminator 4 view .LVU1113
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3521              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1114
 3522              	.LBE198:
 3523              	.LBE197:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3524              		.loc 1 703 29 discriminator 4 view .LVU1115
 3525 0420 44F82A70 		str	r7, [r4, r10, lsl #2]
 3526 0424 E4E6     		b	.L201
 3527              	.LVL394:
 3528              	.L235:
 700:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 1)
 3529              		.loc 1 700 29 is_stmt 1 discriminator 3 view .LVU1116
 3530 0426 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3531 042a 44F82310 		str	r1, [r4, r3, lsl #2]
 3532 042e 2AE7     		b	.L203
 3533              	.LVL395:
 3534              	.L236:
 701:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 2)
 3535              		.loc 1 701 29 discriminator 3 view .LVU1117
 3536 0430 581C     		adds	r0, r3, #1
 3537 0432 55F82010 		ldr	r1, [r5, r0, lsl #2]
 3538 0436 44F82010 		str	r1, [r4, r0, lsl #2]
 3539 043a 69E7     		b	.L205
 3540              	.LVL396:
 3541              	.L237:
 702:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                             MAP_NORMAL_MASK_PX(x + 3)
 3542              		.loc 1 702 29 discriminator 3 view .LVU1118
 3543 043c 981C     		adds	r0, r3, #2
 3544 043e 55F82010 		ldr	r1, [r5, r0, lsl #2]
 3545 0442 44F82010 		str	r1, [r4, r0, lsl #2]
 3546 0446 A8E7     		b	.L207
 3547              	.LVL397:
 3548              	.L238:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3549              		.loc 1 703 29 discriminator 3 view .LVU1119
 3550 0448 D81C     		adds	r0, r3, #3
 3551 044a 55F82010 		ldr	r1, [r5, r0, lsl #2]
 3552 044e 44F82010 		str	r1, [r4, r0, lsl #2]
 3553 0452 CDE6     		b	.L201
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 113


 3554              	.LVL398:
 3555              	.L227:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3556              		.loc 1 703 29 is_stmt 0 discriminator 3 view .LVU1120
 3557 0454 0996     		str	r6, [sp, #36]
 3558 0456 CDF828C0 		str	ip, [sp, #40]
 3559 045a DDF818C0 		ldr	ip, [sp, #24]
 3560              	.LVL399:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3561              		.loc 1 703 29 discriminator 3 view .LVU1121
 3562 045e DDF81CE0 		ldr	lr, [sp, #28]
 3563              	.LVL400:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3564              		.loc 1 703 29 discriminator 3 view .LVU1122
 3565 0462 DDF82080 		ldr	r8, [sp, #32]
 3566              	.LVL401:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3567              		.loc 1 703 29 discriminator 3 view .LVU1123
 3568 0466 0B97     		str	r7, [sp, #44]
 3569              	.LVL402:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3570              		.loc 1 703 29 discriminator 3 view .LVU1124
 3571 0468 5F46     		mov	r7, fp
 3572              	.LVL403:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3573              		.loc 1 703 29 discriminator 3 view .LVU1125
 3574 046a C3E6     		b	.L210
 3575              	.LVL404:
 3576              	.L233:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3577              		.loc 1 703 29 discriminator 3 view .LVU1126
 3578 046c 099E     		ldr	r6, [sp, #36]
 3579 046e BB46     		mov	fp, r7
 3580              	.LVL405:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3581              		.loc 1 703 29 discriminator 3 view .LVU1127
 3582 0470 CDF818C0 		str	ip, [sp, #24]
 3583 0474 DDF828C0 		ldr	ip, [sp, #40]
 3584              	.LVL406:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3585              		.loc 1 703 29 discriminator 3 view .LVU1128
 3586 0478 CDF81CE0 		str	lr, [sp, #28]
 3587 047c CDF82080 		str	r8, [sp, #32]
 3588 0480 0B9F     		ldr	r7, [sp, #44]
 3589              	.LVL407:
 703:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         }
 3590              		.loc 1 703 29 discriminator 3 view .LVU1129
 3591 0482 3BE0     		b	.L212
 3592              	.LVL408:
 3593              	.L214:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3594              		.loc 1 711 21 is_stmt 1 discriminator 4 view .LVU1130
 3595 0484 55F82380 		ldr	r8, [r5, r3, lsl #2]
 3596              	.LVL409:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3597              		.loc 1 711 21 is_stmt 0 discriminator 4 view .LVU1131
 3598 0488 54F82390 		ldr	r9, [r4, r3, lsl #2]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 114


 3599              	.LVL410:
 3600              	.LBB199:
 3601              	.LBI199:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3602              		.loc 3 438 48 is_stmt 1 discriminator 4 view .LVU1132
 3603              	.LBB200:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3604              		.loc 3 440 5 discriminator 4 view .LVU1133
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3605              		.loc 3 459 5 discriminator 4 view .LVU1134
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3606              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1135
 3607 048c C8F3074A 		ubfx	r10, r8, #16, #8
 3608              	.LVL411:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3609              		.loc 3 459 5 discriminator 4 view .LVU1136
 3610 0490 C9F3074E 		ubfx	lr, r9, #16, #8
 3611              	.LVL412:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3612              		.loc 3 459 5 discriminator 4 view .LVU1137
 3613 0494 C1F1FF00 		rsb	r0, r1, #255
 3614 0498 00FB0EFE 		mul	lr, r0, lr
 3615 049c 01FB0AEE 		mla	lr, r1, r10, lr
 3616 04a0 0EEB0E2A 		add	r10, lr, lr, lsl #8
 3617 04a4 0EEBCA1E 		add	lr, lr, r10, lsl #7
 3618 04a8 CEF3C75E 		ubfx	lr, lr, #23, #8
 3619 04ac 6EF3174C 		bfi	ip, lr, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3620              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1138
 3621 04b0 C8F3072A 		ubfx	r10, r8, #8, #8
 3622 04b4 C9F3072E 		ubfx	lr, r9, #8, #8
 3623 04b8 0EFB00FE 		mul	lr, lr, r0
 3624 04bc 0AFB01EE 		mla	lr, r10, r1, lr
 3625 04c0 0EEB0E2A 		add	r10, lr, lr, lsl #8
 3626 04c4 0EEBCA1E 		add	lr, lr, r10, lsl #7
 3627 04c8 CEF3C75E 		ubfx	lr, lr, #23, #8
 3628 04cc 6EF30F2C 		bfi	ip, lr, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3629              		.loc 3 463 5 discriminator 4 view .LVU1139
 3630 04d0 5FFA88F8 		uxtb	r8, r8
 3631              	.LVL413:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3632              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1140
 3633 04d4 5FFA89F9 		uxtb	r9, r9
 3634              	.LVL414:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3635              		.loc 3 463 5 discriminator 4 view .LVU1141
 3636 04d8 09FB00F0 		mul	r0, r9, r0
 3637 04dc 08FB0101 		mla	r1, r8, r1, r0
 3638              	.LVL415:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3639              		.loc 3 463 5 discriminator 4 view .LVU1142
 3640 04e0 01EB0120 		add	r0, r1, r1, lsl #8
 3641 04e4 01EBC011 		add	r1, r1, r0, lsl #7
 3642 04e8 C1F3C751 		ubfx	r1, r1, #23, #8
 3643 04ec 61F3070C 		bfi	ip, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 115


 3644              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1143
 3645 04f0 4CF07F4C 		orr	ip, ip, #-16777216
 3646              	.LVL416:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3647              		.loc 3 471 5 discriminator 4 view .LVU1144
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3648              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1145
 3649              	.LBE200:
 3650              	.LBE199:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3651              		.loc 1 711 21 discriminator 4 view .LVU1146
 3652 04f4 44F823C0 		str	ip, [r4, r3, lsl #2]
 3653              	.LVL417:
 3654              	.L213:
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3655              		.loc 1 711 21 is_stmt 1 discriminator 6 view .LVU1147
 3656 04f8 0132     		adds	r2, r2, #1
 3657              	.LVL418:
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3658              		.loc 1 710 31 discriminator 6 view .LVU1148
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3659              		.loc 1 710 32 is_stmt 0 discriminator 6 view .LVU1149
 3660 04fa 0133     		adds	r3, r3, #1
 3661              	.LVL419:
 3662              	.L212:
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3663              		.loc 1 710 23 is_stmt 1 discriminator 1 view .LVU1150
 710:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3664              		.loc 1 710 17 is_stmt 0 discriminator 1 view .LVU1151
 3665 04fc B342     		cmp	r3, r6
 3666 04fe 09DA     		bge	.L239
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3667              		.loc 1 711 21 is_stmt 1 view .LVU1152
 3668 0500 1178     		ldrb	r1, [r2]	@ zero_extendqisi2
 3669 0502 0029     		cmp	r1, #0
 3670 0504 F8D0     		beq	.L213
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3671              		.loc 1 711 21 discriminator 1 view .LVU1153
 3672 0506 FF29     		cmp	r1, #255
 3673 0508 BCD1     		bne	.L214
 711:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 }
 3674              		.loc 1 711 21 discriminator 3 view .LVU1154
 3675 050a 55F82310 		ldr	r1, [r5, r3, lsl #2]
 3676 050e 44F82310 		str	r1, [r4, r3, lsl #2]
 3677 0512 F1E7     		b	.L213
 3678              	.L239:
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3679              		.loc 1 714 17 discriminator 2 view .LVU1155
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3680              		.loc 1 714 26 is_stmt 0 discriminator 2 view .LVU1156
 3681 0514 029B     		ldr	r3, [sp, #8]
 3682              	.LVL420:
 714:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3683              		.loc 1 714 26 discriminator 2 view .LVU1157
 3684 0516 04EB8304 		add	r4, r4, r3, lsl #2
 3685              	.LVL421:
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 116


 3686              		.loc 1 715 17 is_stmt 1 discriminator 2 view .LVU1158
 715:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 3687              		.loc 1 715 25 is_stmt 0 discriminator 2 view .LVU1159
 3688 051a 049B     		ldr	r3, [sp, #16]
 3689 051c 05EB8305 		add	r5, r5, r3, lsl #2
 3690              	.LVL422:
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3691              		.loc 1 716 17 is_stmt 1 discriminator 2 view .LVU1160
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3692              		.loc 1 716 22 is_stmt 0 discriminator 2 view .LVU1161
 3693 0520 189B     		ldr	r3, [sp, #96]
 3694 0522 059A     		ldr	r2, [sp, #20]
 3695              	.LVL423:
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3696              		.loc 1 716 22 discriminator 2 view .LVU1162
 3697 0524 1344     		add	r3, r3, r2
 3698 0526 1893     		str	r3, [sp, #96]
 3699              	.LVL424:
 716:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3700              		.loc 1 716 22 discriminator 2 view .LVU1163
 3701              	.LBE188:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3702              		.loc 1 678 31 is_stmt 1 discriminator 2 view .LVU1164
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3703              		.loc 1 678 32 is_stmt 0 discriminator 2 view .LVU1165
 3704 0528 019B     		ldr	r3, [sp, #4]
 3705              	.LVL425:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3706              		.loc 1 678 32 discriminator 2 view .LVU1166
 3707 052a 0133     		adds	r3, r3, #1
 3708 052c 0193     		str	r3, [sp, #4]
 3709              	.LVL426:
 3710              	.L196:
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3711              		.loc 1 678 24 is_stmt 1 discriminator 1 view .LVU1167
 678:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 const lv_opa_t * mask_tmp_x = mask;
 3712              		.loc 1 678 13 is_stmt 0 discriminator 1 view .LVU1168
 3713 052e 019B     		ldr	r3, [sp, #4]
 3714 0530 039A     		ldr	r2, [sp, #12]
 3715 0532 9342     		cmp	r3, r2
 3716 0534 62DA     		bge	.L187
 3717              	.LBB201:
 679:lvgl/src/draw/sw/lv_draw_sw_blend.c **** #if 0
 3718              		.loc 1 679 34 view .LVU1169
 3719 0536 189A     		ldr	r2, [sp, #96]
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3720              		.loc 1 685 23 view .LVU1170
 3721 0538 0023     		movs	r3, #0
 3722 053a F4E5     		b	.L216
 3723              	.LVL427:
 3724              	.L225:
 685:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     MAP_NORMAL_MASK_PX(x)
 3725              		.loc 1 685 23 view .LVU1171
 3726              	.LBE201:
 3727              	.LBE204:
 3728              	.LBB205:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 117


 3729              		.loc 1 724 34 view .LVU1172
 3730 053c 0099     		ldr	r1, [sp]
 3731              	.L218:
 3732              	.LVL428:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 3733              		.loc 1 725 25 is_stmt 1 discriminator 4 view .LVU1173
 3734 053e 59F82C40 		ldr	r4, [r9, ip, lsl #2]
 3735              	.LVL429:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 3736              		.loc 1 725 25 is_stmt 0 discriminator 4 view .LVU1174
 3737 0542 58F82C50 		ldr	r5, [r8, ip, lsl #2]
 3738              	.LVL430:
 3739              	.LBB206:
 3740              	.LBI206:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 3741              		.loc 3 438 48 is_stmt 1 discriminator 4 view .LVU1175
 3742              	.LBB207:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 3743              		.loc 3 440 5 discriminator 4 view .LVU1176
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3744              		.loc 3 459 5 discriminator 4 view .LVU1177
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3745              		.loc 3 459 5 is_stmt 0 discriminator 4 view .LVU1178
 3746 0546 C4F3074B 		ubfx	fp, r4, #16, #8
 3747              	.LVL431:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3748              		.loc 3 459 5 discriminator 4 view .LVU1179
 3749 054a C5F30742 		ubfx	r2, r5, #16, #8
 3750 054e C1F1FF03 		rsb	r3, r1, #255
 3751 0552 03FB02F2 		mul	r2, r3, r2
 3752 0556 01FB0B22 		mla	r2, r1, fp, r2
 3753 055a 02EB022B 		add	fp, r2, r2, lsl #8
 3754 055e 02EBCB12 		add	r2, r2, fp, lsl #7
 3755 0562 C2F3C752 		ubfx	r2, r2, #23, #8
 3756 0566 62F31747 		bfi	r7, r2, #16, #8
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3757              		.loc 3 461 5 is_stmt 1 discriminator 4 view .LVU1180
 3758 056a C4F3072B 		ubfx	fp, r4, #8, #8
 3759 056e C5F30722 		ubfx	r2, r5, #8, #8
 3760 0572 03FB02F2 		mul	r2, r3, r2
 3761 0576 0BFB0122 		mla	r2, fp, r1, r2
 3762 057a 02EB022B 		add	fp, r2, r2, lsl #8
 3763 057e 02EBCB12 		add	r2, r2, fp, lsl #7
 3764 0582 C2F3C752 		ubfx	r2, r2, #23, #8
 3765 0586 62F30F27 		bfi	r7, r2, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3766              		.loc 3 463 5 discriminator 4 view .LVU1181
 3767 058a E4B2     		uxtb	r4, r4
 3768              	.LVL432:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3769              		.loc 3 463 5 is_stmt 0 discriminator 4 view .LVU1182
 3770 058c EDB2     		uxtb	r5, r5
 3771              	.LVL433:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3772              		.loc 3 463 5 discriminator 4 view .LVU1183
 3773 058e 05FB03F3 		mul	r3, r5, r3
 3774 0592 04FB0131 		mla	r1, r4, r1, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 118


 3775              	.LVL434:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 3776              		.loc 3 463 5 discriminator 4 view .LVU1184
 3777 0596 01EB0123 		add	r3, r1, r1, lsl #8
 3778 059a 01EBC311 		add	r1, r1, r3, lsl #7
 3779 059e C1F3C751 		ubfx	r1, r1, #23, #8
 3780 05a2 61F30707 		bfi	r7, r1, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 3781              		.loc 3 465 5 is_stmt 1 discriminator 4 view .LVU1185
 3782 05a6 47F07F47 		orr	r7, r7, #-16777216
 3783              	.LVL435:
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3784              		.loc 3 471 5 discriminator 4 view .LVU1186
 471:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 3785              		.loc 3 471 5 is_stmt 0 discriminator 4 view .LVU1187
 3786              	.LBE207:
 3787              	.LBE206:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 3788              		.loc 1 725 39 discriminator 4 view .LVU1188
 3789 05aa 48F82C70 		str	r7, [r8, ip, lsl #2]
 3790              	.L217:
 725:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     }
 3791              		.loc 1 725 39 discriminator 4 view .LVU1189
 3792              	.LBE205:
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 3793              		.loc 1 722 35 is_stmt 1 discriminator 2 view .LVU1190
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 3794              		.loc 1 722 36 is_stmt 0 discriminator 2 view .LVU1191
 3795 05ae 0130     		adds	r0, r0, #1
 3796              	.LVL436:
 3797              	.L220:
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 3798              		.loc 1 722 28 is_stmt 1 discriminator 1 view .LVU1192
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 3799              		.loc 1 722 17 is_stmt 0 discriminator 1 view .LVU1193
 3800 05b0 B042     		cmp	r0, r6
 3801 05b2 0BDA     		bge	.L240
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3802              		.loc 1 723 21 is_stmt 1 view .LVU1194
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3803              		.loc 1 723 28 is_stmt 0 view .LVU1195
 3804 05b4 8446     		mov	ip, r0
 3805 05b6 1EF80010 		ldrb	r1, [lr, r0]	@ zero_extendqisi2
 723:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         lv_opa_t opa_tmp = mask[x] >= LV_OPA_MAX ? opa : ((opa * mask[x]) >> 8);
 3806              		.loc 1 723 23 view .LVU1196
 3807 05ba 0029     		cmp	r1, #0
 3808 05bc F7D0     		beq	.L217
 3809              	.LBB208:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 3810              		.loc 1 724 25 is_stmt 1 view .LVU1197
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 3811              		.loc 1 724 34 is_stmt 0 view .LVU1198
 3812 05be FC29     		cmp	r1, #252
 3813 05c0 BCD8     		bhi	.L225
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 3814              		.loc 1 724 80 discriminator 1 view .LVU1199
 3815 05c2 009B     		ldr	r3, [sp]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 119


 3816 05c4 03FB01F1 		mul	r1, r3, r1
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 3817              		.loc 1 724 34 discriminator 1 view .LVU1200
 3818 05c8 090A     		lsrs	r1, r1, #8
 3819 05ca B8E7     		b	.L218
 3820              	.L240:
 724:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                         dest_buf[x] = lv_color_mix(src_buf[x], dest_buf[x], opa_tmp);
 3821              		.loc 1 724 34 discriminator 1 view .LVU1201
 3822              	.LBE208:
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3823              		.loc 1 728 17 is_stmt 1 discriminator 2 view .LVU1202
 728:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 src_buf += src_stride;
 3824              		.loc 1 728 26 is_stmt 0 discriminator 2 view .LVU1203
 3825 05cc 029B     		ldr	r3, [sp, #8]
 3826 05ce 08EB8308 		add	r8, r8, r3, lsl #2
 3827              	.LVL437:
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 3828              		.loc 1 729 17 is_stmt 1 discriminator 2 view .LVU1204
 729:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask += mask_stride;
 3829              		.loc 1 729 25 is_stmt 0 discriminator 2 view .LVU1205
 3830 05d2 049B     		ldr	r3, [sp, #16]
 3831 05d4 09EB8309 		add	r9, r9, r3, lsl #2
 3832              	.LVL438:
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3833              		.loc 1 730 17 is_stmt 1 discriminator 2 view .LVU1206
 730:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 3834              		.loc 1 730 22 is_stmt 0 discriminator 2 view .LVU1207
 3835 05d8 059B     		ldr	r3, [sp, #20]
 3836 05da 9E44     		add	lr, lr, r3
 3837              	.LVL439:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3838              		.loc 1 721 31 is_stmt 1 discriminator 2 view .LVU1208
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3839              		.loc 1 721 32 is_stmt 0 discriminator 2 view .LVU1209
 3840 05dc 0AF1010A 		add	r10, r10, #1
 3841              	.LVL440:
 3842              	.L195:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3843              		.loc 1 721 24 is_stmt 1 discriminator 1 view .LVU1210
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3844              		.loc 1 721 13 is_stmt 0 discriminator 1 view .LVU1211
 3845 05e0 039B     		ldr	r3, [sp, #12]
 3846 05e2 9A45     		cmp	r10, r3
 3847 05e4 0ADA     		bge	.L187
 722:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                     if(mask[x]) {
 3848              		.loc 1 722 23 view .LVU1212
 3849 05e6 0020     		movs	r0, #0
 3850 05e8 E2E7     		b	.L220
 3851              	.LVL441:
 3852              	.L223:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3853              		.loc 1 721 19 view .LVU1213
 3854 05ea 4FF0000A 		mov	r10, #0
 3855              	.LVL442:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3856              		.loc 1 721 19 view .LVU1214
 3857 05ee 7746     		mov	r7, lr
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 120


 3858 05f0 A046     		mov	r8, r4
 3859 05f2 A946     		mov	r9, r5
 3860 05f4 0090     		str	r0, [sp]
 3861 05f6 DDF860E0 		ldr	lr, [sp, #96]
 3862              	.LVL443:
 721:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 for(x = 0; x < w; x++) {
 3863              		.loc 1 721 19 view .LVU1215
 3864 05fa F1E7     		b	.L195
 3865              	.LVL444:
 3866              	.L187:
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3867              		.loc 1 734 1 view .LVU1216
 3868 05fc 0DB0     		add	sp, sp, #52
 3869              		.cfi_def_cfa_offset 36
 3870              		@ sp needed
 3871 05fe BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 734:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3872              		.loc 1 734 1 view .LVU1217
 3873              		.cfi_endproc
 3874              	.LFE167:
 3876              		.section	.text.lv_draw_sw_blend,"ax",%progbits
 3877              		.align	1
 3878              		.global	lv_draw_sw_blend
 3879              		.syntax unified
 3880              		.thumb
 3881              		.thumb_func
 3883              	lv_draw_sw_blend:
 3884              	.LVL445:
 3885              	.LFB161:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 3886              		.loc 1 96 1 is_stmt 1 view -0
 3887              		.cfi_startproc
 3888              		@ args = 0, pretend = 0, frame = 8
 3889              		@ frame_needed = 0, uses_anonymous_args = 0
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3890              		.loc 1 98 5 view .LVU1219
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3891              		.loc 1 98 11 is_stmt 0 view .LVU1220
 3892 0000 0B7E     		ldrb	r3, [r1, #24]	@ zero_extendqisi2
  98:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3893              		.loc 1 98 7 view .LVU1221
 3894 0002 022B     		cmp	r3, #2
 3895 0004 00D8     		bhi	.L249
 3896 0006 7047     		bx	lr
 3897              	.L249:
  96:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     /*Do not draw transparent things*/
 3898              		.loc 1 96 1 view .LVU1222
 3899 0008 30B5     		push	{r4, r5, lr}
 3900              		.cfi_def_cfa_offset 12
 3901              		.cfi_offset 4, -12
 3902              		.cfi_offset 5, -8
 3903              		.cfi_offset 14, -4
 3904 000a 83B0     		sub	sp, sp, #12
 3905              		.cfi_def_cfa_offset 24
 3906 000c 0546     		mov	r5, r0
 3907 000e 0C46     		mov	r4, r1
 100:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 121


 3908              		.loc 1 100 5 is_stmt 1 view .LVU1223
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3909              		.loc 1 101 5 view .LVU1224
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3910              		.loc 1 101 9 is_stmt 0 view .LVU1225
 3911 0010 8268     		ldr	r2, [r0, #8]
 3912 0012 0968     		ldr	r1, [r1]
 3913              	.LVL446:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3914              		.loc 1 101 9 view .LVU1226
 3915 0014 6846     		mov	r0, sp
 3916              	.LVL447:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3917              		.loc 1 101 9 view .LVU1227
 3918 0016 FFF7FEFF 		bl	_lv_area_intersect
 3919              	.LVL448:
 101:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3920              		.loc 1 101 7 view .LVU1228
 3921 001a 38B1     		cbz	r0, .L241
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3922              		.loc 1 103 5 is_stmt 1 view .LVU1229
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3923              		.loc 1 103 16 is_stmt 0 view .LVU1230
 3924 001c 6B6B     		ldr	r3, [r5, #52]
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3925              		.loc 1 103 7 view .LVU1231
 3926 001e 0BB1     		cbz	r3, .L243
 103:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3927              		.loc 1 103 35 is_stmt 1 discriminator 1 view .LVU1232
 3928 0020 2846     		mov	r0, r5
 3929 0022 9847     		blx	r3
 3930              	.LVL449:
 3931              	.L243:
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3932              		.loc 1 105 5 view .LVU1233
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3933              		.loc 1 105 35 is_stmt 0 view .LVU1234
 3934 0024 6B6D     		ldr	r3, [r5, #84]
 105:lvgl/src/draw/sw/lv_draw_sw_blend.c **** }
 3935              		.loc 1 105 6 view .LVU1235
 3936 0026 2146     		mov	r1, r4
 3937 0028 2846     		mov	r0, r5
 3938 002a 9847     		blx	r3
 3939              	.LVL450:
 3940              	.L241:
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3941              		.loc 1 106 1 view .LVU1236
 3942 002c 03B0     		add	sp, sp, #12
 3943              		.cfi_def_cfa_offset 12
 3944              		@ sp needed
 3945 002e 30BD     		pop	{r4, r5, pc}
 106:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 3946              		.loc 1 106 1 view .LVU1237
 3947              		.cfi_endproc
 3948              	.LFE161:
 3950              		.section	.text.lv_draw_sw_blend_basic,"ax",%progbits
 3951              		.align	1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 122


 3952              		.global	lv_draw_sw_blend_basic
 3953              		.syntax unified
 3954              		.thumb
 3955              		.thumb_func
 3957              	lv_draw_sw_blend_basic:
 3958              	.LVL451:
 3959              	.LFB162:
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 3960              		.loc 1 110 1 is_stmt 1 view -0
 3961              		.cfi_startproc
 3962              		@ args = 0, pretend = 0, frame = 16
 3963              		@ frame_needed = 0, uses_anonymous_args = 0
 110:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_opa_t * mask;
 3964              		.loc 1 110 1 is_stmt 0 view .LVU1239
 3965 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 3966              		.cfi_def_cfa_offset 36
 3967              		.cfi_offset 4, -36
 3968              		.cfi_offset 5, -32
 3969              		.cfi_offset 6, -28
 3970              		.cfi_offset 7, -24
 3971              		.cfi_offset 8, -20
 3972              		.cfi_offset 9, -16
 3973              		.cfi_offset 10, -12
 3974              		.cfi_offset 11, -8
 3975              		.cfi_offset 14, -4
 3976 0004 8BB0     		sub	sp, sp, #44
 3977              		.cfi_def_cfa_offset 80
 3978 0006 0646     		mov	r6, r0
 3979 0008 0C46     		mov	r4, r1
 111:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf == NULL) mask = NULL;
 3980              		.loc 1 111 5 is_stmt 1 view .LVU1240
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3981              		.loc 1 112 5 view .LVU1241
 112:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(dsc->mask_buf && dsc->mask_res == LV_DRAW_MASK_RES_TRANSP) return;
 3982              		.loc 1 112 11 is_stmt 0 view .LVU1242
 3983 000a CF68     		ldr	r7, [r1, #12]
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3984              		.loc 1 113 5 is_stmt 1 view .LVU1243
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3985              		.loc 1 113 7 is_stmt 0 view .LVU1244
 3986 000c 0FB1     		cbz	r7, .L251
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3987              		.loc 1 113 28 discriminator 1 view .LVU1245
 3988 000e 0B7C     		ldrb	r3, [r1, #16]	@ zero_extendqisi2
 113:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else if(dsc->mask_res == LV_DRAW_MASK_RES_FULL_COVER) mask = NULL;
 3989              		.loc 1 113 22 discriminator 1 view .LVU1246
 3990 0010 7BB1     		cbz	r3, .L250
 3991              	.L251:
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3992              		.loc 1 114 10 is_stmt 1 view .LVU1247
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3993              		.loc 1 114 16 is_stmt 0 view .LVU1248
 3994 0012 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 3995              		.loc 1 114 12 view .LVU1249
 3996 0014 012B     		cmp	r3, #1
 3997 0016 0FD0     		beq	.L273
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 123


 3998              	.L253:
 3999              	.LVL452:
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4000              		.loc 1 117 5 is_stmt 1 view .LVU1250
 117:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4001              		.loc 1 117 56 is_stmt 0 view .LVU1251
 4002 0018 7368     		ldr	r3, [r6, #4]
 4003              	.LVL453:
 4004              	.LBB209:
 4005              	.LBI209:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 4006              		.loc 2 123 26 is_stmt 1 view .LVU1252
 4007              	.LBB210:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4008              		.loc 2 125 5 view .LVU1253
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4009              		.loc 2 125 31 is_stmt 0 view .LVU1254
 4010 001a 9D88     		ldrh	r5, [r3, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4011              		.loc 2 125 44 view .LVU1255
 4012 001c 1B88     		ldrh	r3, [r3]
 4013              	.LVL454:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4014              		.loc 2 125 36 view .LVU1256
 4015 001e ED1A     		subs	r5, r5, r3
 4016 0020 ADB2     		uxth	r5, r5
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4017              		.loc 2 125 49 view .LVU1257
 4018 0022 0135     		adds	r5, r5, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4019              		.loc 2 125 12 view .LVU1258
 4020 0024 2DB2     		sxth	r5, r5
 4021              	.LVL455:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4022              		.loc 2 125 12 view .LVU1259
 4023              	.LBE210:
 4024              	.LBE209:
 119:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(!_lv_area_intersect(&blend_area, dsc->blend_area, draw_ctx->clip_area)) return;
 4025              		.loc 1 119 5 is_stmt 1 view .LVU1260
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4026              		.loc 1 120 5 view .LVU1261
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4027              		.loc 1 120 9 is_stmt 0 view .LVU1262
 4028 0026 B268     		ldr	r2, [r6, #8]
 4029 0028 2168     		ldr	r1, [r4]
 4030              	.LVL456:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4031              		.loc 1 120 9 view .LVU1263
 4032 002a 08A8     		add	r0, sp, #32
 4033              	.LVL457:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4034              		.loc 1 120 9 view .LVU1264
 4035 002c FFF7FEFF 		bl	_lv_area_intersect
 4036              	.LVL458:
 120:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4037              		.loc 1 120 7 view .LVU1265
 4038 0030 20B9     		cbnz	r0, .L274
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 124


 4039              	.LVL459:
 4040              	.L250:
 204:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4041              		.loc 1 204 1 view .LVU1266
 4042 0032 0BB0     		add	sp, sp, #44
 4043              		.cfi_remember_state
 4044              		.cfi_def_cfa_offset 36
 4045              		@ sp needed
 4046 0034 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 4047              	.LVL460:
 4048              	.L273:
 4049              		.cfi_restore_state
 114:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     else mask = dsc->mask_buf;
 4050              		.loc 1 114 64 view .LVU1267
 4051 0038 0027     		movs	r7, #0
 4052 003a EDE7     		b	.L253
 4053              	.LVL461:
 4054              	.L274:
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 4055              		.loc 1 122 5 is_stmt 1 view .LVU1268
 122:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_color_t * dest_buf = draw_ctx->buf;
 4056              		.loc 1 122 24 is_stmt 0 view .LVU1269
 4057 003c FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 4058              	.LVL462:
 4059 0040 0790     		str	r0, [sp, #28]
 4060              	.LVL463:
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 4061              		.loc 1 123 5 is_stmt 1 view .LVU1270
 123:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(disp->driver->set_px_cb == NULL) {
 4062              		.loc 1 123 18 is_stmt 0 view .LVU1271
 4063 0042 D6F800B0 		ldr	fp, [r6]
 4064              	.LVL464:
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 4065              		.loc 1 124 5 is_stmt 1 view .LVU1272
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 4066              		.loc 1 124 12 is_stmt 0 view .LVU1273
 4067 0046 0368     		ldr	r3, [r0]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 4068              		.loc 1 124 20 view .LVU1274
 4069 0048 DA69     		ldr	r2, [r3, #28]
 124:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(disp->driver->screen_transp == 0) {
 4070              		.loc 1 124 7 view .LVU1275
 4071 004a 002A     		cmp	r2, #0
 4072 004c 5ED0     		beq	.L275
 4073              	.LVL465:
 4074              	.L254:
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 4075              		.loc 1 137 5 is_stmt 1 view .LVU1276
 137:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     lv_coord_t src_stride;
 4076              		.loc 1 137 24 is_stmt 0 view .LVU1277
 4077 004e D4F804A0 		ldr	r10, [r4, #4]
 4078              	.LVL466:
 138:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(src_buf) {
 4079              		.loc 1 138 5 is_stmt 1 view .LVU1278
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
 4080              		.loc 1 139 5 view .LVU1279
 139:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_stride = lv_area_get_width(dsc->blend_area);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 125


 4081              		.loc 1 139 7 is_stmt 0 view .LVU1280
 4082 0052 BAF1000F 		cmp	r10, #0
 4083 0056 7FD0     		beq	.L269
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 4084              		.loc 1 140 9 is_stmt 1 view .LVU1281
 140:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         src_buf += src_stride * (blend_area.y1 - dsc->blend_area->y1) + (blend_area.x1 - dsc->blend
 4085              		.loc 1 140 22 is_stmt 0 view .LVU1282
 4086 0058 2268     		ldr	r2, [r4]
 4087              	.LVL467:
 4088              	.LBB211:
 4089              	.LBI211:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 4090              		.loc 2 123 26 is_stmt 1 view .LVU1283
 4091              	.LBB212:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4092              		.loc 2 125 5 view .LVU1284
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4093              		.loc 2 125 31 is_stmt 0 view .LVU1285
 4094 005a B2F80490 		ldrh	r9, [r2, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4095              		.loc 2 125 44 view .LVU1286
 4096 005e B2F90010 		ldrsh	r1, [r2]
 4097 0062 88B2     		uxth	r0, r1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4098              		.loc 2 125 36 view .LVU1287
 4099 0064 A9EB0009 		sub	r9, r9, r0
 4100 0068 1FFA89F9 		uxth	r9, r9
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4101              		.loc 2 125 49 view .LVU1288
 4102 006c 09F10109 		add	r9, r9, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4103              		.loc 2 125 12 view .LVU1289
 4104 0070 0FFA89F9 		sxth	r9, r9
 4105              	.LVL468:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4106              		.loc 2 125 12 view .LVU1290
 4107              	.LBE212:
 4108              	.LBE211:
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4109              		.loc 1 141 9 is_stmt 1 view .LVU1291
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4110              		.loc 1 141 44 is_stmt 0 view .LVU1292
 4111 0074 BDF92200 		ldrsh	r0, [sp, #34]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4112              		.loc 1 141 65 view .LVU1293
 4113 0078 B2F90220 		ldrsh	r2, [r2, #2]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4114              		.loc 1 141 48 view .LVU1294
 4115 007c 801A     		subs	r0, r0, r2
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4116              		.loc 1 141 84 view .LVU1295
 4117 007e BDF92020 		ldrsh	r2, [sp, #32]
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4118              		.loc 1 141 88 view .LVU1296
 4119 0082 511A     		subs	r1, r2, r1
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4120              		.loc 1 141 71 view .LVU1297
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 126


 4121 0084 00FB0911 		mla	r1, r0, r9, r1
 141:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4122              		.loc 1 141 17 view .LVU1298
 4123 0088 0AEB810A 		add	r10, r10, r1, lsl #2
 4124              	.LVL469:
 4125              	.L256:
 147:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     if(mask) {
 4126              		.loc 1 147 5 is_stmt 1 view .LVU1299
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 4127              		.loc 1 148 5 view .LVU1300
 148:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         /*Round the values in the mask if anti-aliasing is disabled*/
 4128              		.loc 1 148 7 is_stmt 0 view .LVU1301
 4129 008c 002F     		cmp	r7, #0
 4130 008e 76D0     		beq	.L270
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 4131              		.loc 1 150 9 is_stmt 1 view .LVU1302
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 4132              		.loc 1 150 39 is_stmt 0 view .LVU1303
 4133 0090 93F81080 		ldrb	r8, [r3, #16]	@ zero_extendqisi2
 150:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t mask_size = lv_area_get_size(dsc->mask_area);
 4134              		.loc 1 150 11 view .LVU1304
 4135 0094 18F00808 		ands	r8, r8, #8
 4136 0098 61D0     		beq	.L276
 4137              	.L258:
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 4138              		.loc 1 158 9 is_stmt 1 view .LVU1305
 158:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         mask += mask_stride * (blend_area.y1 - dsc->mask_area->y1) + (blend_area.x1 - dsc->mask_are
 4139              		.loc 1 158 23 is_stmt 0 view .LVU1306
 4140 009a 6069     		ldr	r0, [r4, #20]
 4141              	.LVL470:
 4142              	.LBB213:
 4143              	.LBI213:
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 4144              		.loc 2 123 26 is_stmt 1 view .LVU1307
 4145              	.LBB214:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4146              		.loc 2 125 5 view .LVU1308
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4147              		.loc 2 125 31 is_stmt 0 view .LVU1309
 4148 009c B0F80480 		ldrh	r8, [r0, #4]
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4149              		.loc 2 125 44 view .LVU1310
 4150 00a0 B0F90020 		ldrsh	r2, [r0]
 4151 00a4 93B2     		uxth	r3, r2
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4152              		.loc 2 125 36 view .LVU1311
 4153 00a6 A8EB0308 		sub	r8, r8, r3
 4154 00aa 1FFA88F8 		uxth	r8, r8
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4155              		.loc 2 125 49 view .LVU1312
 4156 00ae 08F10108 		add	r8, r8, #1
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4157              		.loc 2 125 12 view .LVU1313
 4158 00b2 0FFA88F8 		sxth	r8, r8
 4159              	.LVL471:
 125:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 4160              		.loc 2 125 12 view .LVU1314
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 127


 4161              	.LBE214:
 4162              	.LBE213:
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4163              		.loc 1 159 9 is_stmt 1 view .LVU1315
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4164              		.loc 1 159 42 is_stmt 0 view .LVU1316
 4165 00b6 BDF92230 		ldrsh	r3, [sp, #34]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4166              		.loc 1 159 62 view .LVU1317
 4167 00ba B0F90210 		ldrsh	r1, [r0, #2]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4168              		.loc 1 159 46 view .LVU1318
 4169 00be 591A     		subs	r1, r3, r1
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4170              		.loc 1 159 81 view .LVU1319
 4171 00c0 BDF92030 		ldrsh	r3, [sp, #32]
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4172              		.loc 1 159 85 view .LVU1320
 4173 00c4 9B1A     		subs	r3, r3, r2
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4174              		.loc 1 159 68 view .LVU1321
 4175 00c6 01FB0833 		mla	r3, r1, r8, r3
 159:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4176              		.loc 1 159 14 view .LVU1322
 4177 00ca 1F44     		add	r7, r7, r3
 4178              	.LVL472:
 4179              	.L257:
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4180              		.loc 1 166 5 is_stmt 1 view .LVU1323
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4181              		.loc 1 166 40 is_stmt 0 view .LVU1324
 4182 00cc 7368     		ldr	r3, [r6, #4]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4183              		.loc 1 166 50 view .LVU1325
 4184 00ce 1988     		ldrh	r1, [r3]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4185              		.loc 1 166 75 view .LVU1326
 4186 00d0 5A88     		ldrh	r2, [r3, #2]
 166:lvgl/src/draw/sw/lv_draw_sw_blend.c **** 
 4187              		.loc 1 166 5 view .LVU1327
 4188 00d2 5242     		rsbs	r2, r2, #0
 4189 00d4 4942     		rsbs	r1, r1, #0
 4190 00d6 12B2     		sxth	r2, r2
 4191 00d8 09B2     		sxth	r1, r1
 4192 00da 08A8     		add	r0, sp, #32
 4193 00dc FFF7FEFF 		bl	lv_area_move
 4194              	.LVL473:
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4195              		.loc 1 168 5 is_stmt 1 view .LVU1328
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4196              		.loc 1 168 12 is_stmt 0 view .LVU1329
 4197 00e0 079B     		ldr	r3, [sp, #28]
 4198 00e2 1B68     		ldr	r3, [r3]
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4199              		.loc 1 168 20 view .LVU1330
 4200 00e4 DB69     		ldr	r3, [r3, #28]
 168:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 128


 4201              		.loc 1 168 7 view .LVU1331
 4202 00e6 002B     		cmp	r3, #0
 4203 00e8 58D0     		beq	.L262
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4204              		.loc 1 169 9 is_stmt 1 view .LVU1332
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4205              		.loc 1 169 15 is_stmt 0 view .LVU1333
 4206 00ea 6368     		ldr	r3, [r4, #4]
 169:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_set_px(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4207              		.loc 1 169 11 view .LVU1334
 4208 00ec 002B     		cmp	r3, #0
 4209 00ee 49D0     		beq	.L277
 173:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4210              		.loc 1 173 13 is_stmt 1 view .LVU1335
 4211 00f0 CDF80C80 		str	r8, [sp, #12]
 4212 00f4 0297     		str	r7, [sp, #8]
 4213 00f6 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 4214 00f8 0193     		str	r3, [sp, #4]
 4215 00fa CDF80090 		str	r9, [sp]
 4216 00fe 5346     		mov	r3, r10
 4217 0100 2A46     		mov	r2, r5
 4218 0102 08A9     		add	r1, sp, #32
 4219 0104 5846     		mov	r0, fp
 4220 0106 FFF7FEFF 		bl	map_set_px
 4221              	.LVL474:
 4222 010a 92E7     		b	.L250
 4223              	.LVL475:
 4224              	.L275:
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 4225              		.loc 1 125 9 view .LVU1336
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 4226              		.loc 1 125 40 is_stmt 0 view .LVU1337
 4227 010c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 125:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) + (blend_area.x1 - d
 4228              		.loc 1 125 11 view .LVU1338
 4229 010e 12F0400F 		tst	r2, #64
 4230 0112 0FD1     		bne	.L255
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4231              		.loc 1 126 13 is_stmt 1 view .LVU1339
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4232              		.loc 1 126 50 is_stmt 0 view .LVU1340
 4233 0114 BDF92220 		ldrsh	r2, [sp, #34]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4234              		.loc 1 126 64 view .LVU1341
 4235 0118 7068     		ldr	r0, [r6, #4]
 4236              	.LVL476:
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4237              		.loc 1 126 74 view .LVU1342
 4238 011a B0F90210 		ldrsh	r1, [r0, #2]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4239              		.loc 1 126 54 view .LVU1343
 4240 011e 511A     		subs	r1, r2, r1
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4241              		.loc 1 126 93 view .LVU1344
 4242 0120 BDF92020 		ldrsh	r2, [sp, #32]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4243              		.loc 1 126 117 view .LVU1345
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 129


 4244 0124 B0F90000 		ldrsh	r0, [r0]
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4245              		.loc 1 126 97 view .LVU1346
 4246 0128 121A     		subs	r2, r2, r0
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4247              		.loc 1 126 80 view .LVU1347
 4248 012a 01FB0522 		mla	r2, r1, r5, r2
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4249              		.loc 1 126 22 view .LVU1348
 4250 012e 0BEB820B 		add	fp, fp, r2, lsl #2
 4251              	.LVL477:
 126:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4252              		.loc 1 126 22 view .LVU1349
 4253 0132 8CE7     		b	.L254
 4254              	.LVL478:
 4255              	.L255:
 4256              	.LBB215:
 130:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += dest_stride * (blend_area.y1 - draw_ctx->buf_area->y1) * LV_IMG_PX_SIZE_AL
 4257              		.loc 1 130 13 is_stmt 1 view .LVU1350
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4258              		.loc 1 131 13 view .LVU1351
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4259              		.loc 1 131 51 is_stmt 0 view .LVU1352
 4260 0134 BDF92220 		ldrsh	r2, [sp, #34]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4261              		.loc 1 131 65 view .LVU1353
 4262 0138 7068     		ldr	r0, [r6, #4]
 4263              	.LVL479:
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4264              		.loc 1 131 75 view .LVU1354
 4265 013a B0F90210 		ldrsh	r1, [r0, #2]
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4266              		.loc 1 131 55 view .LVU1355
 4267 013e 521A     		subs	r2, r2, r1
 131:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf8 += (blend_area.x1 - draw_ctx->buf_area->x1) * LV_IMG_PX_SIZE_ALPHA_BYTE;
 4268              		.loc 1 131 38 view .LVU1356
 4269 0140 02FB05F1 		mul	r1, r2, r5
 4270              	.LVL480:
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4271              		.loc 1 132 13 is_stmt 1 view .LVU1357
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4272              		.loc 1 132 37 is_stmt 0 view .LVU1358
 4273 0144 BDF92020 		ldrsh	r2, [sp, #32]
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4274              		.loc 1 132 61 view .LVU1359
 4275 0148 B0F90000 		ldrsh	r0, [r0]
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4276              		.loc 1 132 41 view .LVU1360
 4277 014c 121A     		subs	r2, r2, r0
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4278              		.loc 1 132 67 view .LVU1361
 4279 014e 9200     		lsls	r2, r2, #2
 132:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             dest_buf = (lv_color_t *)dest_buf8;
 4280              		.loc 1 132 23 view .LVU1362
 4281 0150 02EB8102 		add	r2, r2, r1, lsl #2
 4282 0154 9344     		add	fp, fp, r2
 4283              	.LVL481:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 130


 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4284              		.loc 1 133 13 is_stmt 1 view .LVU1363
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4285              		.loc 1 133 13 is_stmt 0 view .LVU1364
 4286 0156 7AE7     		b	.L254
 4287              	.LVL482:
 4288              	.L269:
 133:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4289              		.loc 1 133 13 view .LVU1365
 4290              	.LBE215:
 144:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4291              		.loc 1 144 20 view .LVU1366
 4292 0158 4FF00009 		mov	r9, #0
 4293 015c 96E7     		b	.L256
 4294              	.LVL483:
 4295              	.L276:
 4296              	.LBB216:
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 4297              		.loc 1 151 13 is_stmt 1 view .LVU1367
 151:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             int32_t i;
 4298              		.loc 1 151 33 is_stmt 0 view .LVU1368
 4299 015e 6069     		ldr	r0, [r4, #20]
 4300 0160 FFF7FEFF 		bl	lv_area_get_size
 4301              	.LVL484:
 152:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             for(i = 0; i < mask_size; i++) {
 4302              		.loc 1 152 13 is_stmt 1 view .LVU1369
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4303              		.loc 1 153 13 view .LVU1370
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4304              		.loc 1 153 19 is_stmt 0 view .LVU1371
 4305 0164 0023     		movs	r3, #0
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4306              		.loc 1 153 13 view .LVU1372
 4307 0166 02E0     		b	.L259
 4308              	.LVL485:
 4309              	.L271:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 4310              		.loc 1 154 25 view .LVU1373
 4311 0168 4146     		mov	r1, r8
 4312              	.L260:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 4313              		.loc 1 154 25 discriminator 4 view .LVU1374
 4314 016a 1170     		strb	r1, [r2]
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4315              		.loc 1 153 39 is_stmt 1 discriminator 4 view .LVU1375
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4316              		.loc 1 153 40 is_stmt 0 discriminator 4 view .LVU1376
 4317 016c 0133     		adds	r3, r3, #1
 4318              	.LVL486:
 4319              	.L259:
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4320              		.loc 1 153 24 is_stmt 1 discriminator 2 view .LVU1377
 153:lvgl/src/draw/sw/lv_draw_sw_blend.c ****                 mask[i] = mask[i] > 128 ? LV_OPA_COVER : LV_OPA_TRANSP;
 4321              		.loc 1 153 13 is_stmt 0 discriminator 2 view .LVU1378
 4322 016e 8342     		cmp	r3, r0
 4323 0170 93DA     		bge	.L258
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 131


 4324              		.loc 1 154 17 is_stmt 1 view .LVU1379
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 4325              		.loc 1 154 31 is_stmt 0 view .LVU1380
 4326 0172 FA18     		adds	r2, r7, r3
 4327 0174 F95C     		ldrb	r1, [r7, r3]	@ zero_extendqisi2
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 4328              		.loc 1 154 25 view .LVU1381
 4329 0176 8029     		cmp	r1, #128
 4330 0178 F6D9     		bls	.L271
 4331 017a FF21     		movs	r1, #255
 4332 017c F5E7     		b	.L260
 4333              	.LVL487:
 4334              	.L270:
 154:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             }
 4335              		.loc 1 154 25 view .LVU1382
 4336              	.LBE216:
 163:lvgl/src/draw/sw/lv_draw_sw_blend.c ****     }
 4337              		.loc 1 163 21 view .LVU1383
 4338 017e 4FF00008 		mov	r8, #0
 4339 0182 A3E7     		b	.L257
 4340              	.LVL488:
 4341              	.L277:
 170:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4342              		.loc 1 170 13 is_stmt 1 view .LVU1384
 4343 0184 CDF80880 		str	r8, [sp, #8]
 4344 0188 0197     		str	r7, [sp, #4]
 4345 018a 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 4346 018c 0093     		str	r3, [sp]
 4347 018e A368     		ldr	r3, [r4, #8]
 4348 0190 2A46     		mov	r2, r5
 4349 0192 08A9     		add	r1, sp, #32
 4350 0194 5846     		mov	r0, fp
 4351 0196 FFF7FEFF 		bl	fill_set_px
 4352              	.LVL489:
 4353 019a 4AE7     		b	.L250
 4354              	.L262:
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4355              		.loc 1 186 10 view .LVU1385
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4356              		.loc 1 186 16 is_stmt 0 view .LVU1386
 4357 019c 637E     		ldrb	r3, [r4, #25]	@ zero_extendqisi2
 186:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         if(dsc->src_buf == NULL) {
 4358              		.loc 1 186 12 view .LVU1387
 4359 019e DBB9     		cbnz	r3, .L265
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4360              		.loc 1 187 9 is_stmt 1 view .LVU1388
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4361              		.loc 1 187 15 is_stmt 0 view .LVU1389
 4362 01a0 6368     		ldr	r3, [r4, #4]
 187:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_normal(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_stride
 4363              		.loc 1 187 11 view .LVU1390
 4364 01a2 6BB1     		cbz	r3, .L278
 191:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4365              		.loc 1 191 13 is_stmt 1 view .LVU1391
 4366 01a4 CDF80C80 		str	r8, [sp, #12]
 4367 01a8 0297     		str	r7, [sp, #8]
 4368 01aa 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 132


 4369 01ac 0193     		str	r3, [sp, #4]
 4370 01ae CDF80090 		str	r9, [sp]
 4371 01b2 5346     		mov	r3, r10
 4372 01b4 2A46     		mov	r2, r5
 4373 01b6 08A9     		add	r1, sp, #32
 4374 01b8 5846     		mov	r0, fp
 4375 01ba FFF7FEFF 		bl	map_normal
 4376              	.LVL490:
 4377 01be 38E7     		b	.L250
 4378              	.L278:
 188:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4379              		.loc 1 188 13 view .LVU1392
 4380 01c0 CDF80880 		str	r8, [sp, #8]
 4381 01c4 0197     		str	r7, [sp, #4]
 4382 01c6 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 4383 01c8 0093     		str	r3, [sp]
 4384 01ca A368     		ldr	r3, [r4, #8]
 4385 01cc 2A46     		mov	r2, r5
 4386 01ce 08A9     		add	r1, sp, #32
 4387 01d0 5846     		mov	r0, fp
 4388 01d2 FFF7FEFF 		bl	fill_normal
 4389              	.LVL491:
 4390 01d6 2CE7     		b	.L250
 4391              	.L265:
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 4392              		.loc 1 196 9 view .LVU1393
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 4393              		.loc 1 196 15 is_stmt 0 view .LVU1394
 4394 01d8 6268     		ldr	r2, [r4, #4]
 196:lvgl/src/draw/sw/lv_draw_sw_blend.c ****             fill_blended(dest_buf, &blend_area, dest_stride, dsc->color, dsc->opa, mask, mask_strid
 4395              		.loc 1 196 11 view .LVU1395
 4396 01da 72B1     		cbz	r2, .L279
 200:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4397              		.loc 1 200 13 is_stmt 1 view .LVU1396
 4398 01dc 0493     		str	r3, [sp, #16]
 4399 01de CDF80C80 		str	r8, [sp, #12]
 4400 01e2 0297     		str	r7, [sp, #8]
 4401 01e4 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 4402 01e6 0193     		str	r3, [sp, #4]
 4403 01e8 CDF80090 		str	r9, [sp]
 4404 01ec 5346     		mov	r3, r10
 4405 01ee 2A46     		mov	r2, r5
 4406 01f0 08A9     		add	r1, sp, #32
 4407 01f2 5846     		mov	r0, fp
 4408 01f4 FFF7FEFF 		bl	map_blended
 4409              	.LVL492:
 4410 01f8 1BE7     		b	.L250
 4411              	.L279:
 197:lvgl/src/draw/sw/lv_draw_sw_blend.c ****         }
 4412              		.loc 1 197 13 view .LVU1397
 4413 01fa 0393     		str	r3, [sp, #12]
 4414 01fc CDF80880 		str	r8, [sp, #8]
 4415 0200 0197     		str	r7, [sp, #4]
 4416 0202 237E     		ldrb	r3, [r4, #24]	@ zero_extendqisi2
 4417 0204 0093     		str	r3, [sp]
 4418 0206 A368     		ldr	r3, [r4, #8]
 4419 0208 2A46     		mov	r2, r5
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 133


 4420 020a 08A9     		add	r1, sp, #32
 4421 020c 5846     		mov	r0, fp
 4422 020e FFF7FEFF 		bl	fill_blended
 4423              	.LVL493:
 4424 0212 0EE7     		b	.L250
 4425              		.cfi_endproc
 4426              	.LFE162:
 4428              		.text
 4429              	.Letext0:
 4430              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 4431              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 4432              		.file 6 "lvgl/src/draw/sw/../../misc/lv_types.h"
 4433              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 4434              		.file 8 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 4435              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 4436              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 4437              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 4438              		.file 12 "lvgl/src/draw/sw/../lv_draw_mask.h"
 4439              		.file 13 "lvgl/src/draw/sw/lv_draw_sw_blend.h"
 4440              		.file 14 "lvgl/src/draw/sw/../lv_img_buf.h"
 4441              		.file 15 "lvgl/src/draw/sw/../../core/lv_obj.h"
 4442              		.file 16 "lvgl/src/draw/sw/../lv_draw_rect.h"
 4443              		.file 17 "lvgl/src/draw/sw/../lv_draw_label.h"
 4444              		.file 18 "lvgl/src/draw/sw/../lv_draw_img.h"
 4445              		.file 19 "lvgl/src/draw/sw/../lv_draw_line.h"
 4446              		.file 20 "lvgl/src/draw/sw/../lv_draw_arc.h"
 4447              		.file 21 "lvgl/src/draw/sw/../lv_draw_layer.h"
 4448              		.file 22 "lvgl/src/draw/sw/../lv_draw.h"
 4449              		.file 23 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 4450              		.file 24 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 4451              		.file 25 "lvgl/src/draw/sw/../../core/lv_group.h"
 4452              		.file 26 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 4453              		.file 27 "lvgl/src/draw/sw/lv_draw_sw.h"
 4454              		.file 28 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 4455              		.file 29 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 4456              		.file 30 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 4457              		.file 31 "lvgl/src/draw/sw/../../core/lv_event.h"
 4458              		.file 32 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 4459              		.file 33 "lvgl/src/draw/sw/../../core/lv_refr.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s 			page 134


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_blend.c
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:19     .text.fill_blended:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:24     .text.fill_blended:00000000 fill_blended
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:386    .text.fill_blended:00000144 $d
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2444   .text.color_blend_true_color_additive:00000000 color_blend_true_color_additive
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2591   .text.color_blend_true_color_subtractive:00000000 color_blend_true_color_subtractive
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2736   .text.color_blend_true_color_multiply:00000000 color_blend_true_color_multiply
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:394    .text.map_blended:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:399    .text.map_blended:00000000 map_blended
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:823    .text.map_blended:00000184 $d
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:831    .text.fill_set_px:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:836    .text.fill_set_px:00000000 fill_set_px
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:1077   .text.map_set_px:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:1082   .text.map_set_px:00000000 map_set_px
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:1318   .text.fill_normal:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:1323   .text.fill_normal:00000000 fill_normal
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2439   .text.color_blend_true_color_additive:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2586   .text.color_blend_true_color_subtractive:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2731   .text.color_blend_true_color_multiply:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2861   .text.map_normal:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:2866   .text.map_normal:00000000 map_normal
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:3877   .text.lv_draw_sw_blend:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:3883   .text.lv_draw_sw_blend:00000000 lv_draw_sw_blend
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:3951   .text.lv_draw_sw_blend_basic:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccP7OzhE.s:3957   .text.lv_draw_sw_blend_basic:00000000 lv_draw_sw_blend_basic

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_color_fill
lv_memcpy
_lv_area_intersect
lv_area_move
lv_area_get_size
