ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_img.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.draw_cleanup,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	draw_cleanup:
  25              	.LVL0:
  26              	.LFB170:
  27              		.file 1 "lvgl/src/draw/lv_draw_img.c"
   1:lvgl/src/draw/lv_draw_img.c **** /**
   2:lvgl/src/draw/lv_draw_img.c ****  * @file lv_draw_img.c
   3:lvgl/src/draw/lv_draw_img.c ****  *
   4:lvgl/src/draw/lv_draw_img.c ****  */
   5:lvgl/src/draw/lv_draw_img.c **** 
   6:lvgl/src/draw/lv_draw_img.c **** /*********************
   7:lvgl/src/draw/lv_draw_img.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_img.c ****  *********************/
   9:lvgl/src/draw/lv_draw_img.c **** #include "lv_draw_img.h"
  10:lvgl/src/draw/lv_draw_img.c **** #include "lv_img_cache.h"
  11:lvgl/src/draw/lv_draw_img.c **** #include "../hal/lv_hal_disp.h"
  12:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_log.h"
  13:lvgl/src/draw/lv_draw_img.c **** #include "../core/lv_refr.h"
  14:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_mem.h"
  15:lvgl/src/draw/lv_draw_img.c **** #include "../misc/lv_math.h"
  16:lvgl/src/draw/lv_draw_img.c **** 
  17:lvgl/src/draw/lv_draw_img.c **** /*********************
  18:lvgl/src/draw/lv_draw_img.c ****  *      DEFINES
  19:lvgl/src/draw/lv_draw_img.c ****  *********************/
  20:lvgl/src/draw/lv_draw_img.c **** 
  21:lvgl/src/draw/lv_draw_img.c **** /**********************
  22:lvgl/src/draw/lv_draw_img.c ****  *      TYPEDEFS
  23:lvgl/src/draw/lv_draw_img.c ****  **********************/
  24:lvgl/src/draw/lv_draw_img.c **** 
  25:lvgl/src/draw/lv_draw_img.c **** /**********************
  26:lvgl/src/draw/lv_draw_img.c ****  *  STATIC PROTOTYPES
  27:lvgl/src/draw/lv_draw_img.c ****  **********************/
  28:lvgl/src/draw/lv_draw_img.c **** static lv_res_t /* LV_ATTRIBUTE_FAST_MEM */ decode_and_draw(lv_draw_ctx_t * draw_ctx,
  29:lvgl/src/draw/lv_draw_img.c ****                                                             const lv_draw_img_dsc_t * draw_dsc,
  30:lvgl/src/draw/lv_draw_img.c ****                                                             const lv_area_t * coords, const void * 
  31:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 2


  32:lvgl/src/draw/lv_draw_img.c **** static void show_error(lv_draw_ctx_t * draw_ctx, const lv_area_t * coords, const char * msg);
  33:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache);
  34:lvgl/src/draw/lv_draw_img.c **** 
  35:lvgl/src/draw/lv_draw_img.c **** /**********************
  36:lvgl/src/draw/lv_draw_img.c ****  *  STATIC VARIABLES
  37:lvgl/src/draw/lv_draw_img.c ****  **********************/
  38:lvgl/src/draw/lv_draw_img.c **** 
  39:lvgl/src/draw/lv_draw_img.c **** /**********************
  40:lvgl/src/draw/lv_draw_img.c ****  *      MACROS
  41:lvgl/src/draw/lv_draw_img.c ****  **********************/
  42:lvgl/src/draw/lv_draw_img.c **** 
  43:lvgl/src/draw/lv_draw_img.c **** /**********************
  44:lvgl/src/draw/lv_draw_img.c ****  *   GLOBAL FUNCTIONS
  45:lvgl/src/draw/lv_draw_img.c ****  **********************/
  46:lvgl/src/draw/lv_draw_img.c **** 
  47:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img_dsc_init(lv_draw_img_dsc_t * dsc)
  48:lvgl/src/draw/lv_draw_img.c **** {
  49:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
  53:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
  54:lvgl/src/draw/lv_draw_img.c **** }
  55:lvgl/src/draw/lv_draw_img.c **** 
  56:lvgl/src/draw/lv_draw_img.c **** /**
  57:lvgl/src/draw/lv_draw_img.c ****  * Draw an image
  58:lvgl/src/draw/lv_draw_img.c ****  * @param coords the coordinates of the image
  59:lvgl/src/draw/lv_draw_img.c ****  * @param mask the image will be drawn only in this area
  60:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to a lv_color_t array which contains the pixels of the image
  61:lvgl/src/draw/lv_draw_img.c ****  * @param dsc pointer to an initialized `lv_draw_img_dsc_t` variable
  62:lvgl/src/draw/lv_draw_img.c ****  */
  63:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * dsc, const lv_area_t * coords,
  64:lvgl/src/draw/lv_draw_img.c **** {
  65:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
  66:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
  67:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
  68:lvgl/src/draw/lv_draw_img.c ****         return;
  69:lvgl/src/draw/lv_draw_img.c ****     }
  70:lvgl/src/draw/lv_draw_img.c **** 
  71:lvgl/src/draw/lv_draw_img.c ****     if(dsc->opa <= LV_OPA_MIN) return;
  72:lvgl/src/draw/lv_draw_img.c **** 
  73:lvgl/src/draw/lv_draw_img.c ****     lv_res_t res = LV_RES_INV;
  74:lvgl/src/draw/lv_draw_img.c **** 
  75:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img) {
  76:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
  77:lvgl/src/draw/lv_draw_img.c ****     }
  78:lvgl/src/draw/lv_draw_img.c **** 
  79:lvgl/src/draw/lv_draw_img.c ****     if(res != LV_RES_OK) {
  80:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
  81:lvgl/src/draw/lv_draw_img.c ****     }
  82:lvgl/src/draw/lv_draw_img.c **** 
  83:lvgl/src/draw/lv_draw_img.c ****     if(res != LV_RES_OK) {
  84:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
  85:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
  86:lvgl/src/draw/lv_draw_img.c ****     }
  87:lvgl/src/draw/lv_draw_img.c **** }
  88:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 3


  89:lvgl/src/draw/lv_draw_img.c **** /**
  90:lvgl/src/draw/lv_draw_img.c ****  * Get the pixel size of a color format in bits
  91:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
  92:lvgl/src/draw/lv_draw_img.c ****  * @return the pixel size in bits
  93:lvgl/src/draw/lv_draw_img.c ****  */
  94:lvgl/src/draw/lv_draw_img.c **** uint8_t lv_img_cf_get_px_size(lv_img_cf_t cf)
  95:lvgl/src/draw/lv_draw_img.c **** {
  96:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
  97:lvgl/src/draw/lv_draw_img.c **** 
  98:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
  99:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 100:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW:
 101:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 102:lvgl/src/draw/lv_draw_img.c ****             break;
 103:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR:
 104:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 105:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_COLOR_SIZE;
 106:lvgl/src/draw/lv_draw_img.c ****             break;
 107:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 108:lvgl/src/draw/lv_draw_img.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE << 3;
 109:lvgl/src/draw/lv_draw_img.c ****             break;
 110:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 111:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 112:lvgl/src/draw/lv_draw_img.c ****             px_size = 1;
 113:lvgl/src/draw/lv_draw_img.c ****             break;
 114:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 115:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 116:lvgl/src/draw/lv_draw_img.c ****             px_size = 2;
 117:lvgl/src/draw/lv_draw_img.c ****             break;
 118:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 119:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 120:lvgl/src/draw/lv_draw_img.c ****             px_size = 4;
 121:lvgl/src/draw/lv_draw_img.c ****             break;
 122:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 123:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 124:lvgl/src/draw/lv_draw_img.c ****             px_size = 8;
 125:lvgl/src/draw/lv_draw_img.c ****             break;
 126:lvgl/src/draw/lv_draw_img.c ****         default:
 127:lvgl/src/draw/lv_draw_img.c ****             px_size = 0;
 128:lvgl/src/draw/lv_draw_img.c ****             break;
 129:lvgl/src/draw/lv_draw_img.c ****     }
 130:lvgl/src/draw/lv_draw_img.c **** 
 131:lvgl/src/draw/lv_draw_img.c ****     return px_size;
 132:lvgl/src/draw/lv_draw_img.c **** }
 133:lvgl/src/draw/lv_draw_img.c **** 
 134:lvgl/src/draw/lv_draw_img.c **** /**
 135:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format is chroma keyed or not
 136:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 137:lvgl/src/draw/lv_draw_img.c ****  * @return true: chroma keyed; false: not chroma keyed
 138:lvgl/src/draw/lv_draw_img.c ****  */
 139:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_is_chroma_keyed(lv_img_cf_t cf)
 140:lvgl/src/draw/lv_draw_img.c **** {
 141:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 142:lvgl/src/draw/lv_draw_img.c **** 
 143:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 144:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 145:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_CHROMA_KEYED:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 4


 146:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = true;
 147:lvgl/src/draw/lv_draw_img.c ****             break;
 148:lvgl/src/draw/lv_draw_img.c **** 
 149:lvgl/src/draw/lv_draw_img.c ****         default:
 150:lvgl/src/draw/lv_draw_img.c ****             is_chroma_keyed = false;
 151:lvgl/src/draw/lv_draw_img.c ****             break;
 152:lvgl/src/draw/lv_draw_img.c ****     }
 153:lvgl/src/draw/lv_draw_img.c **** 
 154:lvgl/src/draw/lv_draw_img.c ****     return is_chroma_keyed;
 155:lvgl/src/draw/lv_draw_img.c **** }
 156:lvgl/src/draw/lv_draw_img.c **** 
 157:lvgl/src/draw/lv_draw_img.c **** /**
 158:lvgl/src/draw/lv_draw_img.c ****  * Check if a color format has alpha channel or not
 159:lvgl/src/draw/lv_draw_img.c ****  * @param cf a color format (`LV_IMG_CF_...`)
 160:lvgl/src/draw/lv_draw_img.c ****  * @return true: has alpha channel; false: doesn't have alpha channel
 161:lvgl/src/draw/lv_draw_img.c ****  */
 162:lvgl/src/draw/lv_draw_img.c **** bool lv_img_cf_has_alpha(lv_img_cf_t cf)
 163:lvgl/src/draw/lv_draw_img.c **** {
 164:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 165:lvgl/src/draw/lv_draw_img.c **** 
 166:lvgl/src/draw/lv_draw_img.c ****     switch(cf) {
 167:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 168:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_RAW_ALPHA:
 169:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_1BIT:
 170:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 171:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 172:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 173:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_1BIT:
 174:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_2BIT:
 175:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_4BIT:
 176:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_ALPHA_8BIT:
 177:lvgl/src/draw/lv_draw_img.c ****             has_alpha = true;
 178:lvgl/src/draw/lv_draw_img.c ****             break;
 179:lvgl/src/draw/lv_draw_img.c ****         default:
 180:lvgl/src/draw/lv_draw_img.c ****             has_alpha = false;
 181:lvgl/src/draw/lv_draw_img.c ****             break;
 182:lvgl/src/draw/lv_draw_img.c ****     }
 183:lvgl/src/draw/lv_draw_img.c **** 
 184:lvgl/src/draw/lv_draw_img.c ****     return has_alpha;
 185:lvgl/src/draw/lv_draw_img.c **** }
 186:lvgl/src/draw/lv_draw_img.c **** 
 187:lvgl/src/draw/lv_draw_img.c **** /**
 188:lvgl/src/draw/lv_draw_img.c ****  * Get the type of an image source
 189:lvgl/src/draw/lv_draw_img.c ****  * @param src pointer to an image source:
 190:lvgl/src/draw/lv_draw_img.c ****  *  - pointer to an 'lv_img_t' variable (image stored internally and compiled into the code)
 191:lvgl/src/draw/lv_draw_img.c ****  *  - a path to a file (e.g. "S:/folder/image.bin")
 192:lvgl/src/draw/lv_draw_img.c ****  *  - or a symbol (e.g. LV_SYMBOL_CLOSE)
 193:lvgl/src/draw/lv_draw_img.c ****  * @return type of the image source LV_IMG_SRC_VARIABLE/FILE/SYMBOL/UNKNOWN
 194:lvgl/src/draw/lv_draw_img.c ****  */
 195:lvgl/src/draw/lv_draw_img.c **** lv_img_src_t lv_img_src_get_type(const void * src)
 196:lvgl/src/draw/lv_draw_img.c **** {
 197:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 198:lvgl/src/draw/lv_draw_img.c **** 
 199:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) return img_src_type;
 200:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 201:lvgl/src/draw/lv_draw_img.c **** 
 202:lvgl/src/draw/lv_draw_img.c ****     /*The first or fourth byte depending on platform endianess shows the type of the image source*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 5


 203:lvgl/src/draw/lv_draw_img.c **** #if LV_BIG_ENDIAN_SYSTEM
 204:lvgl/src/draw/lv_draw_img.c ****     if(u8_p[3] >= 0x20 && u8_p[3] <= 0x7F) {
 205:lvgl/src/draw/lv_draw_img.c **** #else
 206:lvgl/src/draw/lv_draw_img.c ****     if(u8_p[0] >= 0x20 && u8_p[0] <= 0x7F) {
 207:lvgl/src/draw/lv_draw_img.c **** #endif
 208:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_FILE; /*If it's an ASCII character then it's file name*/
 209:lvgl/src/draw/lv_draw_img.c ****     }
 210:lvgl/src/draw/lv_draw_img.c **** #if LV_BIG_ENDIAN_SYSTEM
 211:lvgl/src/draw/lv_draw_img.c ****     else if(u8_p[3] >= 0x80) {
 212:lvgl/src/draw/lv_draw_img.c **** #else
 213:lvgl/src/draw/lv_draw_img.c ****     else if(u8_p[0] >= 0x80) {
 214:lvgl/src/draw/lv_draw_img.c **** #endif
 215:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_SYMBOL; /*Symbols begins after 0x7F*/
 216:lvgl/src/draw/lv_draw_img.c ****     }
 217:lvgl/src/draw/lv_draw_img.c ****     else {
 218:lvgl/src/draw/lv_draw_img.c ****         img_src_type = LV_IMG_SRC_VARIABLE; /*`lv_img_dsc_t` is draw to the first byte < 0x20*/
 219:lvgl/src/draw/lv_draw_img.c ****     }
 220:lvgl/src/draw/lv_draw_img.c **** 
 221:lvgl/src/draw/lv_draw_img.c ****     if(LV_IMG_SRC_UNKNOWN == img_src_type) {
 222:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("lv_img_src_get_type: unknown image type");
 223:lvgl/src/draw/lv_draw_img.c ****     }
 224:lvgl/src/draw/lv_draw_img.c **** 
 225:lvgl/src/draw/lv_draw_img.c ****     return img_src_type;
 226:lvgl/src/draw/lv_draw_img.c **** }
 227:lvgl/src/draw/lv_draw_img.c **** 
 228:lvgl/src/draw/lv_draw_img.c **** void lv_draw_img_decoded(lv_draw_ctx_t * draw_ctx, const lv_draw_img_dsc_t * dsc,
 229:lvgl/src/draw/lv_draw_img.c ****                          const lv_area_t * coords, const uint8_t * map_p, lv_img_cf_t color_format)
 230:lvgl/src/draw/lv_draw_img.c **** {
 231:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 232:lvgl/src/draw/lv_draw_img.c **** 
 233:lvgl/src/draw/lv_draw_img.c ****     draw_ctx->draw_img_decoded(draw_ctx, dsc, coords, map_p, color_format);
 234:lvgl/src/draw/lv_draw_img.c **** }
 235:lvgl/src/draw/lv_draw_img.c **** 
 236:lvgl/src/draw/lv_draw_img.c **** /**********************
 237:lvgl/src/draw/lv_draw_img.c ****  *   STATIC FUNCTIONS
 238:lvgl/src/draw/lv_draw_img.c ****  **********************/
 239:lvgl/src/draw/lv_draw_img.c **** 
 240:lvgl/src/draw/lv_draw_img.c **** static lv_res_t LV_ATTRIBUTE_FAST_MEM decode_and_draw(lv_draw_ctx_t * draw_ctx,
 241:lvgl/src/draw/lv_draw_img.c ****                                                       const lv_draw_img_dsc_t * draw_dsc,
 242:lvgl/src/draw/lv_draw_img.c ****                                                       const lv_area_t * coords, const void * src)
 243:lvgl/src/draw/lv_draw_img.c **** {
 244:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 245:lvgl/src/draw/lv_draw_img.c **** 
 246:lvgl/src/draw/lv_draw_img.c ****     _lv_img_cache_entry_t * cdsc = _lv_img_cache_open(src, draw_dsc->recolor, draw_dsc->frame_id);
 247:lvgl/src/draw/lv_draw_img.c **** 
 248:lvgl/src/draw/lv_draw_img.c ****     if(cdsc == NULL) return LV_RES_INV;
 249:lvgl/src/draw/lv_draw_img.c **** 
 250:lvgl/src/draw/lv_draw_img.c ****     lv_img_cf_t cf;
 251:lvgl/src/draw/lv_draw_img.c ****     if(lv_img_cf_is_chroma_keyed(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 253:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 254:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 255:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 256:lvgl/src/draw/lv_draw_img.c **** 
 257:lvgl/src/draw/lv_draw_img.c ****     if(cf == LV_IMG_CF_ALPHA_8BIT) {
 258:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 259:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 6


 260:lvgl/src/draw/lv_draw_img.c ****             cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 261:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 262:lvgl/src/draw/lv_draw_img.c ****         }
 263:lvgl/src/draw/lv_draw_img.c ****     }
 264:lvgl/src/draw/lv_draw_img.c **** 
 265:lvgl/src/draw/lv_draw_img.c ****     if(cdsc->dec_dsc.error_msg != NULL) {
 266:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 267:lvgl/src/draw/lv_draw_img.c **** 
 268:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, cdsc->dec_dsc.error_msg);
 269:lvgl/src/draw/lv_draw_img.c ****     }
 270:lvgl/src/draw/lv_draw_img.c ****     /*The decoder could open the image and gave the entire uncompressed image.
 271:lvgl/src/draw/lv_draw_img.c ****      *Just draw it!*/
 272:lvgl/src/draw/lv_draw_img.c ****     else if(cdsc->dec_dsc.img_data) {
 273:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 274:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 275:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 276:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 277:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 278:lvgl/src/draw/lv_draw_img.c **** 
 279:lvgl/src/draw/lv_draw_img.c ****             _lv_img_buf_get_transformed_area(&map_area_rot, w, h, draw_dsc->angle, draw_dsc->zoom, 
 280:lvgl/src/draw/lv_draw_img.c **** 
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x1 += coords->x1;
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 284:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 285:lvgl/src/draw/lv_draw_img.c ****         }
 286:lvgl/src/draw/lv_draw_img.c **** 
 287:lvgl/src/draw/lv_draw_img.c ****         lv_area_t clip_com; /*Common area of mask and coords*/
 288:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 289:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&clip_com, draw_ctx->clip_area, &map_area_rot);
 290:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 291:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 292:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 293:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 294:lvgl/src/draw/lv_draw_img.c ****         }
 295:lvgl/src/draw/lv_draw_img.c **** 
 296:lvgl/src/draw/lv_draw_img.c ****         const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 297:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 298:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 299:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 300:lvgl/src/draw/lv_draw_img.c ****     }
 301:lvgl/src/draw/lv_draw_img.c ****     /*The whole uncompressed image is not available. Try to read it line-by-line*/
 302:lvgl/src/draw/lv_draw_img.c ****     else {
 303:lvgl/src/draw/lv_draw_img.c ****         lv_area_t mask_com; /*Common area of mask and coords*/
 304:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 305:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, draw_ctx->clip_area, coords);
 306:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 307:lvgl/src/draw/lv_draw_img.c ****         if(union_ok == false) {
 308:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 309:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 310:lvgl/src/draw/lv_draw_img.c ****         }
 311:lvgl/src/draw/lv_draw_img.c **** 
 312:lvgl/src/draw/lv_draw_img.c ****         int32_t width = lv_area_get_width(&mask_com);
 313:lvgl/src/draw/lv_draw_img.c **** 
 314:lvgl/src/draw/lv_draw_img.c ****         uint8_t  * buf = lv_mem_buf_get(lv_area_get_width(&mask_com) *
 315:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 316:lvgl/src/draw/lv_draw_img.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 7


 317:lvgl/src/draw/lv_draw_img.c ****         const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 318:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 319:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 320:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 323:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 324:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 325:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 326:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 327:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area_ori, &line);
 328:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 329:lvgl/src/draw/lv_draw_img.c **** 
 330:lvgl/src/draw/lv_draw_img.c ****             read_res = lv_img_decoder_read_line(&cdsc->dec_dsc, x, y, width, buf);
 331:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 332:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 333:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 334:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 335:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
 336:lvgl/src/draw/lv_draw_img.c ****                 draw_ctx->clip_area = clip_area_ori;
 337:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 338:lvgl/src/draw/lv_draw_img.c ****             }
 339:lvgl/src/draw/lv_draw_img.c **** 
 340:lvgl/src/draw/lv_draw_img.c ****             draw_ctx->clip_area = &mask_line;
 341:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 342:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 343:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 344:lvgl/src/draw/lv_draw_img.c ****             y++;
 345:lvgl/src/draw/lv_draw_img.c ****         }
 346:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 347:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 348:lvgl/src/draw/lv_draw_img.c ****     }
 349:lvgl/src/draw/lv_draw_img.c **** 
 350:lvgl/src/draw/lv_draw_img.c ****     draw_cleanup(cdsc);
 351:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 352:lvgl/src/draw/lv_draw_img.c **** }
 353:lvgl/src/draw/lv_draw_img.c **** 
 354:lvgl/src/draw/lv_draw_img.c **** static void show_error(lv_draw_ctx_t * draw_ctx, const lv_area_t * coords, const char * msg)
 355:lvgl/src/draw/lv_draw_img.c **** {
 356:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
 357:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
 358:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
 359:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
 360:lvgl/src/draw/lv_draw_img.c **** 
 361:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_t label_dsc;
 362:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 363:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(draw_ctx, &label_dsc, coords, msg, NULL);
 364:lvgl/src/draw/lv_draw_img.c **** }
 365:lvgl/src/draw/lv_draw_img.c **** 
 366:lvgl/src/draw/lv_draw_img.c **** static void draw_cleanup(_lv_img_cache_entry_t * cache)
 367:lvgl/src/draw/lv_draw_img.c **** {
  28              		.loc 1 367 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 367 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 8


  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 368:lvgl/src/draw/lv_draw_img.c ****     /*Automatically close images with no caching*/
 369:lvgl/src/draw/lv_draw_img.c **** #if LV_IMG_CACHE_DEF_SIZE == 0
 370:lvgl/src/draw/lv_draw_img.c ****     lv_img_decoder_close(&cache->dec_dsc);
  37              		.loc 1 370 5 is_stmt 1 view .LVU2
  38 0002 FFF7FEFF 		bl	lv_img_decoder_close
  39              	.LVL1:
 371:lvgl/src/draw/lv_draw_img.c **** #else
 372:lvgl/src/draw/lv_draw_img.c ****     LV_UNUSED(cache);
 373:lvgl/src/draw/lv_draw_img.c **** #endif
 374:lvgl/src/draw/lv_draw_img.c **** }
  40              		.loc 1 374 1 is_stmt 0 view .LVU3
  41 0006 08BD     		pop	{r3, pc}
  42              		.cfi_endproc
  43              	.LFE170:
  45              		.section	.text.show_error,"ax",%progbits
  46              		.align	1
  47              		.syntax unified
  48              		.thumb
  49              		.thumb_func
  51              	show_error:
  52              	.LVL2:
  53              	.LFB169:
 355:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
  54              		.loc 1 355 1 is_stmt 1 view -0
  55              		.cfi_startproc
  56              		@ args = 0, pretend = 0, frame = 120
  57              		@ frame_needed = 0, uses_anonymous_args = 0
 355:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_t rect_dsc;
  58              		.loc 1 355 1 is_stmt 0 view .LVU5
  59 0000 70B5     		push	{r4, r5, r6, lr}
  60              		.cfi_def_cfa_offset 16
  61              		.cfi_offset 4, -16
  62              		.cfi_offset 5, -12
  63              		.cfi_offset 6, -8
  64              		.cfi_offset 14, -4
  65 0002 A0B0     		sub	sp, sp, #128
  66              		.cfi_def_cfa_offset 144
  67 0004 0446     		mov	r4, r0
  68 0006 0D46     		mov	r5, r1
  69 0008 1646     		mov	r6, r2
 356:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect_dsc_init(&rect_dsc);
  70              		.loc 1 356 5 is_stmt 1 view .LVU6
 357:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
  71              		.loc 1 357 5 view .LVU7
  72 000a 0CA8     		add	r0, sp, #48
  73              	.LVL3:
 357:lvgl/src/draw/lv_draw_img.c ****     rect_dsc.bg_color = lv_color_white();
  74              		.loc 1 357 5 is_stmt 0 view .LVU8
  75 000c FFF7FEFF 		bl	lv_draw_rect_dsc_init
  76              	.LVL4:
 358:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
  77              		.loc 1 358 5 is_stmt 1 view .LVU9
  78              	.LBB30:
  79              	.LBI30:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 9


  80              		.file 2 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/../misc/lv_color.h **** 
  21:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/../misc/lv_color.h **** #endif
  25:lvgl/src/draw/../misc/lv_color.h **** 
  26:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/../misc/lv_color.h **** #endif
  29:lvgl/src/draw/../misc/lv_color.h **** 
  30:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/../misc/lv_color.h **** 
  32:lvgl/src/draw/../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/../misc/lv_color.h **** 
  38:lvgl/src/draw/../misc/lv_color.h **** /**
  39:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/../misc/lv_color.h ****  */
  41:lvgl/src/draw/../misc/lv_color.h **** enum {
  42:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/../misc/lv_color.h **** };
  56:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 10


  57:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/../misc/lv_color.h **** 
  60:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/../misc/lv_color.h **** #else
  69:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/../misc/lv_color.h **** #endif
  71:lvgl/src/draw/../misc/lv_color.h **** 
  72:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/../misc/lv_color.h **** */
  78:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/../misc/lv_color.h **** #endif
  82:lvgl/src/draw/../misc/lv_color.h **** #else
  83:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/../misc/lv_color.h **** #endif
  86:lvgl/src/draw/../misc/lv_color.h **** #endif
  87:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/../misc/lv_color.h **** 
  89:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/../misc/lv_color.h **** #endif
  92:lvgl/src/draw/../misc/lv_color.h **** 
  93:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/../misc/lv_color.h **** #else
  97:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/../misc/lv_color.h **** #endif
  99:lvgl/src/draw/../misc/lv_color.h **** 
 100:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/../misc/lv_color.h **** 
 109:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 11


 114:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/../misc/lv_color.h **** 
 117:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/../misc/lv_color.h **** 
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/../misc/lv_color.h **** 
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/../misc/lv_color.h **** #else
 134:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/../misc/lv_color.h **** #endif
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/../misc/lv_color.h **** 
 139:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** #else
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/draw/../misc/lv_color.h **** #endif
 145:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/../misc/lv_color.h **** #endif
 155:lvgl/src/draw/../misc/lv_color.h **** 
 156:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/../misc/lv_color.h **** 
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/../misc/lv_color.h **** 
 169:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 12


 171:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/../misc/lv_color.h **** 
 178:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/../misc/lv_color.h **** 
 183:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/../misc/lv_color.h **** 
 186:lvgl/src/draw/../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/../misc/lv_color.h **** 
 190:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/../misc/lv_color.h ****     union {
 193:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/../misc/lv_color.h **** 
 199:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/../misc/lv_color.h ****     struct {
 201:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/../misc/lv_color.h **** 
 208:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/../misc/lv_color.h **** #else
 215:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/../misc/lv_color.h **** #endif
 220:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/../misc/lv_color.h **** 
 224:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 13


 228:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/../misc/lv_color.h **** 
 234:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/../misc/lv_color.h **** 
 237:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/../misc/lv_color.h **** 
 243:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/../misc/lv_color.h **** 
 248:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/../misc/lv_color.h **** 
 250:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/../misc/lv_color.h **** 
 252:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
 258:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/../misc/lv_color.h **** 
 281:lvgl/src/draw/../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 14


 285:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/../misc/lv_color.h ****  *
 292:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/../misc/lv_color.h ****  */
 298:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/../misc/lv_color.h **** {
 300:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/../misc/lv_color.h ****     }
 306:lvgl/src/draw/../misc/lv_color.h ****     else {
 307:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/../misc/lv_color.h ****     }
 309:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/../misc/lv_color.h ****     }
 313:lvgl/src/draw/../misc/lv_color.h ****     else {
 314:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 315:lvgl/src/draw/../misc/lv_color.h ****     }
 316:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/../misc/lv_color.h ****     }
 320:lvgl/src/draw/../misc/lv_color.h ****     else {
 321:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/../misc/lv_color.h ****     }
 323:lvgl/src/draw/../misc/lv_color.h **** #endif
 324:lvgl/src/draw/../misc/lv_color.h **** }
 325:lvgl/src/draw/../misc/lv_color.h **** 
 326:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/../misc/lv_color.h **** {
 328:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/../misc/lv_color.h ****     else
 332:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 15


 342:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/../misc/lv_color.h **** #endif
 348:lvgl/src/draw/../misc/lv_color.h **** }
 349:lvgl/src/draw/../misc/lv_color.h **** 
 350:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/../misc/lv_color.h **** {
 352:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/../misc/lv_color.h ****     else
 356:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/../misc/lv_color.h **** #endif
 372:lvgl/src/draw/../misc/lv_color.h **** }
 373:lvgl/src/draw/../misc/lv_color.h **** 
 374:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/../misc/lv_color.h **** {
 376:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/../misc/lv_color.h ****     else
 380:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/../misc/lv_color.h ****     /**
 390:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/../misc/lv_color.h ****      *
 396:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/../misc/lv_color.h ****      *
 398:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 16


 399:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/../misc/lv_color.h ****      *
 407:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/../misc/lv_color.h ****      */
 417:lvgl/src/draw/../misc/lv_color.h **** 
 418:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/../misc/lv_color.h **** #endif
 427:lvgl/src/draw/../misc/lv_color.h **** }
 428:lvgl/src/draw/../misc/lv_color.h **** 
 429:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/../misc/lv_color.h **** 
 431:lvgl/src/draw/../misc/lv_color.h **** /**
 432:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/../misc/lv_color.h ****  */
 438:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/../misc/lv_color.h **** {
 440:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/draw/../misc/lv_color.h **** 
 442:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/../misc/lv_color.h **** #endif
 447:lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 17


 456:lvgl/src/draw/../misc/lv_color.h **** #endif
 457:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/../misc/lv_color.h **** #else
 467:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/../misc/lv_color.h **** #endif
 470:lvgl/src/draw/../misc/lv_color.h **** 
 471:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 472:lvgl/src/draw/../misc/lv_color.h **** }
 473:lvgl/src/draw/../misc/lv_color.h **** 
 474:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/../misc/lv_color.h **** {
 476:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/draw/../misc/lv_color.h **** #else
 481:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/draw/../misc/lv_color.h **** #endif
 487:lvgl/src/draw/../misc/lv_color.h **** 
 488:lvgl/src/draw/../misc/lv_color.h **** }
 489:lvgl/src/draw/../misc/lv_color.h **** 
 490:lvgl/src/draw/../misc/lv_color.h **** /**
 491:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/../misc/lv_color.h ****  */
 499:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/draw/../misc/lv_color.h **** {
 501:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/draw/../misc/lv_color.h **** #else
 509:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 18


 513:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/../misc/lv_color.h **** #endif
 517:lvgl/src/draw/../misc/lv_color.h **** 
 518:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 519:lvgl/src/draw/../misc/lv_color.h **** }
 520:lvgl/src/draw/../misc/lv_color.h **** 
 521:lvgl/src/draw/../misc/lv_color.h **** /**
 522:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/../misc/lv_color.h ****  */
 530:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/../misc/lv_color.h **** {
 534:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/../misc/lv_color.h ****     }
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else {
 551:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/../misc/lv_color.h **** 
 559:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 566:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 19


 570:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/../misc/lv_color.h **** 
 572:lvgl/src/draw/../misc/lv_color.h ****         }
 573:lvgl/src/draw/../misc/lv_color.h **** 
 574:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/../misc/lv_color.h ****     }
 577:lvgl/src/draw/../misc/lv_color.h **** }
 578:lvgl/src/draw/../misc/lv_color.h **** 
 579:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/../misc/lv_color.h **** 
 581:lvgl/src/draw/../misc/lv_color.h **** /**
 582:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/../misc/lv_color.h ****  */
 586:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/../misc/lv_color.h **** {
 588:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/../misc/lv_color.h **** }
 593:lvgl/src/draw/../misc/lv_color.h **** 
 594:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/../misc/lv_color.h **** }
 598:lvgl/src/draw/../misc/lv_color.h **** 
 599:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/draw/../misc/lv_color.h **** {
 601:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/draw/../misc/lv_color.h **** #else
 620:lvgl/src/draw/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/../misc/lv_color.h **** #endif
 623:lvgl/src/draw/../misc/lv_color.h ****     return r;
 624:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/draw/../misc/lv_color.h ****     r.full = c | 0xFF000000;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 20


 627:lvgl/src/draw/../misc/lv_color.h ****     return r;
 628:lvgl/src/draw/../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/draw/../misc/lv_color.h **** #endif
 631:lvgl/src/draw/../misc/lv_color.h **** }
 632:lvgl/src/draw/../misc/lv_color.h **** 
 633:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/draw/../misc/lv_color.h **** {
 635:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/draw/../misc/lv_color.h **** }
 638:lvgl/src/draw/../misc/lv_color.h **** 
 639:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/draw/../misc/lv_color.h **** {
 641:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/draw/../misc/lv_color.h **** }
 643:lvgl/src/draw/../misc/lv_color.h **** 
 644:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/draw/../misc/lv_color.h **** //!
 646:lvgl/src/draw/../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/draw/../misc/lv_color.h **** 
 648:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 649:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/../misc/lv_color.h **** 
 651:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/../misc/lv_color.h **** 
 653:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/draw/../misc/lv_color.h **** 
 655:lvgl/src/draw/../misc/lv_color.h **** /**
 656:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/draw/../misc/lv_color.h ****  */
 662:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/draw/../misc/lv_color.h **** 
 664:lvgl/src/draw/../misc/lv_color.h **** /**
 665:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/draw/../misc/lv_color.h ****  */
 671:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** /**
 674:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 676:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/draw/../misc/lv_color.h ****  */
 678:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/draw/../misc/lv_color.h **** 
 680:lvgl/src/draw/../misc/lv_color.h **** /**
 681:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/draw/../misc/lv_color.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 21


 684:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/draw/../misc/lv_color.h **** {
 686:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/draw/../misc/lv_color.h **** }
 688:lvgl/src/draw/../misc/lv_color.h **** 
 689:lvgl/src/draw/../misc/lv_color.h **** /**********************
 690:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 692:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/draw/../misc/lv_color.h **** 
 694:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
  81              		.loc 2 695 26 view .LVU10
  82              	.LBE30:
 696:lvgl/src/draw/../misc/lv_color.h **** {
 697:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
  83              		.loc 2 697 5 view .LVU11
  84              	.LBB33:
  85              	.LBB31:
  86              	.LBI31:
 594:lvgl/src/draw/../misc/lv_color.h **** {
  87              		.loc 2 594 26 view .LVU12
  88              	.LBB32:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  89              		.loc 2 596 5 view .LVU13
 596:lvgl/src/draw/../misc/lv_color.h **** }
  90              		.loc 2 596 12 is_stmt 0 view .LVU14
  91 0010 4FF0FF33 		mov	r3, #-1
  92              	.LVL5:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  93              		.loc 2 596 12 view .LVU15
  94              	.LBE32:
  95              	.LBE31:
  96              	.LBE33:
 358:lvgl/src/draw/lv_draw_img.c ****     lv_draw_rect(draw_ctx, &rect_dsc, coords);
  97              		.loc 1 358 25 view .LVU16
  98 0014 0D93     		str	r3, [sp, #52]
 359:lvgl/src/draw/lv_draw_img.c **** 
  99              		.loc 1 359 5 is_stmt 1 view .LVU17
 100 0016 2A46     		mov	r2, r5
 101 0018 0CA9     		add	r1, sp, #48
 102 001a 2046     		mov	r0, r4
 103 001c FFF7FEFF 		bl	lv_draw_rect
 104              	.LVL6:
 361:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label_dsc_init(&label_dsc);
 105              		.loc 1 361 5 view .LVU18
 362:lvgl/src/draw/lv_draw_img.c ****     lv_draw_label(draw_ctx, &label_dsc, coords, msg, NULL);
 106              		.loc 1 362 5 view .LVU19
 107 0020 02A8     		add	r0, sp, #8
 108 0022 FFF7FEFF 		bl	lv_draw_label_dsc_init
 109              	.LVL7:
 363:lvgl/src/draw/lv_draw_img.c **** }
 110              		.loc 1 363 5 view .LVU20
 111 0026 0023     		movs	r3, #0
 112 0028 0093     		str	r3, [sp]
 113 002a 3346     		mov	r3, r6
 114 002c 2A46     		mov	r2, r5
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 22


 115 002e 02A9     		add	r1, sp, #8
 116 0030 2046     		mov	r0, r4
 117 0032 FFF7FEFF 		bl	lv_draw_label
 118              	.LVL8:
 364:lvgl/src/draw/lv_draw_img.c **** 
 119              		.loc 1 364 1 is_stmt 0 view .LVU21
 120 0036 20B0     		add	sp, sp, #128
 121              		.cfi_def_cfa_offset 16
 122              		@ sp needed
 123 0038 70BD     		pop	{r4, r5, r6, pc}
 364:lvgl/src/draw/lv_draw_img.c **** 
 124              		.loc 1 364 1 view .LVU22
 125              		.cfi_endproc
 126              	.LFE169:
 128              		.section	.text.lv_draw_img_dsc_init,"ax",%progbits
 129              		.align	1
 130              		.global	lv_draw_img_dsc_init
 131              		.syntax unified
 132              		.thumb
 133              		.thumb_func
 135              	lv_draw_img_dsc_init:
 136              	.LVL9:
 137              	.LFB161:
  48:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 138              		.loc 1 48 1 is_stmt 1 view -0
 139              		.cfi_startproc
 140              		@ args = 0, pretend = 0, frame = 0
 141              		@ frame_needed = 0, uses_anonymous_args = 0
  48:lvgl/src/draw/lv_draw_img.c ****     lv_memset_00(dsc, sizeof(lv_draw_img_dsc_t));
 142              		.loc 1 48 1 is_stmt 0 view .LVU24
 143 0000 10B5     		push	{r4, lr}
 144              		.cfi_def_cfa_offset 8
 145              		.cfi_offset 4, -8
 146              		.cfi_offset 14, -4
 147 0002 0446     		mov	r4, r0
  49:lvgl/src/draw/lv_draw_img.c ****     dsc->recolor = lv_color_black();
 148              		.loc 1 49 5 is_stmt 1 view .LVU25
 149 0004 1821     		movs	r1, #24
 150 0006 FFF7FEFF 		bl	lv_memset_00
 151              	.LVL10:
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 152              		.loc 1 50 5 view .LVU26
 153              	.LBB34:
 154              	.LBI34:
 698:lvgl/src/draw/../misc/lv_color.h **** }
 699:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 155              		.loc 2 699 26 view .LVU27
 156              	.LBE34:
 700:lvgl/src/draw/../misc/lv_color.h **** {
 701:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 157              		.loc 2 701 5 view .LVU28
 158              	.LBB37:
 159              	.LBB35:
 160              	.LBI35:
 594:lvgl/src/draw/../misc/lv_color.h **** {
 161              		.loc 2 594 26 view .LVU29
 162              	.LBB36:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 23


 596:lvgl/src/draw/../misc/lv_color.h **** }
 163              		.loc 2 596 5 view .LVU30
 596:lvgl/src/draw/../misc/lv_color.h **** }
 164              		.loc 2 596 12 is_stmt 0 view .LVU31
 165 000a 0023     		movs	r3, #0
 166 000c 6FF30703 		bfc	r3, #0, #8
 167 0010 6FF30F23 		bfc	r3, #8, #8
 168 0014 6FF31743 		bfc	r3, #16, #8
 169 0018 43F07F43 		orr	r3, r3, #-16777216
 170              	.LVL11:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 171              		.loc 2 596 12 view .LVU32
 172              	.LBE36:
 173              	.LBE35:
 174              	.LBE37:
  50:lvgl/src/draw/lv_draw_img.c ****     dsc->opa = LV_OPA_COVER;
 175              		.loc 1 50 20 view .LVU33
 176 001c A360     		str	r3, [r4, #8]
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 177              		.loc 1 51 5 is_stmt 1 view .LVU34
  51:lvgl/src/draw/lv_draw_img.c ****     dsc->zoom = LV_IMG_ZOOM_NONE;
 178              		.loc 1 51 14 is_stmt 0 view .LVU35
 179 001e FF23     		movs	r3, #255
 180 0020 6373     		strb	r3, [r4, #13]
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 181              		.loc 1 52 5 is_stmt 1 view .LVU36
  52:lvgl/src/draw/lv_draw_img.c ****     dsc->antialias = LV_COLOR_DEPTH > 8 ? 1 : 0;
 182              		.loc 1 52 15 is_stmt 0 view .LVU37
 183 0022 4FF48073 		mov	r3, #256
 184 0026 6380     		strh	r3, [r4, #2]	@ movhi
  53:lvgl/src/draw/lv_draw_img.c **** }
 185              		.loc 1 53 5 is_stmt 1 view .LVU38
  53:lvgl/src/draw/lv_draw_img.c **** }
 186              		.loc 1 53 20 is_stmt 0 view .LVU39
 187 0028 237D     		ldrb	r3, [r4, #20]	@ zero_extendqisi2
 188 002a 43F00103 		orr	r3, r3, #1
 189 002e 2375     		strb	r3, [r4, #20]
  54:lvgl/src/draw/lv_draw_img.c **** 
 190              		.loc 1 54 1 view .LVU40
 191 0030 10BD     		pop	{r4, pc}
  54:lvgl/src/draw/lv_draw_img.c **** 
 192              		.loc 1 54 1 view .LVU41
 193              		.cfi_endproc
 194              	.LFE161:
 196              		.section	.text.lv_img_cf_get_px_size,"ax",%progbits
 197              		.align	1
 198              		.global	lv_img_cf_get_px_size
 199              		.syntax unified
 200              		.thumb
 201              		.thumb_func
 203              	lv_img_cf_get_px_size:
 204              	.LVL12:
 205              	.LFB163:
  95:lvgl/src/draw/lv_draw_img.c ****     uint8_t px_size = 0;
 206              		.loc 1 95 1 is_stmt 1 view -0
 207              		.cfi_startproc
 208              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 24


 209              		@ frame_needed = 0, uses_anonymous_args = 0
 210              		@ link register save eliminated.
  96:lvgl/src/draw/lv_draw_img.c **** 
 211              		.loc 1 96 5 view .LVU43
  98:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 212              		.loc 1 98 5 view .LVU44
 213 0000 0438     		subs	r0, r0, #4
 214              	.LVL13:
  98:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_UNKNOWN:
 215              		.loc 1 98 5 is_stmt 0 view .LVU45
 216 0002 0A28     		cmp	r0, #10
 217 0004 07D8     		bhi	.L8
 218 0006 DFE800F0 		tbb	[pc, r0]
 219              	.L10:
 220 000a 10       		.byte	(.L15-.L10)/2
 221 000b 10       		.byte	(.L15-.L10)/2
 222 000c 10       		.byte	(.L15-.L10)/2
 223 000d 08       		.byte	(.L13-.L10)/2
 224 000e 0A       		.byte	(.L12-.L10)/2
 225 000f 0C       		.byte	(.L11-.L10)/2
 226 0010 0E       		.byte	(.L9-.L10)/2
 227 0011 08       		.byte	(.L13-.L10)/2
 228 0012 0A       		.byte	(.L12-.L10)/2
 229 0013 0C       		.byte	(.L11-.L10)/2
 230 0014 0E       		.byte	(.L9-.L10)/2
 231 0015 00       		.p2align 1
 232              	.L8:
 233 0016 0020     		movs	r0, #0
 234 0018 7047     		bx	lr
 235              	.L13:
 112:lvgl/src/draw/lv_draw_img.c ****             break;
 236              		.loc 1 112 13 is_stmt 1 view .LVU46
 237              	.LVL14:
 113:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 238              		.loc 1 113 13 view .LVU47
 112:lvgl/src/draw/lv_draw_img.c ****             break;
 239              		.loc 1 112 21 is_stmt 0 view .LVU48
 240 001a 0120     		movs	r0, #1
 113:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_2BIT:
 241              		.loc 1 113 13 view .LVU49
 242 001c 7047     		bx	lr
 243              	.LVL15:
 244              	.L12:
 116:lvgl/src/draw/lv_draw_img.c ****             break;
 245              		.loc 1 116 13 is_stmt 1 view .LVU50
 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 246              		.loc 1 117 13 view .LVU51
 116:lvgl/src/draw/lv_draw_img.c ****             break;
 247              		.loc 1 116 21 is_stmt 0 view .LVU52
 248 001e 0220     		movs	r0, #2
 117:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_4BIT:
 249              		.loc 1 117 13 view .LVU53
 250 0020 7047     		bx	lr
 251              	.LVL16:
 252              	.L11:
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 253              		.loc 1 120 13 is_stmt 1 view .LVU54
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 25


 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 254              		.loc 1 121 13 view .LVU55
 120:lvgl/src/draw/lv_draw_img.c ****             break;
 255              		.loc 1 120 21 is_stmt 0 view .LVU56
 256 0022 0420     		movs	r0, #4
 121:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_INDEXED_8BIT:
 257              		.loc 1 121 13 view .LVU57
 258 0024 7047     		bx	lr
 259              	.LVL17:
 260              	.L9:
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 261              		.loc 1 124 13 is_stmt 1 view .LVU58
 125:lvgl/src/draw/lv_draw_img.c ****         default:
 262              		.loc 1 125 13 view .LVU59
 124:lvgl/src/draw/lv_draw_img.c ****             break;
 263              		.loc 1 124 21 is_stmt 0 view .LVU60
 264 0026 0820     		movs	r0, #8
 125:lvgl/src/draw/lv_draw_img.c ****         default:
 265              		.loc 1 125 13 view .LVU61
 266 0028 7047     		bx	lr
 267              	.LVL18:
 268              	.L15:
 105:lvgl/src/draw/lv_draw_img.c ****             break;
 269              		.loc 1 105 21 view .LVU62
 270 002a 2020     		movs	r0, #32
 271              	.LVL19:
 131:lvgl/src/draw/lv_draw_img.c **** }
 272              		.loc 1 131 5 is_stmt 1 view .LVU63
 132:lvgl/src/draw/lv_draw_img.c **** 
 273              		.loc 1 132 1 is_stmt 0 view .LVU64
 274 002c 7047     		bx	lr
 275              		.cfi_endproc
 276              	.LFE163:
 278              		.section	.text.lv_img_cf_is_chroma_keyed,"ax",%progbits
 279              		.align	1
 280              		.global	lv_img_cf_is_chroma_keyed
 281              		.syntax unified
 282              		.thumb
 283              		.thumb_func
 285              	lv_img_cf_is_chroma_keyed:
 286              	.LVL20:
 287              	.LFB164:
 140:lvgl/src/draw/lv_draw_img.c ****     bool is_chroma_keyed = false;
 288              		.loc 1 140 1 is_stmt 1 view -0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 141:lvgl/src/draw/lv_draw_img.c **** 
 293              		.loc 1 141 5 view .LVU66
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 294              		.loc 1 143 5 view .LVU67
 295 0000 0328     		cmp	r0, #3
 296 0002 05D0     		beq	.L18
 297 0004 0628     		cmp	r0, #6
 298 0006 01D0     		beq	.L20
 150:lvgl/src/draw/lv_draw_img.c ****             break;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 26


 299              		.loc 1 150 29 is_stmt 0 view .LVU68
 300 0008 0020     		movs	r0, #0
 301              	.LVL21:
 154:lvgl/src/draw/lv_draw_img.c **** }
 302              		.loc 1 154 5 is_stmt 1 view .LVU69
 155:lvgl/src/draw/lv_draw_img.c **** 
 303              		.loc 1 155 1 is_stmt 0 view .LVU70
 304 000a 7047     		bx	lr
 305              	.LVL22:
 306              	.L20:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 307              		.loc 1 143 5 view .LVU71
 308 000c 0120     		movs	r0, #1
 309              	.LVL23:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 310              		.loc 1 143 5 view .LVU72
 311 000e 7047     		bx	lr
 312              	.LVL24:
 313              	.L18:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 314              		.loc 1 143 5 view .LVU73
 315 0010 0120     		movs	r0, #1
 316              	.LVL25:
 143:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 317              		.loc 1 143 5 view .LVU74
 318 0012 7047     		bx	lr
 319              		.cfi_endproc
 320              	.LFE164:
 322              		.section	.text.lv_img_cf_has_alpha,"ax",%progbits
 323              		.align	1
 324              		.global	lv_img_cf_has_alpha
 325              		.syntax unified
 326              		.thumb
 327              		.thumb_func
 329              	lv_img_cf_has_alpha:
 330              	.LVL26:
 331              	.LFB165:
 163:lvgl/src/draw/lv_draw_img.c ****     bool has_alpha = false;
 332              		.loc 1 163 1 is_stmt 1 view -0
 333              		.cfi_startproc
 334              		@ args = 0, pretend = 0, frame = 0
 335              		@ frame_needed = 0, uses_anonymous_args = 0
 336              		@ link register save eliminated.
 164:lvgl/src/draw/lv_draw_img.c **** 
 337              		.loc 1 164 5 view .LVU76
 166:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 338              		.loc 1 166 5 view .LVU77
 339 0000 0E28     		cmp	r0, #14
 340 0002 09D8     		bhi	.L23
 341 0004 0123     		movs	r3, #1
 342 0006 03FA00F0 		lsl	r0, r3, r0
 343              	.LVL27:
 166:lvgl/src/draw/lv_draw_img.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 344              		.loc 1 166 5 is_stmt 0 view .LVU78
 345 000a 47F6A473 		movw	r3, #32676
 346 000e 1842     		tst	r0, r3
 347 0010 14BF     		ite	ne
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 27


 348 0012 0120     		movne	r0, #1
 349 0014 0020     		moveq	r0, #0
 350 0016 7047     		bx	lr
 351              	.LVL28:
 352              	.L23:
 180:lvgl/src/draw/lv_draw_img.c ****             break;
 353              		.loc 1 180 23 view .LVU79
 354 0018 0020     		movs	r0, #0
 355              	.LVL29:
 184:lvgl/src/draw/lv_draw_img.c **** }
 356              		.loc 1 184 5 is_stmt 1 view .LVU80
 185:lvgl/src/draw/lv_draw_img.c **** 
 357              		.loc 1 185 1 is_stmt 0 view .LVU81
 358 001a 7047     		bx	lr
 359              		.cfi_endproc
 360              	.LFE165:
 362              		.section	.text.lv_img_src_get_type,"ax",%progbits
 363              		.align	1
 364              		.global	lv_img_src_get_type
 365              		.syntax unified
 366              		.thumb
 367              		.thumb_func
 369              	lv_img_src_get_type:
 370              	.LVL30:
 371              	.LFB166:
 196:lvgl/src/draw/lv_draw_img.c ****     lv_img_src_t img_src_type = LV_IMG_SRC_UNKNOWN;
 372              		.loc 1 196 1 is_stmt 1 view -0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 197:lvgl/src/draw/lv_draw_img.c **** 
 377              		.loc 1 197 5 view .LVU83
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 378              		.loc 1 199 5 view .LVU84
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 379              		.loc 1 199 7 is_stmt 0 view .LVU85
 380 0000 60B1     		cbz	r0, .L26
 200:lvgl/src/draw/lv_draw_img.c **** 
 381              		.loc 1 200 5 is_stmt 1 view .LVU86
 382              	.LVL31:
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 383              		.loc 1 206 5 view .LVU87
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 384              		.loc 1 206 12 is_stmt 0 view .LVU88
 385 0002 0278     		ldrb	r2, [r0]	@ zero_extendqisi2
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 386              		.loc 1 206 24 view .LVU89
 387 0004 A2F12003 		sub	r3, r2, #32
 388 0008 DBB2     		uxtb	r3, r3
 206:lvgl/src/draw/lv_draw_img.c **** #endif
 389              		.loc 1 206 7 view .LVU90
 390 000a 5F2B     		cmp	r3, #95
 391 000c 08D9     		bls	.L27
 213:lvgl/src/draw/lv_draw_img.c **** #endif
 392              		.loc 1 213 10 is_stmt 1 view .LVU91
 213:lvgl/src/draw/lv_draw_img.c **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 28


 393              		.loc 1 213 12 is_stmt 0 view .LVU92
 394 000e 12F0800F 		tst	r2, #128
 395 0012 01D1     		bne	.L29
 218:lvgl/src/draw/lv_draw_img.c ****     }
 396              		.loc 1 218 22 view .LVU93
 397 0014 0020     		movs	r0, #0
 398              	.LVL32:
 226:lvgl/src/draw/lv_draw_img.c **** 
 399              		.loc 1 226 1 view .LVU94
 400 0016 7047     		bx	lr
 401              	.LVL33:
 402              	.L29:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 403              		.loc 1 215 22 view .LVU95
 404 0018 0220     		movs	r0, #2
 405              	.LVL34:
 215:lvgl/src/draw/lv_draw_img.c ****     }
 406              		.loc 1 215 22 view .LVU96
 407 001a 7047     		bx	lr
 408              	.LVL35:
 409              	.L26:
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 410              		.loc 1 199 28 view .LVU97
 411 001c 0320     		movs	r0, #3
 412              	.LVL36:
 199:lvgl/src/draw/lv_draw_img.c ****     const uint8_t * u8_p = src;
 413              		.loc 1 199 28 view .LVU98
 414 001e 7047     		bx	lr
 415              	.LVL37:
 416              	.L27:
 208:lvgl/src/draw/lv_draw_img.c ****     }
 417              		.loc 1 208 22 view .LVU99
 418 0020 0120     		movs	r0, #1
 419              	.LVL38:
 208:lvgl/src/draw/lv_draw_img.c ****     }
 420              		.loc 1 208 22 view .LVU100
 421 0022 7047     		bx	lr
 422              		.cfi_endproc
 423              	.LFE166:
 425              		.section	.text.lv_draw_img_decoded,"ax",%progbits
 426              		.align	1
 427              		.global	lv_draw_img_decoded
 428              		.syntax unified
 429              		.thumb
 430              		.thumb_func
 432              	lv_draw_img_decoded:
 433              	.LVL39:
 434              	.LFB167:
 230:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 435              		.loc 1 230 1 is_stmt 1 view -0
 436              		.cfi_startproc
 437              		@ args = 4, pretend = 0, frame = 0
 438              		@ frame_needed = 0, uses_anonymous_args = 0
 230:lvgl/src/draw/lv_draw_img.c ****     if(draw_ctx->draw_img_decoded == NULL) return;
 439              		.loc 1 230 1 is_stmt 0 view .LVU102
 440 0000 30B5     		push	{r4, r5, lr}
 441              		.cfi_def_cfa_offset 12
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 29


 442              		.cfi_offset 4, -12
 443              		.cfi_offset 5, -8
 444              		.cfi_offset 14, -4
 445 0002 83B0     		sub	sp, sp, #12
 446              		.cfi_def_cfa_offset 24
 231:lvgl/src/draw/lv_draw_img.c **** 
 447              		.loc 1 231 5 is_stmt 1 view .LVU103
 231:lvgl/src/draw/lv_draw_img.c **** 
 448              		.loc 1 231 16 is_stmt 0 view .LVU104
 449 0004 8469     		ldr	r4, [r0, #24]
 231:lvgl/src/draw/lv_draw_img.c **** 
 450              		.loc 1 231 7 view .LVU105
 451 0006 1CB1     		cbz	r4, .L30
 233:lvgl/src/draw/lv_draw_img.c **** }
 452              		.loc 1 233 5 is_stmt 1 view .LVU106
 453 0008 9DF81850 		ldrb	r5, [sp, #24]	@ zero_extendqisi2
 454 000c 0095     		str	r5, [sp]
 455 000e A047     		blx	r4
 456              	.LVL40:
 457              	.L30:
 234:lvgl/src/draw/lv_draw_img.c **** 
 458              		.loc 1 234 1 is_stmt 0 view .LVU107
 459 0010 03B0     		add	sp, sp, #12
 460              		.cfi_def_cfa_offset 12
 461              		@ sp needed
 462 0012 30BD     		pop	{r4, r5, pc}
 234:lvgl/src/draw/lv_draw_img.c **** 
 463              		.loc 1 234 1 view .LVU108
 464              		.cfi_endproc
 465              	.LFE167:
 467              		.section	.text.decode_and_draw,"ax",%progbits
 468              		.align	1
 469              		.syntax unified
 470              		.thumb
 471              		.thumb_func
 473              	decode_and_draw:
 474              	.LVL41:
 475              	.LFB168:
 243:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 476              		.loc 1 243 1 is_stmt 1 view -0
 477              		.cfi_startproc
 478              		@ args = 0, pretend = 0, frame = 40
 479              		@ frame_needed = 0, uses_anonymous_args = 0
 243:lvgl/src/draw/lv_draw_img.c ****     if(draw_dsc->opa <= LV_OPA_MIN) return LV_RES_OK;
 480              		.loc 1 243 1 is_stmt 0 view .LVU110
 481 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 482              		.cfi_def_cfa_offset 36
 483              		.cfi_offset 4, -36
 484              		.cfi_offset 5, -32
 485              		.cfi_offset 6, -28
 486              		.cfi_offset 7, -24
 487              		.cfi_offset 8, -20
 488              		.cfi_offset 9, -16
 489              		.cfi_offset 10, -12
 490              		.cfi_offset 11, -8
 491              		.cfi_offset 14, -4
 492 0004 8DB0     		sub	sp, sp, #52
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 30


 493              		.cfi_def_cfa_offset 88
 494 0006 1546     		mov	r5, r2
 244:lvgl/src/draw/lv_draw_img.c **** 
 495              		.loc 1 244 5 is_stmt 1 view .LVU111
 244:lvgl/src/draw/lv_draw_img.c **** 
 496              		.loc 1 244 16 is_stmt 0 view .LVU112
 497 0008 4A7B     		ldrb	r2, [r1, #13]	@ zero_extendqisi2
 498              	.LVL42:
 244:lvgl/src/draw/lv_draw_img.c **** 
 499              		.loc 1 244 7 view .LVU113
 500 000a 022A     		cmp	r2, #2
 501 000c 03D8     		bhi	.L54
 244:lvgl/src/draw/lv_draw_img.c **** 
 502              		.loc 1 244 44 view .LVU114
 503 000e 0120     		movs	r0, #1
 504              	.LVL43:
 505              	.L34:
 352:lvgl/src/draw/lv_draw_img.c **** 
 506              		.loc 1 352 1 view .LVU115
 507 0010 0DB0     		add	sp, sp, #52
 508              		.cfi_remember_state
 509              		.cfi_def_cfa_offset 36
 510              		@ sp needed
 511 0012 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 512              	.LVL44:
 513              	.L54:
 514              		.cfi_restore_state
 352:lvgl/src/draw/lv_draw_img.c **** 
 515              		.loc 1 352 1 view .LVU116
 516 0016 0646     		mov	r6, r0
 517 0018 0C46     		mov	r4, r1
 246:lvgl/src/draw/lv_draw_img.c **** 
 518              		.loc 1 246 5 is_stmt 1 view .LVU117
 246:lvgl/src/draw/lv_draw_img.c **** 
 519              		.loc 1 246 36 is_stmt 0 view .LVU118
 520 001a 0A69     		ldr	r2, [r1, #16]
 521 001c 8968     		ldr	r1, [r1, #8]
 522              	.LVL45:
 246:lvgl/src/draw/lv_draw_img.c **** 
 523              		.loc 1 246 36 view .LVU119
 524 001e 1846     		mov	r0, r3
 525              	.LVL46:
 246:lvgl/src/draw/lv_draw_img.c **** 
 526              		.loc 1 246 36 view .LVU120
 527 0020 FFF7FEFF 		bl	_lv_img_cache_open
 528              	.LVL47:
 248:lvgl/src/draw/lv_draw_img.c **** 
 529              		.loc 1 248 5 is_stmt 1 view .LVU121
 248:lvgl/src/draw/lv_draw_img.c **** 
 530              		.loc 1 248 7 is_stmt 0 view .LVU122
 531 0024 0746     		mov	r7, r0
 532 0026 0028     		cmp	r0, #0
 533 0028 00F00D81 		beq	.L50
 250:lvgl/src/draw/lv_draw_img.c ****     if(lv_img_cf_is_chroma_keyed(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED;
 534              		.loc 1 250 5 is_stmt 1 view .LVU123
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 535              		.loc 1 251 5 view .LVU124
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 31


 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 536              		.loc 1 251 54 is_stmt 0 view .LVU125
 537 002c 90F81490 		ldrb	r9, [r0, #20]	@ zero_extendqisi2
 538 0030 09F01F09 		and	r9, r9, #31
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 539              		.loc 1 251 8 view .LVU126
 540 0034 4846     		mov	r0, r9
 541              	.LVL48:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 542              		.loc 1 251 8 view .LVU127
 543 0036 FFF7FEFF 		bl	lv_img_cf_is_chroma_keyed
 544              	.LVL49:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 545              		.loc 1 251 7 view .LVU128
 546 003a B0B9     		cbnz	r0, .L51
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 547              		.loc 1 252 10 is_stmt 1 view .LVU129
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 548              		.loc 1 252 34 is_stmt 0 view .LVU130
 549 003c C846     		mov	r8, r9
 252:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_RGB565A8 == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_RGB565A8;
 550              		.loc 1 252 12 view .LVU131
 551 003e B9F10E0F 		cmp	r9, #14
 552 0042 09D0     		beq	.L36
 253:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 553              		.loc 1 253 10 is_stmt 1 view .LVU132
 253:lvgl/src/draw/lv_draw_img.c ****     else if(lv_img_cf_has_alpha(cdsc->dec_dsc.header.cf)) cf = LV_IMG_CF_TRUE_COLOR_ALPHA;
 554              		.loc 1 253 12 is_stmt 0 view .LVU133
 555 0044 B9F1140F 		cmp	r9, #20
 556 0048 11D0     		beq	.L35
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 557              		.loc 1 254 10 is_stmt 1 view .LVU134
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 558              		.loc 1 254 13 is_stmt 0 view .LVU135
 559 004a 4846     		mov	r0, r9
 560 004c FFF7FEFF 		bl	lv_img_cf_has_alpha
 561              	.LVL50:
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 562              		.loc 1 254 12 view .LVU136
 563 0050 C0B1     		cbz	r0, .L52
 254:lvgl/src/draw/lv_draw_img.c ****     else cf = LV_IMG_CF_TRUE_COLOR;
 564              		.loc 1 254 62 view .LVU137
 565 0052 4FF00508 		mov	r8, #5
 566 0056 0AE0     		b	.L35
 567              	.L36:
 568              	.LVL51:
 257:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 569              		.loc 1 257 5 is_stmt 1 view .LVU138
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 570              		.loc 1 258 9 view .LVU139
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 571              		.loc 1 258 28 is_stmt 0 view .LVU140
 572 0058 2368     		ldr	r3, [r4]
 258:lvgl/src/draw/lv_draw_img.c ****             /* resume normal method */
 573              		.loc 1 258 11 view .LVU141
 574 005a B3F1807F 		cmp	r3, #16777216
 575 005e 06D0     		beq	.L35
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 32


 260:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 576              		.loc 1 260 13 is_stmt 1 view .LVU142
 577              	.LVL52:
 261:lvgl/src/draw/lv_draw_img.c ****         }
 578              		.loc 1 261 13 view .LVU143
 261:lvgl/src/draw/lv_draw_img.c ****         }
 579              		.loc 1 261 36 is_stmt 0 view .LVU144
 580 0060 0023     		movs	r3, #0
 581 0062 BB61     		str	r3, [r7, #24]
 260:lvgl/src/draw/lv_draw_img.c ****             cdsc->dec_dsc.img_data = NULL;
 582              		.loc 1 260 16 view .LVU145
 583 0064 4FF00508 		mov	r8, #5
 584 0068 01E0     		b	.L35
 585              	.LVL53:
 586              	.L51:
 251:lvgl/src/draw/lv_draw_img.c ****     else if(LV_IMG_CF_ALPHA_8BIT == cdsc->dec_dsc.header.cf) cf = LV_IMG_CF_ALPHA_8BIT;
 587              		.loc 1 251 63 view .LVU146
 588 006a 4FF00608 		mov	r8, #6
 589              	.L35:
 590              	.LVL54:
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 591              		.loc 1 265 5 is_stmt 1 view .LVU147
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 592              		.loc 1 265 21 is_stmt 0 view .LVU148
 593 006e 3A6A     		ldr	r2, [r7, #32]
 265:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 594              		.loc 1 265 7 view .LVU149
 595 0070 5AB1     		cbz	r2, .L37
 266:lvgl/src/draw/lv_draw_img.c **** 
 596              		.loc 1 266 9 is_stmt 1 view .LVU150
 266:lvgl/src/draw/lv_draw_img.c **** 
 597              		.loc 1 266 9 view .LVU151
 266:lvgl/src/draw/lv_draw_img.c **** 
 598              		.loc 1 266 9 view .LVU152
 268:lvgl/src/draw/lv_draw_img.c ****     }
 599              		.loc 1 268 9 view .LVU153
 600 0072 2946     		mov	r1, r5
 601 0074 3046     		mov	r0, r6
 602 0076 FFF7FEFF 		bl	show_error
 603              	.LVL55:
 604              	.L38:
 350:lvgl/src/draw/lv_draw_img.c ****     return LV_RES_OK;
 605              		.loc 1 350 5 view .LVU154
 606 007a 3846     		mov	r0, r7
 607 007c FFF7FEFF 		bl	draw_cleanup
 608              	.LVL56:
 351:lvgl/src/draw/lv_draw_img.c **** }
 609              		.loc 1 351 5 view .LVU155
 351:lvgl/src/draw/lv_draw_img.c **** }
 610              		.loc 1 351 12 is_stmt 0 view .LVU156
 611 0080 0120     		movs	r0, #1
 612 0082 C5E7     		b	.L34
 613              	.LVL57:
 614              	.L52:
 255:lvgl/src/draw/lv_draw_img.c **** 
 615              		.loc 1 255 13 view .LVU157
 616 0084 4FF00408 		mov	r8, #4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 33


 617 0088 F1E7     		b	.L35
 618              	.LVL58:
 619              	.L37:
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 620              		.loc 1 272 10 is_stmt 1 view .LVU158
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 621              		.loc 1 272 26 is_stmt 0 view .LVU159
 622 008a BB69     		ldr	r3, [r7, #24]
 272:lvgl/src/draw/lv_draw_img.c ****         lv_area_t map_area_rot;
 623              		.loc 1 272 12 view .LVU160
 624 008c 002B     		cmp	r3, #0
 625 008e 5AD0     		beq	.L39
 626              	.LBB38:
 273:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&map_area_rot, coords);
 627              		.loc 1 273 9 is_stmt 1 view .LVU161
 274:lvgl/src/draw/lv_draw_img.c ****         if(draw_dsc->angle || draw_dsc->zoom != LV_IMG_ZOOM_NONE) {
 628              		.loc 1 274 9 view .LVU162
 629              	.LVL59:
 630              	.LBB39:
 631              	.LBI39:
 632              		.file 3 "lvgl/src/draw/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/../misc/lv_area.h **** 
  20:lvgl/src/draw/../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/../misc/lv_area.h **** 
  24:lvgl/src/draw/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/../misc/lv_area.h **** #else
  27:lvgl/src/draw/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/../misc/lv_area.h **** #endif
  29:lvgl/src/draw/../misc/lv_area.h **** 
  30:lvgl/src/draw/../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/../misc/lv_area.h **** 
  34:lvgl/src/draw/../misc/lv_area.h **** /**
  35:lvgl/src/draw/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/../misc/lv_area.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 34


  37:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/../misc/lv_area.h **** 
  42:lvgl/src/draw/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/../misc/lv_area.h **** 
  50:lvgl/src/draw/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/../misc/lv_area.h **** enum {
  52:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/../misc/lv_area.h **** 
  63:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/../misc/lv_area.h **** };
  76:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/../misc/lv_area.h **** 
  78:lvgl/src/draw/../misc/lv_area.h **** enum {
  79:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/../misc/lv_area.h **** };
  88:lvgl/src/draw/../misc/lv_area.h **** 
  89:lvgl/src/draw/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/../misc/lv_area.h **** 
  91:lvgl/src/draw/../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/../misc/lv_area.h ****  **********************/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 35


  94:lvgl/src/draw/../misc/lv_area.h **** 
  95:lvgl/src/draw/../misc/lv_area.h **** /**
  96:lvgl/src/draw/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/../misc/lv_area.h ****  */
 103:lvgl/src/draw/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/../misc/lv_area.h ****  */
 110:lvgl/src/draw/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 633              		.loc 3 110 20 view .LVU163
 634              	.LBB40:
 111:lvgl/src/draw/../misc/lv_area.h **** {
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->x1 = src->x1;
 635              		.loc 3 112 5 view .LVU164
 636              		.loc 3 112 19 is_stmt 0 view .LVU165
 637 0090 B5F90030 		ldrsh	r3, [r5]
 638              		.loc 3 112 14 view .LVU166
 639 0094 ADF82030 		strh	r3, [sp, #32]	@ movhi
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 640              		.loc 3 113 5 is_stmt 1 view .LVU167
 641              		.loc 3 113 19 is_stmt 0 view .LVU168
 642 0098 B5F90230 		ldrsh	r3, [r5, #2]
 643              		.loc 3 113 14 view .LVU169
 644 009c ADF82230 		strh	r3, [sp, #34]	@ movhi
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 645              		.loc 3 114 5 is_stmt 1 view .LVU170
 646              		.loc 3 114 19 is_stmt 0 view .LVU171
 647 00a0 B5F90430 		ldrsh	r3, [r5, #4]
 648              		.loc 3 114 14 view .LVU172
 649 00a4 ADF82430 		strh	r3, [sp, #36]	@ movhi
 115:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 650              		.loc 3 115 5 is_stmt 1 view .LVU173
 651              		.loc 3 115 19 is_stmt 0 view .LVU174
 652 00a8 B5F90630 		ldrsh	r3, [r5, #6]
 653              		.loc 3 115 14 view .LVU175
 654 00ac ADF82630 		strh	r3, [sp, #38]	@ movhi
 655              	.LVL60:
 656              		.loc 3 115 14 view .LVU176
 657              	.LBE40:
 658              	.LBE39:
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 659              		.loc 1 275 9 is_stmt 1 view .LVU177
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 660              		.loc 1 275 28 is_stmt 0 view .LVU178
 661 00b0 2368     		ldr	r3, [r4]
 275:lvgl/src/draw/lv_draw_img.c ****             int32_t w = lv_area_get_width(coords);
 662              		.loc 1 275 11 view .LVU179
 663 00b2 B3F1807F 		cmp	r3, #16777216
 664 00b6 15D1     		bne	.L55
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 36


 665              	.L40:
 287:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 666              		.loc 1 287 9 is_stmt 1 view .LVU180
 288:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&clip_com, draw_ctx->clip_area, &map_area_rot);
 667              		.loc 1 288 9 view .LVU181
 289:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 668              		.loc 1 289 9 view .LVU182
 289:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 669              		.loc 1 289 20 is_stmt 0 view .LVU183
 670 00b8 08AA     		add	r2, sp, #32
 671 00ba B168     		ldr	r1, [r6, #8]
 672 00bc 0AA8     		add	r0, sp, #40
 673 00be FFF7FEFF 		bl	_lv_area_intersect
 674              	.LVL61:
 291:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 675              		.loc 1 291 9 is_stmt 1 view .LVU184
 291:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 676              		.loc 1 291 11 is_stmt 0 view .LVU185
 677 00c2 0028     		cmp	r0, #0
 678 00c4 3AD0     		beq	.L56
 296:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 679              		.loc 1 296 9 is_stmt 1 view .LVU186
 296:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = &clip_com;
 680              		.loc 1 296 27 is_stmt 0 view .LVU187
 681 00c6 D6F80890 		ldr	r9, [r6, #8]
 682              	.LVL62:
 297:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 683              		.loc 1 297 9 is_stmt 1 view .LVU188
 297:lvgl/src/draw/lv_draw_img.c ****         lv_draw_img_decoded(draw_ctx, draw_dsc, coords, cdsc->dec_dsc.img_data, cf);
 684              		.loc 1 297 29 is_stmt 0 view .LVU189
 685 00ca 0AAB     		add	r3, sp, #40
 686 00cc B360     		str	r3, [r6, #8]
 298:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 687              		.loc 1 298 9 is_stmt 1 view .LVU190
 688 00ce BB69     		ldr	r3, [r7, #24]
 689 00d0 CDF80080 		str	r8, [sp]
 690 00d4 2A46     		mov	r2, r5
 691 00d6 2146     		mov	r1, r4
 692 00d8 3046     		mov	r0, r6
 693              	.LVL63:
 298:lvgl/src/draw/lv_draw_img.c ****         draw_ctx->clip_area = clip_area_ori;
 694              		.loc 1 298 9 is_stmt 0 view .LVU191
 695 00da FFF7FEFF 		bl	lv_draw_img_decoded
 696              	.LVL64:
 299:lvgl/src/draw/lv_draw_img.c ****     }
 697              		.loc 1 299 9 is_stmt 1 view .LVU192
 299:lvgl/src/draw/lv_draw_img.c ****     }
 698              		.loc 1 299 29 is_stmt 0 view .LVU193
 699 00de C6F80890 		str	r9, [r6, #8]
 700              	.LBE38:
 701 00e2 CAE7     		b	.L38
 702              	.LVL65:
 703              	.L55:
 704              	.LBB46:
 705              	.LBB41:
 276:lvgl/src/draw/lv_draw_img.c ****             int32_t h = lv_area_get_height(coords);
 706              		.loc 1 276 13 is_stmt 1 view .LVU194
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 37


 707              	.LBB42:
 708              	.LBI42:
 116:lvgl/src/draw/../misc/lv_area.h **** }
 117:lvgl/src/draw/../misc/lv_area.h **** 
 118:lvgl/src/draw/../misc/lv_area.h **** /**
 119:lvgl/src/draw/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/../misc/lv_area.h ****  */
 123:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 709              		.loc 3 123 26 view .LVU195
 710              	.LBB43:
 124:lvgl/src/draw/../misc/lv_area.h **** {
 125:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 711              		.loc 3 125 5 view .LVU196
 712              		.loc 3 125 31 is_stmt 0 view .LVU197
 713 00e4 A988     		ldrh	r1, [r5, #4]
 714              		.loc 3 125 44 view .LVU198
 715 00e6 2B88     		ldrh	r3, [r5]
 716              		.loc 3 125 36 view .LVU199
 717 00e8 C91A     		subs	r1, r1, r3
 718 00ea 89B2     		uxth	r1, r1
 719              		.loc 3 125 49 view .LVU200
 720 00ec 0131     		adds	r1, r1, #1
 721              	.LVL66:
 722              		.loc 3 125 49 view .LVU201
 723              	.LBE43:
 724              	.LBE42:
 277:lvgl/src/draw/lv_draw_img.c **** 
 725              		.loc 1 277 13 is_stmt 1 view .LVU202
 726              	.LBB44:
 727              	.LBI44:
 126:lvgl/src/draw/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/lv_area.h **** 
 128:lvgl/src/draw/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/../misc/lv_area.h ****  */
 133:lvgl/src/draw/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 728              		.loc 3 133 26 view .LVU203
 729              	.LBB45:
 134:lvgl/src/draw/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 730              		.loc 3 135 5 view .LVU204
 731              		.loc 3 135 31 is_stmt 0 view .LVU205
 732 00ee EA88     		ldrh	r2, [r5, #6]
 733              		.loc 3 135 44 view .LVU206
 734 00f0 6B88     		ldrh	r3, [r5, #2]
 735              		.loc 3 135 36 view .LVU207
 736 00f2 D21A     		subs	r2, r2, r3
 737 00f4 92B2     		uxth	r2, r2
 738              		.loc 3 135 49 view .LVU208
 739 00f6 0132     		adds	r2, r2, #1
 740              	.LVL67:
 741              		.loc 3 135 49 view .LVU209
 742              	.LBE45:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 38


 743              	.LBE44:
 279:lvgl/src/draw/lv_draw_img.c **** 
 744              		.loc 1 279 13 is_stmt 1 view .LVU210
 745 00f8 2046     		mov	r0, r4
 746 00fa 30F9043B 		ldrsh	r3, [r0], #4
 747 00fe 0190     		str	r0, [sp, #4]
 748 0100 6088     		ldrh	r0, [r4, #2]
 749 0102 0090     		str	r0, [sp]
 750 0104 12B2     		sxth	r2, r2
 751              	.LVL68:
 279:lvgl/src/draw/lv_draw_img.c **** 
 752              		.loc 1 279 13 is_stmt 0 view .LVU211
 753 0106 09B2     		sxth	r1, r1
 754              	.LVL69:
 279:lvgl/src/draw/lv_draw_img.c **** 
 755              		.loc 1 279 13 view .LVU212
 756 0108 08A8     		add	r0, sp, #32
 757 010a FFF7FEFF 		bl	_lv_img_buf_get_transformed_area
 758              	.LVL70:
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 759              		.loc 1 281 13 is_stmt 1 view .LVU213
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 760              		.loc 1 281 38 is_stmt 0 view .LVU214
 761 010e 2A88     		ldrh	r2, [r5]
 281:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y1 += coords->y1;
 762              		.loc 1 281 29 view .LVU215
 763 0110 BDF82030 		ldrh	r3, [sp, #32]
 764 0114 1344     		add	r3, r3, r2
 765 0116 ADF82030 		strh	r3, [sp, #32]	@ movhi
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 766              		.loc 1 282 13 is_stmt 1 view .LVU216
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 767              		.loc 1 282 38 is_stmt 0 view .LVU217
 768 011a 6B88     		ldrh	r3, [r5, #2]
 282:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.x2 += coords->x1;
 769              		.loc 1 282 29 view .LVU218
 770 011c BDF82210 		ldrh	r1, [sp, #34]
 771 0120 1944     		add	r1, r1, r3
 772 0122 ADF82210 		strh	r1, [sp, #34]	@ movhi
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 773              		.loc 1 283 13 is_stmt 1 view .LVU219
 283:lvgl/src/draw/lv_draw_img.c ****             map_area_rot.y2 += coords->y1;
 774              		.loc 1 283 29 is_stmt 0 view .LVU220
 775 0126 BDF82410 		ldrh	r1, [sp, #36]
 776 012a 0A44     		add	r2, r2, r1
 777 012c ADF82420 		strh	r2, [sp, #36]	@ movhi
 284:lvgl/src/draw/lv_draw_img.c ****         }
 778              		.loc 1 284 13 is_stmt 1 view .LVU221
 284:lvgl/src/draw/lv_draw_img.c ****         }
 779              		.loc 1 284 29 is_stmt 0 view .LVU222
 780 0130 BDF82620 		ldrh	r2, [sp, #38]
 781 0134 1344     		add	r3, r3, r2
 782 0136 ADF82630 		strh	r3, [sp, #38]	@ movhi
 783 013a BDE7     		b	.L40
 784              	.LVL71:
 785              	.L56:
 284:lvgl/src/draw/lv_draw_img.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 39


 786              		.loc 1 284 29 view .LVU223
 787              	.LBE41:
 292:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 788              		.loc 1 292 13 is_stmt 1 view .LVU224
 789 013c 3846     		mov	r0, r7
 790              	.LVL72:
 292:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 791              		.loc 1 292 13 is_stmt 0 view .LVU225
 792 013e FFF7FEFF 		bl	draw_cleanup
 793              	.LVL73:
 293:lvgl/src/draw/lv_draw_img.c ****         }
 794              		.loc 1 293 13 is_stmt 1 view .LVU226
 293:lvgl/src/draw/lv_draw_img.c ****         }
 795              		.loc 1 293 20 is_stmt 0 view .LVU227
 796 0142 0120     		movs	r0, #1
 797 0144 64E7     		b	.L34
 798              	.L39:
 293:lvgl/src/draw/lv_draw_img.c ****         }
 799              		.loc 1 293 20 view .LVU228
 800              	.LBE46:
 801              	.LBB47:
 303:lvgl/src/draw/lv_draw_img.c ****         bool union_ok;
 802              		.loc 1 303 9 is_stmt 1 view .LVU229
 304:lvgl/src/draw/lv_draw_img.c ****         union_ok = _lv_area_intersect(&mask_com, draw_ctx->clip_area, coords);
 803              		.loc 1 304 9 view .LVU230
 305:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 804              		.loc 1 305 9 view .LVU231
 305:lvgl/src/draw/lv_draw_img.c ****         /*Out of mask. There is nothing to draw so the image is drawn successfully.*/
 805              		.loc 1 305 20 is_stmt 0 view .LVU232
 806 0146 2A46     		mov	r2, r5
 807 0148 B168     		ldr	r1, [r6, #8]
 808 014a 06A8     		add	r0, sp, #24
 809 014c FFF7FEFF 		bl	_lv_area_intersect
 810              	.LVL74:
 307:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 811              		.loc 1 307 9 is_stmt 1 view .LVU233
 307:lvgl/src/draw/lv_draw_img.c ****             draw_cleanup(cdsc);
 812              		.loc 1 307 11 is_stmt 0 view .LVU234
 813 0150 90B3     		cbz	r0, .L57
 312:lvgl/src/draw/lv_draw_img.c **** 
 814              		.loc 1 312 9 is_stmt 1 view .LVU235
 815              	.LVL75:
 816              	.LBB48:
 817              	.LBI48:
 123:lvgl/src/draw/../misc/lv_area.h **** {
 818              		.loc 3 123 26 view .LVU236
 819              	.LBB49:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 820              		.loc 3 125 5 view .LVU237
 125:lvgl/src/draw/../misc/lv_area.h **** }
 821              		.loc 3 125 31 is_stmt 0 view .LVU238
 822 0152 BDF81C30 		ldrh	r3, [sp, #28]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 823              		.loc 3 125 44 view .LVU239
 824 0156 BDF81820 		ldrh	r2, [sp, #24]
 125:lvgl/src/draw/../misc/lv_area.h **** }
 825              		.loc 3 125 36 view .LVU240
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 40


 826 015a 9B1A     		subs	r3, r3, r2
 827 015c 9BB2     		uxth	r3, r3
 125:lvgl/src/draw/../misc/lv_area.h **** }
 828              		.loc 3 125 49 view .LVU241
 829 015e 0133     		adds	r3, r3, #1
 125:lvgl/src/draw/../misc/lv_area.h **** }
 830              		.loc 3 125 12 view .LVU242
 831 0160 1BB2     		sxth	r3, r3
 832 0162 0593     		str	r3, [sp, #20]
 833              	.LVL76:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 834              		.loc 3 125 12 view .LVU243
 835              	.LBE49:
 836              	.LBE48:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 837              		.loc 1 314 9 is_stmt 1 view .LVU244
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 838              		.loc 1 314 9 is_stmt 0 view .LVU245
 839              	.LBE47:
 125:lvgl/src/draw/../misc/lv_area.h **** }
 840              		.loc 3 125 5 is_stmt 1 view .LVU246
 841              	.LBB54:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 842              		.loc 1 314 26 is_stmt 0 view .LVU247
 843 0164 9800     		lsls	r0, r3, #2
 844              	.LVL77:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 845              		.loc 1 314 26 view .LVU248
 846 0166 FFF7FEFF 		bl	lv_mem_buf_get
 847              	.LVL78:
 314:lvgl/src/draw/lv_draw_img.c ****                                         LV_IMG_PX_SIZE_ALPHA_BYTE);  /*+1 because of the possible a
 848              		.loc 1 314 26 view .LVU249
 849 016a 8246     		mov	r10, r0
 850              	.LVL79:
 317:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 851              		.loc 1 317 9 is_stmt 1 view .LVU250
 317:lvgl/src/draw/lv_draw_img.c ****         lv_area_t line;
 852              		.loc 1 317 27 is_stmt 0 view .LVU251
 853 016c D6F808B0 		ldr	fp, [r6, #8]
 854              	.LVL80:
 318:lvgl/src/draw/lv_draw_img.c ****         lv_area_copy(&line, &mask_com);
 855              		.loc 1 318 9 is_stmt 1 view .LVU252
 319:lvgl/src/draw/lv_draw_img.c ****         lv_area_set_height(&line, 1);
 856              		.loc 1 319 9 view .LVU253
 857              	.LBB50:
 858              	.LBI50:
 110:lvgl/src/draw/../misc/lv_area.h **** {
 859              		.loc 3 110 20 view .LVU254
 860              	.LBB51:
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 861              		.loc 3 112 5 view .LVU255
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 862              		.loc 3 112 19 is_stmt 0 view .LVU256
 863 0170 BDF91830 		ldrsh	r3, [sp, #24]
 112:lvgl/src/draw/../misc/lv_area.h ****     dest->y1 = src->y1;
 864              		.loc 3 112 14 view .LVU257
 865 0174 ADF82030 		strh	r3, [sp, #32]	@ movhi
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 41


 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 866              		.loc 3 113 5 is_stmt 1 view .LVU258
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 867              		.loc 3 113 19 is_stmt 0 view .LVU259
 868 0178 BDF91A30 		ldrsh	r3, [sp, #26]
 113:lvgl/src/draw/../misc/lv_area.h ****     dest->x2 = src->x2;
 869              		.loc 3 113 14 view .LVU260
 870 017c ADF82230 		strh	r3, [sp, #34]	@ movhi
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 871              		.loc 3 114 5 is_stmt 1 view .LVU261
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 872              		.loc 3 114 19 is_stmt 0 view .LVU262
 873 0180 BDF91C30 		ldrsh	r3, [sp, #28]
 114:lvgl/src/draw/../misc/lv_area.h ****     dest->y2 = src->y2;
 874              		.loc 3 114 14 view .LVU263
 875 0184 ADF82430 		strh	r3, [sp, #36]	@ movhi
 115:lvgl/src/draw/../misc/lv_area.h **** }
 876              		.loc 3 115 5 is_stmt 1 view .LVU264
 115:lvgl/src/draw/../misc/lv_area.h **** }
 877              		.loc 3 115 19 is_stmt 0 view .LVU265
 878 0188 BDF91E30 		ldrsh	r3, [sp, #30]
 115:lvgl/src/draw/../misc/lv_area.h **** }
 879              		.loc 3 115 14 view .LVU266
 880 018c ADF82630 		strh	r3, [sp, #38]	@ movhi
 881              	.LVL81:
 115:lvgl/src/draw/../misc/lv_area.h **** }
 882              		.loc 3 115 14 view .LVU267
 883              	.LBE51:
 884              	.LBE50:
 320:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 885              		.loc 1 320 9 is_stmt 1 view .LVU268
 886 0190 0121     		movs	r1, #1
 887 0192 08A8     		add	r0, sp, #32
 888              	.LVL82:
 320:lvgl/src/draw/lv_draw_img.c ****         int32_t x = mask_com.x1 - coords->x1;
 889              		.loc 1 320 9 is_stmt 0 view .LVU269
 890 0194 FFF7FEFF 		bl	lv_area_set_height
 891              	.LVL83:
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 892              		.loc 1 321 9 is_stmt 1 view .LVU270
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 893              		.loc 1 321 29 is_stmt 0 view .LVU271
 894 0198 BDF91830 		ldrsh	r3, [sp, #24]
 895 019c 0393     		str	r3, [sp, #12]
 321:lvgl/src/draw/lv_draw_img.c ****         int32_t y = mask_com.y1 - coords->y1;
 896              		.loc 1 321 41 view .LVU272
 897 019e B5F90030 		ldrsh	r3, [r5]
 898 01a2 0493     		str	r3, [sp, #16]
 899              	.LVL84:
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 900              		.loc 1 322 9 is_stmt 1 view .LVU273
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 901              		.loc 1 322 29 is_stmt 0 view .LVU274
 902 01a4 BDF91A90 		ldrsh	r9, [sp, #26]
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 903              		.loc 1 322 41 view .LVU275
 904 01a8 B5F90250 		ldrsh	r5, [r5, #2]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 42


 905              	.LVL85:
 322:lvgl/src/draw/lv_draw_img.c ****         int32_t row;
 906              		.loc 1 322 17 view .LVU276
 907 01ac A9EB0505 		sub	r5, r9, r5
 908              	.LVL86:
 323:lvgl/src/draw/lv_draw_img.c ****         lv_res_t read_res;
 909              		.loc 1 323 9 is_stmt 1 view .LVU277
 324:lvgl/src/draw/lv_draw_img.c ****         for(row = mask_com.y1; row <= mask_com.y2; row++) {
 910              		.loc 1 324 9 view .LVU278
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 911              		.loc 1 325 9 view .LVU279
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 912              		.loc 1 325 9 is_stmt 0 view .LVU280
 913 01b0 2346     		mov	r3, r4
 914 01b2 5446     		mov	r4, r10
 915              	.LVL87:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 916              		.loc 1 325 9 view .LVU281
 917 01b4 9A46     		mov	r10, r3
 918              	.LVL88:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 919              		.loc 1 325 9 view .LVU282
 920 01b6 13E0     		b	.L44
 921              	.LVL89:
 922              	.L57:
 308:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 923              		.loc 1 308 13 is_stmt 1 view .LVU283
 924 01b8 3846     		mov	r0, r7
 925              	.LVL90:
 308:lvgl/src/draw/lv_draw_img.c ****             return LV_RES_OK;
 926              		.loc 1 308 13 is_stmt 0 view .LVU284
 927 01ba FFF7FEFF 		bl	draw_cleanup
 928              	.LVL91:
 309:lvgl/src/draw/lv_draw_img.c ****         }
 929              		.loc 1 309 13 is_stmt 1 view .LVU285
 309:lvgl/src/draw/lv_draw_img.c ****         }
 930              		.loc 1 309 20 is_stmt 0 view .LVU286
 931 01be 0120     		movs	r0, #1
 932 01c0 26E7     		b	.L34
 933              	.LVL92:
 934              	.L59:
 935              	.LBB52:
 332:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 936              		.loc 1 332 17 is_stmt 1 view .LVU287
 937 01c2 3846     		mov	r0, r7
 938              	.LVL93:
 332:lvgl/src/draw/lv_draw_img.c ****                 LV_LOG_WARN("Image draw can't read the line");
 939              		.loc 1 332 17 is_stmt 0 view .LVU288
 940 01c4 FFF7FEFF 		bl	lv_img_decoder_close
 941              	.LVL94:
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 942              		.loc 1 333 17 is_stmt 1 view .LVU289
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 943              		.loc 1 333 17 view .LVU290
 333:lvgl/src/draw/lv_draw_img.c ****                 lv_mem_buf_release(buf);
 944              		.loc 1 333 17 view .LVU291
 334:lvgl/src/draw/lv_draw_img.c ****                 draw_cleanup(cdsc);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 43


 945              		.loc 1 334 17 view .LVU292
 946 01c8 2046     		mov	r0, r4
 947 01ca FFF7FEFF 		bl	lv_mem_buf_release
 948              	.LVL95:
 335:lvgl/src/draw/lv_draw_img.c ****                 draw_ctx->clip_area = clip_area_ori;
 949              		.loc 1 335 17 view .LVU293
 950 01ce 3846     		mov	r0, r7
 951 01d0 FFF7FEFF 		bl	draw_cleanup
 952              	.LVL96:
 336:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 953              		.loc 1 336 17 view .LVU294
 336:lvgl/src/draw/lv_draw_img.c ****                 return LV_RES_INV;
 954              		.loc 1 336 37 is_stmt 0 view .LVU295
 955 01d4 C6F808B0 		str	fp, [r6, #8]
 337:lvgl/src/draw/lv_draw_img.c ****             }
 956              		.loc 1 337 17 is_stmt 1 view .LVU296
 337:lvgl/src/draw/lv_draw_img.c ****             }
 957              		.loc 1 337 24 is_stmt 0 view .LVU297
 958 01d8 0020     		movs	r0, #0
 959 01da 19E7     		b	.L34
 960              	.L46:
 337:lvgl/src/draw/lv_draw_img.c ****             }
 961              		.loc 1 337 24 view .LVU298
 962              	.LBE52:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 963              		.loc 1 325 52 is_stmt 1 discriminator 2 view .LVU299
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 964              		.loc 1 325 55 is_stmt 0 discriminator 2 view .LVU300
 965 01dc 09F10109 		add	r9, r9, #1
 966              	.LVL97:
 967              	.L44:
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 968              		.loc 1 325 32 is_stmt 1 discriminator 1 view .LVU301
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 969              		.loc 1 325 47 is_stmt 0 discriminator 1 view .LVU302
 970 01e0 BDF91E30 		ldrsh	r3, [sp, #30]
 325:lvgl/src/draw/lv_draw_img.c ****             lv_area_t mask_line;
 971              		.loc 1 325 9 discriminator 1 view .LVU303
 972 01e4 4B45     		cmp	r3, r9
 973 01e6 28DB     		blt	.L58
 974              	.LBB53:
 326:lvgl/src/draw/lv_draw_img.c ****             union_ok = _lv_area_intersect(&mask_line, clip_area_ori, &line);
 975              		.loc 1 326 13 is_stmt 1 view .LVU304
 327:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 976              		.loc 1 327 13 view .LVU305
 327:lvgl/src/draw/lv_draw_img.c ****             if(union_ok == false) continue;
 977              		.loc 1 327 24 is_stmt 0 view .LVU306
 978 01e8 08AA     		add	r2, sp, #32
 979 01ea 5946     		mov	r1, fp
 980 01ec 0AA8     		add	r0, sp, #40
 981 01ee FFF7FEFF 		bl	_lv_area_intersect
 982              	.LVL98:
 328:lvgl/src/draw/lv_draw_img.c **** 
 983              		.loc 1 328 13 is_stmt 1 view .LVU307
 328:lvgl/src/draw/lv_draw_img.c **** 
 984              		.loc 1 328 15 is_stmt 0 view .LVU308
 985 01f2 0028     		cmp	r0, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 44


 986 01f4 F2D0     		beq	.L46
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 987              		.loc 1 330 13 is_stmt 1 view .LVU309
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 988              		.loc 1 330 24 is_stmt 0 view .LVU310
 989 01f6 039B     		ldr	r3, [sp, #12]
 990 01f8 049A     		ldr	r2, [sp, #16]
 991 01fa 991A     		subs	r1, r3, r2
 992 01fc 0094     		str	r4, [sp]
 993 01fe 059B     		ldr	r3, [sp, #20]
 994 0200 2AB2     		sxth	r2, r5
 995 0202 09B2     		sxth	r1, r1
 996 0204 3846     		mov	r0, r7
 997              	.LVL99:
 330:lvgl/src/draw/lv_draw_img.c ****             if(read_res != LV_RES_OK) {
 998              		.loc 1 330 24 view .LVU311
 999 0206 FFF7FEFF 		bl	lv_img_decoder_read_line
 1000              	.LVL100:
 331:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 1001              		.loc 1 331 13 is_stmt 1 view .LVU312
 331:lvgl/src/draw/lv_draw_img.c ****                 lv_img_decoder_close(&cdsc->dec_dsc);
 1002              		.loc 1 331 15 is_stmt 0 view .LVU313
 1003 020a 0128     		cmp	r0, #1
 1004 020c D9D1     		bne	.L59
 340:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 1005              		.loc 1 340 13 is_stmt 1 view .LVU314
 340:lvgl/src/draw/lv_draw_img.c ****             lv_draw_img_decoded(draw_ctx, draw_dsc, &line, buf, cf);
 1006              		.loc 1 340 33 is_stmt 0 view .LVU315
 1007 020e 0AAB     		add	r3, sp, #40
 1008 0210 B360     		str	r3, [r6, #8]
 341:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 1009              		.loc 1 341 13 is_stmt 1 view .LVU316
 1010 0212 CDF80080 		str	r8, [sp]
 1011 0216 2346     		mov	r3, r4
 1012 0218 08AA     		add	r2, sp, #32
 1013 021a 5146     		mov	r1, r10
 1014 021c 3046     		mov	r0, r6
 1015              	.LVL101:
 341:lvgl/src/draw/lv_draw_img.c ****             line.y1++;
 1016              		.loc 1 341 13 is_stmt 0 view .LVU317
 1017 021e FFF7FEFF 		bl	lv_draw_img_decoded
 1018              	.LVL102:
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1019              		.loc 1 342 13 is_stmt 1 view .LVU318
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1020              		.loc 1 342 17 is_stmt 0 view .LVU319
 1021 0222 BDF92230 		ldrsh	r3, [sp, #34]
 342:lvgl/src/draw/lv_draw_img.c ****             line.y2++;
 1022              		.loc 1 342 20 view .LVU320
 1023 0226 0133     		adds	r3, r3, #1
 1024 0228 ADF82230 		strh	r3, [sp, #34]	@ movhi
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
 1025              		.loc 1 343 13 is_stmt 1 view .LVU321
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
 1026              		.loc 1 343 17 is_stmt 0 view .LVU322
 1027 022c BDF92630 		ldrsh	r3, [sp, #38]
 343:lvgl/src/draw/lv_draw_img.c ****             y++;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 45


 1028              		.loc 1 343 20 view .LVU323
 1029 0230 0133     		adds	r3, r3, #1
 1030 0232 ADF82630 		strh	r3, [sp, #38]	@ movhi
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1031              		.loc 1 344 13 is_stmt 1 view .LVU324
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1032              		.loc 1 344 14 is_stmt 0 view .LVU325
 1033 0236 0135     		adds	r5, r5, #1
 1034              	.LVL103:
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1035              		.loc 1 344 14 view .LVU326
 1036 0238 D0E7     		b	.L46
 1037              	.L58:
 344:lvgl/src/draw/lv_draw_img.c ****         }
 1038              		.loc 1 344 14 view .LVU327
 1039              	.LBE53:
 346:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 1040              		.loc 1 346 9 is_stmt 1 view .LVU328
 346:lvgl/src/draw/lv_draw_img.c ****         lv_mem_buf_release(buf);
 1041              		.loc 1 346 29 is_stmt 0 view .LVU329
 1042 023a C6F808B0 		str	fp, [r6, #8]
 347:lvgl/src/draw/lv_draw_img.c ****     }
 1043              		.loc 1 347 9 is_stmt 1 view .LVU330
 1044 023e 2046     		mov	r0, r4
 1045 0240 FFF7FEFF 		bl	lv_mem_buf_release
 1046              	.LVL104:
 1047 0244 19E7     		b	.L38
 1048              	.LVL105:
 1049              	.L50:
 347:lvgl/src/draw/lv_draw_img.c ****     }
 1050              		.loc 1 347 9 is_stmt 0 view .LVU331
 1051              	.LBE54:
 248:lvgl/src/draw/lv_draw_img.c **** 
 1052              		.loc 1 248 29 view .LVU332
 1053 0246 0020     		movs	r0, #0
 1054              	.LVL106:
 248:lvgl/src/draw/lv_draw_img.c **** 
 1055              		.loc 1 248 29 view .LVU333
 1056 0248 E2E6     		b	.L34
 1057              		.cfi_endproc
 1058              	.LFE168:
 1060              		.section	.rodata.lv_draw_img.str1.4,"aMS",%progbits,1
 1061              		.align	2
 1062              	.LC0:
 1063 0000 4E6F0A64 		.ascii	"No\012data\000"
 1063      61746100 
 1064              		.section	.text.lv_draw_img,"ax",%progbits
 1065              		.align	1
 1066              		.global	lv_draw_img
 1067              		.syntax unified
 1068              		.thumb
 1069              		.thumb_func
 1071              	lv_draw_img:
 1072              	.LVL107:
 1073              	.LFB162:
  64:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 1074              		.loc 1 64 1 is_stmt 1 view -0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 46


 1075              		.cfi_startproc
 1076              		@ args = 0, pretend = 0, frame = 0
 1077              		@ frame_needed = 0, uses_anonymous_args = 0
  64:lvgl/src/draw/lv_draw_img.c ****     if(src == NULL) {
 1078              		.loc 1 64 1 is_stmt 0 view .LVU335
 1079 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1080              		.cfi_def_cfa_offset 24
 1081              		.cfi_offset 4, -24
 1082              		.cfi_offset 5, -20
 1083              		.cfi_offset 6, -16
 1084              		.cfi_offset 7, -12
 1085              		.cfi_offset 8, -8
 1086              		.cfi_offset 14, -4
 1087 0004 0446     		mov	r4, r0
 1088 0006 1646     		mov	r6, r2
  65:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 1089              		.loc 1 65 5 is_stmt 1 view .LVU336
  65:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw: src is NULL");
 1090              		.loc 1 65 7 is_stmt 0 view .LVU337
 1091 0008 BBB1     		cbz	r3, .L66
 1092 000a 0D46     		mov	r5, r1
 1093 000c 1F46     		mov	r7, r3
  71:lvgl/src/draw/lv_draw_img.c **** 
 1094              		.loc 1 71 5 is_stmt 1 view .LVU338
  71:lvgl/src/draw/lv_draw_img.c **** 
 1095              		.loc 1 71 11 is_stmt 0 view .LVU339
 1096 000e 4B7B     		ldrb	r3, [r1, #13]	@ zero_extendqisi2
 1097              	.LVL108:
  71:lvgl/src/draw/lv_draw_img.c **** 
 1098              		.loc 1 71 7 view .LVU340
 1099 0010 022B     		cmp	r3, #2
 1100 0012 10D9     		bls	.L60
  73:lvgl/src/draw/lv_draw_img.c **** 
 1101              		.loc 1 73 5 is_stmt 1 view .LVU341
 1102              	.LVL109:
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1103              		.loc 1 75 5 view .LVU342
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1104              		.loc 1 75 16 is_stmt 0 view .LVU343
 1105 0014 D0F81C80 		ldr	r8, [r0, #28]
  75:lvgl/src/draw/lv_draw_img.c ****         res = draw_ctx->draw_img(draw_ctx, dsc, coords, src);
 1106              		.loc 1 75 7 view .LVU344
 1107 0018 B8F1000F 		cmp	r8, #0
 1108 001c 03D0     		beq	.L63
  76:lvgl/src/draw/lv_draw_img.c ****     }
 1109              		.loc 1 76 9 is_stmt 1 view .LVU345
  76:lvgl/src/draw/lv_draw_img.c ****     }
 1110              		.loc 1 76 15 is_stmt 0 view .LVU346
 1111 001e 3B46     		mov	r3, r7
 1112 0020 C047     		blx	r8
 1113              	.LVL110:
  79:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
 1114              		.loc 1 79 5 is_stmt 1 view .LVU347
  79:lvgl/src/draw/lv_draw_img.c ****         res = decode_and_draw(draw_ctx, dsc, coords, src);
 1115              		.loc 1 79 7 is_stmt 0 view .LVU348
 1116 0022 0128     		cmp	r0, #1
 1117 0024 05D0     		beq	.L64
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 47


 1118              	.LVL111:
 1119              	.L63:
  80:lvgl/src/draw/lv_draw_img.c ****     }
 1120              		.loc 1 80 9 is_stmt 1 view .LVU349
  80:lvgl/src/draw/lv_draw_img.c ****     }
 1121              		.loc 1 80 15 is_stmt 0 view .LVU350
 1122 0026 3B46     		mov	r3, r7
 1123 0028 3246     		mov	r2, r6
 1124 002a 2946     		mov	r1, r5
 1125 002c 2046     		mov	r0, r4
 1126 002e FFF7FEFF 		bl	decode_and_draw
 1127              	.LVL112:
 1128              	.L64:
  83:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1129              		.loc 1 83 5 is_stmt 1 view .LVU351
  83:lvgl/src/draw/lv_draw_img.c ****         LV_LOG_WARN("Image draw error");
 1130              		.loc 1 83 7 is_stmt 0 view .LVU352
 1131 0032 0128     		cmp	r0, #1
 1132 0034 06D1     		bne	.L67
 1133              	.LVL113:
 1134              	.L60:
  87:lvgl/src/draw/lv_draw_img.c **** 
 1135              		.loc 1 87 1 view .LVU353
 1136 0036 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1137              	.LVL114:
 1138              	.L66:
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1139              		.loc 1 66 9 is_stmt 1 view .LVU354
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1140              		.loc 1 66 9 view .LVU355
  66:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1141              		.loc 1 66 9 view .LVU356
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1142              		.loc 1 67 9 view .LVU357
 1143 003a 054A     		ldr	r2, .L68
 1144              	.LVL115:
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1145              		.loc 1 67 9 is_stmt 0 view .LVU358
 1146 003c 3146     		mov	r1, r6
 1147              	.LVL116:
  67:lvgl/src/draw/lv_draw_img.c ****         return;
 1148              		.loc 1 67 9 view .LVU359
 1149 003e FFF7FEFF 		bl	show_error
 1150              	.LVL117:
  68:lvgl/src/draw/lv_draw_img.c ****     }
 1151              		.loc 1 68 9 is_stmt 1 view .LVU360
 1152 0042 F8E7     		b	.L60
 1153              	.LVL118:
 1154              	.L67:
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1155              		.loc 1 84 9 view .LVU361
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1156              		.loc 1 84 9 view .LVU362
  84:lvgl/src/draw/lv_draw_img.c ****         show_error(draw_ctx, coords, "No\ndata");
 1157              		.loc 1 84 9 view .LVU363
  85:lvgl/src/draw/lv_draw_img.c ****     }
 1158              		.loc 1 85 9 view .LVU364
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 48


 1159 0044 024A     		ldr	r2, .L68
 1160 0046 3146     		mov	r1, r6
 1161 0048 2046     		mov	r0, r4
 1162              	.LVL119:
  85:lvgl/src/draw/lv_draw_img.c ****     }
 1163              		.loc 1 85 9 is_stmt 0 view .LVU365
 1164 004a FFF7FEFF 		bl	show_error
 1165              	.LVL120:
 1166 004e F2E7     		b	.L60
 1167              	.L69:
 1168              		.align	2
 1169              	.L68:
 1170 0050 00000000 		.word	.LC0
 1171              		.cfi_endproc
 1172              	.LFE162:
 1174              		.text
 1175              	.Letext0:
 1176              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 1177              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 1178              		.file 6 "lvgl/src/draw/../misc/lv_types.h"
 1179              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 1180              		.file 8 "lvgl/src/draw/lv_img_buf.h"
 1181              		.file 9 "lvgl/src/draw/lv_img_decoder.h"
 1182              		.file 10 "lvgl/src/draw/../misc/../font/lv_font.h"
 1183              		.file 11 "lvgl/src/draw/../misc/lv_txt.h"
 1184              		.file 12 "lvgl/src/draw/../misc/lv_bidi.h"
 1185              		.file 13 "lvgl/src/draw/../misc/lv_style.h"
 1186              		.file 14 "lvgl/src/draw/lv_draw_img.h"
 1187              		.file 15 "lvgl/src/draw/lv_img_cache.h"
 1188              		.file 16 "lvgl/src/draw/../hal/../draw/lv_draw_rect.h"
 1189              		.file 17 "lvgl/src/draw/../hal/../draw/lv_draw_label.h"
 1190              		.file 18 "lvgl/src/draw/../hal/../draw/lv_draw_line.h"
 1191              		.file 19 "lvgl/src/draw/../hal/../draw/lv_draw_arc.h"
 1192              		.file 20 "lvgl/src/draw/../hal/../draw/lv_draw_layer.h"
 1193              		.file 21 "lvgl/src/draw/../hal/../draw/lv_draw.h"
 1194              		.file 22 "lvgl/src/draw/../misc/lv_mem.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s 			page 49


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_img.c
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:19     .text.draw_cleanup:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:24     .text.draw_cleanup:00000000 draw_cleanup
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:46     .text.show_error:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:51     .text.show_error:00000000 show_error
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:129    .text.lv_draw_img_dsc_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:135    .text.lv_draw_img_dsc_init:00000000 lv_draw_img_dsc_init
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:197    .text.lv_img_cf_get_px_size:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:203    .text.lv_img_cf_get_px_size:00000000 lv_img_cf_get_px_size
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:220    .text.lv_img_cf_get_px_size:0000000a $d
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:279    .text.lv_img_cf_is_chroma_keyed:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:285    .text.lv_img_cf_is_chroma_keyed:00000000 lv_img_cf_is_chroma_keyed
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:323    .text.lv_img_cf_has_alpha:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:329    .text.lv_img_cf_has_alpha:00000000 lv_img_cf_has_alpha
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:363    .text.lv_img_src_get_type:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:369    .text.lv_img_src_get_type:00000000 lv_img_src_get_type
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:426    .text.lv_draw_img_decoded:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:432    .text.lv_draw_img_decoded:00000000 lv_draw_img_decoded
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:468    .text.decode_and_draw:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:473    .text.decode_and_draw:00000000 decode_and_draw
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:1061   .rodata.lv_draw_img.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:1065   .text.lv_draw_img:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:1071   .text.lv_draw_img:00000000 lv_draw_img
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:1170   .text.lv_draw_img:00000050 $d
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:231    .text.lv_img_cf_get_px_size:00000015 $d
C:\Users\OSD\AppData\Local\Temp\ccfhTrDt.s:231    .text.lv_img_cf_get_px_size:00000016 $t

UNDEFINED SYMBOLS
lv_img_decoder_close
lv_draw_rect_dsc_init
lv_draw_rect
lv_draw_label_dsc_init
lv_draw_label
lv_memset_00
_lv_img_cache_open
_lv_area_intersect
_lv_img_buf_get_transformed_area
lv_mem_buf_get
lv_area_set_height
lv_mem_buf_release
lv_img_decoder_read_line
