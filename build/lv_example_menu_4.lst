ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_menu_4.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.float_btn_event_cb.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 48656C6C 		.ascii	"Hello, I am hiding inside %lu\000"
  21      6F2C2049 
  21      20616D20 
  21      68696469 
  21      6E672069 
  22 001e 0000     		.align	2
  23              	.LC1:
  24 0020 4974656D 		.ascii	"Item %lu\000"
  24      20256C75 
  24      00
  25              		.section	.text.float_btn_event_cb,"ax",%progbits
  26              		.align	1
  27              		.syntax unified
  28              		.thumb
  29              		.thumb_func
  31              	float_btn_event_cb:
  32              	.LVL0:
  33              	.LFB204:
  34              		.file 1 "lvgl/examples/widgets/menu/lv_example_menu_4.c"
   1:lvgl/examples/widgets/menu/lv_example_menu_4.c **** #include "../../lv_examples.h"
   2:lvgl/examples/widgets/menu/lv_example_menu_4.c **** #if LV_USE_MENU && LV_BUILD_EXAMPLES
   3:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
   4:lvgl/examples/widgets/menu/lv_example_menu_4.c **** static uint32_t btn_cnt = 1;
   5:lvgl/examples/widgets/menu/lv_example_menu_4.c **** static lv_obj_t * main_page;
   6:lvgl/examples/widgets/menu/lv_example_menu_4.c **** static lv_obj_t * menu;
   7:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
   8:lvgl/examples/widgets/menu/lv_example_menu_4.c **** static void float_btn_event_cb(lv_event_t * e)
   9:lvgl/examples/widgets/menu/lv_example_menu_4.c **** {
  35              		.loc 1 9 1 view -0
  36              		.cfi_startproc
  37              		@ args = 0, pretend = 0, frame = 0
  38              		@ frame_needed = 0, uses_anonymous_args = 0
  39              		.loc 1 9 1 is_stmt 0 view .LVU1
  40 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
  41              		.cfi_def_cfa_offset 24
  42              		.cfi_offset 3, -24
  43              		.cfi_offset 4, -20
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 2


  44              		.cfi_offset 5, -16
  45              		.cfi_offset 6, -12
  46              		.cfi_offset 7, -8
  47              		.cfi_offset 14, -4
  10:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     LV_UNUSED(e);
  48              		.loc 1 10 5 is_stmt 1 view .LVU2
  11:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  12:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     btn_cnt++;
  49              		.loc 1 12 5 view .LVU3
  50              		.loc 1 12 12 is_stmt 0 view .LVU4
  51 0002 134D     		ldr	r5, .L3
  52 0004 2B68     		ldr	r3, [r5]
  53 0006 0133     		adds	r3, r3, #1
  54 0008 2B60     		str	r3, [r5]
  13:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  14:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * cont;
  55              		.loc 1 14 5 is_stmt 1 view .LVU5
  15:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * label;
  56              		.loc 1 15 5 view .LVU6
  16:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  17:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * sub_page = lv_menu_page_create(menu, NULL);
  57              		.loc 1 17 5 view .LVU7
  58              		.loc 1 17 27 is_stmt 0 view .LVU8
  59 000a 124F     		ldr	r7, .L3+4
  60 000c 0021     		movs	r1, #0
  61 000e 3868     		ldr	r0, [r7]
  62              	.LVL1:
  63              		.loc 1 17 27 view .LVU9
  64 0010 FFF7FEFF 		bl	lv_menu_page_create
  65              	.LVL2:
  66 0014 0646     		mov	r6, r0
  67              	.LVL3:
  18:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  19:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     cont = lv_menu_cont_create(sub_page);
  68              		.loc 1 19 5 is_stmt 1 view .LVU10
  69              		.loc 1 19 12 is_stmt 0 view .LVU11
  70 0016 FFF7FEFF 		bl	lv_menu_cont_create
  71              	.LVL4:
  20:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     label = lv_label_create(cont);
  72              		.loc 1 20 5 is_stmt 1 view .LVU12
  73              		.loc 1 20 13 is_stmt 0 view .LVU13
  74 001a FFF7FEFF 		bl	lv_label_create
  75              	.LVL5:
  21:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_label_set_text_fmt(label, "Hello, I am hiding inside %"LV_PRIu32, btn_cnt);
  76              		.loc 1 21 5 is_stmt 1 view .LVU14
  77 001e 2A68     		ldr	r2, [r5]
  78 0020 0D49     		ldr	r1, .L3+8
  79 0022 FFF7FEFF 		bl	lv_label_set_text_fmt
  80              	.LVL6:
  22:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  23:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     cont = lv_menu_cont_create(main_page);
  81              		.loc 1 23 5 view .LVU15
  82              		.loc 1 23 12 is_stmt 0 view .LVU16
  83 0026 0D4B     		ldr	r3, .L3+12
  84 0028 1868     		ldr	r0, [r3]
  85 002a FFF7FEFF 		bl	lv_menu_cont_create
  86              	.LVL7:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 3


  87 002e 0446     		mov	r4, r0
  88              	.LVL8:
  24:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     label = lv_label_create(cont);
  89              		.loc 1 24 5 is_stmt 1 view .LVU17
  90              		.loc 1 24 13 is_stmt 0 view .LVU18
  91 0030 FFF7FEFF 		bl	lv_label_create
  92              	.LVL9:
  25:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_label_set_text_fmt(label, "Item %"LV_PRIu32, btn_cnt);
  93              		.loc 1 25 5 is_stmt 1 view .LVU19
  94 0034 2A68     		ldr	r2, [r5]
  95 0036 0A49     		ldr	r1, .L3+16
  96 0038 FFF7FEFF 		bl	lv_label_set_text_fmt
  97              	.LVL10:
  26:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_menu_set_load_page_event(menu, cont, sub_page);
  98              		.loc 1 26 5 view .LVU20
  99 003c 3246     		mov	r2, r6
 100 003e 2146     		mov	r1, r4
 101 0040 3868     		ldr	r0, [r7]
 102 0042 FFF7FEFF 		bl	lv_menu_set_load_page_event
 103              	.LVL11:
  27:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  28:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_scroll_to_view_recursive(cont, LV_ANIM_ON);
 104              		.loc 1 28 5 view .LVU21
 105 0046 0121     		movs	r1, #1
 106 0048 2046     		mov	r0, r4
 107 004a FFF7FEFF 		bl	lv_obj_scroll_to_view_recursive
 108              	.LVL12:
  29:lvgl/examples/widgets/menu/lv_example_menu_4.c **** }
 109              		.loc 1 29 1 is_stmt 0 view .LVU22
 110 004e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 111              	.LVL13:
 112              	.L4:
 113              		.loc 1 29 1 view .LVU23
 114              		.align	2
 115              	.L3:
 116 0050 00000000 		.word	.LANCHOR0
 117 0054 00000000 		.word	.LANCHOR1
 118 0058 00000000 		.word	.LC0
 119 005c 00000000 		.word	.LANCHOR2
 120 0060 20000000 		.word	.LC1
 121              		.cfi_endproc
 122              	.LFE204:
 124              		.section	.rodata.lv_example_menu_4.str1.4,"aMS",%progbits,1
 125              		.align	2
 126              	.LC2:
 127 0000 48656C6C 		.ascii	"Hello, I am hiding inside the first item\000"
 127      6F2C2049 
 127      20616D20 
 127      68696469 
 127      6E672069 
 128 0029 000000   		.align	2
 129              	.LC3:
 130 002c 4974656D 		.ascii	"Item 1\000"
 130      203100
 131 0033 00       		.align	2
 132              	.LC4:
 133 0034 EF81A700 		.ascii	"\357\201\247\000"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 4


 134              		.section	.text.lv_example_menu_4,"ax",%progbits
 135              		.align	1
 136              		.global	lv_example_menu_4
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	lv_example_menu_4:
 142              	.LFB205:
  30:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  31:lvgl/examples/widgets/menu/lv_example_menu_4.c **** void lv_example_menu_4(void)
  32:lvgl/examples/widgets/menu/lv_example_menu_4.c **** {
 143              		.loc 1 32 1 is_stmt 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 148              		.cfi_def_cfa_offset 24
 149              		.cfi_offset 3, -24
 150              		.cfi_offset 4, -20
 151              		.cfi_offset 5, -16
 152              		.cfi_offset 6, -12
 153              		.cfi_offset 7, -8
 154              		.cfi_offset 14, -4
  33:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     /*Create a menu object*/
  34:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     menu = lv_menu_create(lv_scr_act());
 155              		.loc 1 34 5 view .LVU25
 156              	.LBB10:
 157              	.LBI10:
 158              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 5


  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 6


  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 7


 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 159              		.loc 2 182 26 view .LVU26
 160              	.LBB11:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 161              		.loc 2 184 5 view .LVU27
 162              		.loc 2 184 12 is_stmt 0 view .LVU28
 163 0002 FFF7FEFF 		bl	lv_disp_get_default
 164              	.LVL14:
 165 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
 166              	.LVL15:
 167              	.LBE11:
 168              	.LBE10:
 169              		.loc 1 34 12 view .LVU29
 170 000a FFF7FEFF 		bl	lv_menu_create
 171              	.LVL16:
 172 000e 0446     		mov	r4, r0
 173              		.loc 1 34 10 view .LVU30
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 8


 174 0010 334D     		ldr	r5, .L7
 175 0012 2860     		str	r0, [r5]
  35:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_set_size(menu, lv_disp_get_hor_res(NULL), lv_disp_get_ver_res(NULL));
 176              		.loc 1 35 5 is_stmt 1 view .LVU31
 177 0014 0020     		movs	r0, #0
 178 0016 FFF7FEFF 		bl	lv_disp_get_hor_res
 179              	.LVL17:
 180 001a 0646     		mov	r6, r0
 181 001c 0020     		movs	r0, #0
 182 001e FFF7FEFF 		bl	lv_disp_get_ver_res
 183              	.LVL18:
 184 0022 0246     		mov	r2, r0
 185 0024 3146     		mov	r1, r6
 186 0026 2046     		mov	r0, r4
 187 0028 FFF7FEFF 		bl	lv_obj_set_size
 188              	.LVL19:
  36:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_center(menu);
 189              		.loc 1 36 5 view .LVU32
 190              	.LBB12:
 191              	.LBI12:
 192              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 9


  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 10


  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 11


 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 193              		.loc 3 199 20 view .LVU33
 194              	.LBB13:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 195              		.loc 3 201 5 view .LVU34
 196 002c 0023     		movs	r3, #0
 197 002e 1A46     		mov	r2, r3
 198 0030 0921     		movs	r1, #9
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 12


 199 0032 2868     		ldr	r0, [r5]
 200 0034 FFF7FEFF 		bl	lv_obj_align
 201              	.LVL20:
 202              		.loc 3 201 5 is_stmt 0 view .LVU35
 203              	.LBE13:
 204              	.LBE12:
  37:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  38:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * cont;
 205              		.loc 1 38 5 is_stmt 1 view .LVU36
  39:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * label;
 206              		.loc 1 39 5 view .LVU37
  40:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  41:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     /*Create a sub page*/
  42:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * sub_page = lv_menu_page_create(menu, NULL);
 207              		.loc 1 42 5 view .LVU38
 208              		.loc 1 42 27 is_stmt 0 view .LVU39
 209 0038 0021     		movs	r1, #0
 210 003a 2868     		ldr	r0, [r5]
 211 003c FFF7FEFF 		bl	lv_menu_page_create
 212              	.LVL21:
 213 0040 0646     		mov	r6, r0
 214              	.LVL22:
  43:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  44:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     cont = lv_menu_cont_create(sub_page);
 215              		.loc 1 44 5 is_stmt 1 view .LVU40
 216              		.loc 1 44 12 is_stmt 0 view .LVU41
 217 0042 FFF7FEFF 		bl	lv_menu_cont_create
 218              	.LVL23:
  45:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     label = lv_label_create(cont);
 219              		.loc 1 45 5 is_stmt 1 view .LVU42
 220              		.loc 1 45 13 is_stmt 0 view .LVU43
 221 0046 FFF7FEFF 		bl	lv_label_create
 222              	.LVL24:
  46:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_label_set_text(label, "Hello, I am hiding inside the first item");
 223              		.loc 1 46 5 is_stmt 1 view .LVU44
 224 004a 2649     		ldr	r1, .L7+4
 225 004c FFF7FEFF 		bl	lv_label_set_text
 226              	.LVL25:
  47:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  48:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     /*Create a main page*/
  49:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     main_page = lv_menu_page_create(menu, NULL);
 227              		.loc 1 49 5 view .LVU45
 228              		.loc 1 49 17 is_stmt 0 view .LVU46
 229 0050 0021     		movs	r1, #0
 230 0052 2868     		ldr	r0, [r5]
 231 0054 FFF7FEFF 		bl	lv_menu_page_create
 232              	.LVL26:
 233              		.loc 1 49 15 view .LVU47
 234 0058 234F     		ldr	r7, .L7+8
 235 005a 3860     		str	r0, [r7]
  50:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  51:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     cont = lv_menu_cont_create(main_page);
 236              		.loc 1 51 5 is_stmt 1 view .LVU48
 237              		.loc 1 51 12 is_stmt 0 view .LVU49
 238 005c FFF7FEFF 		bl	lv_menu_cont_create
 239              	.LVL27:
 240 0060 0446     		mov	r4, r0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 13


 241              	.LVL28:
  52:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     label = lv_label_create(cont);
 242              		.loc 1 52 5 is_stmt 1 view .LVU50
 243              		.loc 1 52 13 is_stmt 0 view .LVU51
 244 0062 FFF7FEFF 		bl	lv_label_create
 245              	.LVL29:
  53:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_label_set_text(label, "Item 1");
 246              		.loc 1 53 5 is_stmt 1 view .LVU52
 247 0066 2149     		ldr	r1, .L7+12
 248 0068 FFF7FEFF 		bl	lv_label_set_text
 249              	.LVL30:
  54:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_menu_set_load_page_event(menu, cont, sub_page);
 250              		.loc 1 54 5 view .LVU53
 251 006c 3246     		mov	r2, r6
 252 006e 2146     		mov	r1, r4
 253 0070 2868     		ldr	r0, [r5]
 254 0072 FFF7FEFF 		bl	lv_menu_set_load_page_event
 255              	.LVL31:
  55:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  56:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_menu_set_page(menu, main_page);
 256              		.loc 1 56 5 view .LVU54
 257 0076 3968     		ldr	r1, [r7]
 258 0078 2868     		ldr	r0, [r5]
 259 007a FFF7FEFF 		bl	lv_menu_set_page
 260              	.LVL32:
  57:lvgl/examples/widgets/menu/lv_example_menu_4.c **** 
  58:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     /*Create floating btn*/
  59:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_t * float_btn = lv_btn_create(lv_scr_act());
 261              		.loc 1 59 5 view .LVU55
 262              	.LBB14:
 263              	.LBI14:
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 264              		.loc 2 182 26 view .LVU56
 265              	.LBB15:
 266              		.loc 2 184 5 view .LVU57
 267              		.loc 2 184 12 is_stmt 0 view .LVU58
 268 007e FFF7FEFF 		bl	lv_disp_get_default
 269              	.LVL33:
 270 0082 FFF7FEFF 		bl	lv_disp_get_scr_act
 271              	.LVL34:
 272              	.LBE15:
 273              	.LBE14:
 274              		.loc 1 59 28 view .LVU59
 275 0086 FFF7FEFF 		bl	lv_btn_create
 276              	.LVL35:
 277 008a 0446     		mov	r4, r0
 278              	.LVL36:
  60:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_set_size(float_btn, 50, 50);
 279              		.loc 1 60 5 is_stmt 1 view .LVU60
 280 008c 3222     		movs	r2, #50
 281 008e 1146     		mov	r1, r2
 282 0090 FFF7FEFF 		bl	lv_obj_set_size
 283              	.LVL37:
  61:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_add_flag(float_btn, LV_OBJ_FLAG_FLOATING);
 284              		.loc 1 61 5 view .LVU61
 285 0094 4FF48021 		mov	r1, #262144
 286 0098 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 14


 287 009a FFF7FEFF 		bl	lv_obj_add_flag
 288              	.LVL38:
  62:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_align(float_btn, LV_ALIGN_BOTTOM_RIGHT, -10, -10);
 289              		.loc 1 62 5 view .LVU62
 290 009e 6FF00903 		mvn	r3, #9
 291 00a2 1A46     		mov	r2, r3
 292 00a4 0621     		movs	r1, #6
 293 00a6 2046     		mov	r0, r4
 294 00a8 FFF7FEFF 		bl	lv_obj_align
 295              	.LVL39:
  63:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_add_event_cb(float_btn, float_btn_event_cb, LV_EVENT_CLICKED, menu);
 296              		.loc 1 63 5 view .LVU63
 297 00ac 2B68     		ldr	r3, [r5]
 298 00ae 0722     		movs	r2, #7
 299 00b0 0F49     		ldr	r1, .L7+16
 300 00b2 2046     		mov	r0, r4
 301 00b4 FFF7FEFF 		bl	lv_obj_add_event_cb
 302              	.LVL40:
  64:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_set_style_radius(float_btn, LV_RADIUS_CIRCLE, 0);
 303              		.loc 1 64 5 view .LVU64
 304 00b8 0022     		movs	r2, #0
 305 00ba 47F6FF71 		movw	r1, #32767
 306 00be 2046     		mov	r0, r4
 307 00c0 FFF7FEFF 		bl	lv_obj_set_style_radius
 308              	.LVL41:
  65:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_set_style_bg_img_src(float_btn, LV_SYMBOL_PLUS, 0);
 309              		.loc 1 65 5 view .LVU65
 310 00c4 0022     		movs	r2, #0
 311 00c6 0B49     		ldr	r1, .L7+20
 312 00c8 2046     		mov	r0, r4
 313 00ca FFF7FEFF 		bl	lv_obj_set_style_bg_img_src
 314              	.LVL42:
  66:lvgl/examples/widgets/menu/lv_example_menu_4.c ****     lv_obj_set_style_text_font(float_btn, lv_theme_get_font_large(float_btn), 0);
 315              		.loc 1 66 5 view .LVU66
 316 00ce 2046     		mov	r0, r4
 317 00d0 FFF7FEFF 		bl	lv_theme_get_font_large
 318              	.LVL43:
 319 00d4 0146     		mov	r1, r0
 320 00d6 0022     		movs	r2, #0
 321 00d8 2046     		mov	r0, r4
 322 00da FFF7FEFF 		bl	lv_obj_set_style_text_font
 323              	.LVL44:
  67:lvgl/examples/widgets/menu/lv_example_menu_4.c **** }
 324              		.loc 1 67 1 is_stmt 0 view .LVU67
 325 00de F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 326              	.LVL45:
 327              	.L8:
 328              		.loc 1 67 1 view .LVU68
 329              		.align	2
 330              	.L7:
 331 00e0 00000000 		.word	.LANCHOR1
 332 00e4 00000000 		.word	.LC2
 333 00e8 00000000 		.word	.LANCHOR2
 334 00ec 2C000000 		.word	.LC3
 335 00f0 00000000 		.word	float_btn_event_cb
 336 00f4 34000000 		.word	.LC4
 337              		.cfi_endproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 15


 338              	.LFE205:
 340              		.section	.bss.main_page,"aw",%nobits
 341              		.align	2
 342              		.set	.LANCHOR2,. + 0
 345              	main_page:
 346 0000 00000000 		.space	4
 347              		.section	.bss.menu,"aw",%nobits
 348              		.align	2
 349              		.set	.LANCHOR1,. + 0
 352              	menu:
 353 0000 00000000 		.space	4
 354              		.section	.data.btn_cnt,"aw"
 355              		.align	2
 356              		.set	.LANCHOR0,. + 0
 359              	btn_cnt:
 360 0000 01000000 		.word	1
 361              		.text
 362              	.Letext0:
 363              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 364              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 365              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 366              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_anim.h"
 367              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 368              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 369              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 370              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 371              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 372              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 373              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 374              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 375              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 376              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_bar.h"
 377              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 378              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 379              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/menu/lv_menu.h"
 380              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_label.h"
 381              		.file 22 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_btn.h"
 382              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style_gen.h"
 383              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_theme.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_menu_4.c
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:19     .rodata.float_btn_event_cb.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:26     .text.float_btn_event_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:31     .text.float_btn_event_cb:00000000 float_btn_event_cb
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:116    .text.float_btn_event_cb:00000050 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:125    .rodata.lv_example_menu_4.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:135    .text.lv_example_menu_4:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:141    .text.lv_example_menu_4:00000000 lv_example_menu_4
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:331    .text.lv_example_menu_4:000000e0 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:341    .bss.main_page:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:345    .bss.main_page:00000000 main_page
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:348    .bss.menu:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:352    .bss.menu:00000000 menu
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:355    .data.btn_cnt:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cca1FXKy.s:359    .data.btn_cnt:00000000 btn_cnt

UNDEFINED SYMBOLS
lv_menu_page_create
lv_menu_cont_create
lv_label_create
lv_label_set_text_fmt
lv_menu_set_load_page_event
lv_obj_scroll_to_view_recursive
lv_disp_get_default
lv_disp_get_scr_act
lv_menu_create
lv_disp_get_hor_res
lv_disp_get_ver_res
lv_obj_set_size
lv_obj_align
lv_label_set_text
lv_menu_set_page
lv_btn_create
lv_obj_add_flag
lv_obj_add_event_cb
lv_obj_set_style_radius
lv_obj_set_style_bg_img_src
lv_theme_get_font_large
lv_obj_set_style_text_font
