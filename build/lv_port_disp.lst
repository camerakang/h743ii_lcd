ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_port_disp.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.disp_flush,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	disp_flush:
  25              	.LVL0:
  26              	.LFB353:
  27              		.file 1 "lvgl/lv_port_disp.c"
   1:lvgl/lv_port_disp.c **** /**
   2:lvgl/lv_port_disp.c ****  * @file lv_port_disp_templ.c
   3:lvgl/lv_port_disp.c ****  *
   4:lvgl/lv_port_disp.c ****  */
   5:lvgl/lv_port_disp.c **** 
   6:lvgl/lv_port_disp.c ****  /*Copy this file as "lv_port_disp.c" and set this value to "1" to enable content*/
   7:lvgl/lv_port_disp.c **** #if 1
   8:lvgl/lv_port_disp.c **** 
   9:lvgl/lv_port_disp.c **** /*********************
  10:lvgl/lv_port_disp.c ****  *      INCLUDES
  11:lvgl/lv_port_disp.c ****  *********************/
  12:lvgl/lv_port_disp.c **** #include "lv_port_disp.h"
  13:lvgl/lv_port_disp.c **** #include "../../lvgl.h"
  14:lvgl/lv_port_disp.c **** 
  15:lvgl/lv_port_disp.c **** #include "lcd_rgb.h"
  16:lvgl/lv_port_disp.c **** #include "tim.h"
  17:lvgl/lv_port_disp.c **** /*********************
  18:lvgl/lv_port_disp.c ****  *      DEFINES
  19:lvgl/lv_port_disp.c ****  *********************/
  20:lvgl/lv_port_disp.c **** 
  21:lvgl/lv_port_disp.c **** extern	LTDC_HandleTypeDef hltdc;		// LTDC句柄
  22:lvgl/lv_port_disp.c **** 
  23:lvgl/lv_port_disp.c **** #define 	LVGL_MemoryAdd	( LCD_MemoryAdd + LCD_Width*LCD_Height*BytesPerPixel_0 )	// 显示缓冲区
  24:lvgl/lv_port_disp.c **** 
  25:lvgl/lv_port_disp.c **** /**********************
  26:lvgl/lv_port_disp.c ****  *      TYPEDEFS
  27:lvgl/lv_port_disp.c ****  **********************/
  28:lvgl/lv_port_disp.c **** 
  29:lvgl/lv_port_disp.c **** /**********************
  30:lvgl/lv_port_disp.c ****  *  STATIC PROTOTYPES
  31:lvgl/lv_port_disp.c ****  **********************/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 2


  32:lvgl/lv_port_disp.c **** static void disp_init(void);
  33:lvgl/lv_port_disp.c **** 
  34:lvgl/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p);
  35:lvgl/lv_port_disp.c **** //static void gpu_fill(lv_disp_drv_t * disp_drv, lv_color_t * dest_buf, lv_coord_t dest_width,
  36:lvgl/lv_port_disp.c **** //        const lv_area_t * fill_area, lv_color_t color);
  37:lvgl/lv_port_disp.c **** 
  38:lvgl/lv_port_disp.c **** /**********************
  39:lvgl/lv_port_disp.c ****  *  STATIC VARIABLES
  40:lvgl/lv_port_disp.c ****  **********************/
  41:lvgl/lv_port_disp.c **** 
  42:lvgl/lv_port_disp.c **** /**********************
  43:lvgl/lv_port_disp.c ****  *      MACROS
  44:lvgl/lv_port_disp.c ****  **********************/
  45:lvgl/lv_port_disp.c **** 
  46:lvgl/lv_port_disp.c **** /**********************
  47:lvgl/lv_port_disp.c ****  *   GLOBAL FUNCTIONS
  48:lvgl/lv_port_disp.c ****  **********************/
  49:lvgl/lv_port_disp.c **** 
  50:lvgl/lv_port_disp.c **** void lv_port_disp_init(void)
  51:lvgl/lv_port_disp.c **** {
  52:lvgl/lv_port_disp.c ****     /*-------------------------
  53:lvgl/lv_port_disp.c ****      * Initialize your display
  54:lvgl/lv_port_disp.c ****      * -----------------------*/
  55:lvgl/lv_port_disp.c ****     disp_init();
  56:lvgl/lv_port_disp.c **** 
  57:lvgl/lv_port_disp.c ****     /*-----------------------------
  58:lvgl/lv_port_disp.c ****      * Create a buffer for drawing
  59:lvgl/lv_port_disp.c ****      *----------------------------*/
  60:lvgl/lv_port_disp.c **** 
  61:lvgl/lv_port_disp.c ****     /**
  62:lvgl/lv_port_disp.c ****      * LVGL requires a buffer where it internally draws the widgets.
  63:lvgl/lv_port_disp.c ****      * Later this buffer will passed to your display driver's `flush_cb` to copy its content to you
  64:lvgl/lv_port_disp.c ****      * The buffer has to be greater than 1 display row
  65:lvgl/lv_port_disp.c ****      *
  66:lvgl/lv_port_disp.c ****      * There are 3 buffering configurations:
  67:lvgl/lv_port_disp.c ****      * 1. Create ONE buffer:
  68:lvgl/lv_port_disp.c ****      *      LVGL will draw the display's content here and writes it to your display
  69:lvgl/lv_port_disp.c ****      *
  70:lvgl/lv_port_disp.c ****      * 2. Create TWO buffer:
  71:lvgl/lv_port_disp.c ****      *      LVGL will draw the display's content to a buffer and writes it your display.
  72:lvgl/lv_port_disp.c ****      *      You should use DMA to write the buffer's content to the display.
  73:lvgl/lv_port_disp.c ****      *      It will enable LVGL to draw the next part of the screen to the other buffer while
  74:lvgl/lv_port_disp.c ****      *      the data is being sent form the first buffer. It makes rendering and flushing parallel.
  75:lvgl/lv_port_disp.c ****      *
  76:lvgl/lv_port_disp.c ****      * 3. Double buffering
  77:lvgl/lv_port_disp.c ****      *      Set 2 screens sized buffers and set disp_drv.full_refresh = 1.
  78:lvgl/lv_port_disp.c ****      *      This way LVGL will always provide the whole rendered screen in `flush_cb`
  79:lvgl/lv_port_disp.c ****      *      and you only need to change the frame buffer's address.
  80:lvgl/lv_port_disp.c ****      */
  81:lvgl/lv_port_disp.c **** 
  82:lvgl/lv_port_disp.c ****     /* Example for 2) */
  83:lvgl/lv_port_disp.c **** //      static lv_disp_draw_buf_t draw_buf_dsc_2;
  84:lvgl/lv_port_disp.c **** //      static lv_color_t *buf_2_1 = (lv_color_t * )(0x2403FC00);                   
  85:lvgl/lv_port_disp.c **** //		static lv_color_t *buf_2_2 = (lv_color_t * )(0x24057300);    
  86:lvgl/lv_port_disp.c **** //		lv_disp_draw_buf_init(&draw_buf_dsc_2, buf_2_1, buf_2_2, LCD_Width * 100);   /*Initialize the d
  87:lvgl/lv_port_disp.c **** 
  88:lvgl/lv_port_disp.c ****     /* Example for 3) also set disp_drv.full_refresh = 1 below*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 3


  89:lvgl/lv_port_disp.c ****     static lv_disp_draw_buf_t draw_buf_dsc_3;
  90:lvgl/lv_port_disp.c ****     static lv_color_t *buf_3_1 = (lv_color_t * )(LVGL_MemoryAdd);             /*A screen sized buff
  91:lvgl/lv_port_disp.c ****     static lv_color_t *buf_3_2 = (lv_color_t * )(LVGL_MemoryAdd + LCD_Width*LCD_Height*sizeof(lv_co
  92:lvgl/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2, LCD_Width * LCD_Height);   /*Initializ
  93:lvgl/lv_port_disp.c **** 
  94:lvgl/lv_port_disp.c ****     /*-----------------------------------
  95:lvgl/lv_port_disp.c ****      * Register the display in LVGL
  96:lvgl/lv_port_disp.c ****      *----------------------------------*/
  97:lvgl/lv_port_disp.c **** 
  98:lvgl/lv_port_disp.c ****     static lv_disp_drv_t disp_drv;                  /*Descriptor of a display driver*/
  99:lvgl/lv_port_disp.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 100:lvgl/lv_port_disp.c **** 
 101:lvgl/lv_port_disp.c ****     /*Set up the functions to access to your display*/
 102:lvgl/lv_port_disp.c **** 
 103:lvgl/lv_port_disp.c ****     /*Set the resolution of the display*/
 104:lvgl/lv_port_disp.c ****     disp_drv.hor_res = LCD_Width;
 105:lvgl/lv_port_disp.c ****     disp_drv.ver_res = LCD_Height;
 106:lvgl/lv_port_disp.c **** 
 107:lvgl/lv_port_disp.c ****     /*Used to copy the buffer's content to the display*/
 108:lvgl/lv_port_disp.c ****     disp_drv.flush_cb = disp_flush;
 109:lvgl/lv_port_disp.c **** 
 110:lvgl/lv_port_disp.c ****     /*Set a display buffer*/
 111:lvgl/lv_port_disp.c ****     disp_drv.draw_buf = &draw_buf_dsc_3;
 112:lvgl/lv_port_disp.c **** 
 113:lvgl/lv_port_disp.c ****     /*Required for Example 3)*/
 114:lvgl/lv_port_disp.c ****     disp_drv.full_refresh = 1; //双全缓冲需要打开此设置
 115:lvgl/lv_port_disp.c **** 
 116:lvgl/lv_port_disp.c ****     /* Fill a memory array with a color if you have GPU.
 117:lvgl/lv_port_disp.c ****      * Note that, in lv_conf.h you can enable GPUs that has built-in support in LVGL.
 118:lvgl/lv_port_disp.c ****      * But if you have a different GPU you can use with this callback.*/
 119:lvgl/lv_port_disp.c ****     //disp_drv.gpu_fill_cb = gpu_fill;
 120:lvgl/lv_port_disp.c **** 
 121:lvgl/lv_port_disp.c ****     /*Finally register the driver*/
 122:lvgl/lv_port_disp.c ****     lv_disp_drv_register(&disp_drv);
 123:lvgl/lv_port_disp.c **** }
 124:lvgl/lv_port_disp.c **** 
 125:lvgl/lv_port_disp.c **** /**********************
 126:lvgl/lv_port_disp.c ****  *   STATIC FUNCTIONS
 127:lvgl/lv_port_disp.c ****  **********************/
 128:lvgl/lv_port_disp.c **** 
 129:lvgl/lv_port_disp.c **** /*Initialize your display and the required peripherals.*/
 130:lvgl/lv_port_disp.c **** static void disp_init(void)
 131:lvgl/lv_port_disp.c **** {
 132:lvgl/lv_port_disp.c ****     HAL_TIM_Base_Start_IT(&htim17);
 133:lvgl/lv_port_disp.c **** 
 134:lvgl/lv_port_disp.c **** }
 135:lvgl/lv_port_disp.c **** 
 136:lvgl/lv_port_disp.c **** /*Flush the content of the internal buffer the specific area on the display
 137:lvgl/lv_port_disp.c ****  *You can use DMA or any hardware acceleration to do this operation in the background but
 138:lvgl/lv_port_disp.c ****  *'lv_disp_flush_ready()' has to be called when finished.*/
 139:lvgl/lv_port_disp.c **** static void disp_flush(lv_disp_drv_t * disp_drv, const lv_area_t * area, lv_color_t * color_p)
 140:lvgl/lv_port_disp.c **** {
  28              		.loc 1 140 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 140 1 is_stmt 0 view .LVU1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 4


  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
 141:lvgl/lv_port_disp.c ****     /*The most simple case (but also the slowest) to put all pixels to the screen one-by-one*/
 142:lvgl/lv_port_disp.c **** 	LTDC_Layer1->CFBAR = (uint32_t)color_p;			// 切换显存地址
  37              		.loc 1 142 2 is_stmt 1 view .LVU2
  38              		.loc 1 142 21 is_stmt 0 view .LVU3
  39 0002 034B     		ldr	r3, .L3
  40 0004 C3F8AC20 		str	r2, [r3, #172]
 143:lvgl/lv_port_disp.c **** 	/*IMPORTANT!!!
 144:lvgl/lv_port_disp.c **** 	*Inform the graphics library that you are ready with the flushing*/
 145:lvgl/lv_port_disp.c **** 	lv_disp_flush_ready(disp_drv);
  41              		.loc 1 145 2 is_stmt 1 view .LVU4
  42 0008 FFF7FEFF 		bl	lv_disp_flush_ready
  43              	.LVL1:
 146:lvgl/lv_port_disp.c **** }
  44              		.loc 1 146 1 is_stmt 0 view .LVU5
  45 000c 08BD     		pop	{r3, pc}
  46              	.L4:
  47 000e 00BF     		.align	2
  48              	.L3:
  49 0010 00100050 		.word	1342181376
  50              		.cfi_endproc
  51              	.LFE353:
  53              		.section	.text.disp_init,"ax",%progbits
  54              		.align	1
  55              		.syntax unified
  56              		.thumb
  57              		.thumb_func
  59              	disp_init:
  60              	.LFB352:
 131:lvgl/lv_port_disp.c ****     HAL_TIM_Base_Start_IT(&htim17);
  61              		.loc 1 131 1 is_stmt 1 view -0
  62              		.cfi_startproc
  63              		@ args = 0, pretend = 0, frame = 0
  64              		@ frame_needed = 0, uses_anonymous_args = 0
  65 0000 08B5     		push	{r3, lr}
  66              		.cfi_def_cfa_offset 8
  67              		.cfi_offset 3, -8
  68              		.cfi_offset 14, -4
 132:lvgl/lv_port_disp.c **** 
  69              		.loc 1 132 5 view .LVU7
  70 0002 0248     		ldr	r0, .L7
  71 0004 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
  72              	.LVL2:
 134:lvgl/lv_port_disp.c **** 
  73              		.loc 1 134 1 is_stmt 0 view .LVU8
  74 0008 08BD     		pop	{r3, pc}
  75              	.L8:
  76 000a 00BF     		.align	2
  77              	.L7:
  78 000c 00000000 		.word	htim17
  79              		.cfi_endproc
  80              	.LFE352:
  82              		.section	.text.lv_port_disp_init,"ax",%progbits
  83              		.align	1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 5


  84              		.global	lv_port_disp_init
  85              		.syntax unified
  86              		.thumb
  87              		.thumb_func
  89              	lv_port_disp_init:
  90              	.LFB351:
  51:lvgl/lv_port_disp.c ****     /*-------------------------
  91              		.loc 1 51 1 is_stmt 1 view -0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 0, uses_anonymous_args = 0
  95 0000 38B5     		push	{r3, r4, r5, lr}
  96              		.cfi_def_cfa_offset 16
  97              		.cfi_offset 3, -16
  98              		.cfi_offset 4, -12
  99              		.cfi_offset 5, -8
 100              		.cfi_offset 14, -4
  55:lvgl/lv_port_disp.c **** 
 101              		.loc 1 55 5 view .LVU10
 102 0002 FFF7FEFF 		bl	disp_init
 103              	.LVL3:
  89:lvgl/lv_port_disp.c ****     static lv_color_t *buf_3_1 = (lv_color_t * )(LVGL_MemoryAdd);             /*A screen sized buff
 104              		.loc 1 89 5 view .LVU11
  90:lvgl/lv_port_disp.c ****     static lv_color_t *buf_3_2 = (lv_color_t * )(LVGL_MemoryAdd + LCD_Width*LCD_Height*sizeof(lv_co
 105              		.loc 1 90 5 view .LVU12
  91:lvgl/lv_port_disp.c ****     lv_disp_draw_buf_init(&draw_buf_dsc_3, buf_3_1, buf_3_2, LCD_Width * LCD_Height);   /*Initializ
 106              		.loc 1 91 5 view .LVU13
  92:lvgl/lv_port_disp.c **** 
 107              		.loc 1 92 5 view .LVU14
 108 0006 0E4D     		ldr	r5, .L11
 109 0008 4FF49623 		mov	r3, #307200
 110 000c 0D4A     		ldr	r2, .L11+4
 111 000e 0E49     		ldr	r1, .L11+8
 112 0010 2846     		mov	r0, r5
 113 0012 FFF7FEFF 		bl	lv_disp_draw_buf_init
 114              	.LVL4:
  98:lvgl/lv_port_disp.c ****     lv_disp_drv_init(&disp_drv);                    /*Basic initialization*/
 115              		.loc 1 98 5 view .LVU15
  99:lvgl/lv_port_disp.c **** 
 116              		.loc 1 99 5 view .LVU16
 117 0016 0D4C     		ldr	r4, .L11+12
 118 0018 2046     		mov	r0, r4
 119 001a FFF7FEFF 		bl	lv_disp_drv_init
 120              	.LVL5:
 104:lvgl/lv_port_disp.c ****     disp_drv.ver_res = LCD_Height;
 121              		.loc 1 104 5 view .LVU17
 104:lvgl/lv_port_disp.c ****     disp_drv.ver_res = LCD_Height;
 122              		.loc 1 104 22 is_stmt 0 view .LVU18
 123 001e 4FF4F073 		mov	r3, #480
 124 0022 2380     		strh	r3, [r4]	@ movhi
 105:lvgl/lv_port_disp.c **** 
 125              		.loc 1 105 5 is_stmt 1 view .LVU19
 105:lvgl/lv_port_disp.c **** 
 126              		.loc 1 105 22 is_stmt 0 view .LVU20
 127 0024 4FF42073 		mov	r3, #640
 128 0028 6380     		strh	r3, [r4, #2]	@ movhi
 108:lvgl/lv_port_disp.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 6


 129              		.loc 1 108 5 is_stmt 1 view .LVU21
 108:lvgl/lv_port_disp.c **** 
 130              		.loc 1 108 23 is_stmt 0 view .LVU22
 131 002a 094B     		ldr	r3, .L11+16
 132 002c 6361     		str	r3, [r4, #20]
 111:lvgl/lv_port_disp.c **** 
 133              		.loc 1 111 5 is_stmt 1 view .LVU23
 111:lvgl/lv_port_disp.c **** 
 134              		.loc 1 111 23 is_stmt 0 view .LVU24
 135 002e E560     		str	r5, [r4, #12]
 114:lvgl/lv_port_disp.c **** 
 136              		.loc 1 114 5 is_stmt 1 view .LVU25
 114:lvgl/lv_port_disp.c **** 
 137              		.loc 1 114 27 is_stmt 0 view .LVU26
 138 0030 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 139 0032 43F00203 		orr	r3, r3, #2
 140 0036 2374     		strb	r3, [r4, #16]
 122:lvgl/lv_port_disp.c **** }
 141              		.loc 1 122 5 is_stmt 1 view .LVU27
 142 0038 2046     		mov	r0, r4
 143 003a FFF7FEFF 		bl	lv_disp_drv_register
 144              	.LVL6:
 123:lvgl/lv_port_disp.c **** 
 145              		.loc 1 123 1 is_stmt 0 view .LVU28
 146 003e 38BD     		pop	{r3, r4, r5, pc}
 147              	.L12:
 148              		.align	2
 149              	.L11:
 150 0040 00000000 		.word	.LANCHOR0
 151 0044 008025C0 		.word	-1071284224
 152 0048 00C012C0 		.word	-1072513024
 153 004c 00000000 		.word	.LANCHOR1
 154 0050 00000000 		.word	disp_flush
 155              		.cfi_endproc
 156              	.LFE351:
 158              		.section	.text.HAL_LTDC_LineEventCallback,"ax",%progbits
 159              		.align	1
 160              		.global	HAL_LTDC_LineEventCallback
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	HAL_LTDC_LineEventCallback:
 166              	.LVL7:
 167              	.LFB354:
 147:lvgl/lv_port_disp.c **** 
 148:lvgl/lv_port_disp.c **** /*OPTIONAL: GPU INTERFACE*/
 149:lvgl/lv_port_disp.c **** 
 150:lvgl/lv_port_disp.c **** /**
 151:lvgl/lv_port_disp.c ****   * @brief  Line Event callback.
 152:lvgl/lv_port_disp.c ****   * @param  hltdc: pointer to a LTDC_HandleTypeDef structure that contains
 153:lvgl/lv_port_disp.c ****   *                the configuration information for the specified LTDC.
 154:lvgl/lv_port_disp.c ****   * @retval None
 155:lvgl/lv_port_disp.c ****   */
 156:lvgl/lv_port_disp.c **** void HAL_LTDC_LineEvenCallback(LTDC_HandleTypeDef *hltdc)
 157:lvgl/lv_port_disp.c **** {   
 168              		.loc 1 157 1 is_stmt 1 view -0
 169              		.cfi_startproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 7


 170              		@ args = 0, pretend = 0, frame = 0
 171              		@ frame_needed = 0, uses_anonymous_args = 0
 172              		.loc 1 157 1 is_stmt 0 view .LVU30
 173 0000 08B5     		push	{r3, lr}
 174              		.cfi_def_cfa_offset 8
 175              		.cfi_offset 3, -8
 176              		.cfi_offset 14, -4
 158:lvgl/lv_port_disp.c **** 	// 重新载入参数，新显存地址生效，此时显示才会更新
 159:lvgl/lv_port_disp.c **** 	// 每次进入中断才会更新显示，这样能有效避免撕裂现象
 160:lvgl/lv_port_disp.c **** 	__HAL_LTDC_RELOAD_CONFIG(hltdc);			
 177              		.loc 1 160 2 is_stmt 1 view .LVU31
 178 0002 0268     		ldr	r2, [r0]
 179 0004 536A     		ldr	r3, [r2, #36]
 180 0006 43F00103 		orr	r3, r3, #1
 181 000a 5362     		str	r3, [r2, #36]
 161:lvgl/lv_port_disp.c **** 	HAL_LTDC_ProgramLineEvent(hltdc, 0);	// 重新设置中断	
 182              		.loc 1 161 2 view .LVU32
 183 000c 0021     		movs	r1, #0
 184 000e FFF7FEFF 		bl	HAL_LTDC_ProgramLineEvent
 185              	.LVL8:
 162:lvgl/lv_port_disp.c **** }
 186              		.loc 1 162 1 is_stmt 0 view .LVU33
 187 0012 08BD     		pop	{r3, pc}
 188              		.cfi_endproc
 189              	.LFE354:
 191              		.section	.bss.disp_drv.0,"aw",%nobits
 192              		.align	2
 193              		.set	.LANCHOR1,. + 0
 196              	disp_drv.0:
 197 0000 00000000 		.space	80
 197      00000000 
 197      00000000 
 197      00000000 
 197      00000000 
 198              		.section	.bss.draw_buf_dsc_3.1,"aw",%nobits
 199              		.align	2
 200              		.set	.LANCHOR0,. + 0
 203              	draw_buf_dsc_3.1:
 204 0000 00000000 		.space	28
 204      00000000 
 204      00000000 
 204      00000000 
 204      00000000 
 205              		.text
 206              	.Letext0:
 207              		.file 2 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 208              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 209              		.file 4 "lvgl/src/misc/lv_types.h"
 210              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 211              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 212              		.file 7 "lvgl/src/hal/../draw/../misc/../font/lv_font.h"
 213              		.file 8 "lvgl/src/hal/../draw/../misc/lv_color.h"
 214              		.file 9 "lvgl/src/hal/../draw/../misc/lv_txt.h"
 215              		.file 10 "lvgl/src/hal/../draw/../misc/lv_bidi.h"
 216              		.file 11 "lvgl/src/hal/../draw/../misc/lv_style.h"
 217              		.file 12 "lvgl/src/hal/../draw/lv_img_buf.h"
 218              		.file 13 "lvgl/src/hal/../draw/lv_draw_rect.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 8


 219              		.file 14 "lvgl/src/hal/../draw/lv_draw_label.h"
 220              		.file 15 "lvgl/src/hal/../draw/lv_draw_img.h"
 221              		.file 16 "lvgl/src/hal/../draw/lv_draw_line.h"
 222              		.file 17 "lvgl/src/hal/../draw/lv_draw_arc.h"
 223              		.file 18 "lvgl/src/hal/../draw/lv_draw_layer.h"
 224              		.file 19 "lvgl/src/hal/../draw/lv_draw.h"
 225              		.file 20 "lvgl/src/hal/lv_hal_disp.h"
 226              		.file 21 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 227              		.file 22 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 228              		.file 23 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 229              		.file 24 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ltdc.h"
 230              		.file 25 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 231              		.file 26 "Core/Inc/tim.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s 			page 9


DEFINED SYMBOLS
                            *ABS*:00000000 lv_port_disp.c
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:19     .text.disp_flush:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:24     .text.disp_flush:00000000 disp_flush
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:49     .text.disp_flush:00000010 $d
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:54     .text.disp_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:59     .text.disp_init:00000000 disp_init
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:78     .text.disp_init:0000000c $d
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:83     .text.lv_port_disp_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:89     .text.lv_port_disp_init:00000000 lv_port_disp_init
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:150    .text.lv_port_disp_init:00000040 $d
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:159    .text.HAL_LTDC_LineEventCallback:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:165    .text.HAL_LTDC_LineEventCallback:00000000 HAL_LTDC_LineEventCallback
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:192    .bss.disp_drv.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:196    .bss.disp_drv.0:00000000 disp_drv.0
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:199    .bss.draw_buf_dsc_3.1:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccxvgB9G.s:203    .bss.draw_buf_dsc_3.1:00000000 draw_buf_dsc_3.1

UNDEFINED SYMBOLS
lv_disp_flush_ready
HAL_TIM_Base_Start_IT
htim17
lv_disp_draw_buf_init
lv_disp_drv_init
lv_disp_drv_register
HAL_LTDC_ProgramLineEvent
