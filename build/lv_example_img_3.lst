ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_img_3.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.set_zoom,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	set_zoom:
  25              	.LVL0:
  26              	.LFB205:
  27              		.file 1 "lvgl/examples/widgets/img/lv_example_img_3.c"
   1:lvgl/examples/widgets/img/lv_example_img_3.c **** #include "../../lv_examples.h"
   2:lvgl/examples/widgets/img/lv_example_img_3.c **** #if LV_USE_IMG && LV_BUILD_EXAMPLES
   3:lvgl/examples/widgets/img/lv_example_img_3.c **** 
   4:lvgl/examples/widgets/img/lv_example_img_3.c **** static void set_angle(void * img, int32_t v)
   5:lvgl/examples/widgets/img/lv_example_img_3.c **** {
   6:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_angle(img, v);
   7:lvgl/examples/widgets/img/lv_example_img_3.c **** }
   8:lvgl/examples/widgets/img/lv_example_img_3.c **** 
   9:lvgl/examples/widgets/img/lv_example_img_3.c **** static void set_zoom(void * img, int32_t v)
  10:lvgl/examples/widgets/img/lv_example_img_3.c **** {
  28              		.loc 1 10 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 10 1 is_stmt 0 view .LVU1
  33 0000 08B5     		push	{r3, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 3, -8
  36              		.cfi_offset 14, -4
  11:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_zoom(img, v);
  37              		.loc 1 11 5 is_stmt 1 view .LVU2
  38 0002 89B2     		uxth	r1, r1
  39              	.LVL1:
  40              		.loc 1 11 5 is_stmt 0 view .LVU3
  41 0004 FFF7FEFF 		bl	lv_img_set_zoom
  42              	.LVL2:
  12:lvgl/examples/widgets/img/lv_example_img_3.c **** }
  43              		.loc 1 12 1 view .LVU4
  44 0008 08BD     		pop	{r3, pc}
  45              		.cfi_endproc
  46              	.LFE205:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 2


  48              		.section	.text.set_angle,"ax",%progbits
  49              		.align	1
  50              		.syntax unified
  51              		.thumb
  52              		.thumb_func
  54              	set_angle:
  55              	.LVL3:
  56              	.LFB204:
   5:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_angle(img, v);
  57              		.loc 1 5 1 is_stmt 1 view -0
  58              		.cfi_startproc
  59              		@ args = 0, pretend = 0, frame = 0
  60              		@ frame_needed = 0, uses_anonymous_args = 0
   5:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_angle(img, v);
  61              		.loc 1 5 1 is_stmt 0 view .LVU6
  62 0000 08B5     		push	{r3, lr}
  63              		.cfi_def_cfa_offset 8
  64              		.cfi_offset 3, -8
  65              		.cfi_offset 14, -4
   6:lvgl/examples/widgets/img/lv_example_img_3.c **** }
  66              		.loc 1 6 5 is_stmt 1 view .LVU7
  67 0002 09B2     		sxth	r1, r1
  68              	.LVL4:
   6:lvgl/examples/widgets/img/lv_example_img_3.c **** }
  69              		.loc 1 6 5 is_stmt 0 view .LVU8
  70 0004 FFF7FEFF 		bl	lv_img_set_angle
  71              	.LVL5:
   7:lvgl/examples/widgets/img/lv_example_img_3.c **** 
  72              		.loc 1 7 1 view .LVU9
  73 0008 08BD     		pop	{r3, pc}
  74              		.cfi_endproc
  75              	.LFE204:
  77              		.section	.text.lv_example_img_3,"ax",%progbits
  78              		.align	1
  79              		.global	lv_example_img_3
  80              		.syntax unified
  81              		.thumb
  82              		.thumb_func
  84              	lv_example_img_3:
  85              	.LFB206:
  13:lvgl/examples/widgets/img/lv_example_img_3.c **** 
  14:lvgl/examples/widgets/img/lv_example_img_3.c **** /**
  15:lvgl/examples/widgets/img/lv_example_img_3.c ****  * Show transformations (zoom and rotation) using a pivot point.
  16:lvgl/examples/widgets/img/lv_example_img_3.c ****  */
  17:lvgl/examples/widgets/img/lv_example_img_3.c **** void lv_example_img_3(void)
  18:lvgl/examples/widgets/img/lv_example_img_3.c **** {
  86              		.loc 1 18 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 72
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 10B5     		push	{r4, lr}
  91              		.cfi_def_cfa_offset 8
  92              		.cfi_offset 4, -8
  93              		.cfi_offset 14, -4
  94 0002 92B0     		sub	sp, sp, #72
  95              		.cfi_def_cfa_offset 80
  19:lvgl/examples/widgets/img/lv_example_img_3.c ****     LV_IMG_DECLARE(img_cogwheel_argb);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 3


  96              		.loc 1 19 5 view .LVU11
  97              		.loc 1 19 38 view .LVU12
  20:lvgl/examples/widgets/img/lv_example_img_3.c **** 
  21:lvgl/examples/widgets/img/lv_example_img_3.c ****     /*Now create the actual image*/
  22:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_obj_t * img = lv_img_create(lv_scr_act());
  98              		.loc 1 22 5 view .LVU13
  99              	.LBB36:
 100              	.LBI36:
 101              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 4


  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 5


 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 6


 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 102              		.loc 2 182 26 view .LVU14
 103              	.LBB37:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 104              		.loc 2 184 5 view .LVU15
 105              		.loc 2 184 12 is_stmt 0 view .LVU16
 106 0004 FFF7FEFF 		bl	lv_disp_get_default
 107              	.LVL6:
 108 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 109              	.LVL7:
 110              	.LBE37:
 111              	.LBE36:
 112              		.loc 1 22 22 view .LVU17
 113 000c FFF7FEFF 		bl	lv_img_create
 114              	.LVL8:
 115 0010 0446     		mov	r4, r0
 116              	.LVL9:
  23:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_src(img, &img_cogwheel_argb);
 117              		.loc 1 23 5 is_stmt 1 view .LVU18
 118 0012 1A49     		ldr	r1, .L7
 119 0014 FFF7FEFF 		bl	lv_img_set_src
 120              	.LVL10:
  24:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_obj_align(img, LV_ALIGN_CENTER, 50, 50);
 121              		.loc 1 24 5 view .LVU19
 122 0018 3223     		movs	r3, #50
 123 001a 1A46     		mov	r2, r3
 124 001c 0921     		movs	r1, #9
 125 001e 2046     		mov	r0, r4
 126 0020 FFF7FEFF 		bl	lv_obj_align
 127              	.LVL11:
  25:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_img_set_pivot(img, 0, 0);    /*Rotate around the top left corner*/
 128              		.loc 1 25 5 view .LVU20
 129 0024 0022     		movs	r2, #0
 130 0026 1146     		mov	r1, r2
 131 0028 2046     		mov	r0, r4
 132 002a FFF7FEFF 		bl	lv_img_set_pivot
 133              	.LVL12:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 7


  26:lvgl/examples/widgets/img/lv_example_img_3.c **** 
  27:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_t a;
 134              		.loc 1 27 5 view .LVU21
  28:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_init(&a);
 135              		.loc 1 28 5 view .LVU22
 136 002e 01A8     		add	r0, sp, #4
 137 0030 FFF7FEFF 		bl	lv_anim_init
 138              	.LVL13:
  29:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_var(&a, img);
 139              		.loc 1 29 5 view .LVU23
 140              	.LBB38:
 141              	.LBI38:
 142              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_anim.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @file lv_anim.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #ifndef LV_ANIM_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stdint.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stdbool.h>
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stddef.h>
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /*********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      DEFINES
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_PLAYTIME_INFINITE    0xFFFFFFFF
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_PLAYTIME_INFINITE);
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**********************
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      TYPEDEFS
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  **********************/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef enum {
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     LV_ANIM_OFF,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     LV_ANIM_ON,
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** } lv_anim_enable_t;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** struct _lv_anim_t;
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** struct _lv_timer_t;
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 8


  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Get the current value during an animation*/
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Generic prototype of "animator" functions.
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * First parameter is the variable to animate.
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Second parameter is the value to set.
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * The `x` in `_xcb_t` means it's not a fully generic prototype because
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation is ready*/
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback used when the animation is deleted*/
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_deleted_cb_t)(struct _lv_anim_t *);
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Describes an animation*/
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef struct _lv_anim_t {
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     void * var;                          /**<Variable to animate*/
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_deleted_cb_t deleted_cb;     /**< Call it when the animation is deleted*/
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #if LV_USE_USER_DATA
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     void * user_data; /**< Custom user data*/
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #endif
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t start_value;               /**< Start value*/
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t current_value;             /**< Current value*/
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t end_value;                 /**< End value*/
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** } lv_anim_t;
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 9


 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * GLOBAL PROTOTYPES
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  **********************/
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Init. the animation module
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** void _lv_anim_core_init(void);
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Initialize an animation variable.
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * E.g.:
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_t a;
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_init(&a);
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_set_...(&a);
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_start(&a);
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a variable to animate
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param var   pointer to a variable to animate
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
 143              		.loc 3 126 20 view .LVU24
 144              	.LBB39:
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->var = var;
 145              		.loc 3 128 5 view .LVU25
 146              		.loc 3 128 12 is_stmt 0 view .LVU26
 147 0034 0194     		str	r4, [sp, #4]
 148              	.LVL14:
 149              		.loc 3 128 12 view .LVU27
 150              	.LBE39:
 151              	.LBE38:
  30:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_exec_cb(&a, set_angle);
 152              		.loc 1 30 5 is_stmt 1 view .LVU28
 153              	.LBB40:
 154              	.LBI40:
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function to animate `var`
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute during animation
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *                  LVGL's built-in functions can be used.
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *                  E.g. lv_obj_set_x
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
 155              		.loc 3 138 20 view .LVU29
 156              	.LBB41:
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->exec_cb = exec_cb;
 157              		.loc 3 140 5 view .LVU30
 158              		.loc 3 140 16 is_stmt 0 view .LVU31
 159 0036 124B     		ldr	r3, .L7+4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 10


 160 0038 0293     		str	r3, [sp, #8]
 161              	.LVL15:
 162              		.loc 3 140 16 view .LVU32
 163              	.LBE41:
 164              	.LBE40:
  31:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_values(&a, 0, 3600);
 165              		.loc 1 31 5 is_stmt 1 view .LVU33
 166              	.LBB42:
 167              	.LBI42:
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the duration of an animation
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->time = duration;
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a delay before starting the animation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->act_time = -(int32_t)(delay);
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the start and end values of an animation
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param start     the start value
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param end       the end value
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 168              		.loc 3 169 20 view .LVU34
 169              	.LBB43:
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->start_value = start;
 170              		.loc 3 171 5 view .LVU35
 171              		.loc 3 171 20 is_stmt 0 view .LVU36
 172 003a 0023     		movs	r3, #0
 173 003c 0993     		str	r3, [sp, #36]
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 174              		.loc 3 172 5 is_stmt 1 view .LVU37
 175              		.loc 3 172 22 is_stmt 0 view .LVU38
 176 003e 0A93     		str	r3, [sp, #40]
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 177              		.loc 3 173 5 is_stmt 1 view .LVU39
 178              		.loc 3 173 18 is_stmt 0 view .LVU40
 179 0040 4FF46163 		mov	r3, #3600
 180 0044 0B93     		str	r3, [sp, #44]
 181              	.LVL16:
 182              		.loc 3 173 18 view .LVU41
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 11


 183              	.LBE43:
 184              	.LBE42:
  32:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_time(&a, 5000);
 185              		.loc 1 32 5 is_stmt 1 view .LVU42
 186              	.LBB44:
 187              	.LBI44:
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 188              		.loc 3 148 20 view .LVU43
 189              	.LBB45:
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 190              		.loc 3 150 5 view .LVU44
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 191              		.loc 3 150 13 is_stmt 0 view .LVU45
 192 0046 41F28833 		movw	r3, #5000
 193 004a 0C93     		str	r3, [sp, #48]
 194              	.LVL17:
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 195              		.loc 3 150 13 view .LVU46
 196              	.LBE45:
 197              	.LBE44:
  33:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_repeat_count(&a, LV_ANIM_REPEAT_INFINITE);
 198              		.loc 1 33 5 is_stmt 1 view .LVU47
 199              	.LBB46:
 200              	.LBI46:
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * This function might be used when LVGL is bound to other languages because
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * The variable to animate can be stored in the animation's `user_data`
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->var     = a;
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the path (curve) of the animation.
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param path_cb a function to set the current value of the animation.
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->path_cb = path_cb;
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param start_cb  a function call when the animation starts
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_start_cb_t start_cb)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 12


 207:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->start_cb = start_cb;
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function to use the current value of the variable and make start and end value
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * relative to the returned current value.
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a             pointer to an initialized `lv_anim_t` variable
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param get_value_cb  a function call when the animation starts
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->get_value_cb = get_value_cb;
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation is ready
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param ready_cb  a function call when the animation is ready
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 228:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->ready_cb = ready_cb;
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation is deleted.
 234:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param deleted_cb  a function call when the animation is deleted
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_deleted_cb(lv_anim_t * a, lv_anim_deleted_cb_t deleted_cb)
 238:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 239:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->deleted_cb = deleted_cb;
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param time      the duration of the playback animation in milliseconds. 0: disable playback
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->playback_time = time;
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 254:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param delay     delay in milliseconds before starting the playback animation.
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->playback_delay = delay;
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation repeat itself.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 13


 264:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param cnt       repeat count or `LV_ANIM_REPEAT_INFINITE` for infinite repetition. 0: to disabl
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)
 201              		.loc 3 267 20 view .LVU48
 202              	.LBB47:
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->repeat_cnt = cnt;
 203              		.loc 3 269 5 view .LVU49
 204              		.loc 3 269 19 is_stmt 0 view .LVU50
 205 004c 4FF6FF73 		movw	r3, #65535
 206 0050 ADF84430 		strh	r3, [sp, #68]	@ movhi
 207              	.LVL18:
 208              		.loc 3 269 19 view .LVU51
 209              	.LBE47:
 210              	.LBE46:
  34:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_start(&a);
 211              		.loc 1 34 5 is_stmt 1 view .LVU52
 212 0054 01A8     		add	r0, sp, #4
 213 0056 FFF7FEFF 		bl	lv_anim_start
 214              	.LVL19:
  35:lvgl/examples/widgets/img/lv_example_img_3.c **** 
  36:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_exec_cb(&a, set_zoom);
 215              		.loc 1 36 5 view .LVU53
 216              	.LBB48:
 217              	.LBI48:
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 218              		.loc 3 138 20 view .LVU54
 219              	.LBB49:
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 220              		.loc 3 140 5 view .LVU55
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 221              		.loc 3 140 16 is_stmt 0 view .LVU56
 222 005a 0A4B     		ldr	r3, .L7+8
 223 005c 0293     		str	r3, [sp, #8]
 224              	.LVL20:
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 225              		.loc 3 140 16 view .LVU57
 226              	.LBE49:
 227              	.LBE48:
  37:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_values(&a, 128, 256);
 228              		.loc 1 37 5 is_stmt 1 view .LVU58
 229              	.LBB50:
 230              	.LBI50:
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 231              		.loc 3 169 20 view .LVU59
 232              	.LBB51:
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 233              		.loc 3 171 5 view .LVU60
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 234              		.loc 3 171 20 is_stmt 0 view .LVU61
 235 005e 8023     		movs	r3, #128
 236 0060 0993     		str	r3, [sp, #36]
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 237              		.loc 3 172 5 is_stmt 1 view .LVU62
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 238              		.loc 3 172 22 is_stmt 0 view .LVU63
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 14


 239 0062 0A93     		str	r3, [sp, #40]
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 240              		.loc 3 173 5 is_stmt 1 view .LVU64
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 241              		.loc 3 173 18 is_stmt 0 view .LVU65
 242 0064 4FF48073 		mov	r3, #256
 243 0068 0B93     		str	r3, [sp, #44]
 244              	.LVL21:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 245              		.loc 3 173 18 view .LVU66
 246              	.LBE51:
 247              	.LBE50:
  38:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_set_playback_time(&a, 3000);
 248              		.loc 1 38 5 is_stmt 1 view .LVU67
 249              	.LBB52:
 250              	.LBI52:
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 251              		.loc 3 247 20 view .LVU68
 252              	.LBB53:
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 253              		.loc 3 249 5 view .LVU69
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 254              		.loc 3 249 22 is_stmt 0 view .LVU70
 255 006a 40F6B833 		movw	r3, #3000
 256 006e 0F93     		str	r3, [sp, #60]
 257              	.LVL22:
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 258              		.loc 3 249 22 view .LVU71
 259              	.LBE53:
 260              	.LBE52:
  39:lvgl/examples/widgets/img/lv_example_img_3.c ****     lv_anim_start(&a);
 261              		.loc 1 39 5 is_stmt 1 view .LVU72
 262 0070 01A8     		add	r0, sp, #4
 263 0072 FFF7FEFF 		bl	lv_anim_start
 264              	.LVL23:
  40:lvgl/examples/widgets/img/lv_example_img_3.c **** }
 265              		.loc 1 40 1 is_stmt 0 view .LVU73
 266 0076 12B0     		add	sp, sp, #72
 267              		.cfi_def_cfa_offset 8
 268              		@ sp needed
 269 0078 10BD     		pop	{r4, pc}
 270              	.LVL24:
 271              	.L8:
 272              		.loc 1 40 1 view .LVU74
 273 007a 00BF     		.align	2
 274              	.L7:
 275 007c 00000000 		.word	img_cogwheel_argb
 276 0080 00000000 		.word	set_angle
 277 0084 00000000 		.word	set_zoom
 278              		.cfi_endproc
 279              	.LFE206:
 281              		.text
 282              	.Letext0:
 283              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 284              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 285              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 286              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 15


 287              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 288              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_img_buf.h"
 289              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 290              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 291              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 292              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 293              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 294              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 295              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 296              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 297              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_img.h"
 298              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_img_3.c
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:19     .text.set_zoom:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:24     .text.set_zoom:00000000 set_zoom
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:49     .text.set_angle:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:54     .text.set_angle:00000000 set_angle
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:78     .text.lv_example_img_3:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:84     .text.lv_example_img_3:00000000 lv_example_img_3
C:\Users\OSD\AppData\Local\Temp\cc0dBc4V.s:275    .text.lv_example_img_3:0000007c $d

UNDEFINED SYMBOLS
lv_img_set_zoom
lv_img_set_angle
lv_disp_get_default
lv_disp_get_scr_act
lv_img_create
lv_img_set_src
lv_obj_align
lv_img_set_pivot
lv_anim_init
lv_anim_start
img_cogwheel_argb
