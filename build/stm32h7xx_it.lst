ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"stm32h7xx_it.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.NMI_Handler,"ax",%progbits
  19              		.align	1
  20              		.global	NMI_Handler
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	NMI_Handler:
  26              	.LFB147:
  27              		.file 1 "Core/Src/stm32h7xx_it.c"
   1:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32h7xx_it.c **** /**
   3:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32h7xx_it.c ****   * @file    stm32h7xx_it.c
   5:Core/Src/stm32h7xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32h7xx_it.c ****   * @attention
   8:Core/Src/stm32h7xx_it.c ****   *
   9:Core/Src/stm32h7xx_it.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/stm32h7xx_it.c ****   * All rights reserved.
  11:Core/Src/stm32h7xx_it.c ****   *
  12:Core/Src/stm32h7xx_it.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/stm32h7xx_it.c ****   * in the root directory of this software component.
  14:Core/Src/stm32h7xx_it.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/stm32h7xx_it.c ****   *
  16:Core/Src/stm32h7xx_it.c ****   ******************************************************************************
  17:Core/Src/stm32h7xx_it.c ****   */
  18:Core/Src/stm32h7xx_it.c **** /* USER CODE END Header */
  19:Core/Src/stm32h7xx_it.c **** 
  20:Core/Src/stm32h7xx_it.c **** /* Includes ------------------------------------------------------------------*/
  21:Core/Src/stm32h7xx_it.c **** #include "main.h"
  22:Core/Src/stm32h7xx_it.c **** #include "stm32h7xx_it.h"
  23:Core/Src/stm32h7xx_it.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/stm32h7xx_it.c **** /* USER CODE END Includes */
  26:Core/Src/stm32h7xx_it.c **** 
  27:Core/Src/stm32h7xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN TD */
  29:Core/Src/stm32h7xx_it.c **** 
  30:Core/Src/stm32h7xx_it.c **** /* USER CODE END TD */
  31:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 2


  32:Core/Src/stm32h7xx_it.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PD */
  34:Core/Src/stm32h7xx_it.c **** 
  35:Core/Src/stm32h7xx_it.c **** /* USER CODE END PD */
  36:Core/Src/stm32h7xx_it.c **** 
  37:Core/Src/stm32h7xx_it.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PM */
  39:Core/Src/stm32h7xx_it.c **** 
  40:Core/Src/stm32h7xx_it.c **** /* USER CODE END PM */
  41:Core/Src/stm32h7xx_it.c **** 
  42:Core/Src/stm32h7xx_it.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PV */
  44:Core/Src/stm32h7xx_it.c **** 
  45:Core/Src/stm32h7xx_it.c **** /* USER CODE END PV */
  46:Core/Src/stm32h7xx_it.c **** 
  47:Core/Src/stm32h7xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN PFP */
  49:Core/Src/stm32h7xx_it.c **** 
  50:Core/Src/stm32h7xx_it.c **** /* USER CODE END PFP */
  51:Core/Src/stm32h7xx_it.c **** 
  52:Core/Src/stm32h7xx_it.c **** /* Private user code ---------------------------------------------------------*/
  53:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN 0 */
  54:Core/Src/stm32h7xx_it.c **** 
  55:Core/Src/stm32h7xx_it.c **** /* USER CODE END 0 */
  56:Core/Src/stm32h7xx_it.c **** 
  57:Core/Src/stm32h7xx_it.c **** /* External variables --------------------------------------------------------*/
  58:Core/Src/stm32h7xx_it.c **** extern DMA2D_HandleTypeDef hdma2d;
  59:Core/Src/stm32h7xx_it.c **** extern SDRAM_HandleTypeDef hsdram1;
  60:Core/Src/stm32h7xx_it.c **** extern LTDC_HandleTypeDef hltdc;
  61:Core/Src/stm32h7xx_it.c **** extern TIM_HandleTypeDef htim17;
  62:Core/Src/stm32h7xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Core/Src/stm32h7xx_it.c **** /* USER CODE BEGIN EV */
  64:Core/Src/stm32h7xx_it.c **** 
  65:Core/Src/stm32h7xx_it.c **** /* USER CODE END EV */
  66:Core/Src/stm32h7xx_it.c **** 
  67:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  68:Core/Src/stm32h7xx_it.c **** /*           Cortex Processor Interruption and Exception Handlers          */
  69:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
  70:Core/Src/stm32h7xx_it.c **** /**
  71:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Non maskable interrupt.
  72:Core/Src/stm32h7xx_it.c ****   */
  73:Core/Src/stm32h7xx_it.c **** void NMI_Handler(void)
  74:Core/Src/stm32h7xx_it.c **** {
  28              		.loc 1 74 1 view -0
  29              		.cfi_startproc
  30              		@ Volatile: function does not return.
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  34              	.L2:
  75:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  76:Core/Src/stm32h7xx_it.c **** 
  77:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  78:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  79:Core/Src/stm32h7xx_it.c ****   while (1)
  35              		.loc 1 79 3 discriminator 1 view .LVU1
  80:Core/Src/stm32h7xx_it.c ****   {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 3


  81:Core/Src/stm32h7xx_it.c ****   }
  36              		.loc 1 81 3 discriminator 1 view .LVU2
  79:Core/Src/stm32h7xx_it.c ****   {
  37              		.loc 1 79 9 discriminator 1 view .LVU3
  38 0000 FEE7     		b	.L2
  39              		.cfi_endproc
  40              	.LFE147:
  42              		.section	.text.HardFault_Handler,"ax",%progbits
  43              		.align	1
  44              		.global	HardFault_Handler
  45              		.syntax unified
  46              		.thumb
  47              		.thumb_func
  49              	HardFault_Handler:
  50              	.LFB148:
  82:Core/Src/stm32h7xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  83:Core/Src/stm32h7xx_it.c **** }
  84:Core/Src/stm32h7xx_it.c **** 
  85:Core/Src/stm32h7xx_it.c **** /**
  86:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Hard fault interrupt.
  87:Core/Src/stm32h7xx_it.c ****   */
  88:Core/Src/stm32h7xx_it.c **** void HardFault_Handler(void)
  89:Core/Src/stm32h7xx_it.c **** {
  51              		.loc 1 89 1 view -0
  52              		.cfi_startproc
  53              		@ Volatile: function does not return.
  54              		@ args = 0, pretend = 0, frame = 0
  55              		@ frame_needed = 0, uses_anonymous_args = 0
  56              		@ link register save eliminated.
  57              	.L4:
  90:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  91:Core/Src/stm32h7xx_it.c **** 
  92:Core/Src/stm32h7xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  93:Core/Src/stm32h7xx_it.c ****   while (1)
  58              		.loc 1 93 3 discriminator 1 view .LVU5
  94:Core/Src/stm32h7xx_it.c ****   {
  95:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Core/Src/stm32h7xx_it.c ****   }
  59              		.loc 1 97 3 discriminator 1 view .LVU6
  93:Core/Src/stm32h7xx_it.c ****   {
  60              		.loc 1 93 9 discriminator 1 view .LVU7
  61 0000 FEE7     		b	.L4
  62              		.cfi_endproc
  63              	.LFE148:
  65              		.section	.text.MemManage_Handler,"ax",%progbits
  66              		.align	1
  67              		.global	MemManage_Handler
  68              		.syntax unified
  69              		.thumb
  70              		.thumb_func
  72              	MemManage_Handler:
  73              	.LFB149:
  98:Core/Src/stm32h7xx_it.c **** }
  99:Core/Src/stm32h7xx_it.c **** 
 100:Core/Src/stm32h7xx_it.c **** /**
 101:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Memory management fault.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 4


 102:Core/Src/stm32h7xx_it.c ****   */
 103:Core/Src/stm32h7xx_it.c **** void MemManage_Handler(void)
 104:Core/Src/stm32h7xx_it.c **** {
  74              		.loc 1 104 1 view -0
  75              		.cfi_startproc
  76              		@ Volatile: function does not return.
  77              		@ args = 0, pretend = 0, frame = 0
  78              		@ frame_needed = 0, uses_anonymous_args = 0
  79              		@ link register save eliminated.
  80              	.L6:
 105:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Core/Src/stm32h7xx_it.c **** 
 107:Core/Src/stm32h7xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Core/Src/stm32h7xx_it.c ****   while (1)
  81              		.loc 1 108 3 discriminator 1 view .LVU9
 109:Core/Src/stm32h7xx_it.c ****   {
 110:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Core/Src/stm32h7xx_it.c ****   }
  82              		.loc 1 112 3 discriminator 1 view .LVU10
 108:Core/Src/stm32h7xx_it.c ****   {
  83              		.loc 1 108 9 discriminator 1 view .LVU11
  84 0000 FEE7     		b	.L6
  85              		.cfi_endproc
  86              	.LFE149:
  88              		.section	.text.BusFault_Handler,"ax",%progbits
  89              		.align	1
  90              		.global	BusFault_Handler
  91              		.syntax unified
  92              		.thumb
  93              		.thumb_func
  95              	BusFault_Handler:
  96              	.LFB150:
 113:Core/Src/stm32h7xx_it.c **** }
 114:Core/Src/stm32h7xx_it.c **** 
 115:Core/Src/stm32h7xx_it.c **** /**
 116:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pre-fetch fault, memory access fault.
 117:Core/Src/stm32h7xx_it.c ****   */
 118:Core/Src/stm32h7xx_it.c **** void BusFault_Handler(void)
 119:Core/Src/stm32h7xx_it.c **** {
  97              		.loc 1 119 1 view -0
  98              		.cfi_startproc
  99              		@ Volatile: function does not return.
 100              		@ args = 0, pretend = 0, frame = 0
 101              		@ frame_needed = 0, uses_anonymous_args = 0
 102              		@ link register save eliminated.
 103              	.L8:
 120:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 121:Core/Src/stm32h7xx_it.c **** 
 122:Core/Src/stm32h7xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Core/Src/stm32h7xx_it.c ****   while (1)
 104              		.loc 1 123 3 discriminator 1 view .LVU13
 124:Core/Src/stm32h7xx_it.c ****   {
 125:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Core/Src/stm32h7xx_it.c ****   }
 105              		.loc 1 127 3 discriminator 1 view .LVU14
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 5


 123:Core/Src/stm32h7xx_it.c ****   {
 106              		.loc 1 123 9 discriminator 1 view .LVU15
 107 0000 FEE7     		b	.L8
 108              		.cfi_endproc
 109              	.LFE150:
 111              		.section	.text.UsageFault_Handler,"ax",%progbits
 112              		.align	1
 113              		.global	UsageFault_Handler
 114              		.syntax unified
 115              		.thumb
 116              		.thumb_func
 118              	UsageFault_Handler:
 119              	.LFB151:
 128:Core/Src/stm32h7xx_it.c **** }
 129:Core/Src/stm32h7xx_it.c **** 
 130:Core/Src/stm32h7xx_it.c **** /**
 131:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Core/Src/stm32h7xx_it.c ****   */
 133:Core/Src/stm32h7xx_it.c **** void UsageFault_Handler(void)
 134:Core/Src/stm32h7xx_it.c **** {
 120              		.loc 1 134 1 view -0
 121              		.cfi_startproc
 122              		@ Volatile: function does not return.
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              		@ link register save eliminated.
 126              	.L10:
 135:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Core/Src/stm32h7xx_it.c **** 
 137:Core/Src/stm32h7xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Core/Src/stm32h7xx_it.c ****   while (1)
 127              		.loc 1 138 3 discriminator 1 view .LVU17
 139:Core/Src/stm32h7xx_it.c ****   {
 140:Core/Src/stm32h7xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Core/Src/stm32h7xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Core/Src/stm32h7xx_it.c ****   }
 128              		.loc 1 142 3 discriminator 1 view .LVU18
 138:Core/Src/stm32h7xx_it.c ****   {
 129              		.loc 1 138 9 discriminator 1 view .LVU19
 130 0000 FEE7     		b	.L10
 131              		.cfi_endproc
 132              	.LFE151:
 134              		.section	.text.SVC_Handler,"ax",%progbits
 135              		.align	1
 136              		.global	SVC_Handler
 137              		.syntax unified
 138              		.thumb
 139              		.thumb_func
 141              	SVC_Handler:
 142              	.LFB152:
 143:Core/Src/stm32h7xx_it.c **** }
 144:Core/Src/stm32h7xx_it.c **** 
 145:Core/Src/stm32h7xx_it.c **** /**
 146:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Core/Src/stm32h7xx_it.c ****   */
 148:Core/Src/stm32h7xx_it.c **** void SVC_Handler(void)
 149:Core/Src/stm32h7xx_it.c **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 6


 143              		.loc 1 149 1 view -0
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 0, uses_anonymous_args = 0
 147              		@ link register save eliminated.
 150:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Core/Src/stm32h7xx_it.c **** 
 152:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Core/Src/stm32h7xx_it.c **** 
 155:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Core/Src/stm32h7xx_it.c **** }
 148              		.loc 1 156 1 view .LVU21
 149 0000 7047     		bx	lr
 150              		.cfi_endproc
 151              	.LFE152:
 153              		.section	.text.DebugMon_Handler,"ax",%progbits
 154              		.align	1
 155              		.global	DebugMon_Handler
 156              		.syntax unified
 157              		.thumb
 158              		.thumb_func
 160              	DebugMon_Handler:
 161              	.LFB153:
 157:Core/Src/stm32h7xx_it.c **** 
 158:Core/Src/stm32h7xx_it.c **** /**
 159:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Debug monitor.
 160:Core/Src/stm32h7xx_it.c ****   */
 161:Core/Src/stm32h7xx_it.c **** void DebugMon_Handler(void)
 162:Core/Src/stm32h7xx_it.c **** {
 162              		.loc 1 162 1 view -0
 163              		.cfi_startproc
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166              		@ link register save eliminated.
 163:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Core/Src/stm32h7xx_it.c **** 
 165:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Core/Src/stm32h7xx_it.c **** 
 168:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Core/Src/stm32h7xx_it.c **** }
 167              		.loc 1 169 1 view .LVU23
 168 0000 7047     		bx	lr
 169              		.cfi_endproc
 170              	.LFE153:
 172              		.section	.text.PendSV_Handler,"ax",%progbits
 173              		.align	1
 174              		.global	PendSV_Handler
 175              		.syntax unified
 176              		.thumb
 177              		.thumb_func
 179              	PendSV_Handler:
 180              	.LFB154:
 170:Core/Src/stm32h7xx_it.c **** 
 171:Core/Src/stm32h7xx_it.c **** /**
 172:Core/Src/stm32h7xx_it.c ****   * @brief This function handles Pendable request for system service.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 7


 173:Core/Src/stm32h7xx_it.c ****   */
 174:Core/Src/stm32h7xx_it.c **** void PendSV_Handler(void)
 175:Core/Src/stm32h7xx_it.c **** {
 181              		.loc 1 175 1 view -0
 182              		.cfi_startproc
 183              		@ args = 0, pretend = 0, frame = 0
 184              		@ frame_needed = 0, uses_anonymous_args = 0
 185              		@ link register save eliminated.
 176:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Core/Src/stm32h7xx_it.c **** 
 178:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Core/Src/stm32h7xx_it.c **** 
 181:Core/Src/stm32h7xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Core/Src/stm32h7xx_it.c **** }
 186              		.loc 1 182 1 view .LVU25
 187 0000 7047     		bx	lr
 188              		.cfi_endproc
 189              	.LFE154:
 191              		.section	.text.SysTick_Handler,"ax",%progbits
 192              		.align	1
 193              		.global	SysTick_Handler
 194              		.syntax unified
 195              		.thumb
 196              		.thumb_func
 198              	SysTick_Handler:
 199              	.LFB155:
 183:Core/Src/stm32h7xx_it.c **** 
 184:Core/Src/stm32h7xx_it.c **** /**
 185:Core/Src/stm32h7xx_it.c ****   * @brief This function handles System tick timer.
 186:Core/Src/stm32h7xx_it.c ****   */
 187:Core/Src/stm32h7xx_it.c **** void SysTick_Handler(void)
 188:Core/Src/stm32h7xx_it.c **** {
 200              		.loc 1 188 1 view -0
 201              		.cfi_startproc
 202              		@ args = 0, pretend = 0, frame = 0
 203              		@ frame_needed = 0, uses_anonymous_args = 0
 204 0000 08B5     		push	{r3, lr}
 205              		.cfi_def_cfa_offset 8
 206              		.cfi_offset 3, -8
 207              		.cfi_offset 14, -4
 189:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 190:Core/Src/stm32h7xx_it.c **** 
 191:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Core/Src/stm32h7xx_it.c ****   HAL_IncTick();
 208              		.loc 1 192 3 view .LVU27
 209 0002 FFF7FEFF 		bl	HAL_IncTick
 210              	.LVL0:
 193:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Core/Src/stm32h7xx_it.c **** 
 195:Core/Src/stm32h7xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Core/Src/stm32h7xx_it.c **** }
 211              		.loc 1 196 1 is_stmt 0 view .LVU28
 212 0006 08BD     		pop	{r3, pc}
 213              		.cfi_endproc
 214              	.LFE155:
 216              		.section	.text.USART1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 8


 217              		.align	1
 218              		.global	USART1_IRQHandler
 219              		.syntax unified
 220              		.thumb
 221              		.thumb_func
 223              	USART1_IRQHandler:
 224              	.LFB156:
 197:Core/Src/stm32h7xx_it.c **** 
 198:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 199:Core/Src/stm32h7xx_it.c **** /* STM32H7xx Peripheral Interrupt Handlers                                    */
 200:Core/Src/stm32h7xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Core/Src/stm32h7xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Core/Src/stm32h7xx_it.c **** /* please refer to the startup file (startup_stm32h7xx.s).                    */
 203:Core/Src/stm32h7xx_it.c **** /******************************************************************************/
 204:Core/Src/stm32h7xx_it.c **** 
 205:Core/Src/stm32h7xx_it.c **** /**
 206:Core/Src/stm32h7xx_it.c ****   * @brief This function handles USART1 global interrupt.
 207:Core/Src/stm32h7xx_it.c ****   */
 208:Core/Src/stm32h7xx_it.c **** void USART1_IRQHandler(void)
 209:Core/Src/stm32h7xx_it.c **** {
 225              		.loc 1 209 1 is_stmt 1 view -0
 226              		.cfi_startproc
 227              		@ args = 0, pretend = 0, frame = 0
 228              		@ frame_needed = 0, uses_anonymous_args = 0
 229 0000 08B5     		push	{r3, lr}
 230              		.cfi_def_cfa_offset 8
 231              		.cfi_offset 3, -8
 232              		.cfi_offset 14, -4
 210:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 211:Core/Src/stm32h7xx_it.c **** 
 212:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 213:Core/Src/stm32h7xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 233              		.loc 1 213 3 view .LVU30
 234 0002 0248     		ldr	r0, .L18
 235 0004 FFF7FEFF 		bl	HAL_UART_IRQHandler
 236              	.LVL1:
 214:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 1 */
 215:Core/Src/stm32h7xx_it.c **** 
 216:Core/Src/stm32h7xx_it.c ****   /* USER CODE END USART1_IRQn 1 */
 217:Core/Src/stm32h7xx_it.c **** }
 237              		.loc 1 217 1 is_stmt 0 view .LVU31
 238 0008 08BD     		pop	{r3, pc}
 239              	.L19:
 240 000a 00BF     		.align	2
 241              	.L18:
 242 000c 00000000 		.word	huart1
 243              		.cfi_endproc
 244              	.LFE156:
 246              		.section	.text.FMC_IRQHandler,"ax",%progbits
 247              		.align	1
 248              		.global	FMC_IRQHandler
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	FMC_IRQHandler:
 254              	.LFB157:
 218:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 9


 219:Core/Src/stm32h7xx_it.c **** /**
 220:Core/Src/stm32h7xx_it.c ****   * @brief This function handles FMC global interrupt.
 221:Core/Src/stm32h7xx_it.c ****   */
 222:Core/Src/stm32h7xx_it.c **** void FMC_IRQHandler(void)
 223:Core/Src/stm32h7xx_it.c **** {
 255              		.loc 1 223 1 is_stmt 1 view -0
 256              		.cfi_startproc
 257              		@ args = 0, pretend = 0, frame = 0
 258              		@ frame_needed = 0, uses_anonymous_args = 0
 259 0000 08B5     		push	{r3, lr}
 260              		.cfi_def_cfa_offset 8
 261              		.cfi_offset 3, -8
 262              		.cfi_offset 14, -4
 224:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FMC_IRQn 0 */
 225:Core/Src/stm32h7xx_it.c **** 
 226:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FMC_IRQn 0 */
 227:Core/Src/stm32h7xx_it.c ****   HAL_SDRAM_IRQHandler(&hsdram1);
 263              		.loc 1 227 3 view .LVU33
 264 0002 0248     		ldr	r0, .L22
 265 0004 FFF7FEFF 		bl	HAL_SDRAM_IRQHandler
 266              	.LVL2:
 228:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN FMC_IRQn 1 */
 229:Core/Src/stm32h7xx_it.c **** 
 230:Core/Src/stm32h7xx_it.c ****   /* USER CODE END FMC_IRQn 1 */
 231:Core/Src/stm32h7xx_it.c **** }
 267              		.loc 1 231 1 is_stmt 0 view .LVU34
 268 0008 08BD     		pop	{r3, pc}
 269              	.L23:
 270 000a 00BF     		.align	2
 271              	.L22:
 272 000c 00000000 		.word	hsdram1
 273              		.cfi_endproc
 274              	.LFE157:
 276              		.section	.text.LTDC_IRQHandler,"ax",%progbits
 277              		.align	1
 278              		.global	LTDC_IRQHandler
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	LTDC_IRQHandler:
 284              	.LFB158:
 232:Core/Src/stm32h7xx_it.c **** 
 233:Core/Src/stm32h7xx_it.c **** /**
 234:Core/Src/stm32h7xx_it.c ****   * @brief This function handles LTDC global interrupt.
 235:Core/Src/stm32h7xx_it.c ****   */
 236:Core/Src/stm32h7xx_it.c **** void LTDC_IRQHandler(void)
 237:Core/Src/stm32h7xx_it.c **** {
 285              		.loc 1 237 1 is_stmt 1 view -0
 286              		.cfi_startproc
 287              		@ args = 0, pretend = 0, frame = 0
 288              		@ frame_needed = 0, uses_anonymous_args = 0
 289 0000 08B5     		push	{r3, lr}
 290              		.cfi_def_cfa_offset 8
 291              		.cfi_offset 3, -8
 292              		.cfi_offset 14, -4
 238:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 0 */
 239:Core/Src/stm32h7xx_it.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 10


 240:Core/Src/stm32h7xx_it.c ****   /* USER CODE END LTDC_IRQn 0 */
 241:Core/Src/stm32h7xx_it.c ****   HAL_LTDC_IRQHandler(&hltdc);
 293              		.loc 1 241 3 view .LVU36
 294 0002 0248     		ldr	r0, .L26
 295 0004 FFF7FEFF 		bl	HAL_LTDC_IRQHandler
 296              	.LVL3:
 242:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN LTDC_IRQn 1 */
 243:Core/Src/stm32h7xx_it.c **** 
 244:Core/Src/stm32h7xx_it.c ****   /* USER CODE END LTDC_IRQn 1 */
 245:Core/Src/stm32h7xx_it.c **** }
 297              		.loc 1 245 1 is_stmt 0 view .LVU37
 298 0008 08BD     		pop	{r3, pc}
 299              	.L27:
 300 000a 00BF     		.align	2
 301              	.L26:
 302 000c 00000000 		.word	hltdc
 303              		.cfi_endproc
 304              	.LFE158:
 306              		.section	.text.LTDC_ER_IRQHandler,"ax",%progbits
 307              		.align	1
 308              		.global	LTDC_ER_IRQHandler
 309              		.syntax unified
 310              		.thumb
 311              		.thumb_func
 313              	LTDC_ER_IRQHandler:
 314              	.LFB159:
 246:Core/Src/stm32h7xx_it.c **** 
 247:Core/Src/stm32h7xx_it.c **** /**
 248:Core/Src/stm32h7xx_it.c ****   * @brief This function handles LTDC global error interrupt.
 249:Core/Src/stm32h7xx_it.c ****   */
 250:Core/Src/stm32h7xx_it.c **** void LTDC_ER_IRQHandler(void)
 251:Core/Src/stm32h7xx_it.c **** {
 315              		.loc 1 251 1 is_stmt 1 view -0
 316              		.cfi_startproc
 317              		@ args = 0, pretend = 0, frame = 0
 318              		@ frame_needed = 0, uses_anonymous_args = 0
 319 0000 08B5     		push	{r3, lr}
 320              		.cfi_def_cfa_offset 8
 321              		.cfi_offset 3, -8
 322              		.cfi_offset 14, -4
 252:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN LTDC_ER_IRQn 0 */
 253:Core/Src/stm32h7xx_it.c **** 
 254:Core/Src/stm32h7xx_it.c ****   /* USER CODE END LTDC_ER_IRQn 0 */
 255:Core/Src/stm32h7xx_it.c ****   HAL_LTDC_IRQHandler(&hltdc);
 323              		.loc 1 255 3 view .LVU39
 324 0002 0248     		ldr	r0, .L30
 325 0004 FFF7FEFF 		bl	HAL_LTDC_IRQHandler
 326              	.LVL4:
 256:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN LTDC_ER_IRQn 1 */
 257:Core/Src/stm32h7xx_it.c **** 
 258:Core/Src/stm32h7xx_it.c ****   /* USER CODE END LTDC_ER_IRQn 1 */
 259:Core/Src/stm32h7xx_it.c **** }
 327              		.loc 1 259 1 is_stmt 0 view .LVU40
 328 0008 08BD     		pop	{r3, pc}
 329              	.L31:
 330 000a 00BF     		.align	2
 331              	.L30:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 11


 332 000c 00000000 		.word	hltdc
 333              		.cfi_endproc
 334              	.LFE159:
 336              		.section	.text.DMA2D_IRQHandler,"ax",%progbits
 337              		.align	1
 338              		.global	DMA2D_IRQHandler
 339              		.syntax unified
 340              		.thumb
 341              		.thumb_func
 343              	DMA2D_IRQHandler:
 344              	.LFB160:
 260:Core/Src/stm32h7xx_it.c **** 
 261:Core/Src/stm32h7xx_it.c **** /**
 262:Core/Src/stm32h7xx_it.c ****   * @brief This function handles DMA2D global interrupt.
 263:Core/Src/stm32h7xx_it.c ****   */
 264:Core/Src/stm32h7xx_it.c **** void DMA2D_IRQHandler(void)
 265:Core/Src/stm32h7xx_it.c **** {
 345              		.loc 1 265 1 is_stmt 1 view -0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349 0000 08B5     		push	{r3, lr}
 350              		.cfi_def_cfa_offset 8
 351              		.cfi_offset 3, -8
 352              		.cfi_offset 14, -4
 266:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA2D_IRQn 0 */
 267:Core/Src/stm32h7xx_it.c **** 
 268:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA2D_IRQn 0 */
 269:Core/Src/stm32h7xx_it.c ****   HAL_DMA2D_IRQHandler(&hdma2d);
 353              		.loc 1 269 3 view .LVU42
 354 0002 0248     		ldr	r0, .L34
 355 0004 FFF7FEFF 		bl	HAL_DMA2D_IRQHandler
 356              	.LVL5:
 270:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN DMA2D_IRQn 1 */
 271:Core/Src/stm32h7xx_it.c **** 
 272:Core/Src/stm32h7xx_it.c ****   /* USER CODE END DMA2D_IRQn 1 */
 273:Core/Src/stm32h7xx_it.c **** }
 357              		.loc 1 273 1 is_stmt 0 view .LVU43
 358 0008 08BD     		pop	{r3, pc}
 359              	.L35:
 360 000a 00BF     		.align	2
 361              	.L34:
 362 000c 00000000 		.word	hdma2d
 363              		.cfi_endproc
 364              	.LFE160:
 366              		.section	.text.TIM17_IRQHandler,"ax",%progbits
 367              		.align	1
 368              		.global	TIM17_IRQHandler
 369              		.syntax unified
 370              		.thumb
 371              		.thumb_func
 373              	TIM17_IRQHandler:
 374              	.LFB161:
 274:Core/Src/stm32h7xx_it.c **** 
 275:Core/Src/stm32h7xx_it.c **** /**
 276:Core/Src/stm32h7xx_it.c ****   * @brief This function handles TIM17 global interrupt.
 277:Core/Src/stm32h7xx_it.c ****   */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 12


 278:Core/Src/stm32h7xx_it.c **** void TIM17_IRQHandler(void)
 279:Core/Src/stm32h7xx_it.c **** {
 375              		.loc 1 279 1 is_stmt 1 view -0
 376              		.cfi_startproc
 377              		@ args = 0, pretend = 0, frame = 0
 378              		@ frame_needed = 0, uses_anonymous_args = 0
 379 0000 08B5     		push	{r3, lr}
 380              		.cfi_def_cfa_offset 8
 381              		.cfi_offset 3, -8
 382              		.cfi_offset 14, -4
 280:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 0 */
 281:Core/Src/stm32h7xx_it.c ****   lv_tick_inc(1);
 383              		.loc 1 281 3 view .LVU45
 384 0002 0120     		movs	r0, #1
 385 0004 FFF7FEFF 		bl	lv_tick_inc
 386              	.LVL6:
 282:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM17_IRQn 0 */
 283:Core/Src/stm32h7xx_it.c ****   HAL_TIM_IRQHandler(&htim17);
 387              		.loc 1 283 3 view .LVU46
 388 0008 0148     		ldr	r0, .L38
 389 000a FFF7FEFF 		bl	HAL_TIM_IRQHandler
 390              	.LVL7:
 284:Core/Src/stm32h7xx_it.c ****   /* USER CODE BEGIN TIM17_IRQn 1 */
 285:Core/Src/stm32h7xx_it.c **** 
 286:Core/Src/stm32h7xx_it.c ****   /* USER CODE END TIM17_IRQn 1 */
 287:Core/Src/stm32h7xx_it.c **** }
 391              		.loc 1 287 1 is_stmt 0 view .LVU47
 392 000e 08BD     		pop	{r3, pc}
 393              	.L39:
 394              		.align	2
 395              	.L38:
 396 0010 00000000 		.word	htim17
 397              		.cfi_endproc
 398              	.LFE161:
 400              		.text
 401              	.Letext0:
 402              		.file 2 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 403              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 404              		.file 4 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
 405              		.file 5 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 406              		.file 6 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 407              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_mdma.h"
 408              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma2d.h"
 409              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_ltdc.h"
 410              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_ll_fmc.h"
 411              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_sdram.h"
 412              		.file 12 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_tim.h"
 413              		.file 13 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 414              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s 			page 13


DEFINED SYMBOLS
                            *ABS*:00000000 stm32h7xx_it.c
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:19     .text.NMI_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:25     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:43     .text.HardFault_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:49     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:66     .text.MemManage_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:72     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:89     .text.BusFault_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:95     .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:112    .text.UsageFault_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:118    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:135    .text.SVC_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:141    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:154    .text.DebugMon_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:160    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:173    .text.PendSV_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:179    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:192    .text.SysTick_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:198    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:217    .text.USART1_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:223    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:242    .text.USART1_IRQHandler:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:247    .text.FMC_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:253    .text.FMC_IRQHandler:00000000 FMC_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:272    .text.FMC_IRQHandler:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:277    .text.LTDC_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:283    .text.LTDC_IRQHandler:00000000 LTDC_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:302    .text.LTDC_IRQHandler:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:307    .text.LTDC_ER_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:313    .text.LTDC_ER_IRQHandler:00000000 LTDC_ER_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:332    .text.LTDC_ER_IRQHandler:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:337    .text.DMA2D_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:343    .text.DMA2D_IRQHandler:00000000 DMA2D_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:362    .text.DMA2D_IRQHandler:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:367    .text.TIM17_IRQHandler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:373    .text.TIM17_IRQHandler:00000000 TIM17_IRQHandler
C:\Users\OSD\AppData\Local\Temp\cc1KI8JE.s:396    .text.TIM17_IRQHandler:00000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_UART_IRQHandler
huart1
HAL_SDRAM_IRQHandler
hsdram1
HAL_LTDC_IRQHandler
hltdc
HAL_DMA2D_IRQHandler
hdma2d
lv_tick_inc
HAL_TIM_IRQHandler
htim17
