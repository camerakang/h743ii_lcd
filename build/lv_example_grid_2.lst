ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_grid_2.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.lv_example_grid_2.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 63302C20 		.ascii	"c0, r0\000"
  21      723000
  22 0007 00       		.align	2
  23              	.LC1:
  24 0008 63312C20 		.ascii	"c1, r0\000"
  24      723000
  25 000f 00       		.align	2
  26              	.LC2:
  27 0010 63322C20 		.ascii	"c2, r0\000"
  27      723000
  28 0017 00       		.align	2
  29              	.LC3:
  30 0018 63312D32 		.ascii	"c1-2, r1\000"
  30      2C207231 
  30      00
  31 0021 000000   		.align	2
  32              	.LC4:
  33 0024 63300A72 		.ascii	"c0\012r1-2\000"
  33      312D3200 
  34              		.section	.text.lv_example_grid_2,"ax",%progbits
  35              		.align	1
  36              		.global	lv_example_grid_2
  37              		.syntax unified
  38              		.thumb
  39              		.thumb_func
  41              	lv_example_grid_2:
  42              	.LFB204:
  43              		.file 1 "lvgl/examples/layouts/grid/lv_example_grid_2.c"
   1:lvgl/examples/layouts/grid/lv_example_grid_2.c **** #include "../../lv_examples.h"
   2:lvgl/examples/layouts/grid/lv_example_grid_2.c **** #if LV_USE_GRID && LV_BUILD_EXAMPLES
   3:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
   4:lvgl/examples/layouts/grid/lv_example_grid_2.c **** /**
   5:lvgl/examples/layouts/grid/lv_example_grid_2.c ****  * Demonstrate cell placement and span
   6:lvgl/examples/layouts/grid/lv_example_grid_2.c ****  */
   7:lvgl/examples/layouts/grid/lv_example_grid_2.c **** void lv_example_grid_2(void)
   8:lvgl/examples/layouts/grid/lv_example_grid_2.c **** {
  44              		.loc 1 8 1 view -0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 2


  45              		.cfi_startproc
  46              		@ args = 0, pretend = 0, frame = 0
  47              		@ frame_needed = 0, uses_anonymous_args = 0
  48 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
  49              		.cfi_def_cfa_offset 28
  50              		.cfi_offset 4, -28
  51              		.cfi_offset 5, -24
  52              		.cfi_offset 6, -20
  53              		.cfi_offset 7, -16
  54              		.cfi_offset 8, -12
  55              		.cfi_offset 9, -8
  56              		.cfi_offset 14, -4
  57 0004 85B0     		sub	sp, sp, #20
  58              		.cfi_def_cfa_offset 48
   9:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     static lv_coord_t col_dsc[] = {70, 70, 70, LV_GRID_TEMPLATE_LAST};
  59              		.loc 1 9 5 view .LVU1
  10:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     static lv_coord_t row_dsc[] = {50, 50, 50, LV_GRID_TEMPLATE_LAST};
  60              		.loc 1 10 5 view .LVU2
  11:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  12:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Create a container with grid*/
  13:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_t * cont = lv_obj_create(lv_scr_act());
  61              		.loc 1 13 5 view .LVU3
  62              	.LBB8:
  63              	.LBI8:
  64              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 3


  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 4


  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 5


 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  65              		.loc 2 182 26 view .LVU4
  66              	.LBB9:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  67              		.loc 2 184 5 view .LVU5
  68              		.loc 2 184 12 is_stmt 0 view .LVU6
  69 0006 FFF7FEFF 		bl	lv_disp_get_default
  70              	.LVL0:
  71 000a FFF7FEFF 		bl	lv_disp_get_scr_act
  72              	.LVL1:
  73              	.LBE9:
  74              	.LBE8:
  75              		.loc 1 13 23 view .LVU7
  76 000e FFF7FEFF 		bl	lv_obj_create
  77              	.LVL2:
  78 0012 0646     		mov	r6, r0
  79              	.LVL3:
  14:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_dsc_array(cont, col_dsc, row_dsc);
  80              		.loc 1 14 5 is_stmt 1 view .LVU8
  81 0014 484A     		ldr	r2, .L3
  82 0016 4949     		ldr	r1, .L3+4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 6


  83 0018 FFF7FEFF 		bl	lv_obj_set_grid_dsc_array
  84              	.LVL4:
  15:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(cont, 300, 220);
  85              		.loc 1 15 5 view .LVU9
  86 001c DC22     		movs	r2, #220
  87 001e 4FF49671 		mov	r1, #300
  88 0022 3046     		mov	r0, r6
  89 0024 FFF7FEFF 		bl	lv_obj_set_size
  90              	.LVL5:
  16:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_center(cont);
  91              		.loc 1 16 5 view .LVU10
  92              	.LBB10:
  93              	.LBI10:
  94              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 7


  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 8


 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param cb        the layout update callback
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 9


 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** /**
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
  95              		.loc 3 199 20 view .LVU11
  96              	.LBB11:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
  97              		.loc 3 201 5 view .LVU12
  98 0028 0023     		movs	r3, #0
  99 002a 1A46     		mov	r2, r3
 100 002c 0921     		movs	r1, #9
 101 002e 3046     		mov	r0, r6
 102 0030 FFF7FEFF 		bl	lv_obj_align
 103              	.LVL6:
 104              		.loc 3 201 5 is_stmt 0 view .LVU13
 105              	.LBE11:
 106              	.LBE10:
  17:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 10


  18:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_t * label;
 107              		.loc 1 18 5 is_stmt 1 view .LVU14
  19:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_t * obj;
 108              		.loc 1 19 5 view .LVU15
  20:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  21:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Cell to 0;0 and align to to the start (left/top) horizontally and vertically too*/
  22:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     obj = lv_obj_create(cont);
 109              		.loc 1 22 5 view .LVU16
 110              		.loc 1 22 11 is_stmt 0 view .LVU17
 111 0034 3046     		mov	r0, r6
 112 0036 FFF7FEFF 		bl	lv_obj_create
 113              	.LVL7:
 114 003a 0746     		mov	r7, r0
 115              	.LVL8:
  23:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(obj, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 116              		.loc 1 23 5 is_stmt 1 view .LVU18
 117 003c 42F2D172 		movw	r2, #10193
 118 0040 1146     		mov	r1, r2
 119 0042 FFF7FEFF 		bl	lv_obj_set_size
 120              	.LVL9:
  24:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_cell(obj, LV_GRID_ALIGN_START, 0, 1,
 121              		.loc 1 24 5 view .LVU19
 122 0046 0124     		movs	r4, #1
 123 0048 0294     		str	r4, [sp, #8]
 124 004a 0025     		movs	r5, #0
 125 004c 0195     		str	r5, [sp, #4]
 126 004e 0095     		str	r5, [sp]
 127 0050 2346     		mov	r3, r4
 128 0052 2A46     		mov	r2, r5
 129 0054 2946     		mov	r1, r5
 130 0056 3846     		mov	r0, r7
 131 0058 FFF7FEFF 		bl	lv_obj_set_grid_cell
 132              	.LVL10:
  25:lvgl/examples/layouts/grid/lv_example_grid_2.c ****                          LV_GRID_ALIGN_START, 0, 1);
  26:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     label = lv_label_create(obj);
 133              		.loc 1 26 5 view .LVU20
 134              		.loc 1 26 13 is_stmt 0 view .LVU21
 135 005c 3846     		mov	r0, r7
 136 005e FFF7FEFF 		bl	lv_label_create
 137              	.LVL11:
  27:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_label_set_text(label, "c0, r0");
 138              		.loc 1 27 5 is_stmt 1 view .LVU22
 139 0062 3749     		ldr	r1, .L3+8
 140 0064 FFF7FEFF 		bl	lv_label_set_text
 141              	.LVL12:
  28:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  29:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Cell to 1;0 and align to to the start (left) horizontally and center vertically too*/
  30:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     obj = lv_obj_create(cont);
 142              		.loc 1 30 5 view .LVU23
 143              		.loc 1 30 11 is_stmt 0 view .LVU24
 144 0068 3046     		mov	r0, r6
 145 006a FFF7FEFF 		bl	lv_obj_create
 146              	.LVL13:
 147 006e 0746     		mov	r7, r0
 148              	.LVL14:
  31:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(obj, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 149              		.loc 1 31 5 is_stmt 1 view .LVU25
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 11


 150 0070 42F2D172 		movw	r2, #10193
 151 0074 1146     		mov	r1, r2
 152 0076 FFF7FEFF 		bl	lv_obj_set_size
 153              	.LVL15:
  32:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_cell(obj, LV_GRID_ALIGN_START, 1, 1,
 154              		.loc 1 32 5 view .LVU26
 155 007a 0294     		str	r4, [sp, #8]
 156 007c 0195     		str	r5, [sp, #4]
 157 007e 0094     		str	r4, [sp]
 158 0080 2346     		mov	r3, r4
 159 0082 2246     		mov	r2, r4
 160 0084 2946     		mov	r1, r5
 161 0086 3846     		mov	r0, r7
 162 0088 FFF7FEFF 		bl	lv_obj_set_grid_cell
 163              	.LVL16:
  33:lvgl/examples/layouts/grid/lv_example_grid_2.c ****                          LV_GRID_ALIGN_CENTER, 0, 1);
  34:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     label = lv_label_create(obj);
 164              		.loc 1 34 5 view .LVU27
 165              		.loc 1 34 13 is_stmt 0 view .LVU28
 166 008c 3846     		mov	r0, r7
 167 008e FFF7FEFF 		bl	lv_label_create
 168              	.LVL17:
  35:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_label_set_text(label, "c1, r0");
 169              		.loc 1 35 5 is_stmt 1 view .LVU29
 170 0092 2C49     		ldr	r1, .L3+12
 171 0094 FFF7FEFF 		bl	lv_label_set_text
 172              	.LVL18:
  36:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  37:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Cell to 2;0 and align to to the start (left) horizontally and end (bottom) vertically too*/
  38:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     obj = lv_obj_create(cont);
 173              		.loc 1 38 5 view .LVU30
 174              		.loc 1 38 11 is_stmt 0 view .LVU31
 175 0098 3046     		mov	r0, r6
 176 009a FFF7FEFF 		bl	lv_obj_create
 177              	.LVL19:
 178 009e 0746     		mov	r7, r0
 179              	.LVL20:
  39:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(obj, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 180              		.loc 1 39 5 is_stmt 1 view .LVU32
 181 00a0 42F2D172 		movw	r2, #10193
 182 00a4 1146     		mov	r1, r2
 183 00a6 FFF7FEFF 		bl	lv_obj_set_size
 184              	.LVL21:
  40:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_cell(obj, LV_GRID_ALIGN_START, 2, 1,
 185              		.loc 1 40 5 view .LVU33
 186 00aa 0294     		str	r4, [sp, #8]
 187 00ac 0195     		str	r5, [sp, #4]
 188 00ae 4FF00208 		mov	r8, #2
 189 00b2 CDF80080 		str	r8, [sp]
 190 00b6 2346     		mov	r3, r4
 191 00b8 4246     		mov	r2, r8
 192 00ba 2946     		mov	r1, r5
 193 00bc 3846     		mov	r0, r7
 194 00be FFF7FEFF 		bl	lv_obj_set_grid_cell
 195              	.LVL22:
  41:lvgl/examples/layouts/grid/lv_example_grid_2.c ****                          LV_GRID_ALIGN_END, 0, 1);
  42:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     label = lv_label_create(obj);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 12


 196              		.loc 1 42 5 view .LVU34
 197              		.loc 1 42 13 is_stmt 0 view .LVU35
 198 00c2 3846     		mov	r0, r7
 199 00c4 FFF7FEFF 		bl	lv_label_create
 200              	.LVL23:
  43:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_label_set_text(label, "c2, r0");
 201              		.loc 1 43 5 is_stmt 1 view .LVU36
 202 00c8 1F49     		ldr	r1, .L3+16
 203 00ca FFF7FEFF 		bl	lv_label_set_text
 204              	.LVL24:
  44:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  45:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Cell to 1;1 but 2 column wide (span = 2).Set width and height to stretched.*/
  46:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     obj = lv_obj_create(cont);
 205              		.loc 1 46 5 view .LVU37
 206              		.loc 1 46 11 is_stmt 0 view .LVU38
 207 00ce 3046     		mov	r0, r6
 208 00d0 FFF7FEFF 		bl	lv_obj_create
 209              	.LVL25:
 210 00d4 8146     		mov	r9, r0
 211              	.LVL26:
  47:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(obj, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 212              		.loc 1 47 5 is_stmt 1 view .LVU39
 213 00d6 42F2D172 		movw	r2, #10193
 214 00da 1146     		mov	r1, r2
 215 00dc FFF7FEFF 		bl	lv_obj_set_size
 216              	.LVL27:
  48:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_cell(obj, LV_GRID_ALIGN_STRETCH, 1, 2,
 217              		.loc 1 48 5 view .LVU40
 218 00e0 0294     		str	r4, [sp, #8]
 219 00e2 0194     		str	r4, [sp, #4]
 220 00e4 0327     		movs	r7, #3
 221 00e6 0097     		str	r7, [sp]
 222 00e8 4346     		mov	r3, r8
 223 00ea 2246     		mov	r2, r4
 224 00ec 3946     		mov	r1, r7
 225 00ee 4846     		mov	r0, r9
 226 00f0 FFF7FEFF 		bl	lv_obj_set_grid_cell
 227              	.LVL28:
  49:lvgl/examples/layouts/grid/lv_example_grid_2.c ****                          LV_GRID_ALIGN_STRETCH, 1, 1);
  50:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     label = lv_label_create(obj);
 228              		.loc 1 50 5 view .LVU41
 229              		.loc 1 50 13 is_stmt 0 view .LVU42
 230 00f4 4846     		mov	r0, r9
 231 00f6 FFF7FEFF 		bl	lv_label_create
 232              	.LVL29:
  51:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_label_set_text(label, "c1-2, r1");
 233              		.loc 1 51 5 is_stmt 1 view .LVU43
 234 00fa 1449     		ldr	r1, .L3+20
 235 00fc FFF7FEFF 		bl	lv_label_set_text
 236              	.LVL30:
  52:lvgl/examples/layouts/grid/lv_example_grid_2.c **** 
  53:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     /*Cell to 0;1 but 2 rows tall (span = 2).Set width and height to stretched.*/
  54:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     obj = lv_obj_create(cont);
 237              		.loc 1 54 5 view .LVU44
 238              		.loc 1 54 11 is_stmt 0 view .LVU45
 239 0100 3046     		mov	r0, r6
 240 0102 FFF7FEFF 		bl	lv_obj_create
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 13


 241              	.LVL31:
 242 0106 0646     		mov	r6, r0
 243              	.LVL32:
  55:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_size(obj, LV_SIZE_CONTENT, LV_SIZE_CONTENT);
 244              		.loc 1 55 5 is_stmt 1 view .LVU46
 245 0108 42F2D172 		movw	r2, #10193
 246 010c 1146     		mov	r1, r2
 247 010e FFF7FEFF 		bl	lv_obj_set_size
 248              	.LVL33:
  56:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_obj_set_grid_cell(obj, LV_GRID_ALIGN_STRETCH, 0, 1,
 249              		.loc 1 56 5 view .LVU47
 250 0112 CDF80880 		str	r8, [sp, #8]
 251 0116 0194     		str	r4, [sp, #4]
 252 0118 0097     		str	r7, [sp]
 253 011a 2346     		mov	r3, r4
 254 011c 2A46     		mov	r2, r5
 255 011e 3946     		mov	r1, r7
 256 0120 3046     		mov	r0, r6
 257 0122 FFF7FEFF 		bl	lv_obj_set_grid_cell
 258              	.LVL34:
  57:lvgl/examples/layouts/grid/lv_example_grid_2.c ****                          LV_GRID_ALIGN_STRETCH, 1, 2);
  58:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     label = lv_label_create(obj);
 259              		.loc 1 58 5 view .LVU48
 260              		.loc 1 58 13 is_stmt 0 view .LVU49
 261 0126 3046     		mov	r0, r6
 262 0128 FFF7FEFF 		bl	lv_label_create
 263              	.LVL35:
  59:lvgl/examples/layouts/grid/lv_example_grid_2.c ****     lv_label_set_text(label, "c0\nr1-2");
 264              		.loc 1 59 5 is_stmt 1 view .LVU50
 265 012c 0849     		ldr	r1, .L3+24
 266 012e FFF7FEFF 		bl	lv_label_set_text
 267              	.LVL36:
  60:lvgl/examples/layouts/grid/lv_example_grid_2.c **** }
 268              		.loc 1 60 1 is_stmt 0 view .LVU51
 269 0132 05B0     		add	sp, sp, #20
 270              		.cfi_def_cfa_offset 28
 271              		@ sp needed
 272 0134 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 273              	.LVL37:
 274              	.L4:
 275              		.loc 1 60 1 view .LVU52
 276              		.align	2
 277              	.L3:
 278 0138 00000000 		.word	.LANCHOR0
 279 013c 00000000 		.word	.LANCHOR1
 280 0140 00000000 		.word	.LC0
 281 0144 08000000 		.word	.LC1
 282 0148 10000000 		.word	.LC2
 283 014c 18000000 		.word	.LC3
 284 0150 24000000 		.word	.LC4
 285              		.cfi_endproc
 286              	.LFE204:
 288              		.section	.data.col_dsc.1,"aw"
 289              		.align	2
 290              		.set	.LANCHOR1,. + 0
 293              	col_dsc.1:
 294 0000 4600     		.short	70
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 14


 295 0002 4600     		.short	70
 296 0004 4600     		.short	70
 297 0006 FF1F     		.short	8191
 298              		.section	.data.row_dsc.0,"aw"
 299              		.align	2
 300              		.set	.LANCHOR0,. + 0
 303              	row_dsc.0:
 304 0000 3200     		.short	50
 305 0002 3200     		.short	50
 306 0004 3200     		.short	50
 307 0006 FF1F     		.short	8191
 308              		.text
 309              	.Letext0:
 310              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 311              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 312              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 313              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 314              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 315              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 316              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 317              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 318              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 319              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 320              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 321              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 322              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/layouts/grid/lv_grid.h"
 323              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 324              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_label.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_grid_2.c
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:19     .rodata.lv_example_grid_2.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:35     .text.lv_example_grid_2:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:41     .text.lv_example_grid_2:00000000 lv_example_grid_2
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:278    .text.lv_example_grid_2:00000138 $d
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:289    .data.col_dsc.1:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:293    .data.col_dsc.1:00000000 col_dsc.1
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:299    .data.row_dsc.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cc3IR09I.s:303    .data.row_dsc.0:00000000 row_dsc.0

UNDEFINED SYMBOLS
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_create
lv_obj_set_grid_dsc_array
lv_obj_set_size
lv_obj_align
lv_obj_set_grid_cell
lv_label_create
lv_label_set_text
