ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_scroll_4.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.lv_example_scroll_4.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 4C6F7265 		.ascii	"Lorem ipsum dolor sit amet, consectetur adipiscing "
  21      6D206970 
  21      73756D20 
  21      646F6C6F 
  21      72207369 
  22 0033 656C6974 		.ascii	"elit.\012Etiam dictum, tortor vestibulum lacinia la"
  22      2E0A4574 
  22      69616D20 
  22      64696374 
  22      756D2C20 
  23 0063 6F726565 		.ascii	"oreet, mi neque consectetur neque, vel mattis odio "
  23      742C206D 
  23      69206E65 
  23      71756520 
  23      636F6E73 
  24 0096 646F6C6F 		.ascii	"dolor egestas ligula. \012Sed vestibulum sapien nul"
  24      72206567 
  24      65737461 
  24      73206C69 
  24      67756C61 
  25 00c6 6C612C20 		.ascii	"la, id convallis ex porttitor nec. \012Duis et mass"
  25      69642063 
  25      6F6E7661 
  25      6C6C6973 
  25      20657820 
  26 00f6 61206575 		.ascii	"a eu libero accumsan faucibus a in arcu. \012Ut pul"
  26      206C6962 
  26      65726F20 
  26      61636375 
  26      6D73616E 
  27 0126 76696E61 		.ascii	"vinar odio lorem, vel tempus turpis condimentum qui"
  27      72206F64 
  27      696F206C 
  27      6F72656D 
  27      2C207665 
  28 0159 732E204E 		.ascii	"s. Nam consectetur condimentum sem in auctor. \012S"
  28      616D2063 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 2


  28      6F6E7365 
  28      63746574 
  28      75722063 
  29 0189 6564206E 		.ascii	"ed nisl augue, venenatis in blandit et, gravida ac "
  29      69736C20 
  29      61756775 
  29      652C2076 
  29      656E656E 
  30 01bc 746F7274 		.ascii	"tortor. \012Etiam dapibus elementum suscipit. \012P"
  30      6F722E20 
  30      0A457469 
  30      616D2064 
  30      61706962 
  31 01e9 726F696E 		.ascii	"roin mollis sollicitudin convallis. \012Integer dap"
  31      206D6F6C 
  31      6C697320 
  31      736F6C6C 
  31      69636974 
  32 0219 69627573 		.ascii	"ibus tempus arcu nec viverra. \012Donec molestie nu"
  32      2074656D 
  32      70757320 
  32      61726375 
  32      206E6563 
  33 0249 6C6C6120 		.ascii	"lla enim, eu interdum velit placerat quis. \012Done"
  33      656E696D 
  33      2C206575 
  33      20696E74 
  33      65726475 
  34 0279 63206964 		.ascii	"c id efficitur risus, at molestie turpis. \012Suspe"
  34      20656666 
  34      69636974 
  34      75722072 
  34      69737573 
  35 02a9 6E646973 		.ascii	"ndisse vestibulum consectetur nunc ut commodo. \012"
  35      73652076 
  35      65737469 
  35      62756C75 
  35      6D20636F 
  36 02d9 46757363 		.ascii	"Fusce molestie rhoncus nisi sit amet tincidunt. \012"
  36      65206D6F 
  36      6C657374 
  36      69652072 
  36      686F6E63 
  37 030a 53757370 		.ascii	"Suspendisse a nunc ut magna ornare volutpat.\000"
  37      656E6469 
  37      73736520 
  37      61206E75 
  37      6E632075 
  38              		.section	.text.lv_example_scroll_4,"ax",%progbits
  39              		.align	1
  40              		.global	lv_example_scroll_4
  41              		.syntax unified
  42              		.thumb
  43              		.thumb_func
  45              	lv_example_scroll_4:
  46              	.LFB204:
  47              		.file 1 "lvgl/examples/scroll/lv_example_scroll_4.c"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 3


   1:lvgl/examples/scroll/lv_example_scroll_4.c **** #include "../lv_examples.h"
   2:lvgl/examples/scroll/lv_example_scroll_4.c **** #if LV_BUILD_EXAMPLES && LV_USE_LIST
   3:lvgl/examples/scroll/lv_example_scroll_4.c **** 
   4:lvgl/examples/scroll/lv_example_scroll_4.c **** /**
   5:lvgl/examples/scroll/lv_example_scroll_4.c ****  * Styling the scrollbars
   6:lvgl/examples/scroll/lv_example_scroll_4.c ****  */
   7:lvgl/examples/scroll/lv_example_scroll_4.c **** void lv_example_scroll_4(void)
   8:lvgl/examples/scroll/lv_example_scroll_4.c **** {
  48              		.loc 1 8 1 view -0
  49              		.cfi_startproc
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 70B5     		push	{r4, r5, r6, lr}
  53              		.cfi_def_cfa_offset 16
  54              		.cfi_offset 4, -16
  55              		.cfi_offset 5, -12
  56              		.cfi_offset 6, -8
  57              		.cfi_offset 14, -4
  58 0002 82B0     		sub	sp, sp, #8
  59              		.cfi_def_cfa_offset 24
   9:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_t * obj = lv_obj_create(lv_scr_act());
  60              		.loc 1 9 5 view .LVU1
  61              	.LBB8:
  62              	.LBI8:
  63              		.file 2 "lvgl/examples/scroll/../../src/core/lv_disp.h"
   1:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
   2:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *
   4:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
   5:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
   6:lvgl/examples/scroll/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/examples/scroll/../../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
   9:lvgl/examples/scroll/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/examples/scroll/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/examples/scroll/../../src/core/lv_disp.h **** #endif
  12:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  13:lvgl/examples/scroll/../../src/core/lv_disp.h **** /*********************
  14:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/examples/scroll/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/examples/scroll/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/examples/scroll/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  20:lvgl/examples/scroll/../../src/core/lv_disp.h **** /*********************
  21:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  24:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**********************
  25:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/examples/scroll/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  28:lvgl/examples/scroll/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 4


  33:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/examples/scroll/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/examples/scroll/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  47:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**********************
  48:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/examples/scroll/../../src/core/lv_disp.h ****  **********************/
  50:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  51:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  52:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  53:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * screen)
  55:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  57:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  59:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  60:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * screen)
  63:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  65:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  67:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  68:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  71:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  73:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  74:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  78:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  80:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  81:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * layer)
  83:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  86:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  88:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  89:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Set the theme of a display
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 5


  90:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  92:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
  94:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
  95:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
  99:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 101:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 102:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 106:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 108:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 109:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Set the background image of a display
 110:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 113:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 115:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 116:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 118:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 120:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 122:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 123:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param delay delay before the transition
 128:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 130:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 132:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 133:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 137:lvgl/examples/scroll/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 139:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 140:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 143:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 145:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 146:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 6


 147:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 149:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 151:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 152:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 156:lvgl/examples/scroll/../../src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 158:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 159:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 163:lvgl/examples/scroll/../../src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 165:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 166:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 171:lvgl/examples/scroll/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 173:lvgl/examples/scroll/../../src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * To improve backward compatibility
 175:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/examples/scroll/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/examples/scroll/../../src/core/lv_disp.h **** 
 178:lvgl/examples/scroll/../../src/core/lv_disp.h **** /**
 179:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/examples/scroll/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/examples/scroll/../../src/core/lv_disp.h ****  */
 182:lvgl/examples/scroll/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  64              		.loc 2 182 26 view .LVU2
  65              	.LBB9:
 183:lvgl/examples/scroll/../../src/core/lv_disp.h **** {
 184:lvgl/examples/scroll/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  66              		.loc 2 184 5 view .LVU3
  67              		.loc 2 184 12 is_stmt 0 view .LVU4
  68 0004 FFF7FEFF 		bl	lv_disp_get_default
  69              	.LVL0:
  70 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
  71              	.LVL1:
  72              	.LBE9:
  73              	.LBE8:
  74              		.loc 1 9 22 view .LVU5
  75 000c FFF7FEFF 		bl	lv_obj_create
  76              	.LVL2:
  77 0010 0546     		mov	r5, r0
  78              	.LVL3:
  10:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_set_size(obj, 200, 100);
  79              		.loc 1 10 5 is_stmt 1 view .LVU6
  80 0012 6422     		movs	r2, #100
  81 0014 C821     		movs	r1, #200
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 7


  82 0016 FFF7FEFF 		bl	lv_obj_set_size
  83              	.LVL4:
  11:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_center(obj);
  84              		.loc 1 11 5 view .LVU7
  85              	.LBB10:
  86              	.LBI10:
  87              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      TYPEDEFS
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the x coordinate of an object
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 8


  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 9


 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param cb        the layout update callback
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 10


 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
  88              		.loc 3 199 20 view .LVU8
  89              	.LBB11:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
  90              		.loc 3 201 5 view .LVU9
  91 001a 0023     		movs	r3, #0
  92 001c 1A46     		mov	r2, r3
  93 001e 0921     		movs	r1, #9
  94 0020 2846     		mov	r0, r5
  95 0022 FFF7FEFF 		bl	lv_obj_align
  96              	.LVL5:
  97              		.loc 3 201 5 is_stmt 0 view .LVU10
  98              	.LBE11:
  99              	.LBE10:
  12:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  13:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_t * label = lv_label_create(obj);
 100              		.loc 1 13 5 is_stmt 1 view .LVU11
 101              		.loc 1 13 24 is_stmt 0 view .LVU12
 102 0026 2846     		mov	r0, r5
 103 0028 FFF7FEFF 		bl	lv_label_create
 104              	.LVL6:
  14:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_label_set_text(label,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 11


 105              		.loc 1 14 5 is_stmt 1 view .LVU13
 106 002c 3449     		ldr	r1, .L3
 107 002e FFF7FEFF 		bl	lv_label_set_text
 108              	.LVL7:
  15:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Lorem ipsum dolor sit amet, consectetur adipiscing elit.\n"
  16:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Etiam dictum, tortor vestibulum lacinia laoreet, mi neque consectetur neque,
  17:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Sed vestibulum sapien nulla, id convallis ex porttitor nec. \n"
  18:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Duis et massa eu libero accumsan faucibus a in arcu. \n"
  19:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Ut pulvinar odio lorem, vel tempus turpis condimentum quis. Nam consectetur 
  20:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Sed nisl augue, venenatis in blandit et, gravida ac tortor. \n"
  21:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Etiam dapibus elementum suscipit. \n"
  22:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Proin mollis sollicitudin convallis. \n"
  23:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Integer dapibus tempus arcu nec viverra. \n"
  24:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Donec molestie nulla enim, eu interdum velit placerat quis. \n"
  25:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Donec id efficitur risus, at molestie turpis. \n"
  26:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Suspendisse vestibulum consectetur nunc ut commodo. \n"
  27:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Fusce molestie rhoncus nisi sit amet tincidunt. \n"
  28:lvgl/examples/scroll/lv_example_scroll_4.c ****                       "Suspendisse a nunc ut magna ornare volutpat.");
  29:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  30:lvgl/examples/scroll/lv_example_scroll_4.c ****     /*Remove the style of scrollbar to have clean start*/
  31:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_remove_style(obj, NULL, LV_PART_SCROLLBAR | LV_STATE_ANY);
 109              		.loc 1 31 5 view .LVU14
 110 0032 344A     		ldr	r2, .L3+4
 111 0034 0021     		movs	r1, #0
 112 0036 2846     		mov	r0, r5
 113 0038 FFF7FEFF 		bl	lv_obj_remove_style
 114              	.LVL8:
  32:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  33:lvgl/examples/scroll/lv_example_scroll_4.c ****     /*Create a transition the animate the some properties on state change*/
  34:lvgl/examples/scroll/lv_example_scroll_4.c ****     static const lv_style_prop_t props[] = {LV_STYLE_BG_OPA, LV_STYLE_WIDTH, 0};
 115              		.loc 1 34 5 view .LVU15
  35:lvgl/examples/scroll/lv_example_scroll_4.c ****     static lv_style_transition_dsc_t trans;
 116              		.loc 1 35 5 view .LVU16
  36:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_transition_dsc_init(&trans, props, lv_anim_path_linear, 200, 0, NULL);
 117              		.loc 1 36 5 view .LVU17
 118 003c 324E     		ldr	r6, .L3+8
 119 003e 0023     		movs	r3, #0
 120 0040 0193     		str	r3, [sp, #4]
 121 0042 0093     		str	r3, [sp]
 122 0044 C823     		movs	r3, #200
 123 0046 314A     		ldr	r2, .L3+12
 124 0048 3149     		ldr	r1, .L3+16
 125 004a 3046     		mov	r0, r6
 126 004c FFF7FEFF 		bl	lv_style_transition_dsc_init
 127              	.LVL9:
  37:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  38:lvgl/examples/scroll/lv_example_scroll_4.c ****     /*Create a style for the scrollbars*/
  39:lvgl/examples/scroll/lv_example_scroll_4.c ****     static lv_style_t style;
 128              		.loc 1 39 5 view .LVU18
  40:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_init(&style);
 129              		.loc 1 40 5 view .LVU19
 130 0050 304C     		ldr	r4, .L3+20
 131 0052 2046     		mov	r0, r4
 132 0054 FFF7FEFF 		bl	lv_style_init
 133              	.LVL10:
  41:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_width(&style, 4);      /*Width of the scrollbar*/
 134              		.loc 1 41 5 view .LVU20
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 12


 135 0058 0421     		movs	r1, #4
 136 005a 2046     		mov	r0, r4
 137 005c FFF7FEFF 		bl	lv_style_set_width
 138              	.LVL11:
  42:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_pad_right(&style, 5);  /*Space from the parallel side*/
 139              		.loc 1 42 5 view .LVU21
 140 0060 0521     		movs	r1, #5
 141 0062 2046     		mov	r0, r4
 142 0064 FFF7FEFF 		bl	lv_style_set_pad_right
 143              	.LVL12:
  43:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_pad_top(&style, 5);    /*Space from the perpendicular side*/
 144              		.loc 1 43 5 view .LVU22
 145 0068 0521     		movs	r1, #5
 146 006a 2046     		mov	r0, r4
 147 006c FFF7FEFF 		bl	lv_style_set_pad_top
 148              	.LVL13:
  44:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  45:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_radius(&style, 2);
 149              		.loc 1 45 5 view .LVU23
 150 0070 0221     		movs	r1, #2
 151 0072 2046     		mov	r0, r4
 152 0074 FFF7FEFF 		bl	lv_style_set_radius
 153              	.LVL14:
  46:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_bg_opa(&style, LV_OPA_70);
 154              		.loc 1 46 5 view .LVU24
 155 0078 B221     		movs	r1, #178
 156 007a 2046     		mov	r0, r4
 157 007c FFF7FEFF 		bl	lv_style_set_bg_opa
 158              	.LVL15:
  47:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_bg_color(&style, lv_palette_main(LV_PALETTE_BLUE));
 159              		.loc 1 47 5 view .LVU25
 160 0080 0520     		movs	r0, #5
 161 0082 FFF7FEFF 		bl	lv_palette_main
 162              	.LVL16:
 163 0086 0146     		mov	r1, r0
 164 0088 2046     		mov	r0, r4
 165 008a FFF7FEFF 		bl	lv_style_set_bg_color
 166              	.LVL17:
  48:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_border_color(&style, lv_palette_darken(LV_PALETTE_BLUE, 3));
 167              		.loc 1 48 5 view .LVU26
 168 008e 0321     		movs	r1, #3
 169 0090 0520     		movs	r0, #5
 170 0092 FFF7FEFF 		bl	lv_palette_darken
 171              	.LVL18:
 172 0096 0146     		mov	r1, r0
 173 0098 2046     		mov	r0, r4
 174 009a FFF7FEFF 		bl	lv_style_set_border_color
 175              	.LVL19:
  49:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_border_width(&style, 2);
 176              		.loc 1 49 5 view .LVU27
 177 009e 0221     		movs	r1, #2
 178 00a0 2046     		mov	r0, r4
 179 00a2 FFF7FEFF 		bl	lv_style_set_border_width
 180              	.LVL20:
  50:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_shadow_width(&style, 8);
 181              		.loc 1 50 5 view .LVU28
 182 00a6 0821     		movs	r1, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 13


 183 00a8 2046     		mov	r0, r4
 184 00aa FFF7FEFF 		bl	lv_style_set_shadow_width
 185              	.LVL21:
  51:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_shadow_spread(&style, 2);
 186              		.loc 1 51 5 view .LVU29
 187 00ae 0221     		movs	r1, #2
 188 00b0 2046     		mov	r0, r4
 189 00b2 FFF7FEFF 		bl	lv_style_set_shadow_spread
 190              	.LVL22:
  52:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_shadow_color(&style, lv_palette_darken(LV_PALETTE_BLUE, 1));
 191              		.loc 1 52 5 view .LVU30
 192 00b6 0121     		movs	r1, #1
 193 00b8 0520     		movs	r0, #5
 194 00ba FFF7FEFF 		bl	lv_palette_darken
 195              	.LVL23:
 196 00be 0146     		mov	r1, r0
 197 00c0 2046     		mov	r0, r4
 198 00c2 FFF7FEFF 		bl	lv_style_set_shadow_color
 199              	.LVL24:
  53:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  54:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_transition(&style, &trans);
 200              		.loc 1 54 5 view .LVU31
 201 00c6 3146     		mov	r1, r6
 202 00c8 2046     		mov	r0, r4
 203 00ca FFF7FEFF 		bl	lv_style_set_transition
 204              	.LVL25:
  55:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  56:lvgl/examples/scroll/lv_example_scroll_4.c ****     /*Make the scrollbars wider and use 100% opacity when scrolled*/
  57:lvgl/examples/scroll/lv_example_scroll_4.c ****     static lv_style_t style_scrolled;
 205              		.loc 1 57 5 view .LVU32
  58:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_init(&style_scrolled);
 206              		.loc 1 58 5 view .LVU33
 207 00ce 124E     		ldr	r6, .L3+24
 208 00d0 3046     		mov	r0, r6
 209 00d2 FFF7FEFF 		bl	lv_style_init
 210              	.LVL26:
  59:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_width(&style_scrolled, 8);
 211              		.loc 1 59 5 view .LVU34
 212 00d6 0821     		movs	r1, #8
 213 00d8 3046     		mov	r0, r6
 214 00da FFF7FEFF 		bl	lv_style_set_width
 215              	.LVL27:
  60:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_style_set_bg_opa(&style_scrolled, LV_OPA_COVER);
 216              		.loc 1 60 5 view .LVU35
 217 00de FF21     		movs	r1, #255
 218 00e0 3046     		mov	r0, r6
 219 00e2 FFF7FEFF 		bl	lv_style_set_bg_opa
 220              	.LVL28:
  61:lvgl/examples/scroll/lv_example_scroll_4.c **** 
  62:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_add_style(obj, &style, LV_PART_SCROLLBAR);
 221              		.loc 1 62 5 view .LVU36
 222 00e6 4FF48032 		mov	r2, #65536
 223 00ea 2146     		mov	r1, r4
 224 00ec 2846     		mov	r0, r5
 225 00ee FFF7FEFF 		bl	lv_obj_add_style
 226              	.LVL29:
  63:lvgl/examples/scroll/lv_example_scroll_4.c ****     lv_obj_add_style(obj, &style_scrolled, LV_PART_SCROLLBAR | LV_STATE_SCROLLED);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 14


 227              		.loc 1 63 5 view .LVU37
 228 00f2 0A4A     		ldr	r2, .L3+28
 229 00f4 3146     		mov	r1, r6
 230 00f6 2846     		mov	r0, r5
 231 00f8 FFF7FEFF 		bl	lv_obj_add_style
 232              	.LVL30:
  64:lvgl/examples/scroll/lv_example_scroll_4.c **** }
 233              		.loc 1 64 1 is_stmt 0 view .LVU38
 234 00fc 02B0     		add	sp, sp, #8
 235              		.cfi_def_cfa_offset 16
 236              		@ sp needed
 237 00fe 70BD     		pop	{r4, r5, r6, pc}
 238              	.LVL31:
 239              	.L4:
 240              		.loc 1 64 1 view .LVU39
 241              		.align	2
 242              	.L3:
 243 0100 00000000 		.word	.LC0
 244 0104 FFFF0100 		.word	131071
 245 0108 00000000 		.word	.LANCHOR1
 246 010c 00000000 		.word	lv_anim_path_linear
 247 0110 00000000 		.word	.LANCHOR0
 248 0114 00000000 		.word	.LANCHOR2
 249 0118 00000000 		.word	.LANCHOR3
 250 011c 40000100 		.word	65600
 251              		.cfi_endproc
 252              	.LFE204:
 254              		.section	.bss.style.1,"aw",%nobits
 255              		.align	2
 256              		.set	.LANCHOR2,. + 0
 259              	style.1:
 260 0000 00000000 		.space	8
 260      00000000 
 261              		.section	.bss.style_scrolled.0,"aw",%nobits
 262              		.align	2
 263              		.set	.LANCHOR3,. + 0
 266              	style_scrolled.0:
 267 0000 00000000 		.space	8
 267      00000000 
 268              		.section	.bss.trans.3,"aw",%nobits
 269              		.align	2
 270              		.set	.LANCHOR1,. + 0
 273              	trans.3:
 274 0000 00000000 		.space	20
 274      00000000 
 274      00000000 
 274      00000000 
 274      00000000 
 275              		.section	.rodata.props.2,"a"
 276              		.align	2
 277              		.set	.LANCHOR0,. + 0
 280              	props.2:
 281 0000 2100     		.short	33
 282 0002 0100     		.short	1
 283 0004 0000     		.short	0
 284              		.text
 285              	.Letext0:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 15


 286              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 287              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 288              		.file 6 "lvgl/examples/scroll/../../src/misc/lv_anim.h"
 289              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 290              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 291              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 292              		.file 10 "lvgl/examples/scroll/../../src/core/lv_obj.h"
 293              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 294              		.file 12 "lvgl/examples/scroll/../../src/core/lv_group.h"
 295              		.file 13 "lvgl/examples/scroll/../../src/core/lv_obj_scroll.h"
 296              		.file 14 "lvgl/examples/scroll/../../src/core/lv_obj_style.h"
 297              		.file 15 "lvgl/examples/scroll/../../src/core/lv_obj_class.h"
 298              		.file 16 "lvgl/examples/scroll/../../src/core/lv_event.h"
 299              		.file 17 "lvgl/examples/scroll/../../src/hal/lv_hal_disp.h"
 300              		.file 18 "lvgl/examples/scroll/../../src/widgets/lv_label.h"
 301              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style_gen.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccy961cI.s 			page 16


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_scroll_4.c
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:19     .rodata.lv_example_scroll_4.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:39     .text.lv_example_scroll_4:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:45     .text.lv_example_scroll_4:00000000 lv_example_scroll_4
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:243    .text.lv_example_scroll_4:00000100 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:255    .bss.style.1:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:259    .bss.style.1:00000000 style.1
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:262    .bss.style_scrolled.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:266    .bss.style_scrolled.0:00000000 style_scrolled.0
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:269    .bss.trans.3:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:273    .bss.trans.3:00000000 trans.3
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:276    .rodata.props.2:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccy961cI.s:280    .rodata.props.2:00000000 props.2

UNDEFINED SYMBOLS
lv_disp_get_default
lv_disp_get_scr_act
lv_obj_create
lv_obj_set_size
lv_obj_align
lv_label_create
lv_label_set_text
lv_obj_remove_style
lv_style_transition_dsc_init
lv_style_init
lv_style_set_width
lv_style_set_pad_right
lv_style_set_pad_top
lv_style_set_radius
lv_style_set_bg_opa
lv_palette_main
lv_style_set_bg_color
lv_palette_darken
lv_style_set_border_color
lv_style_set_border_width
lv_style_set_shadow_width
lv_style_set_shadow_spread
lv_style_set_shadow_color
lv_style_set_transition
lv_obj_add_style
lv_anim_path_linear
