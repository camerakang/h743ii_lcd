ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_spinner.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.lv_spinner_constructor,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	lv_spinner_constructor:
  25              	.LVL0:
  26              	.LFB205:
  27              		.file 1 "lvgl/src/extra/widgets/spinner/lv_spinner.c"
   1:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**
   2:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  * @file lv_spinner.c
   3:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *
   4:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  */
   5:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
   6:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /*********************
   7:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *      INCLUDES
   8:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *********************/
   9:lvgl/src/extra/widgets/spinner/lv_spinner.c **** #include "lv_spinner.h"
  10:lvgl/src/extra/widgets/spinner/lv_spinner.c **** #if LV_USE_SPINNER
  11:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  12:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /*********************
  13:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *      DEFINES
  14:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *********************/
  15:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  16:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  17:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *      TYPEDEFS
  18:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  19:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  20:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  21:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *  STATIC PROTOTYPES
  22:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  23:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void lv_spinner_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj);
  24:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void arc_anim_start_angle(void * obj, int32_t v);
  25:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void arc_anim_end_angle(void * obj, int32_t v);
  26:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  27:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  28:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *  STATIC VARIABLES
  29:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  30:lvgl/src/extra/widgets/spinner/lv_spinner.c **** const lv_obj_class_t lv_spinner_class = {
  31:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     .base_class = &lv_arc_class,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 2


  32:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     .constructor_cb = lv_spinner_constructor
  33:lvgl/src/extra/widgets/spinner/lv_spinner.c **** };
  34:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  35:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static uint32_t time_param;
  36:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static uint32_t arc_length_param;
  37:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  38:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  39:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *      MACROS
  40:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  41:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  42:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  43:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *   GLOBAL FUNCTIONS
  44:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  45:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  46:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**
  47:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  * Create a spinner object
  48:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  * @param parent pointer to an object, it will be the parent of the new spinner
  49:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  * @return pointer to the created spinner
  50:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  */
  51:lvgl/src/extra/widgets/spinner/lv_spinner.c **** lv_obj_t * lv_spinner_create(lv_obj_t * parent, uint32_t time, uint32_t arc_length)
  52:lvgl/src/extra/widgets/spinner/lv_spinner.c **** {
  53:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     time_param = time;
  54:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     arc_length_param = arc_length;
  55:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_t * obj = lv_obj_class_create_obj(&lv_spinner_class, parent);
  57:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
  58:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     return obj;
  59:lvgl/src/extra/widgets/spinner/lv_spinner.c **** }
  60:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  61:lvgl/src/extra/widgets/spinner/lv_spinner.c **** /**********************
  62:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  *   STATIC FUNCTIONS
  63:lvgl/src/extra/widgets/spinner/lv_spinner.c ****  **********************/
  64:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  65:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void lv_spinner_constructor(const lv_obj_class_t * class_p, lv_obj_t * obj)
  66:lvgl/src/extra/widgets/spinner/lv_spinner.c **** {
  28              		.loc 1 66 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 72
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 66 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 92B0     		sub	sp, sp, #72
  40              		.cfi_def_cfa_offset 88
  41 0004 0C46     		mov	r4, r1
  67:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     LV_TRACE_OBJ_CREATE("begin");
  42              		.loc 1 67 33 is_stmt 1 view .LVU2
  68:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  69:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     LV_UNUSED(class_p);
  43              		.loc 1 69 5 view .LVU3
  70:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  71:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_clear_flag(obj, LV_OBJ_FLAG_CLICKABLE);
  44              		.loc 1 71 5 view .LVU4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 3


  45 0006 0221     		movs	r1, #2
  46              	.LVL1:
  47              		.loc 1 71 5 is_stmt 0 view .LVU5
  48 0008 2046     		mov	r0, r4
  49              	.LVL2:
  50              		.loc 1 71 5 view .LVU6
  51 000a FFF7FEFF 		bl	lv_obj_clear_flag
  52              	.LVL3:
  72:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  73:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_t a;
  53              		.loc 1 73 5 is_stmt 1 view .LVU7
  74:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_init(&a);
  54              		.loc 1 74 5 view .LVU8
  55 000e 01A8     		add	r0, sp, #4
  56 0010 FFF7FEFF 		bl	lv_anim_init
  57              	.LVL4:
  75:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_var(&a, obj);
  58              		.loc 1 75 5 view .LVU9
  59              	.LBB18:
  60              	.LBI18:
  61              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_anim.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @file lv_anim.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #ifndef LV_ANIM_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stdint.h>
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stdbool.h>
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #include <stddef.h>
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /*********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      DEFINES
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_REPEAT_INFINITE      0xFFFF
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #define LV_ANIM_PLAYTIME_INFINITE    0xFFFFFFFF
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_REPEAT_INFINITE);
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** LV_EXPORT_CONST_INT(LV_ANIM_PLAYTIME_INFINITE);
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**********************
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *      TYPEDEFS
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  **********************/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Can be used to indicate if animations are enabled or disabled in a case*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 4


  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef enum {
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     LV_ANIM_OFF,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     LV_ANIM_ON,
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** } lv_anim_enable_t;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** struct _lv_anim_t;
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** struct _lv_timer_t;
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Get the current value during an animation*/
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_path_cb_t)(const struct _lv_anim_t *);
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Generic prototype of "animator" functions.
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * First parameter is the variable to animate.
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Second parameter is the value to set.
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Compatible with `lv_xxx_set_yyy(obj, value)` functions
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * The `x` in `_xcb_t` means it's not a fully generic prototype because
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * it doesn't receive `lv_anim_t *` as its first argument*/
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_exec_xcb_t)(void *, int32_t);
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Same as `lv_anim_exec_xcb_t` but receives `lv_anim_t *` as the first parameter.
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * It's more consistent but less convenient. Might be used by binding generator functions.*/
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_custom_exec_cb_t)(struct _lv_anim_t *, int32_t);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation is ready*/
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_ready_cb_t)(struct _lv_anim_t *);
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback to call when the animation really stars (considering `delay`)*/
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_start_cb_t)(struct _lv_anim_t *);
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback used when the animation values are relative to get the current value*/
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef int32_t (*lv_anim_get_value_cb_t)(struct _lv_anim_t *);
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Callback used when the animation is deleted*/
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef void (*lv_anim_deleted_cb_t)(struct _lv_anim_t *);
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /** Describes an animation*/
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** typedef struct _lv_anim_t {
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     void * var;                          /**<Variable to animate*/
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_exec_xcb_t exec_cb;          /**< Function to execute to animate*/
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_start_cb_t start_cb;         /**< Call it when the animation is starts (considering `de
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_ready_cb_t ready_cb;         /**< Call it when the animation is ready*/
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_deleted_cb_t deleted_cb;     /**< Call it when the animation is deleted*/
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_get_value_cb_t get_value_cb; /**< Get the current value in relative mode*/
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #if LV_USE_USER_DATA
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     void * user_data; /**< Custom user data*/
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** #endif
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     lv_anim_path_cb_t path_cb;         /**< Describe the path (curve) of animations*/
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t start_value;               /**< Start value*/
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t current_value;             /**< Current value*/
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t end_value;                 /**< End value*/
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t time;                /**< Animation time in ms*/
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     int32_t act_time;            /**< Current time in animation. Set to negative to make delay.*/
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t playback_delay;     /**< Wait before play back*/
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t playback_time;      /**< Duration of playback animation*/
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint32_t repeat_delay;       /**< Wait before repeat*/
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint16_t repeat_cnt;         /**< Repeat count for the animation*/
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t early_apply  : 1;    /**< 1: Apply start value immediately even is there is `delay`*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 5


  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     /*Animation system use these - user shouldn't set*/
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t playback_now : 1; /**< Play back is in progress*/
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t run_round : 1;    /**< Indicates the animation has run in this round*/
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     uint8_t start_cb_called : 1;    /**< Indicates that the `start_cb` was already called*/
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** } lv_anim_t;
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**********************
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * GLOBAL PROTOTYPES
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  **********************/
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Init. the animation module
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** void _lv_anim_core_init(void);
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Initialize an animation variable.
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * E.g.:
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_t a;
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_init(&a);
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_set_...(&a);
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * lv_anim_start(&a);
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an `lv_anim_t` variable to initialize
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** void lv_anim_init(lv_anim_t * a);
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a variable to animate
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a     pointer to an initialized `lv_anim_t` variable
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param var   pointer to a variable to animate
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_var(lv_anim_t * a, void * var)
  62              		.loc 2 126 20 view .LVU10
  63              	.LBB19:
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->var = var;
  64              		.loc 2 128 5 view .LVU11
  65              		.loc 2 128 12 is_stmt 0 view .LVU12
  66 0014 0194     		str	r4, [sp, #4]
  67              	.LVL5:
  68              		.loc 2 128 12 view .LVU13
  69              	.LBE19:
  70              	.LBE18:
  76:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_exec_cb(&a, arc_anim_end_angle);
  71              		.loc 1 76 5 is_stmt 1 view .LVU14
  72              	.LBB20:
  73              	.LBI20:
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function to animate `var`
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute during animation
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *                  LVGL's built-in functions can be used.
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  *                  E.g. lv_obj_set_x
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 6


 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_exec_cb(lv_anim_t * a, lv_anim_exec_xcb_t exec_cb)
  74              		.loc 2 138 20 view .LVU15
  75              	.LBB21:
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->exec_cb = exec_cb;
  76              		.loc 2 140 5 view .LVU16
  77              		.loc 2 140 16 is_stmt 0 view .LVU17
  78 0016 164B     		ldr	r3, .L3
  79 0018 0293     		str	r3, [sp, #8]
  80              	.LVL6:
  81              		.loc 2 140 16 view .LVU18
  82              	.LBE21:
  83              	.LBE20:
  77:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_repeat_count(&a, LV_ANIM_REPEAT_INFINITE);
  84              		.loc 1 77 5 is_stmt 1 view .LVU19
  85              	.LBB22:
  86              	.LBI22:
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the duration of an animation
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param duration  duration of the animation in milliseconds
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_time(lv_anim_t * a, uint32_t duration)
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->time = duration;
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a delay before starting the animation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param delay     delay before the animation in milliseconds
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_delay(lv_anim_t * a, uint32_t delay)
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->act_time = -(int32_t)(delay);
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the start and end values of an animation
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param start     the start value
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param end       the end value
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_values(lv_anim_t * a, int32_t start, int32_t end)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->start_value = start;
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Similar to `lv_anim_set_exec_cb` but `lv_anim_custom_exec_cb_t` receives
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * `lv_anim_t * ` as its first parameter instead of `void *`.
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * This function might be used when LVGL is bound to other languages because
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * it's more consistent to have `lv_anim_t *` as first parameter.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 7


 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * The variable to animate can be stored in the animation's `user_data`
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param exec_cb   a function to execute.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_custom_exec_cb(lv_anim_t * a, lv_anim_custom_exec_cb_t exec_cb)
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->var     = a;
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->exec_cb = (lv_anim_exec_xcb_t)exec_cb;
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set the path (curve) of the animation.
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param path_cb a function to set the current value of the animation.
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_path_cb(lv_anim_t * a, lv_anim_path_cb_t path_cb)
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->path_cb = path_cb;
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation really starts (considering `delay`)
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param start_cb  a function call when the animation starts
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_start_cb(lv_anim_t * a, lv_anim_start_cb_t start_cb)
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->start_cb = start_cb;
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function to use the current value of the variable and make start and end value
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * relative to the returned current value.
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a             pointer to an initialized `lv_anim_t` variable
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param get_value_cb  a function call when the animation starts
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_get_value_cb(lv_anim_t * a, lv_anim_get_value_cb_t get_value_cb)
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->get_value_cb = get_value_cb;
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation is ready
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param ready_cb  a function call when the animation is ready
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_ready_cb(lv_anim_t * a, lv_anim_ready_cb_t ready_cb)
 228:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->ready_cb = ready_cb;
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Set a function call when the animation is deleted.
 234:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param deleted_cb  a function call when the animation is deleted
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_deleted_cb(lv_anim_t * a, lv_anim_deleted_cb_t deleted_cb)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 8


 238:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 239:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->deleted_cb = deleted_cb;
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param time      the duration of the playback animation in milliseconds. 0: disable playback
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_time(lv_anim_t * a, uint32_t time)
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->playback_time = time;
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation to play back to when the forward direction is ready
 254:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param delay     delay in milliseconds before starting the playback animation.
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_playback_delay(lv_anim_t * a, uint32_t delay)
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->playback_delay = delay;
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** 
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** /**
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * Make the animation repeat itself.
 264:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param a         pointer to an initialized `lv_anim_t` variable
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  * @param cnt       repeat count or `LV_ANIM_REPEAT_INFINITE` for infinite repetition. 0: to disabl
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****  */
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** static inline void lv_anim_set_repeat_count(lv_anim_t * a, uint16_t cnt)
  87              		.loc 2 267 20 view .LVU20
  88              	.LBB23:
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->repeat_cnt = cnt;
  89              		.loc 2 269 5 view .LVU21
  90              		.loc 2 269 19 is_stmt 0 view .LVU22
  91 001a 4FF6FF73 		movw	r3, #65535
  92 001e ADF84430 		strh	r3, [sp, #68]	@ movhi
  93              	.LVL7:
  94              		.loc 2 269 19 view .LVU23
  95              	.LBE23:
  96              	.LBE22:
  78:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_time(&a, time_param);
  97              		.loc 1 78 5 is_stmt 1 view .LVU24
  98 0022 144B     		ldr	r3, .L3+4
  99 0024 1B68     		ldr	r3, [r3]
 100              	.LVL8:
 101              	.LBB24:
 102              	.LBI24:
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 103              		.loc 2 148 20 view .LVU25
 104              	.LBB25:
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 105              		.loc 2 150 5 view .LVU26
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 106              		.loc 2 150 13 is_stmt 0 view .LVU27
 107 0026 0C93     		str	r3, [sp, #48]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 9


 108              	.LVL9:
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 109              		.loc 2 150 13 view .LVU28
 110              	.LBE25:
 111              	.LBE24:
  79:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_values(&a, arc_length_param, 360 + arc_length_param);
 112              		.loc 1 79 5 is_stmt 1 view .LVU29
 113 0028 134B     		ldr	r3, .L3+8
 114 002a 1B68     		ldr	r3, [r3]
 115              		.loc 1 79 50 is_stmt 0 view .LVU30
 116 002c 03F5B472 		add	r2, r3, #360
 117              	.LVL10:
 118              	.LBB26:
 119              	.LBI26:
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 120              		.loc 2 169 20 is_stmt 1 view .LVU31
 121              	.LBB27:
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 122              		.loc 2 171 5 view .LVU32
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 123              		.loc 2 171 20 is_stmt 0 view .LVU33
 124 0030 0993     		str	r3, [sp, #36]
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 125              		.loc 2 172 5 is_stmt 1 view .LVU34
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 126              		.loc 2 172 22 is_stmt 0 view .LVU35
 127 0032 0A93     		str	r3, [sp, #40]
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 128              		.loc 2 173 5 is_stmt 1 view .LVU36
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 129              		.loc 2 173 18 is_stmt 0 view .LVU37
 130 0034 0B92     		str	r2, [sp, #44]
 131              	.LVL11:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 132              		.loc 2 173 18 view .LVU38
 133              	.LBE27:
 134              	.LBE26:
  80:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_start(&a);
 135              		.loc 1 80 5 is_stmt 1 view .LVU39
 136 0036 01A8     		add	r0, sp, #4
 137 0038 FFF7FEFF 		bl	lv_anim_start
 138              	.LVL12:
  81:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  82:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_path_cb(&a, lv_anim_path_ease_in_out);
 139              		.loc 1 82 5 view .LVU40
 140              	.LBB28:
 141              	.LBI28:
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 142              		.loc 2 196 20 view .LVU41
 143              	.LBB29:
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 144              		.loc 2 198 5 view .LVU42
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 145              		.loc 2 198 16 is_stmt 0 view .LVU43
 146 003c 0F4B     		ldr	r3, .L3+12
 147 003e 0893     		str	r3, [sp, #32]
 148              	.LVL13:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 10


 198:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 149              		.loc 2 198 16 view .LVU44
 150              	.LBE29:
 151              	.LBE28:
  83:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_values(&a, 0, 360);
 152              		.loc 1 83 5 is_stmt 1 view .LVU45
 153              	.LBB30:
 154              	.LBI30:
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 155              		.loc 2 169 20 view .LVU46
 156              	.LBB31:
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 157              		.loc 2 171 5 view .LVU47
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->current_value = start;
 158              		.loc 2 171 20 is_stmt 0 view .LVU48
 159 0040 0025     		movs	r5, #0
 160 0042 0995     		str	r5, [sp, #36]
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 161              		.loc 2 172 5 is_stmt 1 view .LVU49
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h ****     a->end_value = end;
 162              		.loc 2 172 22 is_stmt 0 view .LVU50
 163 0044 0A95     		str	r5, [sp, #40]
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 164              		.loc 2 173 5 is_stmt 1 view .LVU51
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 165              		.loc 2 173 18 is_stmt 0 view .LVU52
 166 0046 4FF4B476 		mov	r6, #360
 167 004a 0B96     		str	r6, [sp, #44]
 168              	.LVL14:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 169              		.loc 2 173 18 view .LVU53
 170              	.LBE31:
 171              	.LBE30:
  84:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_set_exec_cb(&a, arc_anim_start_angle);
 172              		.loc 1 84 5 is_stmt 1 view .LVU54
 173              	.LBB32:
 174              	.LBI32:
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** {
 175              		.loc 2 138 20 view .LVU55
 176              	.LBB33:
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 177              		.loc 2 140 5 view .LVU56
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 178              		.loc 2 140 16 is_stmt 0 view .LVU57
 179 004c 0C4B     		ldr	r3, .L3+16
 180 004e 0293     		str	r3, [sp, #8]
 181              	.LVL15:
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/misc\lv_anim.h **** }
 182              		.loc 2 140 16 view .LVU58
 183              	.LBE33:
 184              	.LBE32:
  85:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_anim_start(&a);
 185              		.loc 1 85 5 is_stmt 1 view .LVU59
 186 0050 01A8     		add	r0, sp, #4
 187 0052 FFF7FEFF 		bl	lv_anim_start
 188              	.LVL16:
  86:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 11


  87:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_arc_set_bg_angles(obj, 0, 360);
 189              		.loc 1 87 5 view .LVU60
 190 0056 3246     		mov	r2, r6
 191 0058 2946     		mov	r1, r5
 192 005a 2046     		mov	r0, r4
 193 005c FFF7FEFF 		bl	lv_arc_set_bg_angles
 194              	.LVL17:
  88:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_arc_set_rotation(obj, 270);
 195              		.loc 1 88 5 view .LVU61
 196 0060 4FF48771 		mov	r1, #270
 197 0064 2046     		mov	r0, r4
 198 0066 FFF7FEFF 		bl	lv_arc_set_rotation
 199              	.LVL18:
  89:lvgl/src/extra/widgets/spinner/lv_spinner.c **** }
 200              		.loc 1 89 1 is_stmt 0 view .LVU62
 201 006a 12B0     		add	sp, sp, #72
 202              		.cfi_def_cfa_offset 16
 203              		@ sp needed
 204 006c 70BD     		pop	{r4, r5, r6, pc}
 205              	.LVL19:
 206              	.L4:
 207              		.loc 1 89 1 view .LVU63
 208 006e 00BF     		.align	2
 209              	.L3:
 210 0070 00000000 		.word	arc_anim_end_angle
 211 0074 00000000 		.word	.LANCHOR0
 212 0078 00000000 		.word	.LANCHOR1
 213 007c 00000000 		.word	lv_anim_path_ease_in_out
 214 0080 00000000 		.word	arc_anim_start_angle
 215              		.cfi_endproc
 216              	.LFE205:
 218              		.section	.text.arc_anim_start_angle,"ax",%progbits
 219              		.align	1
 220              		.syntax unified
 221              		.thumb
 222              		.thumb_func
 224              	arc_anim_start_angle:
 225              	.LVL20:
 226              	.LFB206:
  90:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  91:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void arc_anim_start_angle(void * obj, int32_t v)
  92:lvgl/src/extra/widgets/spinner/lv_spinner.c **** {
 227              		.loc 1 92 1 is_stmt 1 view -0
 228              		.cfi_startproc
 229              		@ args = 0, pretend = 0, frame = 0
 230              		@ frame_needed = 0, uses_anonymous_args = 0
 231              		.loc 1 92 1 is_stmt 0 view .LVU65
 232 0000 08B5     		push	{r3, lr}
 233              		.cfi_def_cfa_offset 8
 234              		.cfi_offset 3, -8
 235              		.cfi_offset 14, -4
  93:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_arc_set_start_angle(obj, (uint16_t) v);
 236              		.loc 1 93 5 is_stmt 1 view .LVU66
 237 0002 89B2     		uxth	r1, r1
 238              	.LVL21:
 239              		.loc 1 93 5 is_stmt 0 view .LVU67
 240 0004 FFF7FEFF 		bl	lv_arc_set_start_angle
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 12


 241              	.LVL22:
  94:lvgl/src/extra/widgets/spinner/lv_spinner.c **** }
 242              		.loc 1 94 1 view .LVU68
 243 0008 08BD     		pop	{r3, pc}
 244              		.cfi_endproc
 245              	.LFE206:
 247              		.section	.text.arc_anim_end_angle,"ax",%progbits
 248              		.align	1
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	arc_anim_end_angle:
 254              	.LVL23:
 255              	.LFB207:
  95:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
  96:lvgl/src/extra/widgets/spinner/lv_spinner.c **** static void arc_anim_end_angle(void * obj, int32_t v)
  97:lvgl/src/extra/widgets/spinner/lv_spinner.c **** {
 256              		.loc 1 97 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 97 1 is_stmt 0 view .LVU70
 261 0000 08B5     		push	{r3, lr}
 262              		.cfi_def_cfa_offset 8
 263              		.cfi_offset 3, -8
 264              		.cfi_offset 14, -4
  98:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_arc_set_end_angle(obj, (uint16_t) v);
 265              		.loc 1 98 5 is_stmt 1 view .LVU71
 266 0002 89B2     		uxth	r1, r1
 267              	.LVL24:
 268              		.loc 1 98 5 is_stmt 0 view .LVU72
 269 0004 FFF7FEFF 		bl	lv_arc_set_end_angle
 270              	.LVL25:
  99:lvgl/src/extra/widgets/spinner/lv_spinner.c **** }
 271              		.loc 1 99 1 view .LVU73
 272 0008 08BD     		pop	{r3, pc}
 273              		.cfi_endproc
 274              	.LFE207:
 276              		.section	.text.lv_spinner_create,"ax",%progbits
 277              		.align	1
 278              		.global	lv_spinner_create
 279              		.syntax unified
 280              		.thumb
 281              		.thumb_func
 283              	lv_spinner_create:
 284              	.LVL26:
 285              	.LFB204:
  52:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     time_param = time;
 286              		.loc 1 52 1 is_stmt 1 view -0
 287              		.cfi_startproc
 288              		@ args = 0, pretend = 0, frame = 0
 289              		@ frame_needed = 0, uses_anonymous_args = 0
  52:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     time_param = time;
 290              		.loc 1 52 1 is_stmt 0 view .LVU75
 291 0000 10B5     		push	{r4, lr}
 292              		.cfi_def_cfa_offset 8
 293              		.cfi_offset 4, -8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 13


 294              		.cfi_offset 14, -4
  53:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     arc_length_param = arc_length;
 295              		.loc 1 53 5 is_stmt 1 view .LVU76
  53:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     arc_length_param = arc_length;
 296              		.loc 1 53 16 is_stmt 0 view .LVU77
 297 0002 064B     		ldr	r3, .L11
 298 0004 1960     		str	r1, [r3]
  54:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
 299              		.loc 1 54 5 is_stmt 1 view .LVU78
  54:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
 300              		.loc 1 54 22 is_stmt 0 view .LVU79
 301 0006 064B     		ldr	r3, .L11+4
 302 0008 1A60     		str	r2, [r3]
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
 303              		.loc 1 56 5 is_stmt 1 view .LVU80
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
 304              		.loc 1 56 22 is_stmt 0 view .LVU81
 305 000a 0146     		mov	r1, r0
 306              	.LVL27:
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
 307              		.loc 1 56 22 view .LVU82
 308 000c 0548     		ldr	r0, .L11+8
 309              	.LVL28:
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
 310              		.loc 1 56 22 view .LVU83
 311 000e FFF7FEFF 		bl	lv_obj_class_create_obj
 312              	.LVL29:
  56:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     lv_obj_class_init_obj(obj);
 313              		.loc 1 56 22 view .LVU84
 314 0012 0446     		mov	r4, r0
 315              	.LVL30:
  57:lvgl/src/extra/widgets/spinner/lv_spinner.c ****     return obj;
 316              		.loc 1 57 5 is_stmt 1 view .LVU85
 317 0014 FFF7FEFF 		bl	lv_obj_class_init_obj
 318              	.LVL31:
  58:lvgl/src/extra/widgets/spinner/lv_spinner.c **** }
 319              		.loc 1 58 5 view .LVU86
  59:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
 320              		.loc 1 59 1 is_stmt 0 view .LVU87
 321 0018 2046     		mov	r0, r4
 322 001a 10BD     		pop	{r4, pc}
 323              	.LVL32:
 324              	.L12:
  59:lvgl/src/extra/widgets/spinner/lv_spinner.c **** 
 325              		.loc 1 59 1 view .LVU88
 326              		.align	2
 327              	.L11:
 328 001c 00000000 		.word	.LANCHOR0
 329 0020 00000000 		.word	.LANCHOR1
 330 0024 00000000 		.word	.LANCHOR2
 331              		.cfi_endproc
 332              	.LFE204:
 334              		.global	lv_spinner_class
 335              		.section	.bss.arc_length_param,"aw",%nobits
 336              		.align	2
 337              		.set	.LANCHOR1,. + 0
 340              	arc_length_param:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 14


 341 0000 00000000 		.space	4
 342              		.section	.bss.time_param,"aw",%nobits
 343              		.align	2
 344              		.set	.LANCHOR0,. + 0
 347              	time_param:
 348 0000 00000000 		.space	4
 349              		.section	.rodata.lv_spinner_class,"a"
 350              		.align	2
 351              		.set	.LANCHOR2,. + 0
 354              	lv_spinner_class:
 355 0000 00000000 		.word	lv_arc_class
 356 0004 00000000 		.word	lv_spinner_constructor
 357 0008 00000000 		.space	20
 357      00000000 
 357      00000000 
 357      00000000 
 357      00000000 
 358              		.text
 359              	.Letext0:
 360              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 361              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 362              		.file 5 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 363              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 364              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 365              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 366              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 367              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 368              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 369              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 370              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 371              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 372              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_bar.h"
 373              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 374              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_arc.h"
 375              		.file 18 "lvgl/src/extra/widgets/spinner/lv_spinner.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 lv_spinner.c
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:19     .text.lv_spinner_constructor:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:24     .text.lv_spinner_constructor:00000000 lv_spinner_constructor
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:210    .text.lv_spinner_constructor:00000070 $d
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:253    .text.arc_anim_end_angle:00000000 arc_anim_end_angle
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:224    .text.arc_anim_start_angle:00000000 arc_anim_start_angle
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:219    .text.arc_anim_start_angle:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:248    .text.arc_anim_end_angle:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:277    .text.lv_spinner_create:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:283    .text.lv_spinner_create:00000000 lv_spinner_create
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:328    .text.lv_spinner_create:0000001c $d
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:354    .rodata.lv_spinner_class:00000000 lv_spinner_class
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:336    .bss.arc_length_param:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:340    .bss.arc_length_param:00000000 arc_length_param
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:343    .bss.time_param:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:347    .bss.time_param:00000000 time_param
C:\Users\OSD\AppData\Local\Temp\ccC4OfiC.s:350    .rodata.lv_spinner_class:00000000 $d

UNDEFINED SYMBOLS
lv_obj_clear_flag
lv_anim_init
lv_anim_start
lv_arc_set_bg_angles
lv_arc_set_rotation
lv_anim_path_ease_in_out
lv_arc_set_start_angle
lv_arc_set_end_angle
lv_obj_class_create_obj
lv_obj_class_init_obj
lv_arc_class
