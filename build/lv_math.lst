ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_math.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.lv_trigo_sin,"ax",%progbits
  19              		.align	1
  20              		.global	lv_trigo_sin
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_trigo_sin:
  26              	.LVL0:
  27              	.LFB1:
  28              		.file 1 "lvgl/src/misc/lv_math.c"
   1:lvgl/src/misc/lv_math.c **** /**
   2:lvgl/src/misc/lv_math.c ****  * @file lv_math.c
   3:lvgl/src/misc/lv_math.c ****  *
   4:lvgl/src/misc/lv_math.c ****  */
   5:lvgl/src/misc/lv_math.c **** 
   6:lvgl/src/misc/lv_math.c **** /*********************
   7:lvgl/src/misc/lv_math.c ****  *      INCLUDES
   8:lvgl/src/misc/lv_math.c ****  *********************/
   9:lvgl/src/misc/lv_math.c **** #include "lv_math.h"
  10:lvgl/src/misc/lv_math.c **** 
  11:lvgl/src/misc/lv_math.c **** /*********************
  12:lvgl/src/misc/lv_math.c ****  *      DEFINES
  13:lvgl/src/misc/lv_math.c ****  *********************/
  14:lvgl/src/misc/lv_math.c **** 
  15:lvgl/src/misc/lv_math.c **** /**********************
  16:lvgl/src/misc/lv_math.c ****  *      TYPEDEFS
  17:lvgl/src/misc/lv_math.c ****  **********************/
  18:lvgl/src/misc/lv_math.c **** 
  19:lvgl/src/misc/lv_math.c **** /**********************
  20:lvgl/src/misc/lv_math.c ****  *  STATIC PROTOTYPES
  21:lvgl/src/misc/lv_math.c ****  **********************/
  22:lvgl/src/misc/lv_math.c **** 
  23:lvgl/src/misc/lv_math.c **** /**********************
  24:lvgl/src/misc/lv_math.c ****  *  STATIC VARIABLES
  25:lvgl/src/misc/lv_math.c ****  **********************/
  26:lvgl/src/misc/lv_math.c **** static const int16_t sin0_90_table[] = {
  27:lvgl/src/misc/lv_math.c ****     0,     572,   1144,  1715,  2286,  2856,  3425,  3993,  4560,  5126,  5690,  6252,  6813,  7371
  28:lvgl/src/misc/lv_math.c ****     9032,  9580,  10126, 10668, 11207, 11743, 12275, 12803, 13328, 13848, 14364, 14876, 15383, 1588
  29:lvgl/src/misc/lv_math.c ****     17364, 17846, 18323, 18794, 19260, 19720, 20173, 20621, 21062, 21497, 21925, 22347, 22762, 2317
  30:lvgl/src/misc/lv_math.c ****     24351, 24730, 25101, 25465, 25821, 26169, 26509, 26841, 27165, 27481, 27788, 28087, 28377, 2865
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 2


  31:lvgl/src/misc/lv_math.c ****     29451, 29697, 29934, 30162, 30381, 30591, 30791, 30982, 31163, 31335, 31498, 31650, 31794, 3192
  32:lvgl/src/misc/lv_math.c ****     32269, 32364, 32448, 32523, 32587, 32642, 32687, 32722, 32747, 32762, 32767
  33:lvgl/src/misc/lv_math.c **** };
  34:lvgl/src/misc/lv_math.c **** 
  35:lvgl/src/misc/lv_math.c **** /**********************
  36:lvgl/src/misc/lv_math.c ****  *      MACROS
  37:lvgl/src/misc/lv_math.c ****  **********************/
  38:lvgl/src/misc/lv_math.c **** 
  39:lvgl/src/misc/lv_math.c **** /**********************
  40:lvgl/src/misc/lv_math.c ****  *   GLOBAL FUNCTIONS
  41:lvgl/src/misc/lv_math.c ****  **********************/
  42:lvgl/src/misc/lv_math.c **** 
  43:lvgl/src/misc/lv_math.c **** /**
  44:lvgl/src/misc/lv_math.c ****  * Return with sinus of an angle
  45:lvgl/src/misc/lv_math.c ****  * @param angle
  46:lvgl/src/misc/lv_math.c ****  * @return sinus of 'angle'. sin(-90) = -32767, sin(90) = 32767
  47:lvgl/src/misc/lv_math.c ****  */
  48:lvgl/src/misc/lv_math.c **** int16_t LV_ATTRIBUTE_FAST_MEM lv_trigo_sin(int16_t angle)
  49:lvgl/src/misc/lv_math.c **** {
  29              		.loc 1 49 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		@ link register save eliminated.
  50:lvgl/src/misc/lv_math.c ****     int16_t ret = 0;
  34              		.loc 1 50 5 view .LVU1
  51:lvgl/src/misc/lv_math.c ****     angle       = angle % 360;
  35              		.loc 1 51 5 view .LVU2
  36              		.loc 1 51 17 is_stmt 0 view .LVU3
  37 0000 1C4B     		ldr	r3, .L8
  38 0002 83FB0023 		smull	r2, r3, r3, r0
  39 0006 0344     		add	r3, r3, r0
  40 0008 C217     		asrs	r2, r0, #31
  41 000a C2EB2323 		rsb	r3, r2, r3, asr #8
  42 000e 4FF4B472 		mov	r2, #360
  43 0012 02FB1300 		mls	r0, r2, r3, r0
  44              	.LVL1:
  45              		.loc 1 51 17 view .LVU4
  46 0016 00B2     		sxth	r0, r0
  47              	.LVL2:
  52:lvgl/src/misc/lv_math.c **** 
  53:lvgl/src/misc/lv_math.c ****     if(angle < 0) angle = 360 + angle;
  48              		.loc 1 53 5 is_stmt 1 view .LVU5
  49              		.loc 1 53 7 is_stmt 0 view .LVU6
  50 0018 0028     		cmp	r0, #0
  51 001a 05DB     		blt	.L7
  52              	.L2:
  54:lvgl/src/misc/lv_math.c **** 
  55:lvgl/src/misc/lv_math.c ****     if(angle < 90) {
  53              		.loc 1 55 5 is_stmt 1 view .LVU7
  54              		.loc 1 55 7 is_stmt 0 view .LVU8
  55 001c 5928     		cmp	r0, #89
  56 001e 06DC     		bgt	.L3
  56:lvgl/src/misc/lv_math.c ****         ret = sin0_90_table[angle];
  57              		.loc 1 56 9 is_stmt 1 view .LVU9
  58              		.loc 1 56 13 is_stmt 0 view .LVU10
  59 0020 154B     		ldr	r3, .L8+4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 3


  60 0022 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  61              	.LVL3:
  62              		.loc 1 56 13 view .LVU11
  63 0026 7047     		bx	lr
  64              	.LVL4:
  65              	.L7:
  53:lvgl/src/misc/lv_math.c **** 
  66              		.loc 1 53 19 is_stmt 1 discriminator 1 view .LVU12
  53:lvgl/src/misc/lv_math.c **** 
  67              		.loc 1 53 31 is_stmt 0 discriminator 1 view .LVU13
  68 0028 1044     		add	r0, r0, r2
  69              	.LVL5:
  53:lvgl/src/misc/lv_math.c **** 
  70              		.loc 1 53 25 discriminator 1 view .LVU14
  71 002a 00B2     		sxth	r0, r0
  72              	.LVL6:
  53:lvgl/src/misc/lv_math.c **** 
  73              		.loc 1 53 25 discriminator 1 view .LVU15
  74 002c F6E7     		b	.L2
  75              	.L3:
  57:lvgl/src/misc/lv_math.c ****     }
  58:lvgl/src/misc/lv_math.c ****     else if(angle >= 90 && angle < 180) {
  76              		.loc 1 58 10 is_stmt 1 view .LVU16
  77              		.loc 1 58 25 is_stmt 0 view .LVU17
  78 002e 80B2     		uxth	r0, r0
  79              		.loc 1 58 25 view .LVU18
  80 0030 A0F15A03 		sub	r3, r0, #90
  81 0034 9BB2     		uxth	r3, r3
  82              		.loc 1 58 12 view .LVU19
  83 0036 592B     		cmp	r3, #89
  84 0038 06D8     		bhi	.L5
  59:lvgl/src/misc/lv_math.c ****         angle = 180 - angle;
  85              		.loc 1 59 9 is_stmt 1 view .LVU20
  86              		.loc 1 59 21 is_stmt 0 view .LVU21
  87 003a C0F1B400 		rsb	r0, r0, #180
  88              	.LVL7:
  89              		.loc 1 59 15 view .LVU22
  90 003e 00B2     		sxth	r0, r0
  91              	.LVL8:
  60:lvgl/src/misc/lv_math.c ****         ret   = sin0_90_table[angle];
  92              		.loc 1 60 9 is_stmt 1 view .LVU23
  93              		.loc 1 60 15 is_stmt 0 view .LVU24
  94 0040 0D4B     		ldr	r3, .L8+4
  95 0042 33F91000 		ldrsh	r0, [r3, r0, lsl #1]
  96              	.LVL9:
  97              		.loc 1 60 15 view .LVU25
  98 0046 7047     		bx	lr
  99              	.LVL10:
 100              	.L5:
  61:lvgl/src/misc/lv_math.c ****     }
  62:lvgl/src/misc/lv_math.c ****     else if(angle >= 180 && angle < 270) {
 101              		.loc 1 62 10 is_stmt 1 view .LVU26
 102              		.loc 1 62 26 is_stmt 0 view .LVU27
 103 0048 A0F1B403 		sub	r3, r0, #180
 104 004c 9BB2     		uxth	r3, r3
 105              		.loc 1 62 12 view .LVU28
 106 004e 592B     		cmp	r3, #89
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 4


 107 0050 06D8     		bhi	.L6
  63:lvgl/src/misc/lv_math.c ****         angle = angle - 180;
 108              		.loc 1 63 9 is_stmt 1 view .LVU29
 109              		.loc 1 63 15 is_stmt 0 view .LVU30
 110 0052 1BB2     		sxth	r3, r3
 111              	.LVL11:
  64:lvgl/src/misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 112              		.loc 1 64 9 is_stmt 1 view .LVU31
 113              		.loc 1 64 31 is_stmt 0 view .LVU32
 114 0054 084A     		ldr	r2, .L8+4
 115 0056 32F81300 		ldrh	r0, [r2, r3, lsl #1]
 116              		.loc 1 64 15 view .LVU33
 117 005a 4042     		rsbs	r0, r0, #0
 118 005c 00B2     		sxth	r0, r0
 119              	.LVL12:
 120              		.loc 1 64 15 view .LVU34
 121 005e 7047     		bx	lr
 122              	.LVL13:
 123              	.L6:
  65:lvgl/src/misc/lv_math.c ****     }
  66:lvgl/src/misc/lv_math.c ****     else {   /*angle >=270*/
  67:lvgl/src/misc/lv_math.c ****         angle = 360 - angle;
 124              		.loc 1 67 9 is_stmt 1 view .LVU35
 125              		.loc 1 67 21 is_stmt 0 view .LVU36
 126 0060 C0F5B470 		rsb	r0, r0, #360
 127              	.LVL14:
 128              		.loc 1 67 15 view .LVU37
 129 0064 00B2     		sxth	r0, r0
 130              	.LVL15:
  68:lvgl/src/misc/lv_math.c ****         ret   = -sin0_90_table[angle];
 131              		.loc 1 68 9 is_stmt 1 view .LVU38
 132              		.loc 1 68 31 is_stmt 0 view .LVU39
 133 0066 044B     		ldr	r3, .L8+4
 134 0068 33F81000 		ldrh	r0, [r3, r0, lsl #1]
 135              	.LVL16:
 136              		.loc 1 68 15 view .LVU40
 137 006c 4042     		rsbs	r0, r0, #0
 138 006e 00B2     		sxth	r0, r0
 139              	.LVL17:
  69:lvgl/src/misc/lv_math.c ****     }
  70:lvgl/src/misc/lv_math.c **** 
  71:lvgl/src/misc/lv_math.c ****     return ret;
 140              		.loc 1 71 5 is_stmt 1 view .LVU41
  72:lvgl/src/misc/lv_math.c **** }
 141              		.loc 1 72 1 is_stmt 0 view .LVU42
 142 0070 7047     		bx	lr
 143              	.L9:
 144 0072 00BF     		.align	2
 145              	.L8:
 146 0074 B7600BB6 		.word	-1240768329
 147 0078 00000000 		.word	.LANCHOR0
 148              		.cfi_endproc
 149              	.LFE1:
 151              		.section	.text.lv_bezier3,"ax",%progbits
 152              		.align	1
 153              		.global	lv_bezier3
 154              		.syntax unified
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 5


 155              		.thumb
 156              		.thumb_func
 158              	lv_bezier3:
 159              	.LVL18:
 160              	.LFB2:
  73:lvgl/src/misc/lv_math.c **** 
  74:lvgl/src/misc/lv_math.c **** /**
  75:lvgl/src/misc/lv_math.c ****  * Calculate a value of a Cubic Bezier function.
  76:lvgl/src/misc/lv_math.c ****  * @param t time in range of [0..LV_BEZIER_VAL_MAX]
  77:lvgl/src/misc/lv_math.c ****  * @param u0 start values in range of [0..LV_BEZIER_VAL_MAX]
  78:lvgl/src/misc/lv_math.c ****  * @param u1 control value 1 values in range of [0..LV_BEZIER_VAL_MAX]
  79:lvgl/src/misc/lv_math.c ****  * @param u2 control value 2 in range of [0..LV_BEZIER_VAL_MAX]
  80:lvgl/src/misc/lv_math.c ****  * @param u3 end values in range of [0..LV_BEZIER_VAL_MAX]
  81:lvgl/src/misc/lv_math.c ****  * @return the value calculated from the given parameters in range of [0..LV_BEZIER_VAL_MAX]
  82:lvgl/src/misc/lv_math.c ****  */
  83:lvgl/src/misc/lv_math.c **** uint32_t lv_bezier3(uint32_t t, uint32_t u0, uint32_t u1, uint32_t u2, uint32_t u3)
  84:lvgl/src/misc/lv_math.c **** {
 161              		.loc 1 84 1 is_stmt 1 view -0
 162              		.cfi_startproc
 163              		@ args = 4, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		.loc 1 84 1 is_stmt 0 view .LVU44
 166 0000 70B5     		push	{r4, r5, r6, lr}
 167              		.cfi_def_cfa_offset 16
 168              		.cfi_offset 4, -16
 169              		.cfi_offset 5, -12
 170              		.cfi_offset 6, -8
 171              		.cfi_offset 14, -4
  85:lvgl/src/misc/lv_math.c ****     uint32_t t_rem  = 1024 - t;
 172              		.loc 1 85 5 is_stmt 1 view .LVU45
 173              		.loc 1 85 14 is_stmt 0 view .LVU46
 174 0002 C0F5806C 		rsb	ip, r0, #1024
 175              	.LVL19:
  86:lvgl/src/misc/lv_math.c ****     uint32_t t_rem2 = (t_rem * t_rem) >> 10;
 176              		.loc 1 86 5 is_stmt 1 view .LVU47
 177              		.loc 1 86 30 is_stmt 0 view .LVU48
 178 0006 0CFB0CF4 		mul	r4, ip, ip
 179              		.loc 1 86 14 view .LVU49
 180 000a A40A     		lsrs	r4, r4, #10
 181              	.LVL20:
  87:lvgl/src/misc/lv_math.c ****     uint32_t t_rem3 = (t_rem2 * t_rem) >> 10;
 182              		.loc 1 87 5 is_stmt 1 view .LVU50
 183              		.loc 1 87 31 is_stmt 0 view .LVU51
 184 000c 04FB0CF6 		mul	r6, r4, ip
 185              		.loc 1 87 14 view .LVU52
 186 0010 B60A     		lsrs	r6, r6, #10
 187              	.LVL21:
  88:lvgl/src/misc/lv_math.c ****     uint32_t t2     = (t * t) >> 10;
 188              		.loc 1 88 5 is_stmt 1 view .LVU53
 189              		.loc 1 88 26 is_stmt 0 view .LVU54
 190 0012 00FB00FE 		mul	lr, r0, r0
 191              		.loc 1 88 14 view .LVU55
 192 0016 4FEA9E2E 		lsr	lr, lr, #10
 193              	.LVL22:
  89:lvgl/src/misc/lv_math.c ****     uint32_t t3     = (t2 * t) >> 10;
 194              		.loc 1 89 5 is_stmt 1 view .LVU56
 195              		.loc 1 89 27 is_stmt 0 view .LVU57
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 6


 196 001a 0EFB00F5 		mul	r5, lr, r0
 197              		.loc 1 89 14 view .LVU58
 198 001e AD0A     		lsrs	r5, r5, #10
 199              	.LVL23:
  90:lvgl/src/misc/lv_math.c **** 
  91:lvgl/src/misc/lv_math.c ****     uint32_t v1 = (t_rem3 * u0) >> 10;
 200              		.loc 1 91 5 is_stmt 1 view .LVU59
 201              		.loc 1 91 27 is_stmt 0 view .LVU60
 202 0020 01FB06F6 		mul	r6, r1, r6
 203              	.LVL24:
  92:lvgl/src/misc/lv_math.c ****     uint32_t v2 = (3 * t_rem2 * t * u1) >> 20;
 204              		.loc 1 92 5 is_stmt 1 view .LVU61
 205              		.loc 1 92 31 is_stmt 0 view .LVU62
 206 0024 04FB00F0 		mul	r0, r4, r0
 207              	.LVL25:
 208              		.loc 1 92 35 view .LVU63
 209 0028 00FB02F2 		mul	r2, r0, r2
 210              	.LVL26:
 211              		.loc 1 92 35 view .LVU64
 212 002c 02EB4202 		add	r2, r2, r2, lsl #1
 213              		.loc 1 92 14 view .LVU65
 214 0030 120D     		lsrs	r2, r2, #20
 215              	.LVL27:
  93:lvgl/src/misc/lv_math.c ****     uint32_t v3 = (3 * t_rem * t2 * u2) >> 20;
 216              		.loc 1 93 5 is_stmt 1 view .LVU66
 217              		.loc 1 93 30 is_stmt 0 view .LVU67
 218 0032 0EFB0CFC 		mul	ip, lr, ip
 219              	.LVL28:
 220              		.loc 1 93 35 view .LVU68
 221 0036 03FB0CF3 		mul	r3, r3, ip
 222              	.LVL29:
 223              		.loc 1 93 35 view .LVU69
 224 003a 03EB4303 		add	r3, r3, r3, lsl #1
 225              	.LVL30:
  94:lvgl/src/misc/lv_math.c ****     uint32_t v4 = (t3 * u3) >> 10;
 226              		.loc 1 94 5 is_stmt 1 view .LVU70
 227              		.loc 1 94 23 is_stmt 0 view .LVU71
 228 003e 0498     		ldr	r0, [sp, #16]
 229 0040 05FB00F0 		mul	r0, r5, r0
 230              	.LVL31:
  95:lvgl/src/misc/lv_math.c **** 
  96:lvgl/src/misc/lv_math.c ****     return v1 + v2 + v3 + v4;
 231              		.loc 1 96 5 is_stmt 1 view .LVU72
 232              		.loc 1 96 15 is_stmt 0 view .LVU73
 233 0044 02EB9622 		add	r2, r2, r6, lsr #10
 234              	.LVL32:
 235              		.loc 1 96 20 view .LVU74
 236 0048 02EB1352 		add	r2, r2, r3, lsr #20
  97:lvgl/src/misc/lv_math.c **** }
 237              		.loc 1 97 1 view .LVU75
 238 004c 02EB9020 		add	r0, r2, r0, lsr #10
 239              	.LVL33:
 240              		.loc 1 97 1 view .LVU76
 241 0050 70BD     		pop	{r4, r5, r6, pc}
 242              		.loc 1 97 1 view .LVU77
 243              		.cfi_endproc
 244              	.LFE2:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 7


 246              		.section	.text.lv_sqrt,"ax",%progbits
 247              		.align	1
 248              		.global	lv_sqrt
 249              		.syntax unified
 250              		.thumb
 251              		.thumb_func
 253              	lv_sqrt:
 254              	.LVL34:
 255              	.LFB3:
  98:lvgl/src/misc/lv_math.c **** 
  99:lvgl/src/misc/lv_math.c **** /**
 100:lvgl/src/misc/lv_math.c ****  * Get the square root of a number
 101:lvgl/src/misc/lv_math.c ****  * @param x integer which square root should be calculated
 102:lvgl/src/misc/lv_math.c ****  * @param q store the result here. q->i: integer part, q->f: fractional part in 1/256 unit
 103:lvgl/src/misc/lv_math.c ****  * @param mask optional to skip some iterations if the magnitude of the root is known.
 104:lvgl/src/misc/lv_math.c ****  * Set to 0x8000 by default.
 105:lvgl/src/misc/lv_math.c ****  * If root < 16: mask = 0x80
 106:lvgl/src/misc/lv_math.c ****  * If root < 256: mask = 0x800
 107:lvgl/src/misc/lv_math.c ****  * Else: mask = 0x8000
 108:lvgl/src/misc/lv_math.c ****  */
 109:lvgl/src/misc/lv_math.c **** void LV_ATTRIBUTE_FAST_MEM lv_sqrt(uint32_t x, lv_sqrt_res_t * q, uint32_t mask)
 110:lvgl/src/misc/lv_math.c **** {
 256              		.loc 1 110 1 is_stmt 1 view -0
 257              		.cfi_startproc
 258              		@ args = 0, pretend = 0, frame = 0
 259              		@ frame_needed = 0, uses_anonymous_args = 0
 260              		.loc 1 110 1 is_stmt 0 view .LVU79
 261 0000 00B5     		push	{lr}
 262              		.cfi_def_cfa_offset 4
 263              		.cfi_offset 14, -4
 111:lvgl/src/misc/lv_math.c ****     x = x << 8; /*To get 4 bit precision. (sqrt(256) = 16 = 4 bit)*/
 264              		.loc 1 111 5 is_stmt 1 view .LVU80
 265              		.loc 1 111 7 is_stmt 0 view .LVU81
 266 0002 0002     		lsls	r0, r0, #8
 267              	.LVL35:
 112:lvgl/src/misc/lv_math.c **** 
 113:lvgl/src/misc/lv_math.c ****     uint32_t root = 0;
 268              		.loc 1 113 5 is_stmt 1 view .LVU82
 269              		.loc 1 113 14 is_stmt 0 view .LVU83
 270 0004 4FF0000C 		mov	ip, #0
 271 0008 01E0     		b	.L14
 272              	.LVL36:
 273              	.L13:
 114:lvgl/src/misc/lv_math.c ****     uint32_t trial;
 115:lvgl/src/misc/lv_math.c ****     // http://ww1.microchip.com/...en/AppNotes/91040a.pdf
 116:lvgl/src/misc/lv_math.c ****     do {
 117:lvgl/src/misc/lv_math.c ****         trial = root + mask;
 118:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 119:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 274              		.loc 1 119 9 is_stmt 1 view .LVU84
 120:lvgl/src/misc/lv_math.c ****     } while(mask);
 275              		.loc 1 120 12 view .LVU85
 276              		.loc 1 120 5 is_stmt 0 view .LVU86
 277 000a 5208     		lsrs	r2, r2, #1
 278              	.LVL37:
 279              		.loc 1 120 5 view .LVU87
 280 000c 07D0     		beq	.L17
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 8


 281              	.LVL38:
 282              	.L14:
 114:lvgl/src/misc/lv_math.c ****     uint32_t trial;
 283              		.loc 1 114 5 is_stmt 1 view .LVU88
 116:lvgl/src/misc/lv_math.c ****         trial = root + mask;
 284              		.loc 1 116 5 view .LVU89
 117:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 285              		.loc 1 117 9 view .LVU90
 117:lvgl/src/misc/lv_math.c ****         if(trial * trial <= x) root = trial;
 286              		.loc 1 117 15 is_stmt 0 view .LVU91
 287 000e 02EB0C03 		add	r3, r2, ip
 288              	.LVL39:
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 289              		.loc 1 118 9 is_stmt 1 view .LVU92
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 290              		.loc 1 118 18 is_stmt 0 view .LVU93
 291 0012 03FB03FE 		mul	lr, r3, r3
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 292              		.loc 1 118 11 view .LVU94
 293 0016 8645     		cmp	lr, r0
 294 0018 F7D8     		bhi	.L13
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 295              		.loc 1 118 37 view .LVU95
 296 001a 9C46     		mov	ip, r3
 297              	.LVL40:
 118:lvgl/src/misc/lv_math.c ****         mask = mask >> 1;
 298              		.loc 1 118 37 view .LVU96
 299 001c F5E7     		b	.L13
 300              	.LVL41:
 301              	.L17:
 121:lvgl/src/misc/lv_math.c **** 
 122:lvgl/src/misc/lv_math.c ****     q->i = root >> 4;
 302              		.loc 1 122 5 is_stmt 1 view .LVU97
 303              		.loc 1 122 17 is_stmt 0 view .LVU98
 304 001e 4FEA1C13 		lsr	r3, ip, #4
 305              	.LVL42:
 306              		.loc 1 122 10 view .LVU99
 307 0022 0B80     		strh	r3, [r1]	@ movhi
 123:lvgl/src/misc/lv_math.c ****     q->f = (root & 0xf) << 4;
 308              		.loc 1 123 5 is_stmt 1 view .LVU100
 309              		.loc 1 123 25 is_stmt 0 view .LVU101
 310 0024 4FEA0C1C 		lsl	ip, ip, #4
 311              	.LVL43:
 312              		.loc 1 123 25 view .LVU102
 313 0028 0CF0F00C 		and	ip, ip, #240
 314              		.loc 1 123 10 view .LVU103
 315 002c A1F802C0 		strh	ip, [r1, #2]	@ movhi
 124:lvgl/src/misc/lv_math.c **** }
 316              		.loc 1 124 1 view .LVU104
 317 0030 5DF804FB 		ldr	pc, [sp], #4
 318              		.cfi_endproc
 319              	.LFE3:
 321              		.section	.text.lv_atan2,"ax",%progbits
 322              		.align	1
 323              		.global	lv_atan2
 324              		.syntax unified
 325              		.thumb
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 9


 326              		.thumb_func
 328              	lv_atan2:
 329              	.LVL44:
 330              	.LFB4:
 125:lvgl/src/misc/lv_math.c **** 
 126:lvgl/src/misc/lv_math.c **** /**
 127:lvgl/src/misc/lv_math.c ****  * Calculate the atan2 of a vector.
 128:lvgl/src/misc/lv_math.c ****  * @param x
 129:lvgl/src/misc/lv_math.c ****  * @param y
 130:lvgl/src/misc/lv_math.c ****  * @return the angle in degree calculated from the given parameters in range of [0..360]
 131:lvgl/src/misc/lv_math.c ****  */
 132:lvgl/src/misc/lv_math.c **** uint16_t lv_atan2(int x, int y)
 133:lvgl/src/misc/lv_math.c **** {
 331              		.loc 1 133 1 is_stmt 1 view -0
 332              		.cfi_startproc
 333              		@ args = 0, pretend = 0, frame = 0
 334              		@ frame_needed = 0, uses_anonymous_args = 0
 335              		@ link register save eliminated.
 134:lvgl/src/misc/lv_math.c ****     // Fast XY vector to integer degree algorithm - Jan 2011 www.RomanBlack.com
 135:lvgl/src/misc/lv_math.c ****     // Converts any XY values including 0 to a degree value that should be
 136:lvgl/src/misc/lv_math.c ****     // within +/- 1 degree of the accurate value without needing
 137:lvgl/src/misc/lv_math.c ****     // large slow trig functions like ArcTan() or ArcCos().
 138:lvgl/src/misc/lv_math.c ****     // NOTE! at least one of the X or Y values must be non-zero!
 139:lvgl/src/misc/lv_math.c ****     // This is the full version, for all 4 quadrants and will generate
 140:lvgl/src/misc/lv_math.c ****     // the angle in integer degrees from 0-360.
 141:lvgl/src/misc/lv_math.c ****     // Any values of X and Y are usable including negative values provided
 142:lvgl/src/misc/lv_math.c ****     // they are between -1456 and 1456 so the 16bit multiply does not overflow.
 143:lvgl/src/misc/lv_math.c **** 
 144:lvgl/src/misc/lv_math.c ****     unsigned char negflag;
 336              		.loc 1 144 5 view .LVU106
 145:lvgl/src/misc/lv_math.c ****     unsigned char tempdegree;
 337              		.loc 1 145 5 view .LVU107
 146:lvgl/src/misc/lv_math.c ****     unsigned char comp;
 338              		.loc 1 146 5 view .LVU108
 147:lvgl/src/misc/lv_math.c ****     unsigned int degree;     // this will hold the result
 339              		.loc 1 147 5 view .LVU109
 148:lvgl/src/misc/lv_math.c ****     unsigned int ux;
 340              		.loc 1 148 5 view .LVU110
 149:lvgl/src/misc/lv_math.c ****     unsigned int uy;
 341              		.loc 1 149 5 view .LVU111
 150:lvgl/src/misc/lv_math.c **** 
 151:lvgl/src/misc/lv_math.c ****     // Save the sign flags then remove signs and get XY as unsigned ints
 152:lvgl/src/misc/lv_math.c ****     negflag = 0;
 342              		.loc 1 152 5 view .LVU112
 153:lvgl/src/misc/lv_math.c ****     if(x < 0) {
 343              		.loc 1 153 5 view .LVU113
 344              		.loc 1 153 7 is_stmt 0 view .LVU114
 345 0000 0028     		cmp	r0, #0
 346              		.loc 1 153 7 view .LVU115
 347 0002 2DDB     		blt	.L38
 152:lvgl/src/misc/lv_math.c ****     if(x < 0) {
 348              		.loc 1 152 13 view .LVU116
 349 0004 0022     		movs	r2, #0
 350              	.LVL45:
 351              	.L19:
 154:lvgl/src/misc/lv_math.c ****         negflag += 0x01;    // x flag bit
 155:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 10


 156:lvgl/src/misc/lv_math.c ****     }
 157:lvgl/src/misc/lv_math.c ****     ux = x;                // copy to unsigned var before multiply
 352              		.loc 1 157 5 is_stmt 1 view .LVU117
 158:lvgl/src/misc/lv_math.c ****     if(y < 0) {
 353              		.loc 1 158 5 view .LVU118
 354              		.loc 1 158 7 is_stmt 0 view .LVU119
 355 0006 0029     		cmp	r1, #0
 356 0008 2DDB     		blt	.L39
 357              	.L20:
 159:lvgl/src/misc/lv_math.c ****         negflag += 0x02;    // y flag bit
 160:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 161:lvgl/src/misc/lv_math.c ****     }
 162:lvgl/src/misc/lv_math.c ****     uy = y;                // copy to unsigned var before multiply
 358              		.loc 1 162 5 is_stmt 1 view .LVU120
 359              	.LVL46:
 163:lvgl/src/misc/lv_math.c **** 
 164:lvgl/src/misc/lv_math.c ****     // 1. Calc the scaled "degrees"
 165:lvgl/src/misc/lv_math.c ****     if(ux > uy) {
 360              		.loc 1 165 5 view .LVU121
 361              		.loc 1 165 7 is_stmt 0 view .LVU122
 362 000a 8842     		cmp	r0, r1
 363 000c 2FD9     		bls	.L21
 166:lvgl/src/misc/lv_math.c ****         degree = (uy * 45) / ux;   // degree result will be 0-45 range
 364              		.loc 1 166 9 is_stmt 1 view .LVU123
 365              		.loc 1 166 22 is_stmt 0 view .LVU124
 366 000e 01EB4101 		add	r1, r1, r1, lsl #1
 367              	.LVL47:
 368              		.loc 1 166 22 view .LVU125
 369 0012 C1EB0111 		rsb	r1, r1, r1, lsl #4
 370              		.loc 1 166 16 view .LVU126
 371 0016 B1FBF0F0 		udiv	r0, r1, r0
 372              	.LVL48:
 167:lvgl/src/misc/lv_math.c ****         negflag += 0x10;    // octant flag bit
 373              		.loc 1 167 9 is_stmt 1 view .LVU127
 374              		.loc 1 167 17 is_stmt 0 view .LVU128
 375 001a 1032     		adds	r2, r2, #16
 376              	.LVL49:
 377              		.loc 1 167 17 view .LVU129
 378 001c D2B2     		uxtb	r2, r2
 379              	.LVL50:
 380              	.L22:
 168:lvgl/src/misc/lv_math.c ****     }
 169:lvgl/src/misc/lv_math.c ****     else {
 170:lvgl/src/misc/lv_math.c ****         degree = (ux * 45) / uy;   // degree result will be 0-45 range
 171:lvgl/src/misc/lv_math.c ****     }
 172:lvgl/src/misc/lv_math.c **** 
 173:lvgl/src/misc/lv_math.c ****     // 2. Compensate for the 4 degree error curve
 174:lvgl/src/misc/lv_math.c ****     comp = 0;
 381              		.loc 1 174 5 is_stmt 1 view .LVU130
 175:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 382              		.loc 1 175 5 view .LVU131
 383              		.loc 1 175 16 is_stmt 0 view .LVU132
 384 001e C1B2     		uxtb	r1, r0
 385              	.LVL51:
 176:lvgl/src/misc/lv_math.c ****     if(tempdegree > 22) {    // if top half of range
 386              		.loc 1 176 5 is_stmt 1 view .LVU133
 387              		.loc 1 176 7 is_stmt 0 view .LVU134
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 11


 388 0020 1629     		cmp	r1, #22
 389 0022 2DD9     		bls	.L23
 177:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 44) comp++;
 390              		.loc 1 177 9 is_stmt 1 view .LVU135
 391              		.loc 1 177 11 is_stmt 0 view .LVU136
 392 0024 2C29     		cmp	r1, #44
 393 0026 29D9     		bls	.L36
 174:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 394              		.loc 1 174 10 view .LVU137
 395 0028 0023     		movs	r3, #0
 396              	.L24:
 397              	.LVL52:
 178:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 41) comp++;
 398              		.loc 1 178 9 is_stmt 1 view .LVU138
 399              		.loc 1 178 11 is_stmt 0 view .LVU139
 400 002a 2929     		cmp	r1, #41
 401 002c 01D8     		bhi	.L25
 402              		.loc 1 178 30 is_stmt 1 discriminator 1 view .LVU140
 403              		.loc 1 178 34 is_stmt 0 discriminator 1 view .LVU141
 404 002e 0133     		adds	r3, r3, #1
 405              	.LVL53:
 406              		.loc 1 178 34 discriminator 1 view .LVU142
 407 0030 DBB2     		uxtb	r3, r3
 408              	.LVL54:
 409              	.L25:
 179:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 37) comp++;
 410              		.loc 1 179 9 is_stmt 1 view .LVU143
 411              		.loc 1 179 11 is_stmt 0 view .LVU144
 412 0032 2529     		cmp	r1, #37
 413 0034 01D8     		bhi	.L26
 414              		.loc 1 179 30 is_stmt 1 discriminator 1 view .LVU145
 415              		.loc 1 179 34 is_stmt 0 discriminator 1 view .LVU146
 416 0036 0133     		adds	r3, r3, #1
 417              	.LVL55:
 418              		.loc 1 179 34 discriminator 1 view .LVU147
 419 0038 DBB2     		uxtb	r3, r3
 420              	.LVL56:
 421              	.L26:
 180:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 32) comp++;  // max is 4 degrees compensated
 422              		.loc 1 180 9 is_stmt 1 view .LVU148
 423              		.loc 1 180 11 is_stmt 0 view .LVU149
 424 003a 2029     		cmp	r1, #32
 425 003c 01D8     		bhi	.L27
 426              		.loc 1 180 30 is_stmt 1 discriminator 1 view .LVU150
 427              		.loc 1 180 34 is_stmt 0 discriminator 1 view .LVU151
 428 003e 0133     		adds	r3, r3, #1
 429              	.LVL57:
 430              		.loc 1 180 34 discriminator 1 view .LVU152
 431 0040 DBB2     		uxtb	r3, r3
 432              	.LVL58:
 433              	.L27:
 181:lvgl/src/misc/lv_math.c ****     }
 182:lvgl/src/misc/lv_math.c ****     else {   // else is lower half of range
 183:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 2) comp++;
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 186:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 12


 187:lvgl/src/misc/lv_math.c ****     }
 188:lvgl/src/misc/lv_math.c ****     degree += comp;   // degree is now accurate to +/- 1 degree!
 434              		.loc 1 188 5 is_stmt 1 view .LVU153
 435              		.loc 1 188 12 is_stmt 0 view .LVU154
 436 0042 1844     		add	r0, r0, r3
 437              	.LVL59:
 189:lvgl/src/misc/lv_math.c **** 
 190:lvgl/src/misc/lv_math.c ****     // Invert degree if it was X>Y octant, makes 0-45 into 90-45
 191:lvgl/src/misc/lv_math.c ****     if(negflag & 0x10) degree = (90 - degree);
 438              		.loc 1 191 5 is_stmt 1 view .LVU155
 439              		.loc 1 191 7 is_stmt 0 view .LVU156
 440 0044 12F0100F 		tst	r2, #16
 441 0048 01D0     		beq	.L31
 442              		.loc 1 191 24 is_stmt 1 discriminator 1 view .LVU157
 443              		.loc 1 191 31 is_stmt 0 discriminator 1 view .LVU158
 444 004a C0F15A00 		rsb	r0, r0, #90
 445              	.LVL60:
 446              	.L31:
 192:lvgl/src/misc/lv_math.c **** 
 193:lvgl/src/misc/lv_math.c ****     // 3. Degree is now 0-90 range for this quadrant,
 194:lvgl/src/misc/lv_math.c ****     // need to invert it for whichever quadrant it was in
 195:lvgl/src/misc/lv_math.c ****     if(negflag & 0x02) { // if -Y
 447              		.loc 1 195 5 is_stmt 1 view .LVU159
 448              		.loc 1 195 7 is_stmt 0 view .LVU160
 449 004e 12F0020F 		tst	r2, #2
 450 0052 2AD0     		beq	.L32
 196:lvgl/src/misc/lv_math.c ****         if(negflag & 0x01)   // if -Y -X
 451              		.loc 1 196 9 is_stmt 1 view .LVU161
 452              		.loc 1 196 11 is_stmt 0 view .LVU162
 453 0054 12F0010F 		tst	r2, #1
 454 0058 24D0     		beq	.L33
 197:lvgl/src/misc/lv_math.c ****             degree = (180 + degree);
 455              		.loc 1 197 13 is_stmt 1 view .LVU163
 456              		.loc 1 197 20 is_stmt 0 view .LVU164
 457 005a B430     		adds	r0, r0, #180
 458              	.LVL61:
 459              	.L34:
 198:lvgl/src/misc/lv_math.c ****         else        // else is -Y +X
 199:lvgl/src/misc/lv_math.c ****             degree = (180 - degree);
 200:lvgl/src/misc/lv_math.c ****     }
 201:lvgl/src/misc/lv_math.c ****     else {   // else is +Y
 202:lvgl/src/misc/lv_math.c ****         if(negflag & 0x01)   // if +Y -X
 203:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 204:lvgl/src/misc/lv_math.c ****     }
 205:lvgl/src/misc/lv_math.c ****     return degree;
 460              		.loc 1 205 5 is_stmt 1 view .LVU165
 206:lvgl/src/misc/lv_math.c **** }
 461              		.loc 1 206 1 is_stmt 0 view .LVU166
 462 005c 80B2     		uxth	r0, r0
 463              	.LVL62:
 464              		.loc 1 206 1 view .LVU167
 465 005e 7047     		bx	lr
 466              	.LVL63:
 467              	.L38:
 154:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
 468              		.loc 1 154 9 is_stmt 1 view .LVU168
 155:lvgl/src/misc/lv_math.c ****     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 13


 469              		.loc 1 155 9 view .LVU169
 155:lvgl/src/misc/lv_math.c ****     }
 470              		.loc 1 155 11 is_stmt 0 view .LVU170
 471 0060 4042     		rsbs	r0, r0, #0
 472              	.LVL64:
 154:lvgl/src/misc/lv_math.c ****         x = (0 - x);        // is now +
 473              		.loc 1 154 17 view .LVU171
 474 0062 0122     		movs	r2, #1
 475 0064 CFE7     		b	.L19
 476              	.LVL65:
 477              	.L39:
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 478              		.loc 1 159 9 is_stmt 1 view .LVU172
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 479              		.loc 1 159 17 is_stmt 0 view .LVU173
 480 0066 0232     		adds	r2, r2, #2
 481              	.LVL66:
 159:lvgl/src/misc/lv_math.c ****         y = (0 - y);        // is now +
 482              		.loc 1 159 17 view .LVU174
 483 0068 D2B2     		uxtb	r2, r2
 484              	.LVL67:
 160:lvgl/src/misc/lv_math.c ****     }
 485              		.loc 1 160 9 is_stmt 1 view .LVU175
 160:lvgl/src/misc/lv_math.c ****     }
 486              		.loc 1 160 11 is_stmt 0 view .LVU176
 487 006a 4942     		rsbs	r1, r1, #0
 488              	.LVL68:
 160:lvgl/src/misc/lv_math.c ****     }
 489              		.loc 1 160 11 view .LVU177
 490 006c CDE7     		b	.L20
 491              	.LVL69:
 492              	.L21:
 170:lvgl/src/misc/lv_math.c ****     }
 493              		.loc 1 170 9 is_stmt 1 view .LVU178
 170:lvgl/src/misc/lv_math.c ****     }
 494              		.loc 1 170 22 is_stmt 0 view .LVU179
 495 006e 00EB4000 		add	r0, r0, r0, lsl #1
 496              	.LVL70:
 170:lvgl/src/misc/lv_math.c ****     }
 497              		.loc 1 170 22 view .LVU180
 498 0072 C0EB0010 		rsb	r0, r0, r0, lsl #4
 170:lvgl/src/misc/lv_math.c ****     }
 499              		.loc 1 170 16 view .LVU181
 500 0076 B0FBF1F0 		udiv	r0, r0, r1
 501              	.LVL71:
 170:lvgl/src/misc/lv_math.c ****     }
 502              		.loc 1 170 16 view .LVU182
 503 007a D0E7     		b	.L22
 504              	.LVL72:
 505              	.L36:
 177:lvgl/src/misc/lv_math.c ****         if(tempdegree <= 41) comp++;
 506              		.loc 1 177 34 view .LVU183
 507 007c 0123     		movs	r3, #1
 508 007e D4E7     		b	.L24
 509              	.L23:
 183:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 510              		.loc 1 183 9 is_stmt 1 view .LVU184
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 14


 183:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 511              		.loc 1 183 11 is_stmt 0 view .LVU185
 512 0080 0129     		cmp	r1, #1
 513 0082 0DD9     		bls	.L40
 183:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 6) comp++;
 514              		.loc 1 183 33 view .LVU186
 515 0084 0123     		movs	r3, #1
 516              	.L28:
 517              	.LVL73:
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 518              		.loc 1 184 9 is_stmt 1 view .LVU187
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 519              		.loc 1 184 11 is_stmt 0 view .LVU188
 520 0086 0529     		cmp	r1, #5
 521 0088 01D9     		bls	.L29
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 522              		.loc 1 184 29 is_stmt 1 discriminator 1 view .LVU189
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 523              		.loc 1 184 33 is_stmt 0 discriminator 1 view .LVU190
 524 008a 0133     		adds	r3, r3, #1
 525              	.LVL74:
 184:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 10) comp++;
 526              		.loc 1 184 33 discriminator 1 view .LVU191
 527 008c DBB2     		uxtb	r3, r3
 528              	.LVL75:
 529              	.L29:
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 530              		.loc 1 185 9 is_stmt 1 view .LVU192
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 531              		.loc 1 185 11 is_stmt 0 view .LVU193
 532 008e 0929     		cmp	r1, #9
 533 0090 01D9     		bls	.L30
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 534              		.loc 1 185 30 is_stmt 1 discriminator 1 view .LVU194
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 535              		.loc 1 185 34 is_stmt 0 discriminator 1 view .LVU195
 536 0092 0133     		adds	r3, r3, #1
 537              	.LVL76:
 185:lvgl/src/misc/lv_math.c ****         if(tempdegree >= 15) comp++;  // max is 4 degrees compensated
 538              		.loc 1 185 34 discriminator 1 view .LVU196
 539 0094 DBB2     		uxtb	r3, r3
 540              	.LVL77:
 541              	.L30:
 186:lvgl/src/misc/lv_math.c ****     }
 542              		.loc 1 186 9 is_stmt 1 view .LVU197
 186:lvgl/src/misc/lv_math.c ****     }
 543              		.loc 1 186 11 is_stmt 0 view .LVU198
 544 0096 0E29     		cmp	r1, #14
 545 0098 D3D9     		bls	.L27
 186:lvgl/src/misc/lv_math.c ****     }
 546              		.loc 1 186 30 is_stmt 1 discriminator 1 view .LVU199
 186:lvgl/src/misc/lv_math.c ****     }
 547              		.loc 1 186 34 is_stmt 0 discriminator 1 view .LVU200
 548 009a 0133     		adds	r3, r3, #1
 549              	.LVL78:
 186:lvgl/src/misc/lv_math.c ****     }
 550              		.loc 1 186 34 discriminator 1 view .LVU201
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 15


 551 009c DBB2     		uxtb	r3, r3
 552              	.LVL79:
 186:lvgl/src/misc/lv_math.c ****     }
 553              		.loc 1 186 34 discriminator 1 view .LVU202
 554 009e D0E7     		b	.L27
 555              	.LVL80:
 556              	.L40:
 174:lvgl/src/misc/lv_math.c ****     tempdegree = degree;    // use an unsigned char for speed!
 557              		.loc 1 174 10 view .LVU203
 558 00a0 0023     		movs	r3, #0
 559 00a2 F0E7     		b	.L28
 560              	.LVL81:
 561              	.L33:
 199:lvgl/src/misc/lv_math.c ****     }
 562              		.loc 1 199 13 is_stmt 1 view .LVU204
 199:lvgl/src/misc/lv_math.c ****     }
 563              		.loc 1 199 20 is_stmt 0 view .LVU205
 564 00a4 C0F1B400 		rsb	r0, r0, #180
 565              	.LVL82:
 199:lvgl/src/misc/lv_math.c ****     }
 566              		.loc 1 199 20 view .LVU206
 567 00a8 D8E7     		b	.L34
 568              	.L32:
 202:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 569              		.loc 1 202 9 is_stmt 1 view .LVU207
 202:lvgl/src/misc/lv_math.c ****             degree = (360 - degree);
 570              		.loc 1 202 11 is_stmt 0 view .LVU208
 571 00aa 12F0010F 		tst	r2, #1
 572 00ae D5D0     		beq	.L34
 203:lvgl/src/misc/lv_math.c ****     }
 573              		.loc 1 203 13 is_stmt 1 view .LVU209
 203:lvgl/src/misc/lv_math.c ****     }
 574              		.loc 1 203 20 is_stmt 0 view .LVU210
 575 00b0 C0F5B470 		rsb	r0, r0, #360
 576              	.LVL83:
 203:lvgl/src/misc/lv_math.c ****     }
 577              		.loc 1 203 20 view .LVU211
 578 00b4 D2E7     		b	.L34
 579              		.cfi_endproc
 580              	.LFE4:
 582              		.section	.text.lv_pow,"ax",%progbits
 583              		.align	1
 584              		.global	lv_pow
 585              		.syntax unified
 586              		.thumb
 587              		.thumb_func
 589              	lv_pow:
 590              	.LVL84:
 591              	.LFB5:
 207:lvgl/src/misc/lv_math.c **** 
 208:lvgl/src/misc/lv_math.c **** /**
 209:lvgl/src/misc/lv_math.c ****  * Calculate the integer exponents.
 210:lvgl/src/misc/lv_math.c ****  * @param base
 211:lvgl/src/misc/lv_math.c ****  * @param power
 212:lvgl/src/misc/lv_math.c ****  * @return base raised to the power exponent
 213:lvgl/src/misc/lv_math.c ****  */
 214:lvgl/src/misc/lv_math.c **** int64_t lv_pow(int64_t base, int8_t exp)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 16


 215:lvgl/src/misc/lv_math.c **** {
 592              		.loc 1 215 1 is_stmt 1 view -0
 593              		.cfi_startproc
 594              		@ args = 0, pretend = 0, frame = 0
 595              		@ frame_needed = 0, uses_anonymous_args = 0
 596              		.loc 1 215 1 is_stmt 0 view .LVU213
 597 0000 0346     		mov	r3, r0
 598 0002 8C46     		mov	ip, r1
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 599              		.loc 1 216 5 is_stmt 1 view .LVU214
 600              	.LVL85:
 217:lvgl/src/misc/lv_math.c ****     while(exp) {
 601              		.loc 1 217 5 view .LVU215
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 602              		.loc 1 216 13 is_stmt 0 view .LVU216
 603 0004 0120     		movs	r0, #1
 604              	.LVL86:
 216:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 605              		.loc 1 216 13 view .LVU217
 606 0006 0021     		movs	r1, #0
 607              	.LVL87:
 608              		.loc 1 217 10 is_stmt 1 view .LVU218
 609 0008 B2B1     		cbz	r2, .L49
 215:lvgl/src/misc/lv_math.c ****     int64_t result = 1;
 610              		.loc 1 215 1 is_stmt 0 view .LVU219
 611 000a 00B5     		push	{lr}
 612              		.cfi_def_cfa_offset 4
 613              		.cfi_offset 14, -4
 614 000c 07E0     		b	.L44
 615              	.LVL88:
 616              	.L43:
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 219:lvgl/src/misc/lv_math.c ****             result *= base;
 220:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 617              		.loc 1 220 9 is_stmt 1 view .LVU220
 618              		.loc 1 220 13 is_stmt 0 view .LVU221
 619 000e 5210     		asrs	r2, r2, #1
 620              	.LVL89:
 221:lvgl/src/misc/lv_math.c ****         base *= base;
 621              		.loc 1 221 9 is_stmt 1 view .LVU222
 622              		.loc 1 221 14 is_stmt 0 view .LVU223
 623 0010 03FB0CFE 		mul	lr, r3, ip
 624 0014 A3FB033C 		umull	r3, ip, r3, r3
 625 0018 0CEB4E0C 		add	ip, ip, lr, lsl #1
 626              	.LVL90:
 217:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 627              		.loc 1 217 10 is_stmt 1 view .LVU224
 628 001c 52B1     		cbz	r2, .L50
 629              	.LVL91:
 630              	.L44:
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 631              		.loc 1 218 9 view .LVU225
 218:lvgl/src/misc/lv_math.c ****         if(exp & 1)
 632              		.loc 1 218 11 is_stmt 0 view .LVU226
 633 001e 12F0010F 		tst	r2, #1
 634 0022 F4D0     		beq	.L43
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 17


 635              		.loc 1 219 13 is_stmt 1 view .LVU227
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 636              		.loc 1 219 20 is_stmt 0 view .LVU228
 637 0024 00FB0CFE 		mul	lr, r0, ip
 638 0028 03FB01EE 		mla	lr, r3, r1, lr
 639 002c A0FB0301 		umull	r0, r1, r0, r3
 640 0030 7144     		add	r1, r1, lr
 641              	.LVL92:
 219:lvgl/src/misc/lv_math.c ****         exp >>= 1;
 642              		.loc 1 219 20 view .LVU229
 643 0032 ECE7     		b	.L43
 644              	.LVL93:
 645              	.L50:
 222:lvgl/src/misc/lv_math.c ****     }
 223:lvgl/src/misc/lv_math.c **** 
 224:lvgl/src/misc/lv_math.c ****     return result;
 646              		.loc 1 224 5 is_stmt 1 view .LVU230
 225:lvgl/src/misc/lv_math.c **** }
 647              		.loc 1 225 1 is_stmt 0 view .LVU231
 648 0034 5DF804FB 		ldr	pc, [sp], #4
 649              	.L49:
 650              		.cfi_def_cfa_offset 0
 651              		.cfi_restore 14
 652              		.loc 1 225 1 view .LVU232
 653 0038 7047     		bx	lr
 654              		.cfi_endproc
 655              	.LFE5:
 657              		.section	.text.lv_map,"ax",%progbits
 658              		.align	1
 659              		.global	lv_map
 660              		.syntax unified
 661              		.thumb
 662              		.thumb_func
 664              	lv_map:
 665              	.LVL94:
 666              	.LFB6:
 226:lvgl/src/misc/lv_math.c **** 
 227:lvgl/src/misc/lv_math.c **** /**
 228:lvgl/src/misc/lv_math.c ****  * Get the mapped of a number given an input and output range
 229:lvgl/src/misc/lv_math.c ****  * @param x integer which mapped value should be calculated
 230:lvgl/src/misc/lv_math.c ****  * @param min_in min input range
 231:lvgl/src/misc/lv_math.c ****  * @param max_in max input range
 232:lvgl/src/misc/lv_math.c ****  * @param min_out max output range
 233:lvgl/src/misc/lv_math.c ****  * @param max_out max output range
 234:lvgl/src/misc/lv_math.c ****  * @return the mapped number
 235:lvgl/src/misc/lv_math.c ****  */
 236:lvgl/src/misc/lv_math.c **** int32_t lv_map(int32_t x, int32_t min_in, int32_t max_in, int32_t min_out, int32_t max_out)
 237:lvgl/src/misc/lv_math.c **** {
 667              		.loc 1 237 1 is_stmt 1 view -0
 668              		.cfi_startproc
 669              		@ args = 4, pretend = 0, frame = 0
 670              		@ frame_needed = 0, uses_anonymous_args = 0
 671              		@ link register save eliminated.
 672              		.loc 1 237 1 is_stmt 0 view .LVU234
 673 0000 30B4     		push	{r4, r5}
 674              		.cfi_def_cfa_offset 8
 675              		.cfi_offset 4, -8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 18


 676              		.cfi_offset 5, -4
 238:lvgl/src/misc/lv_math.c ****     if(max_in >= min_in && x >= max_in) return max_out;
 677              		.loc 1 238 5 is_stmt 1 view .LVU235
 678              		.loc 1 238 15 is_stmt 0 view .LVU236
 679 0002 8A42     		cmp	r2, r1
 680 0004 B4BF     		ite	lt
 681 0006 4FF0000C 		movlt	ip, #0
 682 000a 4FF0010C 		movge	ip, #1
 683              		.loc 1 238 25 view .LVU237
 684 000e 8242     		cmp	r2, r0
 685 0010 CCBF     		ite	gt
 686 0012 0024     		movgt	r4, #0
 687 0014 0CF00104 		andle	r4, ip, #1
 688              		.loc 1 238 7 view .LVU238
 689 0018 14BB     		cbnz	r4, .L53
 239:lvgl/src/misc/lv_math.c ****     if(max_in >= min_in && x <= min_in) return min_out;
 690              		.loc 1 239 5 is_stmt 1 view .LVU239
 691              		.loc 1 239 25 is_stmt 0 view .LVU240
 692 001a 8142     		cmp	r1, r0
 693 001c B4BF     		ite	lt
 694 001e 4FF0000C 		movlt	ip, #0
 695 0022 0CF0010C 		andge	ip, ip, #1
 696              		.loc 1 239 7 view .LVU241
 697 0026 BCF1000F 		cmp	ip, #0
 698 002a 1CD1     		bne	.L54
 240:lvgl/src/misc/lv_math.c **** 
 241:lvgl/src/misc/lv_math.c ****     if(max_in <= min_in && x <= max_in) return max_out;
 699              		.loc 1 241 5 is_stmt 1 view .LVU242
 700              		.loc 1 241 15 is_stmt 0 view .LVU243
 701 002c 8A42     		cmp	r2, r1
 702 002e CCBF     		ite	gt
 703 0030 0024     		movgt	r4, #0
 704 0032 0124     		movle	r4, #1
 705              		.loc 1 241 25 view .LVU244
 706 0034 8242     		cmp	r2, r0
 707 0036 B4BF     		ite	lt
 708 0038 0025     		movlt	r5, #0
 709 003a 04F00105 		andge	r5, r4, #1
 710              		.loc 1 241 7 view .LVU245
 711 003e A5B9     		cbnz	r5, .L55
 242:lvgl/src/misc/lv_math.c ****     if(max_in <= min_in && x >= min_in) return min_out;
 712              		.loc 1 242 5 is_stmt 1 view .LVU246
 713              		.loc 1 242 25 is_stmt 0 view .LVU247
 714 0040 8142     		cmp	r1, r0
 715 0042 CCBF     		ite	gt
 716 0044 0024     		movgt	r4, #0
 717 0046 04F00104 		andle	r4, r4, #1
 718              		.loc 1 242 7 view .LVU248
 719 004a 84B9     		cbnz	r4, .L56
 243:lvgl/src/misc/lv_math.c **** 
 244:lvgl/src/misc/lv_math.c ****     /**
 245:lvgl/src/misc/lv_math.c ****      * The equation should be:
 246:lvgl/src/misc/lv_math.c ****      *   ((x - min_in) * delta_out) / delta in) + min_out
 247:lvgl/src/misc/lv_math.c ****      * To avoid rounding error reorder the operations:
 248:lvgl/src/misc/lv_math.c ****      *   (x - min_in) * (delta_out / delta_min) + min_out
 249:lvgl/src/misc/lv_math.c ****      */
 250:lvgl/src/misc/lv_math.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 19


 251:lvgl/src/misc/lv_math.c ****     int32_t delta_in = max_in - min_in;
 720              		.loc 1 251 5 is_stmt 1 view .LVU249
 721              		.loc 1 251 13 is_stmt 0 view .LVU250
 722 004c 521A     		subs	r2, r2, r1
 723              	.LVL95:
 252:lvgl/src/misc/lv_math.c ****     int32_t delta_out = max_out - min_out;
 724              		.loc 1 252 5 is_stmt 1 view .LVU251
 725              		.loc 1 252 13 is_stmt 0 view .LVU252
 726 004e 029C     		ldr	r4, [sp, #8]
 727 0050 E41A     		subs	r4, r4, r3
 728              	.LVL96:
 253:lvgl/src/misc/lv_math.c **** 
 254:lvgl/src/misc/lv_math.c ****     return ((x - min_in) * delta_out) / delta_in + min_out;
 729              		.loc 1 254 5 is_stmt 1 view .LVU253
 730              		.loc 1 254 16 is_stmt 0 view .LVU254
 731 0052 411A     		subs	r1, r0, r1
 732              	.LVL97:
 733              		.loc 1 254 26 view .LVU255
 734 0054 04FB01F1 		mul	r1, r4, r1
 735              		.loc 1 254 39 view .LVU256
 736 0058 91FBF2F2 		sdiv	r2, r1, r2
 737              	.LVL98:
 738              		.loc 1 254 50 view .LVU257
 739 005c D018     		adds	r0, r2, r3
 740              	.LVL99:
 741              		.loc 1 254 50 view .LVU258
 742 005e 00E0     		b	.L51
 743              	.LVL100:
 744              	.L53:
 238:lvgl/src/misc/lv_math.c ****     if(max_in >= min_in && x <= min_in) return min_out;
 745              		.loc 1 238 48 view .LVU259
 746 0060 0298     		ldr	r0, [sp, #8]
 747              	.LVL101:
 748              	.L51:
 255:lvgl/src/misc/lv_math.c **** }
 749              		.loc 1 255 1 view .LVU260
 750 0062 30BC     		pop	{r4, r5}
 751              		.cfi_remember_state
 752              		.cfi_restore 5
 753              		.cfi_restore 4
 754              		.cfi_def_cfa_offset 0
 755              	.LVL102:
 756              		.loc 1 255 1 view .LVU261
 757 0064 7047     		bx	lr
 758              	.LVL103:
 759              	.L54:
 760              		.cfi_restore_state
 239:lvgl/src/misc/lv_math.c **** 
 761              		.loc 1 239 48 view .LVU262
 762 0066 1846     		mov	r0, r3
 763              	.LVL104:
 239:lvgl/src/misc/lv_math.c **** 
 764              		.loc 1 239 48 view .LVU263
 765 0068 FBE7     		b	.L51
 766              	.LVL105:
 767              	.L55:
 241:lvgl/src/misc/lv_math.c ****     if(max_in <= min_in && x >= min_in) return min_out;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 20


 768              		.loc 1 241 48 view .LVU264
 769 006a 0298     		ldr	r0, [sp, #8]
 770              	.LVL106:
 241:lvgl/src/misc/lv_math.c ****     if(max_in <= min_in && x >= min_in) return min_out;
 771              		.loc 1 241 48 view .LVU265
 772 006c F9E7     		b	.L51
 773              	.LVL107:
 774              	.L56:
 242:lvgl/src/misc/lv_math.c **** 
 775              		.loc 1 242 48 view .LVU266
 776 006e 1846     		mov	r0, r3
 777              	.LVL108:
 242:lvgl/src/misc/lv_math.c **** 
 778              		.loc 1 242 48 view .LVU267
 779 0070 F7E7     		b	.L51
 780              		.cfi_endproc
 781              	.LFE6:
 783              		.section	.text.lv_rand,"ax",%progbits
 784              		.align	1
 785              		.global	lv_rand
 786              		.syntax unified
 787              		.thumb
 788              		.thumb_func
 790              	lv_rand:
 791              	.LVL109:
 792              	.LFB7:
 256:lvgl/src/misc/lv_math.c **** 
 257:lvgl/src/misc/lv_math.c **** uint32_t lv_rand(uint32_t min, uint32_t max)
 258:lvgl/src/misc/lv_math.c **** {
 793              		.loc 1 258 1 is_stmt 1 view -0
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 0
 796              		@ frame_needed = 0, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 259:lvgl/src/misc/lv_math.c ****     static uint32_t a = 0x1234ABCD; /*Seed*/
 798              		.loc 1 259 5 view .LVU269
 260:lvgl/src/misc/lv_math.c **** 
 261:lvgl/src/misc/lv_math.c ****     /*Algorithm "xor" from p. 4 of Marsaglia, "Xorshift RNGs"*/
 262:lvgl/src/misc/lv_math.c ****     uint32_t x = a;
 799              		.loc 1 262 5 view .LVU270
 800              		.loc 1 262 14 is_stmt 0 view .LVU271
 801 0000 084A     		ldr	r2, .L59
 802 0002 1368     		ldr	r3, [r2]
 803              	.LVL110:
 263:lvgl/src/misc/lv_math.c ****     x ^= x << 13;
 804              		.loc 1 263 5 is_stmt 1 view .LVU272
 805              		.loc 1 263 7 is_stmt 0 view .LVU273
 806 0004 83EA4333 		eor	r3, r3, r3, lsl #13
 807              	.LVL111:
 264:lvgl/src/misc/lv_math.c ****     x ^= x >> 17;
 808              		.loc 1 264 5 is_stmt 1 view .LVU274
 809              		.loc 1 264 7 is_stmt 0 view .LVU275
 810 0008 83EA5343 		eor	r3, r3, r3, lsr #17
 811              	.LVL112:
 265:lvgl/src/misc/lv_math.c ****     x ^= x << 5;
 812              		.loc 1 265 5 is_stmt 1 view .LVU276
 813              		.loc 1 265 7 is_stmt 0 view .LVU277
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 21


 814 000c 83EA4313 		eor	r3, r3, r3, lsl #5
 815              	.LVL113:
 266:lvgl/src/misc/lv_math.c ****     a = x;
 816              		.loc 1 266 5 is_stmt 1 view .LVU278
 817              		.loc 1 266 7 is_stmt 0 view .LVU279
 818 0010 1360     		str	r3, [r2]
 267:lvgl/src/misc/lv_math.c **** 
 268:lvgl/src/misc/lv_math.c ****     return (a % (max - min + 1)) + min;
 819              		.loc 1 268 5 is_stmt 1 view .LVU280
 820              		.loc 1 268 22 is_stmt 0 view .LVU281
 821 0012 091A     		subs	r1, r1, r0
 822              	.LVL114:
 823              		.loc 1 268 28 view .LVU282
 824 0014 0131     		adds	r1, r1, #1
 825              		.loc 1 268 15 view .LVU283
 826 0016 B3FBF1F2 		udiv	r2, r3, r1
 827 001a 01FB1233 		mls	r3, r1, r2, r3
 828              	.LVL115:
 269:lvgl/src/misc/lv_math.c **** }
 829              		.loc 1 269 1 view .LVU284
 830 001e 1844     		add	r0, r0, r3
 831              	.LVL116:
 832              		.loc 1 269 1 view .LVU285
 833 0020 7047     		bx	lr
 834              	.L60:
 835 0022 00BF     		.align	2
 836              	.L59:
 837 0024 00000000 		.word	.LANCHOR1
 838              		.cfi_endproc
 839              	.LFE7:
 841              		.section	.data.a.0,"aw"
 842              		.align	2
 843              		.set	.LANCHOR1,. + 0
 846              	a.0:
 847 0000 CDAB3412 		.word	305441741
 848              		.section	.rodata.sin0_90_table,"a"
 849              		.align	2
 850              		.set	.LANCHOR0,. + 0
 853              	sin0_90_table:
 854 0000 0000     		.short	0
 855 0002 3C02     		.short	572
 856 0004 7804     		.short	1144
 857 0006 B306     		.short	1715
 858 0008 EE08     		.short	2286
 859 000a 280B     		.short	2856
 860 000c 610D     		.short	3425
 861 000e 990F     		.short	3993
 862 0010 D011     		.short	4560
 863 0012 0614     		.short	5126
 864 0014 3A16     		.short	5690
 865 0016 6C18     		.short	6252
 866 0018 9D1A     		.short	6813
 867 001a CB1C     		.short	7371
 868 001c F71E     		.short	7927
 869 001e 2121     		.short	8481
 870 0020 4823     		.short	9032
 871 0022 6C25     		.short	9580
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 22


 872 0024 8E27     		.short	10126
 873 0026 AC29     		.short	10668
 874 0028 C72B     		.short	11207
 875 002a DF2D     		.short	11743
 876 002c F32F     		.short	12275
 877 002e 0332     		.short	12803
 878 0030 1034     		.short	13328
 879 0032 1836     		.short	13848
 880 0034 1C38     		.short	14364
 881 0036 1C3A     		.short	14876
 882 0038 173C     		.short	15383
 883 003a 0E3E     		.short	15886
 884 003c FF3F     		.short	16383
 885 003e EC41     		.short	16876
 886 0040 D443     		.short	17364
 887 0042 B645     		.short	17846
 888 0044 9347     		.short	18323
 889 0046 6A49     		.short	18794
 890 0048 3C4B     		.short	19260
 891 004a 084D     		.short	19720
 892 004c CD4E     		.short	20173
 893 004e 8D50     		.short	20621
 894 0050 4652     		.short	21062
 895 0052 F953     		.short	21497
 896 0054 A555     		.short	21925
 897 0056 4B57     		.short	22347
 898 0058 EA58     		.short	22762
 899 005a 825A     		.short	23170
 900 005c 135C     		.short	23571
 901 005e 9C5D     		.short	23964
 902 0060 1F5F     		.short	24351
 903 0062 9A60     		.short	24730
 904 0064 0D62     		.short	25101
 905 0066 7963     		.short	25465
 906 0068 DD64     		.short	25821
 907 006a 3966     		.short	26169
 908 006c 8D67     		.short	26509
 909 006e D968     		.short	26841
 910 0070 1D6A     		.short	27165
 911 0072 596B     		.short	27481
 912 0074 8C6C     		.short	27788
 913 0076 B76D     		.short	28087
 914 0078 D96E     		.short	28377
 915 007a F36F     		.short	28659
 916 007c 0471     		.short	28932
 917 007e 0C72     		.short	29196
 918 0080 0B73     		.short	29451
 919 0082 0174     		.short	29697
 920 0084 EE74     		.short	29934
 921 0086 D275     		.short	30162
 922 0088 AD76     		.short	30381
 923 008a 7F77     		.short	30591
 924 008c 4778     		.short	30791
 925 008e 0679     		.short	30982
 926 0090 BB79     		.short	31163
 927 0092 677A     		.short	31335
 928 0094 0A7B     		.short	31498
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 23


 929 0096 A27B     		.short	31650
 930 0098 327C     		.short	31794
 931 009a B77C     		.short	31927
 932 009c 337D     		.short	32051
 933 009e A57D     		.short	32165
 934 00a0 0D7E     		.short	32269
 935 00a2 6C7E     		.short	32364
 936 00a4 C07E     		.short	32448
 937 00a6 0B7F     		.short	32523
 938 00a8 4B7F     		.short	32587
 939 00aa 827F     		.short	32642
 940 00ac AF7F     		.short	32687
 941 00ae D27F     		.short	32722
 942 00b0 EB7F     		.short	32747
 943 00b2 FA7F     		.short	32762
 944 00b4 FF7F     		.short	32767
 945              		.text
 946              	.Letext0:
 947              		.file 2 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 948              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 949              		.file 4 "lvgl/src/misc/lv_math.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 lv_math.c
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:19     .text.lv_trigo_sin:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:25     .text.lv_trigo_sin:00000000 lv_trigo_sin
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:146    .text.lv_trigo_sin:00000074 $d
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:152    .text.lv_bezier3:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:158    .text.lv_bezier3:00000000 lv_bezier3
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:247    .text.lv_sqrt:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:253    .text.lv_sqrt:00000000 lv_sqrt
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:322    .text.lv_atan2:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:328    .text.lv_atan2:00000000 lv_atan2
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:583    .text.lv_pow:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:589    .text.lv_pow:00000000 lv_pow
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:658    .text.lv_map:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:664    .text.lv_map:00000000 lv_map
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:784    .text.lv_rand:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:790    .text.lv_rand:00000000 lv_rand
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:837    .text.lv_rand:00000024 $d
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:842    .data.a.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:846    .data.a.0:00000000 a.0
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:849    .rodata.sin0_90_table:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cc43WWyY.s:853    .rodata.sin0_90_table:00000000 sin0_90_table

NO UNDEFINED SYMBOLS
