ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_refr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.get_max_row,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	get_max_row:
  25              	.LVL0:
  26              	.LFB186:
  27              		.file 1 "lvgl/src/core/lv_refr.c"
   1:lvgl/src/core/lv_refr.c **** /**
   2:lvgl/src/core/lv_refr.c ****  * @file lv_refr.c
   3:lvgl/src/core/lv_refr.c ****  *
   4:lvgl/src/core/lv_refr.c ****  */
   5:lvgl/src/core/lv_refr.c **** 
   6:lvgl/src/core/lv_refr.c **** /*********************
   7:lvgl/src/core/lv_refr.c ****  *      INCLUDES
   8:lvgl/src/core/lv_refr.c ****  *********************/
   9:lvgl/src/core/lv_refr.c **** #include <stddef.h>
  10:lvgl/src/core/lv_refr.c **** #include "lv_refr.h"
  11:lvgl/src/core/lv_refr.c **** #include "lv_disp.h"
  12:lvgl/src/core/lv_refr.c **** #include "../hal/lv_hal_tick.h"
  13:lvgl/src/core/lv_refr.c **** #include "../hal/lv_hal_disp.h"
  14:lvgl/src/core/lv_refr.c **** #include "../misc/lv_timer.h"
  15:lvgl/src/core/lv_refr.c **** #include "../misc/lv_mem.h"
  16:lvgl/src/core/lv_refr.c **** #include "../misc/lv_math.h"
  17:lvgl/src/core/lv_refr.c **** #include "../misc/lv_gc.h"
  18:lvgl/src/core/lv_refr.c **** #include "../draw/lv_draw.h"
  19:lvgl/src/core/lv_refr.c **** #include "../font/lv_font_fmt_txt.h"
  20:lvgl/src/core/lv_refr.c **** #include "../extra/others/snapshot/lv_snapshot.h"
  21:lvgl/src/core/lv_refr.c **** 
  22:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR || LV_USE_MEM_MONITOR
  23:lvgl/src/core/lv_refr.c ****     #include "../widgets/lv_label.h"
  24:lvgl/src/core/lv_refr.c **** #endif
  25:lvgl/src/core/lv_refr.c **** 
  26:lvgl/src/core/lv_refr.c **** /*********************
  27:lvgl/src/core/lv_refr.c ****  *      DEFINES
  28:lvgl/src/core/lv_refr.c ****  *********************/
  29:lvgl/src/core/lv_refr.c **** 
  30:lvgl/src/core/lv_refr.c **** /**********************
  31:lvgl/src/core/lv_refr.c ****  *      TYPEDEFS
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 2


  32:lvgl/src/core/lv_refr.c ****  **********************/
  33:lvgl/src/core/lv_refr.c **** typedef struct {
  34:lvgl/src/core/lv_refr.c ****     uint32_t    perf_last_time;
  35:lvgl/src/core/lv_refr.c ****     uint32_t    elaps_sum;
  36:lvgl/src/core/lv_refr.c ****     uint32_t    frame_cnt;
  37:lvgl/src/core/lv_refr.c ****     uint32_t    fps_sum_cnt;
  38:lvgl/src/core/lv_refr.c ****     uint32_t    fps_sum_all;
  39:lvgl/src/core/lv_refr.c **** #if LV_USE_LABEL
  40:lvgl/src/core/lv_refr.c ****     lv_obj_t  * perf_label;
  41:lvgl/src/core/lv_refr.c **** #endif
  42:lvgl/src/core/lv_refr.c **** } perf_monitor_t;
  43:lvgl/src/core/lv_refr.c **** 
  44:lvgl/src/core/lv_refr.c **** typedef struct {
  45:lvgl/src/core/lv_refr.c ****     uint32_t     mem_last_time;
  46:lvgl/src/core/lv_refr.c **** #if LV_USE_LABEL
  47:lvgl/src/core/lv_refr.c ****     lv_obj_t  *  mem_label;
  48:lvgl/src/core/lv_refr.c **** #endif
  49:lvgl/src/core/lv_refr.c **** } mem_monitor_t;
  50:lvgl/src/core/lv_refr.c **** 
  51:lvgl/src/core/lv_refr.c **** /**********************
  52:lvgl/src/core/lv_refr.c ****  *  STATIC PROTOTYPES
  53:lvgl/src/core/lv_refr.c ****  **********************/
  54:lvgl/src/core/lv_refr.c **** static void lv_refr_join_area(void);
  55:lvgl/src/core/lv_refr.c **** static void refr_invalid_areas(void);
  56:lvgl/src/core/lv_refr.c **** static void refr_sync_areas(void);
  57:lvgl/src/core/lv_refr.c **** static void refr_area(const lv_area_t * area_p);
  58:lvgl/src/core/lv_refr.c **** static void refr_area_part(lv_draw_ctx_t * draw_ctx);
  59:lvgl/src/core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj);
  60:lvgl/src/core/lv_refr.c **** static void refr_obj_and_children(lv_draw_ctx_t * draw_ctx, lv_obj_t * top_obj);
  61:lvgl/src/core/lv_refr.c **** static void refr_obj(lv_draw_ctx_t * draw_ctx, lv_obj_t * obj);
  62:lvgl/src/core/lv_refr.c **** static uint32_t get_max_row(lv_disp_t * disp, lv_coord_t area_w, lv_coord_t area_h);
  63:lvgl/src/core/lv_refr.c **** static void draw_buf_flush(lv_disp_t * disp);
  64:lvgl/src/core/lv_refr.c **** static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p);
  65:lvgl/src/core/lv_refr.c **** 
  66:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  67:lvgl/src/core/lv_refr.c ****     static void perf_monitor_init(perf_monitor_t * perf_monitor);
  68:lvgl/src/core/lv_refr.c **** #endif
  69:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
  70:lvgl/src/core/lv_refr.c ****     static void mem_monitor_init(mem_monitor_t * mem_monitor);
  71:lvgl/src/core/lv_refr.c **** #endif
  72:lvgl/src/core/lv_refr.c **** 
  73:lvgl/src/core/lv_refr.c **** /**********************
  74:lvgl/src/core/lv_refr.c ****  *  STATIC VARIABLES
  75:lvgl/src/core/lv_refr.c ****  **********************/
  76:lvgl/src/core/lv_refr.c **** static uint32_t px_num;
  77:lvgl/src/core/lv_refr.c **** static lv_disp_t * disp_refr; /*Display being refreshed*/
  78:lvgl/src/core/lv_refr.c **** 
  79:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
  80:lvgl/src/core/lv_refr.c ****     static perf_monitor_t   perf_monitor;
  81:lvgl/src/core/lv_refr.c **** #endif
  82:lvgl/src/core/lv_refr.c **** 
  83:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
  84:lvgl/src/core/lv_refr.c ****     static mem_monitor_t    mem_monitor;
  85:lvgl/src/core/lv_refr.c **** #endif
  86:lvgl/src/core/lv_refr.c **** 
  87:lvgl/src/core/lv_refr.c **** /**********************
  88:lvgl/src/core/lv_refr.c ****  *      MACROS
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 3


  89:lvgl/src/core/lv_refr.c ****  **********************/
  90:lvgl/src/core/lv_refr.c **** #if LV_LOG_TRACE_DISP_REFR
  91:lvgl/src/core/lv_refr.c ****     #define REFR_TRACE(...) LV_LOG_TRACE(__VA_ARGS__)
  92:lvgl/src/core/lv_refr.c **** #else
  93:lvgl/src/core/lv_refr.c ****     #define REFR_TRACE(...)
  94:lvgl/src/core/lv_refr.c **** #endif
  95:lvgl/src/core/lv_refr.c **** 
  96:lvgl/src/core/lv_refr.c **** /**********************
  97:lvgl/src/core/lv_refr.c ****  *   GLOBAL FUNCTIONS
  98:lvgl/src/core/lv_refr.c ****  **********************/
  99:lvgl/src/core/lv_refr.c **** 
 100:lvgl/src/core/lv_refr.c **** /**
 101:lvgl/src/core/lv_refr.c ****  * Initialize the screen refresh subsystem
 102:lvgl/src/core/lv_refr.c ****  */
 103:lvgl/src/core/lv_refr.c **** void _lv_refr_init(void)
 104:lvgl/src/core/lv_refr.c **** {
 105:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 106:lvgl/src/core/lv_refr.c ****     perf_monitor_init(&perf_monitor);
 107:lvgl/src/core/lv_refr.c **** #endif
 108:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
 109:lvgl/src/core/lv_refr.c ****     mem_monitor_init(&mem_monitor);
 110:lvgl/src/core/lv_refr.c **** #endif
 111:lvgl/src/core/lv_refr.c **** }
 112:lvgl/src/core/lv_refr.c **** 
 113:lvgl/src/core/lv_refr.c **** void lv_refr_now(lv_disp_t * disp)
 114:lvgl/src/core/lv_refr.c **** {
 115:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 116:lvgl/src/core/lv_refr.c **** 
 117:lvgl/src/core/lv_refr.c ****     if(disp) {
 118:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 119:lvgl/src/core/lv_refr.c ****     }
 120:lvgl/src/core/lv_refr.c ****     else {
 121:lvgl/src/core/lv_refr.c ****         lv_disp_t * d;
 122:lvgl/src/core/lv_refr.c ****         d = lv_disp_get_next(NULL);
 123:lvgl/src/core/lv_refr.c ****         while(d) {
 124:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 125:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 126:lvgl/src/core/lv_refr.c ****         }
 127:lvgl/src/core/lv_refr.c ****     }
 128:lvgl/src/core/lv_refr.c **** }
 129:lvgl/src/core/lv_refr.c **** 
 130:lvgl/src/core/lv_refr.c **** void lv_obj_redraw(lv_draw_ctx_t * draw_ctx, lv_obj_t * obj)
 131:lvgl/src/core/lv_refr.c **** {
 132:lvgl/src/core/lv_refr.c ****     const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 133:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 134:lvgl/src/core/lv_refr.c **** 
 135:lvgl/src/core/lv_refr.c ****     /*Truncate the clip area to `obj size + ext size` area*/
 136:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 137:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 138:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 139:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 140:lvgl/src/core/lv_refr.c ****     bool com_clip_res = _lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext);
 141:lvgl/src/core/lv_refr.c ****     /*If the object is visible on the current clip area OR has overflow visible draw it.
 142:lvgl/src/core/lv_refr.c ****      *With overflow visible drawing should happen to apply the masks which might affect children */
 143:lvgl/src/core/lv_refr.c ****     bool should_draw = com_clip_res || lv_obj_has_flag(obj, LV_OBJ_FLAG_OVERFLOW_VISIBLE);
 144:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 145:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 4


 146:lvgl/src/core/lv_refr.c **** 
 147:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_MAIN_BEGIN, draw_ctx);
 148:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_MAIN, draw_ctx);
 149:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_MAIN_END, draw_ctx);
 150:lvgl/src/core/lv_refr.c **** #if LV_USE_REFR_DEBUG
 151:lvgl/src/core/lv_refr.c ****         lv_color_t debug_color = lv_color_make(lv_rand(0, 0xFF), lv_rand(0, 0xFF), lv_rand(0, 0xFF)
 152:lvgl/src/core/lv_refr.c ****         lv_draw_rect_dsc_t draw_dsc;
 153:lvgl/src/core/lv_refr.c ****         lv_draw_rect_dsc_init(&draw_dsc);
 154:lvgl/src/core/lv_refr.c ****         draw_dsc.bg_color.full = debug_color.full;
 155:lvgl/src/core/lv_refr.c ****         draw_dsc.bg_opa = LV_OPA_20;
 156:lvgl/src/core/lv_refr.c ****         draw_dsc.border_width = 1;
 157:lvgl/src/core/lv_refr.c ****         draw_dsc.border_opa = LV_OPA_30;
 158:lvgl/src/core/lv_refr.c ****         draw_dsc.border_color = debug_color;
 159:lvgl/src/core/lv_refr.c ****         lv_draw_rect(draw_ctx, &draw_dsc, &obj_coords_ext);
 160:lvgl/src/core/lv_refr.c **** #endif
 161:lvgl/src/core/lv_refr.c ****     }
 162:lvgl/src/core/lv_refr.c **** 
 163:lvgl/src/core/lv_refr.c ****     /*With overflow visible keep the previous clip area to let the children visible out of this obj
 164:lvgl/src/core/lv_refr.c ****      *With not overflow visible limit the clip are to the object's coordinates to clip the children
 165:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_children;
 166:lvgl/src/core/lv_refr.c ****     bool refr_children = true;
 167:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_OVERFLOW_VISIBLE)) {
 168:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 169:lvgl/src/core/lv_refr.c ****     }
 170:lvgl/src/core/lv_refr.c ****     else {
 171:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_children, clip_area_ori, &obj->coords)) {
 172:lvgl/src/core/lv_refr.c ****             refr_children = false;
 173:lvgl/src/core/lv_refr.c ****         }
 174:lvgl/src/core/lv_refr.c ****     }
 175:lvgl/src/core/lv_refr.c **** 
 176:lvgl/src/core/lv_refr.c ****     if(refr_children) {
 177:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_children;
 178:lvgl/src/core/lv_refr.c ****         uint32_t i;
 179:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 180:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 181:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 182:lvgl/src/core/lv_refr.c ****             refr_obj(draw_ctx, child);
 183:lvgl/src/core/lv_refr.c ****         }
 184:lvgl/src/core/lv_refr.c ****     }
 185:lvgl/src/core/lv_refr.c **** 
 186:lvgl/src/core/lv_refr.c ****     /*If the object was visible on the clip area call the post draw events too*/
 187:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 188:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
 189:lvgl/src/core/lv_refr.c **** 
 190:lvgl/src/core/lv_refr.c ****         /*If all the children are redrawn make 'post draw' draw*/
 191:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_POST_BEGIN, draw_ctx);
 192:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_POST, draw_ctx);
 193:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_POST_END, draw_ctx);
 194:lvgl/src/core/lv_refr.c ****     }
 195:lvgl/src/core/lv_refr.c **** 
 196:lvgl/src/core/lv_refr.c ****     draw_ctx->clip_area = clip_area_ori;
 197:lvgl/src/core/lv_refr.c **** }
 198:lvgl/src/core/lv_refr.c **** 
 199:lvgl/src/core/lv_refr.c **** /**
 200:lvgl/src/core/lv_refr.c ****  * Invalidate an area on display to redraw it
 201:lvgl/src/core/lv_refr.c ****  * @param area_p pointer to area which should be invalidated (NULL: delete the invalidated areas)
 202:lvgl/src/core/lv_refr.c ****  * @param disp pointer to display where the area should be invalidated (NULL can be used if there i
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 5


 203:lvgl/src/core/lv_refr.c ****  * only one display)
 204:lvgl/src/core/lv_refr.c ****  */
 205:lvgl/src/core/lv_refr.c **** void _lv_inv_area(lv_disp_t * disp, const lv_area_t * area_p)
 206:lvgl/src/core/lv_refr.c **** {
 207:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 208:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 209:lvgl/src/core/lv_refr.c ****     if(!lv_disp_is_invalidation_enabled(disp)) return;
 210:lvgl/src/core/lv_refr.c **** 
 211:lvgl/src/core/lv_refr.c ****     if(disp->rendering_in_progress) {
 212:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("detected modifying dirty areas in render");
 213:lvgl/src/core/lv_refr.c ****         return;
 214:lvgl/src/core/lv_refr.c ****     }
 215:lvgl/src/core/lv_refr.c **** 
 216:lvgl/src/core/lv_refr.c ****     /*Clear the invalidate buffer if the parameter is NULL*/
 217:lvgl/src/core/lv_refr.c ****     if(area_p == NULL) {
 218:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 219:lvgl/src/core/lv_refr.c ****         return;
 220:lvgl/src/core/lv_refr.c ****     }
 221:lvgl/src/core/lv_refr.c **** 
 222:lvgl/src/core/lv_refr.c ****     lv_area_t scr_area;
 223:lvgl/src/core/lv_refr.c ****     scr_area.x1 = 0;
 224:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 225:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 226:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 227:lvgl/src/core/lv_refr.c **** 
 228:lvgl/src/core/lv_refr.c ****     lv_area_t com_area;
 229:lvgl/src/core/lv_refr.c ****     bool suc;
 230:lvgl/src/core/lv_refr.c **** 
 231:lvgl/src/core/lv_refr.c ****     suc = _lv_area_intersect(&com_area, area_p, &scr_area);
 232:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 233:lvgl/src/core/lv_refr.c **** 
 234:lvgl/src/core/lv_refr.c ****     /*If there were at least 1 invalid area in full refresh mode, redraw the whole screen*/
 235:lvgl/src/core/lv_refr.c ****     if(disp->driver->full_refresh) {
 236:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 237:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 238:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 239:lvgl/src/core/lv_refr.c ****         return;
 240:lvgl/src/core/lv_refr.c ****     }
 241:lvgl/src/core/lv_refr.c **** 
 242:lvgl/src/core/lv_refr.c ****     if(disp->driver->rounder_cb) disp->driver->rounder_cb(disp->driver, &com_area);
 243:lvgl/src/core/lv_refr.c **** 
 244:lvgl/src/core/lv_refr.c ****     /*Save only if this area is not in one of the saved areas*/
 245:lvgl/src/core/lv_refr.c ****     uint16_t i;
 246:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp->inv_p; i++) {
 247:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 248:lvgl/src/core/lv_refr.c ****     }
 249:lvgl/src/core/lv_refr.c **** 
 250:lvgl/src/core/lv_refr.c ****     /*Save the area*/
 251:lvgl/src/core/lv_refr.c ****     if(disp->inv_p < LV_INV_BUF_SIZE) {
 252:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 253:lvgl/src/core/lv_refr.c ****     }
 254:lvgl/src/core/lv_refr.c ****     else {   /*If no place for the area add the screen*/
 255:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 256:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 257:lvgl/src/core/lv_refr.c ****     }
 258:lvgl/src/core/lv_refr.c ****     disp->inv_p++;
 259:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 6


 260:lvgl/src/core/lv_refr.c **** }
 261:lvgl/src/core/lv_refr.c **** 
 262:lvgl/src/core/lv_refr.c **** /**
 263:lvgl/src/core/lv_refr.c ****  * Get the display which is being refreshed
 264:lvgl/src/core/lv_refr.c ****  * @return the display being refreshed
 265:lvgl/src/core/lv_refr.c ****  */
 266:lvgl/src/core/lv_refr.c **** lv_disp_t * _lv_refr_get_disp_refreshing(void)
 267:lvgl/src/core/lv_refr.c **** {
 268:lvgl/src/core/lv_refr.c ****     return disp_refr;
 269:lvgl/src/core/lv_refr.c **** }
 270:lvgl/src/core/lv_refr.c **** 
 271:lvgl/src/core/lv_refr.c **** /**
 272:lvgl/src/core/lv_refr.c ****  * Set the display which is being refreshed.
 273:lvgl/src/core/lv_refr.c ****  * It shouldn't be used directly by the user.
 274:lvgl/src/core/lv_refr.c ****  * It can be used to trick the drawing functions about there is an active display.
 275:lvgl/src/core/lv_refr.c ****  * @param the display being refreshed
 276:lvgl/src/core/lv_refr.c ****  */
 277:lvgl/src/core/lv_refr.c **** void _lv_refr_set_disp_refreshing(lv_disp_t * disp)
 278:lvgl/src/core/lv_refr.c **** {
 279:lvgl/src/core/lv_refr.c ****     disp_refr = disp;
 280:lvgl/src/core/lv_refr.c **** }
 281:lvgl/src/core/lv_refr.c **** 
 282:lvgl/src/core/lv_refr.c **** /**
 283:lvgl/src/core/lv_refr.c ****  * Called periodically to handle the refreshing
 284:lvgl/src/core/lv_refr.c ****  * @param tmr pointer to the timer itself
 285:lvgl/src/core/lv_refr.c ****  */
 286:lvgl/src/core/lv_refr.c **** void _lv_disp_refr_timer(lv_timer_t * tmr)
 287:lvgl/src/core/lv_refr.c **** {
 288:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 289:lvgl/src/core/lv_refr.c **** 
 290:lvgl/src/core/lv_refr.c ****     uint32_t start = lv_tick_get();
 291:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 292:lvgl/src/core/lv_refr.c **** 
 293:lvgl/src/core/lv_refr.c ****     if(tmr) {
 294:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 295:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 296:lvgl/src/core/lv_refr.c ****         /**
 297:lvgl/src/core/lv_refr.c ****          * Ensure the timer does not run again automatically.
 298:lvgl/src/core/lv_refr.c ****          * This is done before refreshing in case refreshing invalidates something else.
 299:lvgl/src/core/lv_refr.c ****          */
 300:lvgl/src/core/lv_refr.c ****         lv_timer_pause(tmr);
 301:lvgl/src/core/lv_refr.c **** #endif
 302:lvgl/src/core/lv_refr.c ****     }
 303:lvgl/src/core/lv_refr.c ****     else {
 304:lvgl/src/core/lv_refr.c ****         disp_refr = lv_disp_get_default();
 305:lvgl/src/core/lv_refr.c ****     }
 306:lvgl/src/core/lv_refr.c **** 
 307:lvgl/src/core/lv_refr.c ****     /*Refresh the screen's layout if required*/
 308:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->act_scr);
 309:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 310:lvgl/src/core/lv_refr.c **** 
 311:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->top_layer);
 312:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 313:lvgl/src/core/lv_refr.c **** 
 314:lvgl/src/core/lv_refr.c ****     /*Do nothing if there is no active screen*/
 315:lvgl/src/core/lv_refr.c ****     if(disp_refr->act_scr == NULL) {
 316:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 7


 317:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 318:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 319:lvgl/src/core/lv_refr.c ****         return;
 320:lvgl/src/core/lv_refr.c ****     }
 321:lvgl/src/core/lv_refr.c **** 
 322:lvgl/src/core/lv_refr.c ****     lv_refr_join_area();
 323:lvgl/src/core/lv_refr.c ****     refr_sync_areas();
 324:lvgl/src/core/lv_refr.c ****     refr_invalid_areas();
 325:lvgl/src/core/lv_refr.c **** 
 326:lvgl/src/core/lv_refr.c ****     /*If refresh happened ...*/
 327:lvgl/src/core/lv_refr.c ****     if(disp_refr->inv_p != 0) {
 328:lvgl/src/core/lv_refr.c **** 
 329:lvgl/src/core/lv_refr.c ****         /*Copy invalid areas for sync next refresh in double buffered direct mode*/
 330:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->direct_mode && disp_refr->driver->draw_buf->buf2) {
 331:lvgl/src/core/lv_refr.c **** 
 332:lvgl/src/core/lv_refr.c ****             uint16_t i;
 333:lvgl/src/core/lv_refr.c ****             for(i = 0; i < disp_refr->inv_p; i++) {
 334:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 335:lvgl/src/core/lv_refr.c ****                     continue;
 336:lvgl/src/core/lv_refr.c **** 
 337:lvgl/src/core/lv_refr.c ****                 lv_area_t * sync_area = _lv_ll_ins_tail(&disp_refr->sync_areas);
 338:lvgl/src/core/lv_refr.c ****                 *sync_area = disp_refr->inv_areas[i];
 339:lvgl/src/core/lv_refr.c ****             }
 340:lvgl/src/core/lv_refr.c ****         }
 341:lvgl/src/core/lv_refr.c **** 
 342:lvgl/src/core/lv_refr.c ****         /*Clean up*/
 343:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_areas, sizeof(disp_refr->inv_areas));
 344:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 345:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 346:lvgl/src/core/lv_refr.c **** 
 347:lvgl/src/core/lv_refr.c ****         elaps = lv_tick_elaps(start);
 348:lvgl/src/core/lv_refr.c **** 
 349:lvgl/src/core/lv_refr.c ****         /*Call monitor cb if present*/
 350:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->monitor_cb) {
 351:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 352:lvgl/src/core/lv_refr.c ****         }
 353:lvgl/src/core/lv_refr.c ****     }
 354:lvgl/src/core/lv_refr.c **** 
 355:lvgl/src/core/lv_refr.c ****     lv_mem_buf_free_all();
 356:lvgl/src/core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 357:lvgl/src/core/lv_refr.c **** 
 358:lvgl/src/core/lv_refr.c **** #if LV_DRAW_COMPLEX
 359:lvgl/src/core/lv_refr.c ****     _lv_draw_mask_cleanup();
 360:lvgl/src/core/lv_refr.c **** #endif
 361:lvgl/src/core/lv_refr.c **** 
 362:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR && LV_USE_LABEL
 363:lvgl/src/core/lv_refr.c ****     lv_obj_t * perf_label = perf_monitor.perf_label;
 364:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 365:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 366:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 367:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(perf_label, lv_color_black(), 0);
 368:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 369:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 370:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(perf_label, 3, 0);
 371:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(perf_label, 3, 0);
 372:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(perf_label, 3, 0);
 373:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_align(perf_label, LV_TEXT_ALIGN_RIGHT, 0);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 8


 374:lvgl/src/core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 375:lvgl/src/core/lv_refr.c ****         lv_obj_align(perf_label, LV_USE_PERF_MONITOR_POS, 0, 0);
 376:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_label = perf_label;
 377:lvgl/src/core/lv_refr.c ****     }
 378:lvgl/src/core/lv_refr.c **** 
 379:lvgl/src/core/lv_refr.c ****     if(lv_tick_elaps(perf_monitor.perf_last_time) < 300) {
 380:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 381:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 382:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 383:lvgl/src/core/lv_refr.c ****         }
 384:lvgl/src/core/lv_refr.c ****     }
 385:lvgl/src/core/lv_refr.c ****     else {
 386:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_last_time = lv_tick_get();
 387:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit;
 388:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 389:lvgl/src/core/lv_refr.c **** 
 390:lvgl/src/core/lv_refr.c ****         if(disp_refr->refr_timer) {
 391:lvgl/src/core/lv_refr.c ****             fps_limit = 1000 / disp_refr->refr_timer->period;
 392:lvgl/src/core/lv_refr.c ****         }
 393:lvgl/src/core/lv_refr.c ****         else {
 394:lvgl/src/core/lv_refr.c ****             fps_limit = 1000 / LV_DISP_DEF_REFR_PERIOD;
 395:lvgl/src/core/lv_refr.c ****         }
 396:lvgl/src/core/lv_refr.c **** 
 397:lvgl/src/core/lv_refr.c ****         if(perf_monitor.elaps_sum == 0) {
 398:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 399:lvgl/src/core/lv_refr.c ****         }
 400:lvgl/src/core/lv_refr.c ****         if(perf_monitor.frame_cnt == 0) {
 401:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 402:lvgl/src/core/lv_refr.c ****         }
 403:lvgl/src/core/lv_refr.c ****         else {
 404:lvgl/src/core/lv_refr.c ****             fps = (1000 * perf_monitor.frame_cnt) / perf_monitor.elaps_sum;
 405:lvgl/src/core/lv_refr.c ****         }
 406:lvgl/src/core/lv_refr.c ****         perf_monitor.elaps_sum = 0;
 407:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 408:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 409:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 410:lvgl/src/core/lv_refr.c ****         }
 411:lvgl/src/core/lv_refr.c **** 
 412:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_all += fps;
 413:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 414:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 415:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 416:lvgl/src/core/lv_refr.c ****     }
 417:lvgl/src/core/lv_refr.c **** #endif
 418:lvgl/src/core/lv_refr.c **** 
 419:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR && LV_MEM_CUSTOM == 0 && LV_USE_LABEL
 420:lvgl/src/core/lv_refr.c ****     lv_obj_t * mem_label = mem_monitor.mem_label;
 421:lvgl/src/core/lv_refr.c ****     if(mem_label == NULL) {
 422:lvgl/src/core/lv_refr.c ****         mem_label = lv_label_create(lv_layer_sys());
 423:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(mem_label, LV_OPA_50, 0);
 424:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(mem_label, lv_color_black(), 0);
 425:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(mem_label, lv_color_white(), 0);
 426:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(mem_label, 3, 0);
 427:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(mem_label, 3, 0);
 428:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(mem_label, 3, 0);
 429:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(mem_label, 3, 0);
 430:lvgl/src/core/lv_refr.c ****         lv_label_set_text(mem_label, "?");
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 9


 431:lvgl/src/core/lv_refr.c ****         lv_obj_align(mem_label, LV_USE_MEM_MONITOR_POS, 0, 0);
 432:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_label = mem_label;
 433:lvgl/src/core/lv_refr.c ****     }
 434:lvgl/src/core/lv_refr.c **** 
 435:lvgl/src/core/lv_refr.c ****     if(lv_tick_elaps(mem_monitor.mem_last_time) > 300) {
 436:lvgl/src/core/lv_refr.c ****         mem_monitor.mem_last_time = lv_tick_get();
 437:lvgl/src/core/lv_refr.c ****         lv_mem_monitor_t mon;
 438:lvgl/src/core/lv_refr.c ****         lv_mem_monitor(&mon);
 439:lvgl/src/core/lv_refr.c ****         uint32_t used_size = mon.total_size - mon.free_size;;
 440:lvgl/src/core/lv_refr.c ****         uint32_t used_kb = used_size / 1024;
 441:lvgl/src/core/lv_refr.c ****         uint32_t used_kb_tenth = (used_size - (used_kb * 1024)) / 102;
 442:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(mem_label,
 443:lvgl/src/core/lv_refr.c ****                               "%"LV_PRIu32 ".%"LV_PRIu32 " kB used (%d %%)\n"
 444:lvgl/src/core/lv_refr.c ****                               "%d%% frag.",
 445:lvgl/src/core/lv_refr.c ****                               used_kb, used_kb_tenth, mon.used_pct,
 446:lvgl/src/core/lv_refr.c ****                               mon.frag_pct);
 447:lvgl/src/core/lv_refr.c ****     }
 448:lvgl/src/core/lv_refr.c **** #endif
 449:lvgl/src/core/lv_refr.c **** 
 450:lvgl/src/core/lv_refr.c ****     REFR_TRACE("finished");
 451:lvgl/src/core/lv_refr.c **** }
 452:lvgl/src/core/lv_refr.c **** 
 453:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 454:lvgl/src/core/lv_refr.c **** void lv_refr_reset_fps_counter(void)
 455:lvgl/src/core/lv_refr.c **** {
 456:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_all = 0;
 457:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 458:lvgl/src/core/lv_refr.c **** }
 459:lvgl/src/core/lv_refr.c **** 
 460:lvgl/src/core/lv_refr.c **** uint32_t lv_refr_get_fps_avg(void)
 461:lvgl/src/core/lv_refr.c **** {
 462:lvgl/src/core/lv_refr.c ****     if(perf_monitor.fps_sum_cnt == 0) {
 463:lvgl/src/core/lv_refr.c ****         return 0;
 464:lvgl/src/core/lv_refr.c ****     }
 465:lvgl/src/core/lv_refr.c ****     return perf_monitor.fps_sum_all / perf_monitor.fps_sum_cnt;
 466:lvgl/src/core/lv_refr.c **** }
 467:lvgl/src/core/lv_refr.c **** #endif
 468:lvgl/src/core/lv_refr.c **** 
 469:lvgl/src/core/lv_refr.c **** /**********************
 470:lvgl/src/core/lv_refr.c ****  *   STATIC FUNCTIONS
 471:lvgl/src/core/lv_refr.c ****  **********************/
 472:lvgl/src/core/lv_refr.c **** 
 473:lvgl/src/core/lv_refr.c **** /**
 474:lvgl/src/core/lv_refr.c ****  * Join the areas which has got common parts
 475:lvgl/src/core/lv_refr.c ****  */
 476:lvgl/src/core/lv_refr.c **** static void lv_refr_join_area(void)
 477:lvgl/src/core/lv_refr.c **** {
 478:lvgl/src/core/lv_refr.c ****     uint32_t join_from;
 479:lvgl/src/core/lv_refr.c ****     uint32_t join_in;
 480:lvgl/src/core/lv_refr.c ****     lv_area_t joined_area;
 481:lvgl/src/core/lv_refr.c ****     for(join_in = 0; join_in < disp_refr->inv_p; join_in++) {
 482:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 483:lvgl/src/core/lv_refr.c **** 
 484:lvgl/src/core/lv_refr.c ****         /*Check all areas to join them in 'join_in'*/
 485:lvgl/src/core/lv_refr.c ****         for(join_from = 0; join_from < disp_refr->inv_p; join_from++) {
 486:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 487:lvgl/src/core/lv_refr.c ****             if(disp_refr->inv_area_joined[join_from] != 0 || join_in == join_from) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 10


 488:lvgl/src/core/lv_refr.c ****                 continue;
 489:lvgl/src/core/lv_refr.c ****             }
 490:lvgl/src/core/lv_refr.c **** 
 491:lvgl/src/core/lv_refr.c ****             /*Check if the areas are on each other*/
 492:lvgl/src/core/lv_refr.c ****             if(_lv_area_is_on(&disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_from]) == 
 493:lvgl/src/core/lv_refr.c ****                 continue;
 494:lvgl/src/core/lv_refr.c ****             }
 495:lvgl/src/core/lv_refr.c **** 
 496:lvgl/src/core/lv_refr.c ****             _lv_area_join(&joined_area, &disp_refr->inv_areas[join_in], &disp_refr->inv_areas[join_
 497:lvgl/src/core/lv_refr.c **** 
 498:lvgl/src/core/lv_refr.c ****             /*Join two area only if the joined area size is smaller*/
 499:lvgl/src/core/lv_refr.c ****             if(lv_area_get_size(&joined_area) < (lv_area_get_size(&disp_refr->inv_areas[join_in]) +
 500:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 501:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 502:lvgl/src/core/lv_refr.c **** 
 503:lvgl/src/core/lv_refr.c ****                 /*Mark 'join_form' is joined into 'join_in'*/
 504:lvgl/src/core/lv_refr.c ****                 disp_refr->inv_area_joined[join_from] = 1;
 505:lvgl/src/core/lv_refr.c ****             }
 506:lvgl/src/core/lv_refr.c ****         }
 507:lvgl/src/core/lv_refr.c ****     }
 508:lvgl/src/core/lv_refr.c **** }
 509:lvgl/src/core/lv_refr.c **** 
 510:lvgl/src/core/lv_refr.c **** /**
 511:lvgl/src/core/lv_refr.c ****  * Refresh the sync areas
 512:lvgl/src/core/lv_refr.c ****  */
 513:lvgl/src/core/lv_refr.c **** static void refr_sync_areas(void)
 514:lvgl/src/core/lv_refr.c **** {
 515:lvgl/src/core/lv_refr.c ****     /*Do not sync if not direct mode*/
 516:lvgl/src/core/lv_refr.c ****     if(!disp_refr->driver->direct_mode) return;
 517:lvgl/src/core/lv_refr.c **** 
 518:lvgl/src/core/lv_refr.c ****     /*Do not sync if not double buffered*/
 519:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->draw_buf->buf2 == NULL) return;
 520:lvgl/src/core/lv_refr.c **** 
 521:lvgl/src/core/lv_refr.c ****     /*Do not sync if no sync areas*/
 522:lvgl/src/core/lv_refr.c ****     if(_lv_ll_is_empty(&disp_refr->sync_areas)) return;
 523:lvgl/src/core/lv_refr.c **** 
 524:lvgl/src/core/lv_refr.c ****     /*The buffers are already swapped.
 525:lvgl/src/core/lv_refr.c ****      *So the active buffer is the off screen buffer where LVGL will render*/
 526:lvgl/src/core/lv_refr.c ****     void * buf_off_screen = disp_refr->driver->draw_buf->buf_act;
 527:lvgl/src/core/lv_refr.c ****     void * buf_on_screen = disp_refr->driver->draw_buf->buf_act == disp_refr->driver->draw_buf->buf
 528:lvgl/src/core/lv_refr.c ****                            ? disp_refr->driver->draw_buf->buf2
 529:lvgl/src/core/lv_refr.c ****                            : disp_refr->driver->draw_buf->buf1;
 530:lvgl/src/core/lv_refr.c **** 
 531:lvgl/src/core/lv_refr.c ****     /*Get stride for buffer copy*/
 532:lvgl/src/core/lv_refr.c ****     lv_coord_t stride = lv_disp_get_hor_res(disp_refr);
 533:lvgl/src/core/lv_refr.c **** 
 534:lvgl/src/core/lv_refr.c ****     /*Iterate through invalidated areas to see if sync area should be copied*/
 535:lvgl/src/core/lv_refr.c ****     lv_area_t res[4] = {0};
 536:lvgl/src/core/lv_refr.c ****     int8_t res_c, j;
 537:lvgl/src/core/lv_refr.c ****     uint32_t i;
 538:lvgl/src/core/lv_refr.c ****     lv_area_t * sync_area, * new_area, * next_area;
 539:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp_refr->inv_p; i++) {
 540:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 541:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i]) continue;
 542:lvgl/src/core/lv_refr.c **** 
 543:lvgl/src/core/lv_refr.c ****         /*Iterate over sync areas*/
 544:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_head(&disp_refr->sync_areas);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 11


 545:lvgl/src/core/lv_refr.c ****         while(sync_area != NULL) {
 546:lvgl/src/core/lv_refr.c ****             /*Get next sync area*/
 547:lvgl/src/core/lv_refr.c ****             next_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area);
 548:lvgl/src/core/lv_refr.c **** 
 549:lvgl/src/core/lv_refr.c ****             /*Remove intersect of redraw area from sync area and get remaining areas*/
 550:lvgl/src/core/lv_refr.c ****             res_c = _lv_area_diff(res, sync_area, &disp_refr->inv_areas[i]);
 551:lvgl/src/core/lv_refr.c **** 
 552:lvgl/src/core/lv_refr.c ****             /*New sub areas created after removing intersect*/
 553:lvgl/src/core/lv_refr.c ****             if(res_c != -1) {
 554:lvgl/src/core/lv_refr.c ****                 /*Replace old sync area with new areas*/
 555:lvgl/src/core/lv_refr.c ****                 for(j = 0; j < res_c; j++) {
 556:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 557:lvgl/src/core/lv_refr.c ****                     *new_area = res[j];
 558:lvgl/src/core/lv_refr.c ****                 }
 559:lvgl/src/core/lv_refr.c ****                 _lv_ll_remove(&disp_refr->sync_areas, sync_area);
 560:lvgl/src/core/lv_refr.c ****                 lv_mem_free(sync_area);
 561:lvgl/src/core/lv_refr.c ****             }
 562:lvgl/src/core/lv_refr.c **** 
 563:lvgl/src/core/lv_refr.c ****             /*Move on to next sync area*/
 564:lvgl/src/core/lv_refr.c ****             sync_area = next_area;
 565:lvgl/src/core/lv_refr.c ****         }
 566:lvgl/src/core/lv_refr.c ****     }
 567:lvgl/src/core/lv_refr.c **** 
 568:lvgl/src/core/lv_refr.c ****     /*Copy sync areas (if any remaining)*/
 569:lvgl/src/core/lv_refr.c ****     for(sync_area = _lv_ll_get_head(&disp_refr->sync_areas); sync_area != NULL;
 570:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area)) {
 571:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_ctx->buffer_copy(
 572:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 573:lvgl/src/core/lv_refr.c ****             buf_off_screen, stride, sync_area,
 574:lvgl/src/core/lv_refr.c ****             buf_on_screen, stride, sync_area
 575:lvgl/src/core/lv_refr.c ****         );
 576:lvgl/src/core/lv_refr.c ****     }
 577:lvgl/src/core/lv_refr.c **** 
 578:lvgl/src/core/lv_refr.c ****     /*Clear sync areas*/
 579:lvgl/src/core/lv_refr.c ****     _lv_ll_clear(&disp_refr->sync_areas);
 580:lvgl/src/core/lv_refr.c **** }
 581:lvgl/src/core/lv_refr.c **** 
 582:lvgl/src/core/lv_refr.c **** /**
 583:lvgl/src/core/lv_refr.c ****  * Refresh the joined areas
 584:lvgl/src/core/lv_refr.c ****  */
 585:lvgl/src/core/lv_refr.c **** static void refr_invalid_areas(void)
 586:lvgl/src/core/lv_refr.c **** {
 587:lvgl/src/core/lv_refr.c ****     px_num = 0;
 588:lvgl/src/core/lv_refr.c **** 
 589:lvgl/src/core/lv_refr.c ****     if(disp_refr->inv_p == 0) return;
 590:lvgl/src/core/lv_refr.c **** 
 591:lvgl/src/core/lv_refr.c ****     /*Find the last area which will be drawn*/
 592:lvgl/src/core/lv_refr.c ****     int32_t i;
 593:lvgl/src/core/lv_refr.c ****     int32_t last_i = 0;
 594:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 595:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 596:lvgl/src/core/lv_refr.c ****             last_i = i;
 597:lvgl/src/core/lv_refr.c ****             break;
 598:lvgl/src/core/lv_refr.c ****         }
 599:lvgl/src/core/lv_refr.c ****     }
 600:lvgl/src/core/lv_refr.c **** 
 601:lvgl/src/core/lv_refr.c ****     /*Notify the display driven rendering has started*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 12


 602:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->render_start_cb) {
 603:lvgl/src/core/lv_refr.c ****         disp_refr->driver->render_start_cb(disp_refr->driver);
 604:lvgl/src/core/lv_refr.c ****     }
 605:lvgl/src/core/lv_refr.c **** 
 606:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_area = 0;
 607:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 608:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = true;
 609:lvgl/src/core/lv_refr.c **** 
 610:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp_refr->inv_p; i++) {
 611:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 612:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 613:lvgl/src/core/lv_refr.c **** 
 614:lvgl/src/core/lv_refr.c ****             if(i == last_i) disp_refr->driver->draw_buf->last_area = 1;
 615:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 616:lvgl/src/core/lv_refr.c ****             refr_area(&disp_refr->inv_areas[i]);
 617:lvgl/src/core/lv_refr.c **** 
 618:lvgl/src/core/lv_refr.c ****             px_num += lv_area_get_size(&disp_refr->inv_areas[i]);
 619:lvgl/src/core/lv_refr.c ****         }
 620:lvgl/src/core/lv_refr.c ****     }
 621:lvgl/src/core/lv_refr.c **** 
 622:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = false;
 623:lvgl/src/core/lv_refr.c **** }
 624:lvgl/src/core/lv_refr.c **** 
 625:lvgl/src/core/lv_refr.c **** /**
 626:lvgl/src/core/lv_refr.c ****  * Refresh an area if there is Virtual Display Buffer
 627:lvgl/src/core/lv_refr.c ****  * @param area_p  pointer to an area to refresh
 628:lvgl/src/core/lv_refr.c ****  */
 629:lvgl/src/core/lv_refr.c **** static void refr_area(const lv_area_t * area_p)
 630:lvgl/src/core/lv_refr.c **** {
 631:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 632:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 633:lvgl/src/core/lv_refr.c **** 
 634:lvgl/src/core/lv_refr.c ****     /*With full refresh just redraw directly into the buffer*/
 635:lvgl/src/core/lv_refr.c ****     /*In direct mode draw directly on the absolute coordinates of the buffer*/
 636:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh || disp_refr->driver->direct_mode) {
 637:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 638:lvgl/src/core/lv_refr.c ****         lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_
 639:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 640:lvgl/src/core/lv_refr.c **** 
 641:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->full_refresh) {
 642:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 643:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 644:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 645:lvgl/src/core/lv_refr.c ****         }
 646:lvgl/src/core/lv_refr.c ****         else {
 647:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = disp_refr->driver->draw_buf->last_area;
 648:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 649:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 650:lvgl/src/core/lv_refr.c ****         }
 651:lvgl/src/core/lv_refr.c ****         return;
 652:lvgl/src/core/lv_refr.c ****     }
 653:lvgl/src/core/lv_refr.c **** 
 654:lvgl/src/core/lv_refr.c ****     /*Normal refresh: draw the area in parts*/
 655:lvgl/src/core/lv_refr.c ****     /*Calculate the max row num*/
 656:lvgl/src/core/lv_refr.c ****     lv_coord_t w = lv_area_get_width(area_p);
 657:lvgl/src/core/lv_refr.c ****     lv_coord_t h = lv_area_get_height(area_p);
 658:lvgl/src/core/lv_refr.c ****     lv_coord_t y2 = area_p->y2 >= lv_disp_get_ver_res(disp_refr) ?
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 13


 659:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 660:lvgl/src/core/lv_refr.c **** 
 661:lvgl/src/core/lv_refr.c ****     int32_t max_row = get_max_row(disp_refr, w, h);
 662:lvgl/src/core/lv_refr.c **** 
 663:lvgl/src/core/lv_refr.c ****     lv_coord_t row;
 664:lvgl/src/core/lv_refr.c ****     lv_coord_t row_last = 0;
 665:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 666:lvgl/src/core/lv_refr.c ****     for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 667:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 668:lvgl/src/core/lv_refr.c ****         sub_area.x1 = area_p->x1;
 669:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 670:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 671:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 672:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 673:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 674:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 675:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 676:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 677:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 678:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 679:lvgl/src/core/lv_refr.c ****     }
 680:lvgl/src/core/lv_refr.c **** 
 681:lvgl/src/core/lv_refr.c ****     /*If the last y coordinates are not handled yet ...*/
 682:lvgl/src/core/lv_refr.c ****     if(y2 != row_last) {
 683:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 684:lvgl/src/core/lv_refr.c ****         sub_area.x1 = area_p->x1;
 685:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 686:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 687:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 688:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 689:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 690:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 691:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 692:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 693:lvgl/src/core/lv_refr.c ****     }
 694:lvgl/src/core/lv_refr.c **** }
 695:lvgl/src/core/lv_refr.c **** 
 696:lvgl/src/core/lv_refr.c **** static void refr_area_part(lv_draw_ctx_t * draw_ctx)
 697:lvgl/src/core/lv_refr.c **** {
 698:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 699:lvgl/src/core/lv_refr.c **** 
 700:lvgl/src/core/lv_refr.c ****     if(draw_ctx->init_buf)
 701:lvgl/src/core/lv_refr.c ****         draw_ctx->init_buf(draw_ctx);
 702:lvgl/src/core/lv_refr.c **** 
 703:lvgl/src/core/lv_refr.c ****     /* Below the `area_p` area will be redrawn into the draw buffer.
 704:lvgl/src/core/lv_refr.c ****      * In single buffered mode wait here until the buffer is freed.
 705:lvgl/src/core/lv_refr.c ****      * In full double buffered mode wait here while the buffers are swapped and a buffer becomes av
 706:lvgl/src/core/lv_refr.c ****     bool full_sized = draw_buf->size == (uint32_t)disp_refr->driver->hor_res * disp_refr->driver->v
 707:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 708:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 709:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 710:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 711:lvgl/src/core/lv_refr.c ****         }
 712:lvgl/src/core/lv_refr.c **** 
 713:lvgl/src/core/lv_refr.c ****         /*If the screen is transparent initialize it when the flushing is ready*/
 714:lvgl/src/core/lv_refr.c **** #if LV_COLOR_SCREEN_TRANSP
 715:lvgl/src/core/lv_refr.c ****         if(disp_refr->driver->screen_transp) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 14


 716:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->clear_cb) {
 717:lvgl/src/core/lv_refr.c ****                 disp_refr->driver->clear_cb(disp_refr->driver, disp_refr->driver->draw_buf->buf_act
 718:lvgl/src/core/lv_refr.c ****             }
 719:lvgl/src/core/lv_refr.c ****             else {
 720:lvgl/src/core/lv_refr.c ****                 lv_memset_00(disp_refr->driver->draw_buf->buf_act, disp_refr->driver->draw_buf->siz
 721:lvgl/src/core/lv_refr.c ****             }
 722:lvgl/src/core/lv_refr.c ****         }
 723:lvgl/src/core/lv_refr.c **** #endif
 724:lvgl/src/core/lv_refr.c ****     }
 725:lvgl/src/core/lv_refr.c **** 
 726:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_act_scr = NULL;
 727:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 728:lvgl/src/core/lv_refr.c **** 
 729:lvgl/src/core/lv_refr.c ****     /*Get the most top object which is not covered by others*/
 730:lvgl/src/core/lv_refr.c ****     top_act_scr = lv_refr_get_top_obj(draw_ctx->buf_area, lv_disp_get_scr_act(disp_refr));
 731:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 732:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 733:lvgl/src/core/lv_refr.c ****     }
 734:lvgl/src/core/lv_refr.c **** 
 735:lvgl/src/core/lv_refr.c ****     /*Draw a display background if there is no top object*/
 736:lvgl/src/core/lv_refr.c ****     if(top_act_scr == NULL && top_prev_scr == NULL) {
 737:lvgl/src/core/lv_refr.c ****         lv_area_t a;
 738:lvgl/src/core/lv_refr.c ****         lv_area_set(&a, 0, 0,
 739:lvgl/src/core/lv_refr.c ****                     lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_refr) - 1);
 740:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 741:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 742:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 743:lvgl/src/core/lv_refr.c ****             dsc.bg_img_src = disp_refr->bg_img;
 744:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 745:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 746:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 747:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, &a);
 748:lvgl/src/core/lv_refr.c ****         }
 749:lvgl/src/core/lv_refr.c ****         else if(disp_refr->bg_img) {
 750:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 751:lvgl/src/core/lv_refr.c ****             lv_res_t res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 752:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 753:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 754:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_init(&dsc);
 755:lvgl/src/core/lv_refr.c ****                 dsc.opa = disp_refr->bg_opa;
 756:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 757:lvgl/src/core/lv_refr.c ****             }
 758:lvgl/src/core/lv_refr.c ****             else {
 759:lvgl/src/core/lv_refr.c ****                 LV_LOG_WARN("Can't draw the background image");
 760:lvgl/src/core/lv_refr.c ****             }
 761:lvgl/src/core/lv_refr.c ****         }
 762:lvgl/src/core/lv_refr.c ****         else {
 763:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 764:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 765:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 766:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 767:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 768:lvgl/src/core/lv_refr.c ****         }
 769:lvgl/src/core/lv_refr.c ****     }
 770:lvgl/src/core/lv_refr.c **** 
 771:lvgl/src/core/lv_refr.c ****     if(disp_refr->draw_prev_over_act) {
 772:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 15


 773:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 774:lvgl/src/core/lv_refr.c **** 
 775:lvgl/src/core/lv_refr.c ****         /*Refresh the previous screen if any*/
 776:lvgl/src/core/lv_refr.c ****         if(disp_refr->prev_scr) {
 777:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 778:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 779:lvgl/src/core/lv_refr.c ****         }
 780:lvgl/src/core/lv_refr.c ****     }
 781:lvgl/src/core/lv_refr.c ****     else {
 782:lvgl/src/core/lv_refr.c ****         /*Refresh the previous screen if any*/
 783:lvgl/src/core/lv_refr.c ****         if(disp_refr->prev_scr) {
 784:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 785:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 786:lvgl/src/core/lv_refr.c ****         }
 787:lvgl/src/core/lv_refr.c **** 
 788:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 789:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 790:lvgl/src/core/lv_refr.c ****     }
 791:lvgl/src/core/lv_refr.c **** 
 792:lvgl/src/core/lv_refr.c ****     /*Also refresh top and sys layer unconditionally*/
 793:lvgl/src/core/lv_refr.c ****     refr_obj_and_children(draw_ctx, lv_disp_get_layer_top(disp_refr));
 794:lvgl/src/core/lv_refr.c ****     refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 795:lvgl/src/core/lv_refr.c **** 
 796:lvgl/src/core/lv_refr.c ****     draw_buf_flush(disp_refr);
 797:lvgl/src/core/lv_refr.c **** }
 798:lvgl/src/core/lv_refr.c **** 
 799:lvgl/src/core/lv_refr.c **** /**
 800:lvgl/src/core/lv_refr.c ****  * Search the most top object which fully covers an area
 801:lvgl/src/core/lv_refr.c ****  * @param area_p pointer to an area
 802:lvgl/src/core/lv_refr.c ****  * @param obj the first object to start the searching (typically a screen)
 803:lvgl/src/core/lv_refr.c ****  * @return
 804:lvgl/src/core/lv_refr.c ****  */
 805:lvgl/src/core/lv_refr.c **** static lv_obj_t * lv_refr_get_top_obj(const lv_area_t * area_p, lv_obj_t * obj)
 806:lvgl/src/core/lv_refr.c **** {
 807:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 808:lvgl/src/core/lv_refr.c **** 
 809:lvgl/src/core/lv_refr.c ****     if(_lv_area_is_in(area_p, &obj->coords, 0) == false) return NULL;
 810:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 811:lvgl/src/core/lv_refr.c ****     if(_lv_obj_get_layer_type(obj) != LV_LAYER_TYPE_NONE) return NULL;
 812:lvgl/src/core/lv_refr.c **** 
 813:lvgl/src/core/lv_refr.c ****     /*If this object is fully cover the draw area then check the children too*/
 814:lvgl/src/core/lv_refr.c ****     lv_cover_check_info_t info;
 815:lvgl/src/core/lv_refr.c ****     info.res = LV_COVER_RES_COVER;
 816:lvgl/src/core/lv_refr.c ****     info.area = area_p;
 817:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 818:lvgl/src/core/lv_refr.c ****     if(info.res == LV_COVER_RES_MASKED) return NULL;
 819:lvgl/src/core/lv_refr.c **** 
 820:lvgl/src/core/lv_refr.c ****     int32_t i;
 821:lvgl/src/core/lv_refr.c ****     int32_t child_cnt = lv_obj_get_child_cnt(obj);
 822:lvgl/src/core/lv_refr.c ****     for(i = child_cnt - 1; i >= 0; i--) {
 823:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 824:lvgl/src/core/lv_refr.c ****         found_p = lv_refr_get_top_obj(area_p, child);
 825:lvgl/src/core/lv_refr.c **** 
 826:lvgl/src/core/lv_refr.c ****         /*If a children is ok then break*/
 827:lvgl/src/core/lv_refr.c ****         if(found_p != NULL) {
 828:lvgl/src/core/lv_refr.c ****             break;
 829:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 16


 830:lvgl/src/core/lv_refr.c ****     }
 831:lvgl/src/core/lv_refr.c **** 
 832:lvgl/src/core/lv_refr.c ****     /*If no better children use this object*/
 833:lvgl/src/core/lv_refr.c ****     if(found_p == NULL && info.res == LV_COVER_RES_COVER) {
 834:lvgl/src/core/lv_refr.c ****         found_p = obj;
 835:lvgl/src/core/lv_refr.c ****     }
 836:lvgl/src/core/lv_refr.c **** 
 837:lvgl/src/core/lv_refr.c ****     return found_p;
 838:lvgl/src/core/lv_refr.c **** }
 839:lvgl/src/core/lv_refr.c **** 
 840:lvgl/src/core/lv_refr.c **** /**
 841:lvgl/src/core/lv_refr.c ****  * Make the refreshing from an object. Draw all its children and the youngers too.
 842:lvgl/src/core/lv_refr.c ****  * @param top_p pointer to an objects. Start the drawing from it.
 843:lvgl/src/core/lv_refr.c ****  * @param mask_p pointer to an area, the objects will be drawn only here
 844:lvgl/src/core/lv_refr.c ****  */
 845:lvgl/src/core/lv_refr.c **** static void refr_obj_and_children(lv_draw_ctx_t * draw_ctx, lv_obj_t * top_obj)
 846:lvgl/src/core/lv_refr.c **** {
 847:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 848:lvgl/src/core/lv_refr.c ****      *but in special cases (e.g. if the screen has alpha) it won't.
 849:lvgl/src/core/lv_refr.c ****      *In this case use the screen directly*/
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) top_obj = lv_disp_get_scr_act(disp_refr);
 851:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 852:lvgl/src/core/lv_refr.c **** 
 853:lvgl/src/core/lv_refr.c ****     /*Refresh the top object and its children*/
 854:lvgl/src/core/lv_refr.c ****     refr_obj(draw_ctx, top_obj);
 855:lvgl/src/core/lv_refr.c **** 
 856:lvgl/src/core/lv_refr.c ****     /*Draw the 'younger' sibling objects because they can be on top_obj*/
 857:lvgl/src/core/lv_refr.c ****     lv_obj_t * parent;
 858:lvgl/src/core/lv_refr.c ****     lv_obj_t * border_p = top_obj;
 859:lvgl/src/core/lv_refr.c **** 
 860:lvgl/src/core/lv_refr.c ****     parent = lv_obj_get_parent(top_obj);
 861:lvgl/src/core/lv_refr.c **** 
 862:lvgl/src/core/lv_refr.c ****     /*Do until not reach the screen*/
 863:lvgl/src/core/lv_refr.c ****     while(parent != NULL) {
 864:lvgl/src/core/lv_refr.c ****         bool go = false;
 865:lvgl/src/core/lv_refr.c ****         uint32_t i;
 866:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(parent);
 867:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 868:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 869:lvgl/src/core/lv_refr.c ****             if(!go) {
 870:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 871:lvgl/src/core/lv_refr.c ****             }
 872:lvgl/src/core/lv_refr.c ****             else {
 873:lvgl/src/core/lv_refr.c ****                 /*Refresh the objects*/
 874:lvgl/src/core/lv_refr.c ****                 refr_obj(draw_ctx, child);
 875:lvgl/src/core/lv_refr.c ****             }
 876:lvgl/src/core/lv_refr.c ****         }
 877:lvgl/src/core/lv_refr.c **** 
 878:lvgl/src/core/lv_refr.c ****         /*Call the post draw draw function of the parents of the to object*/
 879:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_BEGIN, (void *)draw_ctx);
 880:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST, (void *)draw_ctx);
 881:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_END, (void *)draw_ctx);
 882:lvgl/src/core/lv_refr.c **** 
 883:lvgl/src/core/lv_refr.c ****         /*The new border will be the last parents,
 884:lvgl/src/core/lv_refr.c ****          *so the 'younger' brothers of parent will be refreshed*/
 885:lvgl/src/core/lv_refr.c ****         border_p = parent;
 886:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 17


 887:lvgl/src/core/lv_refr.c ****         parent = lv_obj_get_parent(parent);
 888:lvgl/src/core/lv_refr.c ****     }
 889:lvgl/src/core/lv_refr.c **** }
 890:lvgl/src/core/lv_refr.c **** 
 891:lvgl/src/core/lv_refr.c **** static lv_res_t layer_get_area(lv_draw_ctx_t * draw_ctx, lv_obj_t * obj, lv_layer_type_t layer_type
 892:lvgl/src/core/lv_refr.c ****                                lv_area_t * layer_area_out)
 893:lvgl/src/core/lv_refr.c **** {
 894:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 895:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 896:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 897:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 898:lvgl/src/core/lv_refr.c **** 
 899:lvgl/src/core/lv_refr.c ****     if(layer_type == LV_LAYER_TYPE_TRANSFORM) {
 900:lvgl/src/core/lv_refr.c ****         /*Get the transformed area and clip it to the current clip area.
 901:lvgl/src/core/lv_refr.c ****          *This area needs to be updated on the screen.*/
 902:lvgl/src/core/lv_refr.c ****         lv_area_t clip_coords_for_obj;
 903:lvgl/src/core/lv_refr.c ****         lv_area_t tranf_coords = obj_coords_ext;
 904:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &tranf_coords, false, false);
 905:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_obj, draw_ctx->clip_area, &tranf_coords)) {
 906:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 907:lvgl/src/core/lv_refr.c ****         }
 908:lvgl/src/core/lv_refr.c **** 
 909:lvgl/src/core/lv_refr.c ****         /*Transform back (inverse) the transformed area.
 910:lvgl/src/core/lv_refr.c ****          *It will tell which area of the non-transformed widget needs to be redrawn
 911:lvgl/src/core/lv_refr.c ****          *in order to cover transformed area after transformation.*/
 912:lvgl/src/core/lv_refr.c ****         lv_area_t inverse_clip_coords_for_obj = clip_coords_for_obj;
 913:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &inverse_clip_coords_for_obj, false, true);
 914:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&inverse_clip_coords_for_obj, &inverse_clip_coords_for_obj, &obj_coo
 915:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 916:lvgl/src/core/lv_refr.c ****         }
 917:lvgl/src/core/lv_refr.c **** 
 918:lvgl/src/core/lv_refr.c ****         *layer_area_out = inverse_clip_coords_for_obj;
 919:lvgl/src/core/lv_refr.c ****     }
 920:lvgl/src/core/lv_refr.c ****     else if(layer_type == LV_LAYER_TYPE_SIMPLE) {
 921:lvgl/src/core/lv_refr.c ****         lv_area_t clip_coords_for_obj;
 922:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_obj, draw_ctx->clip_area, &obj_coords_ext)) {
 923:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 924:lvgl/src/core/lv_refr.c ****         }
 925:lvgl/src/core/lv_refr.c ****         *layer_area_out = clip_coords_for_obj;
 926:lvgl/src/core/lv_refr.c ****     }
 927:lvgl/src/core/lv_refr.c ****     else {
 928:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("Unhandled intermediate layer type");
 929:lvgl/src/core/lv_refr.c ****         return LV_RES_INV;
 930:lvgl/src/core/lv_refr.c ****     }
 931:lvgl/src/core/lv_refr.c **** 
 932:lvgl/src/core/lv_refr.c ****     return LV_RES_OK;
 933:lvgl/src/core/lv_refr.c **** }
 934:lvgl/src/core/lv_refr.c **** 
 935:lvgl/src/core/lv_refr.c **** static void layer_alpha_test(lv_obj_t * obj, lv_draw_ctx_t * draw_ctx, lv_draw_layer_ctx_t * layer_
 936:lvgl/src/core/lv_refr.c ****                              lv_draw_layer_flags_t flags)
 937:lvgl/src/core/lv_refr.c **** {
 938:lvgl/src/core/lv_refr.c ****     bool has_alpha;
 939:lvgl/src/core/lv_refr.c ****     /*If globally the layer has alpha maybe this smaller section has not (e.g. not on a rounded cor
 940:lvgl/src/core/lv_refr.c ****      *If turns out that this section has no alpha renderer can choose faster algorithms*/
 941:lvgl/src/core/lv_refr.c ****     if(flags & LV_DRAW_LAYER_FLAG_HAS_ALPHA) {
 942:lvgl/src/core/lv_refr.c ****         /*Test for alpha by assuming there is no alpha. If it fails, fall back to rendering with al
 943:lvgl/src/core/lv_refr.c ****         has_alpha = true;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 18


 944:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&layer_ctx->area_act, &obj->coords, 0)) {
 945:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 946:lvgl/src/core/lv_refr.c ****             info.res = LV_COVER_RES_COVER;
 947:lvgl/src/core/lv_refr.c ****             info.area = &layer_ctx->area_act;
 948:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 949:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) has_alpha = false;
 950:lvgl/src/core/lv_refr.c ****         }
 951:lvgl/src/core/lv_refr.c **** 
 952:lvgl/src/core/lv_refr.c ****         if(has_alpha) {
 953:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_alpha - 1;
 954:lvgl/src/core/lv_refr.c ****         }
 955:lvgl/src/core/lv_refr.c ****     }
 956:lvgl/src/core/lv_refr.c ****     else {
 957:lvgl/src/core/lv_refr.c ****         has_alpha = false;
 958:lvgl/src/core/lv_refr.c ****     }
 959:lvgl/src/core/lv_refr.c **** 
 960:lvgl/src/core/lv_refr.c ****     if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx->area_f
 961:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 962:lvgl/src/core/lv_refr.c **** }
 963:lvgl/src/core/lv_refr.c **** 
 964:lvgl/src/core/lv_refr.c **** void refr_obj(lv_draw_ctx_t * draw_ctx, lv_obj_t * obj)
 965:lvgl/src/core/lv_refr.c **** {
 966:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 967:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return;
 968:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 969:lvgl/src/core/lv_refr.c ****     if(layer_type == LV_LAYER_TYPE_NONE) {
 970:lvgl/src/core/lv_refr.c ****         lv_obj_redraw(draw_ctx, obj);
 971:lvgl/src/core/lv_refr.c ****     }
 972:lvgl/src/core/lv_refr.c ****     else {
 973:lvgl/src/core/lv_refr.c ****         lv_opa_t opa = lv_obj_get_style_opa_layered(obj, 0);
 974:lvgl/src/core/lv_refr.c ****         if(opa < LV_OPA_MIN) return;
 975:lvgl/src/core/lv_refr.c **** 
 976:lvgl/src/core/lv_refr.c ****         lv_area_t layer_area_full;
 977:lvgl/src/core/lv_refr.c ****         lv_res_t res = layer_get_area(draw_ctx, obj, layer_type, &layer_area_full);
 978:lvgl/src/core/lv_refr.c ****         if(res != LV_RES_OK) return;
 979:lvgl/src/core/lv_refr.c **** 
 980:lvgl/src/core/lv_refr.c ****         lv_draw_layer_flags_t flags = LV_DRAW_LAYER_FLAG_HAS_ALPHA;
 981:lvgl/src/core/lv_refr.c **** 
 982:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&layer_area_full, &obj->coords, 0)) {
 983:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 984:lvgl/src/core/lv_refr.c ****             info.res = LV_COVER_RES_COVER;
 985:lvgl/src/core/lv_refr.c ****             info.area = &layer_area_full;
 986:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 987:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) flags &= ~LV_DRAW_LAYER_FLAG_HAS_ALPHA;
 988:lvgl/src/core/lv_refr.c ****         }
 989:lvgl/src/core/lv_refr.c **** 
 990:lvgl/src/core/lv_refr.c ****         if(layer_type == LV_LAYER_TYPE_SIMPLE) flags |= LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE;
 991:lvgl/src/core/lv_refr.c **** 
 992:lvgl/src/core/lv_refr.c ****         lv_draw_layer_ctx_t * layer_ctx = lv_draw_layer_create(draw_ctx, &layer_area_full, flags);
 993:lvgl/src/core/lv_refr.c ****         if(layer_ctx == NULL) {
 994:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Couldn't create a new layer context");
 995:lvgl/src/core/lv_refr.c ****             return;
 996:lvgl/src/core/lv_refr.c ****         }
 997:lvgl/src/core/lv_refr.c ****         lv_point_t pivot = {
 998:lvgl/src/core/lv_refr.c ****             .x = lv_obj_get_style_transform_pivot_x(obj, 0),
 999:lvgl/src/core/lv_refr.c ****             .y = lv_obj_get_style_transform_pivot_y(obj, 0)
1000:lvgl/src/core/lv_refr.c ****         };
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 19


1001:lvgl/src/core/lv_refr.c **** 
1002:lvgl/src/core/lv_refr.c ****         if(LV_COORD_IS_PCT(pivot.x)) {
1003:lvgl/src/core/lv_refr.c ****             pivot.x = (LV_COORD_GET_PCT(pivot.x) * lv_area_get_width(&obj->coords)) / 100;
1004:lvgl/src/core/lv_refr.c ****         }
1005:lvgl/src/core/lv_refr.c ****         if(LV_COORD_IS_PCT(pivot.y)) {
1006:lvgl/src/core/lv_refr.c ****             pivot.y = (LV_COORD_GET_PCT(pivot.y) * lv_area_get_height(&obj->coords)) / 100;
1007:lvgl/src/core/lv_refr.c ****         }
1008:lvgl/src/core/lv_refr.c **** 
1009:lvgl/src/core/lv_refr.c ****         lv_draw_img_dsc_t draw_dsc;
1010:lvgl/src/core/lv_refr.c ****         lv_draw_img_dsc_init(&draw_dsc);
1011:lvgl/src/core/lv_refr.c ****         draw_dsc.opa = opa;
1012:lvgl/src/core/lv_refr.c ****         draw_dsc.angle = lv_obj_get_style_transform_angle(obj, 0);
1013:lvgl/src/core/lv_refr.c ****         if(draw_dsc.angle > 3600) draw_dsc.angle -= 3600;
1014:lvgl/src/core/lv_refr.c ****         else if(draw_dsc.angle < 0) draw_dsc.angle += 3600;
1015:lvgl/src/core/lv_refr.c **** 
1016:lvgl/src/core/lv_refr.c ****         draw_dsc.zoom = lv_obj_get_style_transform_zoom(obj, 0);
1017:lvgl/src/core/lv_refr.c ****         draw_dsc.blend_mode = lv_obj_get_style_blend_mode(obj, 0);
1018:lvgl/src/core/lv_refr.c ****         draw_dsc.antialias = disp_refr->driver->antialiasing;
1019:lvgl/src/core/lv_refr.c **** 
1020:lvgl/src/core/lv_refr.c ****         if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
1021:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act = layer_ctx->area_full;
1022:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
1023:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
1024:lvgl/src/core/lv_refr.c ****         }
1025:lvgl/src/core/lv_refr.c **** 
1026:lvgl/src/core/lv_refr.c ****         while(layer_ctx->area_act.y1 <= layer_area_full.y2) {
1027:lvgl/src/core/lv_refr.c ****             if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
1028:lvgl/src/core/lv_refr.c ****                 layer_alpha_test(obj, draw_ctx, layer_ctx, flags);
1029:lvgl/src/core/lv_refr.c ****             }
1030:lvgl/src/core/lv_refr.c **** 
1031:lvgl/src/core/lv_refr.c ****             lv_obj_redraw(draw_ctx, obj);
1032:lvgl/src/core/lv_refr.c **** 
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.x = obj->coords.x1 + pivot.x - draw_ctx->buf_area->x1;
1034:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
1035:lvgl/src/core/lv_refr.c **** 
1036:lvgl/src/core/lv_refr.c ****             /*With LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE it should also go the next chunk*/
1037:lvgl/src/core/lv_refr.c ****             lv_draw_layer_blend(draw_ctx, layer_ctx, &draw_dsc);
1038:lvgl/src/core/lv_refr.c **** 
1039:lvgl/src/core/lv_refr.c ****             if((flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) == 0) break;
1040:lvgl/src/core/lv_refr.c **** 
1041:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y1 = layer_ctx->area_act.y2 + 1;
1042:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
1043:lvgl/src/core/lv_refr.c ****         }
1044:lvgl/src/core/lv_refr.c **** 
1045:lvgl/src/core/lv_refr.c ****         lv_draw_layer_destroy(draw_ctx, layer_ctx);
1046:lvgl/src/core/lv_refr.c ****     }
1047:lvgl/src/core/lv_refr.c **** }
1048:lvgl/src/core/lv_refr.c **** 
1049:lvgl/src/core/lv_refr.c **** static uint32_t get_max_row(lv_disp_t * disp, lv_coord_t area_w, lv_coord_t area_h)
1050:lvgl/src/core/lv_refr.c **** {
  28              		.loc 1 1050 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 1050 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 20


  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 82B0     		sub	sp, sp, #8
  40              		.cfi_def_cfa_offset 24
1051:lvgl/src/core/lv_refr.c ****     int32_t max_row = (uint32_t)disp->driver->draw_buf->size / area_w;
  41              		.loc 1 1051 5 is_stmt 1 view .LVU2
  42              		.loc 1 1051 37 is_stmt 0 view .LVU3
  43 0004 0368     		ldr	r3, [r0]
  44              		.loc 1 1051 45 view .LVU4
  45 0006 DB68     		ldr	r3, [r3, #12]
  46              		.loc 1 1051 55 view .LVU5
  47 0008 DB68     		ldr	r3, [r3, #12]
  48              		.loc 1 1051 62 view .LVU6
  49 000a B3FBF1F1 		udiv	r1, r3, r1
  50              	.LVL1:
1052:lvgl/src/core/lv_refr.c **** 
1053:lvgl/src/core/lv_refr.c ****     if(max_row > area_h) max_row = area_h;
  51              		.loc 1 1053 5 is_stmt 1 view .LVU7
  52              		.loc 1 1053 16 is_stmt 0 view .LVU8
  53 000e 1546     		mov	r5, r2
  54              		.loc 1 1053 7 view .LVU9
  55 0010 8A42     		cmp	r2, r1
  56 0012 00DB     		blt	.L2
1051:lvgl/src/core/lv_refr.c ****     int32_t max_row = (uint32_t)disp->driver->draw_buf->size / area_w;
  57              		.loc 1 1051 13 view .LVU10
  58 0014 0D46     		mov	r5, r1
  59              	.L2:
  60              	.LVL2:
1054:lvgl/src/core/lv_refr.c **** 
1055:lvgl/src/core/lv_refr.c ****     /*Round down the lines of draw_buf if rounding is added*/
1056:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->rounder_cb) {
  61              		.loc 1 1056 5 is_stmt 1 view .LVU11
  62              		.loc 1 1056 17 is_stmt 0 view .LVU12
  63 0016 174B     		ldr	r3, .L10
  64 0018 1B68     		ldr	r3, [r3]
  65 001a 1B68     		ldr	r3, [r3]
  66              		.loc 1 1056 25 view .LVU13
  67 001c 9B69     		ldr	r3, [r3, #24]
  68              		.loc 1 1056 7 view .LVU14
  69 001e 1BB3     		cbz	r3, .L3
  70              	.LBB66:
1057:lvgl/src/core/lv_refr.c ****         lv_area_t tmp;
  71              		.loc 1 1057 9 is_stmt 1 view .LVU15
1058:lvgl/src/core/lv_refr.c ****         tmp.x1 = 0;
  72              		.loc 1 1058 9 view .LVU16
  73              		.loc 1 1058 16 is_stmt 0 view .LVU17
  74 0020 0023     		movs	r3, #0
  75 0022 ADF80030 		strh	r3, [sp]	@ movhi
1059:lvgl/src/core/lv_refr.c ****         tmp.x2 = 0;
  76              		.loc 1 1059 9 is_stmt 1 view .LVU18
  77              		.loc 1 1059 16 is_stmt 0 view .LVU19
  78 0026 ADF80430 		strh	r3, [sp, #4]	@ movhi
1060:lvgl/src/core/lv_refr.c ****         tmp.y1 = 0;
  79              		.loc 1 1060 9 is_stmt 1 view .LVU20
  80              		.loc 1 1060 16 is_stmt 0 view .LVU21
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 21


  81 002a ADF80230 		strh	r3, [sp, #2]	@ movhi
1061:lvgl/src/core/lv_refr.c **** 
1062:lvgl/src/core/lv_refr.c ****         lv_coord_t h_tmp = max_row;
  82              		.loc 1 1062 9 is_stmt 1 view .LVU22
  83              		.loc 1 1062 20 is_stmt 0 view .LVU23
  84 002e 2CB2     		sxth	r4, r5
  85              	.LVL3:
  86              	.L5:
1063:lvgl/src/core/lv_refr.c ****         do {
  87              		.loc 1 1063 9 is_stmt 1 view .LVU24
1064:lvgl/src/core/lv_refr.c ****             tmp.y2 = h_tmp - 1;
  88              		.loc 1 1064 13 view .LVU25
  89 0030 2646     		mov	r6, r4
  90              		.loc 1 1064 28 is_stmt 0 view .LVU26
  91 0032 013C     		subs	r4, r4, #1
  92              	.LVL4:
  93              		.loc 1 1064 28 view .LVU27
  94 0034 24B2     		sxth	r4, r4
  95              		.loc 1 1064 20 view .LVU28
  96 0036 ADF80640 		strh	r4, [sp, #6]	@ movhi
1065:lvgl/src/core/lv_refr.c ****             disp_refr->driver->rounder_cb(disp_refr->driver, &tmp);
  97              		.loc 1 1065 13 is_stmt 1 view .LVU29
  98              		.loc 1 1065 22 is_stmt 0 view .LVU30
  99 003a 0E4B     		ldr	r3, .L10
 100 003c 1B68     		ldr	r3, [r3]
 101 003e 1868     		ldr	r0, [r3]
 102              		.loc 1 1065 30 view .LVU31
 103 0040 8369     		ldr	r3, [r0, #24]
 104              		.loc 1 1065 13 view .LVU32
 105 0042 6946     		mov	r1, sp
 106 0044 9847     		blx	r3
 107              	.LVL5:
1066:lvgl/src/core/lv_refr.c **** 
1067:lvgl/src/core/lv_refr.c ****             /*If this height fits into `max_row` then fine*/
1068:lvgl/src/core/lv_refr.c ****             if(lv_area_get_height(&tmp) <= max_row) break;
 108              		.loc 1 1068 13 is_stmt 1 view .LVU33
 109              	.LBB67:
 110              	.LBI67:
 111              		.file 2 "lvgl/src/core/../misc/../font/../misc/lv_area.h"
   1:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
   2:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *
   4:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
   5:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   6:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
   9:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  12:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  13:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  14:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  16:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 22


  19:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  20:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /*********************
  21:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *********************/
  23:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  24:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #else
  27:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/core/../misc/../font/../misc/lv_area.h **** #endif
  29:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  30:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  31:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  33:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  34:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  35:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
  37:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  42:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/core/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  50:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  52:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  63:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 23


  76:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  78:lvgl/src/core/../misc/../font/../misc/lv_area.h **** enum {
  79:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/core/../misc/../font/../misc/lv_area.h **** };
  88:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  89:lvgl/src/core/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  91:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**********************
  92:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  **********************/
  94:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
  95:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
  96:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 103:lvgl/src/core/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 105:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 106:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 117:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 118:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 119:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 126:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 127:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 128:lvgl/src/core/../misc/../font/../misc/lv_area.h **** /**
 129:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/core/../misc/../font/../misc/lv_area.h ****  */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 24


 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 112              		.loc 2 133 26 view .LVU34
 113              	.LBB68:
 134:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 135:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 114              		.loc 2 135 5 view .LVU35
 115              		.loc 2 135 31 is_stmt 0 view .LVU36
 116 0046 BDF90620 		ldrsh	r2, [sp, #6]
 117 004a 93B2     		uxth	r3, r2
 118              		.loc 2 135 44 view .LVU37
 119 004c BDF80210 		ldrh	r1, [sp, #2]
 120              		.loc 2 135 36 view .LVU38
 121 0050 5B1A     		subs	r3, r3, r1
 122 0052 9BB2     		uxth	r3, r3
 123              		.loc 2 135 49 view .LVU39
 124 0054 0133     		adds	r3, r3, #1
 125              		.loc 2 135 12 view .LVU40
 126 0056 1BB2     		sxth	r3, r3
 127              	.LVL6:
 128              		.loc 2 135 12 view .LVU41
 129              	.LBE68:
 130              	.LBE67:
 131              		.loc 1 1068 15 view .LVU42
 132 0058 AB42     		cmp	r3, r5
 133 005a 02DD     		ble	.L4
1069:lvgl/src/core/lv_refr.c **** 
1070:lvgl/src/core/lv_refr.c ****             /*Decrement the height of the area until it fits into `max_row` after rounding*/
1071:lvgl/src/core/lv_refr.c ****             h_tmp--;
 134              		.loc 1 1071 13 is_stmt 1 view .LVU43
 135              	.LVL7:
1072:lvgl/src/core/lv_refr.c ****         } while(h_tmp > 0);
 136              		.loc 1 1072 16 view .LVU44
 137              		.loc 1 1072 9 is_stmt 0 view .LVU45
 138 005c 002C     		cmp	r4, #0
 139 005e E7DC     		bgt	.L5
1071:lvgl/src/core/lv_refr.c ****         } while(h_tmp > 0);
 140              		.loc 1 1071 18 view .LVU46
 141 0060 2646     		mov	r6, r4
 142              	.LVL8:
 143              	.L4:
1073:lvgl/src/core/lv_refr.c **** 
1074:lvgl/src/core/lv_refr.c ****         if(h_tmp <= 0) {
 144              		.loc 1 1074 9 is_stmt 1 view .LVU47
 145              		.loc 1 1074 11 is_stmt 0 view .LVU48
 146 0062 002E     		cmp	r6, #0
 147 0064 03DD     		ble	.L9
1075:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
1076:lvgl/src/core/lv_refr.c ****                         "small draw_buf)");
1077:lvgl/src/core/lv_refr.c ****             return 0;
1078:lvgl/src/core/lv_refr.c ****         }
1079:lvgl/src/core/lv_refr.c ****         else {
1080:lvgl/src/core/lv_refr.c ****             max_row = tmp.y2 + 1;
 148              		.loc 1 1080 13 is_stmt 1 view .LVU49
 149              		.loc 1 1080 21 is_stmt 0 view .LVU50
 150 0066 551C     		adds	r5, r2, #1
 151              	.LVL9:
 152              	.L3:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 25


 153              		.loc 1 1080 21 view .LVU51
 154              	.LBE66:
1081:lvgl/src/core/lv_refr.c ****         }
1082:lvgl/src/core/lv_refr.c ****     }
1083:lvgl/src/core/lv_refr.c **** 
1084:lvgl/src/core/lv_refr.c ****     return max_row;
 155              		.loc 1 1084 5 is_stmt 1 view .LVU52
 156              		.loc 1 1084 12 is_stmt 0 view .LVU53
 157 0068 2846     		mov	r0, r5
 158              	.L1:
1085:lvgl/src/core/lv_refr.c **** }
 159              		.loc 1 1085 1 view .LVU54
 160 006a 02B0     		add	sp, sp, #8
 161              		.cfi_remember_state
 162              		.cfi_def_cfa_offset 16
 163              		@ sp needed
 164 006c 70BD     		pop	{r4, r5, r6, pc}
 165              	.LVL10:
 166              	.L9:
 167              		.cfi_restore_state
 168              	.LBB69:
1075:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 169              		.loc 1 1075 13 is_stmt 1 view .LVU55
1075:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 170              		.loc 1 1075 13 view .LVU56
1075:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Can't set draw_buf height using the round function. (Wrong round_cb or to 
 171              		.loc 1 1075 13 view .LVU57
1077:lvgl/src/core/lv_refr.c ****         }
 172              		.loc 1 1077 13 view .LVU58
1077:lvgl/src/core/lv_refr.c ****         }
 173              		.loc 1 1077 20 is_stmt 0 view .LVU59
 174 006e 0020     		movs	r0, #0
 175 0070 FBE7     		b	.L1
 176              	.L11:
 177 0072 00BF     		.align	2
 178              	.L10:
 179 0074 00000000 		.word	.LANCHOR0
 180              	.LBE69:
 181              		.cfi_endproc
 182              	.LFE186:
 184              		.section	.text.draw_buf_rotate_180,"ax",%progbits
 185              		.align	1
 186              		.syntax unified
 187              		.thumb
 188              		.thumb_func
 190              	draw_buf_rotate_180:
 191              	.LVL11:
 192              	.LFB187:
1086:lvgl/src/core/lv_refr.c **** 
1087:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate_180(lv_disp_drv_t * drv, lv_area_t * area, lv_color_t * color_p)
1088:lvgl/src/core/lv_refr.c **** {
 193              		.loc 1 1088 1 is_stmt 1 view -0
 194              		.cfi_startproc
 195              		@ args = 0, pretend = 0, frame = 0
 196              		@ frame_needed = 0, uses_anonymous_args = 0
 197              		@ link register save eliminated.
 198              		.loc 1 1088 1 is_stmt 0 view .LVU61
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 26


 199 0000 30B4     		push	{r4, r5}
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 4, -8
 202              		.cfi_offset 5, -4
1089:lvgl/src/core/lv_refr.c ****     lv_coord_t area_w = lv_area_get_width(area);
 203              		.loc 1 1089 5 is_stmt 1 view .LVU62
 204              	.LVL12:
 205              	.LBB70:
 206              	.LBI70:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 207              		.loc 2 123 26 view .LVU63
 208              	.LBB71:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 209              		.loc 2 125 5 view .LVU64
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 210              		.loc 2 125 31 is_stmt 0 view .LVU65
 211 0002 8B88     		ldrh	r3, [r1, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 212              		.loc 2 125 44 view .LVU66
 213 0004 0C88     		ldrh	r4, [r1]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 214              		.loc 2 125 36 view .LVU67
 215 0006 1B1B     		subs	r3, r3, r4
 216 0008 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 217              		.loc 2 125 49 view .LVU68
 218 000a 0133     		adds	r3, r3, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 219              		.loc 2 125 12 view .LVU69
 220 000c 1BB2     		sxth	r3, r3
 221              	.LVL13:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 222              		.loc 2 125 12 view .LVU70
 223              	.LBE71:
 224              	.LBE70:
1090:lvgl/src/core/lv_refr.c ****     lv_coord_t area_h = lv_area_get_height(area);
 225              		.loc 1 1090 5 is_stmt 1 view .LVU71
 226              	.LBB72:
 227              	.LBI72:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 228              		.loc 2 133 26 view .LVU72
 229              	.LBB73:
 230              		.loc 2 135 5 view .LVU73
 231              		.loc 2 135 31 is_stmt 0 view .LVU74
 232 000e CC88     		ldrh	r4, [r1, #6]
 233              		.loc 2 135 44 view .LVU75
 234 0010 B1F802C0 		ldrh	ip, [r1, #2]
 235              		.loc 2 135 36 view .LVU76
 236 0014 A4EB0C04 		sub	r4, r4, ip
 237 0018 A4B2     		uxth	r4, r4
 238              		.loc 2 135 49 view .LVU77
 239 001a 0134     		adds	r4, r4, #1
 240              		.loc 2 135 12 view .LVU78
 241 001c 24B2     		sxth	r4, r4
 242              	.LVL14:
 243              		.loc 2 135 12 view .LVU79
 244              	.LBE73:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 27


 245              	.LBE72:
1091:lvgl/src/core/lv_refr.c ****     uint32_t total = area_w * area_h;
 246              		.loc 1 1091 5 is_stmt 1 view .LVU80
 247              		.loc 1 1091 29 is_stmt 0 view .LVU81
 248 001e 04FB03F3 		mul	r3, r4, r3
 249              	.LVL15:
1092:lvgl/src/core/lv_refr.c ****     /*Swap the beginning and end values*/
1093:lvgl/src/core/lv_refr.c ****     lv_color_t tmp;
 250              		.loc 1 1093 5 is_stmt 1 view .LVU82
1094:lvgl/src/core/lv_refr.c ****     uint32_t i = total - 1, j = 0;
 251              		.loc 1 1094 5 view .LVU83
 252              		.loc 1 1094 14 is_stmt 0 view .LVU84
 253 0022 013B     		subs	r3, r3, #1
 254              	.LVL16:
1095:lvgl/src/core/lv_refr.c ****     while(i > j) {
 255              		.loc 1 1095 5 is_stmt 1 view .LVU85
1094:lvgl/src/core/lv_refr.c ****     uint32_t i = total - 1, j = 0;
 256              		.loc 1 1094 29 is_stmt 0 view .LVU86
 257 0024 4FF0000C 		mov	ip, #0
 258              		.loc 1 1095 10 view .LVU87
 259 0028 0AE0     		b	.L13
 260              	.LVL17:
 261              	.L14:
1096:lvgl/src/core/lv_refr.c ****         tmp = color_p[i];
 262              		.loc 1 1096 9 is_stmt 1 view .LVU88
 263              		.loc 1 1096 13 is_stmt 0 view .LVU89
 264 002a 52F82340 		ldr	r4, [r2, r3, lsl #2]
 265              	.LVL18:
1097:lvgl/src/core/lv_refr.c ****         color_p[i] = color_p[j];
 266              		.loc 1 1097 9 is_stmt 1 view .LVU90
 267              		.loc 1 1097 20 is_stmt 0 view .LVU91
 268 002e 52F82C50 		ldr	r5, [r2, ip, lsl #2]
 269 0032 42F82350 		str	r5, [r2, r3, lsl #2]
1098:lvgl/src/core/lv_refr.c ****         color_p[j] = tmp;
 270              		.loc 1 1098 9 is_stmt 1 view .LVU92
 271              	.LVL19:
 272              		.loc 1 1098 20 is_stmt 0 view .LVU93
 273 0036 42F82C40 		str	r4, [r2, ip, lsl #2]
1099:lvgl/src/core/lv_refr.c ****         i--;
 274              		.loc 1 1099 9 is_stmt 1 view .LVU94
 275              		.loc 1 1099 10 is_stmt 0 view .LVU95
 276 003a 013B     		subs	r3, r3, #1
 277              	.LVL20:
1100:lvgl/src/core/lv_refr.c ****         j++;
 278              		.loc 1 1100 9 is_stmt 1 view .LVU96
 279              		.loc 1 1100 10 is_stmt 0 view .LVU97
 280 003c 0CF1010C 		add	ip, ip, #1
 281              	.LVL21:
 282              	.L13:
1095:lvgl/src/core/lv_refr.c ****         tmp = color_p[i];
 283              		.loc 1 1095 10 is_stmt 1 view .LVU98
 284 0040 6345     		cmp	r3, ip
 285 0042 F2D8     		bhi	.L14
1101:lvgl/src/core/lv_refr.c ****     }
1102:lvgl/src/core/lv_refr.c ****     lv_coord_t tmp_coord;
 286              		.loc 1 1102 5 view .LVU99
1103:lvgl/src/core/lv_refr.c ****     tmp_coord = area->y2;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 28


 287              		.loc 1 1103 5 view .LVU100
 288              		.loc 1 1103 15 is_stmt 0 view .LVU101
 289 0044 B1F90640 		ldrsh	r4, [r1, #6]
 290              	.LVL22:
1104:lvgl/src/core/lv_refr.c ****     area->y2 = drv->ver_res - area->y1 - 1;
 291              		.loc 1 1104 5 is_stmt 1 view .LVU102
 292              		.loc 1 1104 19 is_stmt 0 view .LVU103
 293 0048 4288     		ldrh	r2, [r0, #2]
 294              	.LVL23:
 295              		.loc 1 1104 35 view .LVU104
 296 004a 4B88     		ldrh	r3, [r1, #2]
 297              	.LVL24:
 298              		.loc 1 1104 29 view .LVU105
 299 004c D21A     		subs	r2, r2, r3
 300 004e 92B2     		uxth	r2, r2
 301              		.loc 1 1104 40 view .LVU106
 302 0050 013A     		subs	r2, r2, #1
 303              		.loc 1 1104 14 view .LVU107
 304 0052 CA80     		strh	r2, [r1, #6]	@ movhi
1105:lvgl/src/core/lv_refr.c ****     area->y1 = drv->ver_res - tmp_coord - 1;
 305              		.loc 1 1105 5 is_stmt 1 view .LVU108
 306              		.loc 1 1105 19 is_stmt 0 view .LVU109
 307 0054 4388     		ldrh	r3, [r0, #2]
 308              		.loc 1 1105 29 view .LVU110
 309 0056 1B1B     		subs	r3, r3, r4
 310 0058 9BB2     		uxth	r3, r3
 311              		.loc 1 1105 41 view .LVU111
 312 005a 013B     		subs	r3, r3, #1
 313              		.loc 1 1105 14 view .LVU112
 314 005c 4B80     		strh	r3, [r1, #2]	@ movhi
1106:lvgl/src/core/lv_refr.c ****     tmp_coord = area->x2;
 315              		.loc 1 1106 5 is_stmt 1 view .LVU113
 316              		.loc 1 1106 15 is_stmt 0 view .LVU114
 317 005e B1F90440 		ldrsh	r4, [r1, #4]
 318              	.LVL25:
1107:lvgl/src/core/lv_refr.c ****     area->x2 = drv->hor_res - area->x1 - 1;
 319              		.loc 1 1107 5 is_stmt 1 view .LVU115
 320              		.loc 1 1107 19 is_stmt 0 view .LVU116
 321 0062 0288     		ldrh	r2, [r0]
 322              		.loc 1 1107 35 view .LVU117
 323 0064 0B88     		ldrh	r3, [r1]
 324              		.loc 1 1107 29 view .LVU118
 325 0066 D21A     		subs	r2, r2, r3
 326 0068 92B2     		uxth	r2, r2
 327              		.loc 1 1107 40 view .LVU119
 328 006a 013A     		subs	r2, r2, #1
 329              		.loc 1 1107 14 view .LVU120
 330 006c 8A80     		strh	r2, [r1, #4]	@ movhi
1108:lvgl/src/core/lv_refr.c ****     area->x1 = drv->hor_res - tmp_coord - 1;
 331              		.loc 1 1108 5 is_stmt 1 view .LVU121
 332              		.loc 1 1108 19 is_stmt 0 view .LVU122
 333 006e 0388     		ldrh	r3, [r0]
 334              		.loc 1 1108 29 view .LVU123
 335 0070 1B1B     		subs	r3, r3, r4
 336 0072 9BB2     		uxth	r3, r3
 337              		.loc 1 1108 41 view .LVU124
 338 0074 013B     		subs	r3, r3, #1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 29


 339              		.loc 1 1108 14 view .LVU125
 340 0076 0B80     		strh	r3, [r1]	@ movhi
1109:lvgl/src/core/lv_refr.c **** }
 341              		.loc 1 1109 1 view .LVU126
 342 0078 30BC     		pop	{r4, r5}
 343              		.cfi_restore 5
 344              		.cfi_restore 4
 345              		.cfi_def_cfa_offset 0
 346              	.LVL26:
 347              		.loc 1 1109 1 view .LVU127
 348 007a 7047     		bx	lr
 349              		.cfi_endproc
 350              	.LFE187:
 352              		.section	.text.draw_buf_rotate_90,"ax",%progbits
 353              		.align	1
 354              		.syntax unified
 355              		.thumb
 356              		.thumb_func
 358              	draw_buf_rotate_90:
 359              	.LVL27:
 360              	.LFB188:
1110:lvgl/src/core/lv_refr.c **** 
1111:lvgl/src/core/lv_refr.c **** static void LV_ATTRIBUTE_FAST_MEM draw_buf_rotate_90(bool invert_i, lv_coord_t area_w, lv_coord_t a
1112:lvgl/src/core/lv_refr.c ****                                                      lv_color_t * orig_color_p, lv_color_t * rot_bu
1113:lvgl/src/core/lv_refr.c **** {
 361              		.loc 1 1113 1 is_stmt 1 view -0
 362              		.cfi_startproc
 363              		@ args = 4, pretend = 0, frame = 0
 364              		@ frame_needed = 0, uses_anonymous_args = 0
 365              		.loc 1 1113 1 is_stmt 0 view .LVU129
 366 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 367              		.cfi_def_cfa_offset 24
 368              		.cfi_offset 4, -24
 369              		.cfi_offset 5, -20
 370              		.cfi_offset 6, -16
 371              		.cfi_offset 7, -12
 372              		.cfi_offset 8, -8
 373              		.cfi_offset 14, -4
 374 0004 0446     		mov	r4, r0
 375 0006 0846     		mov	r0, r1
 376              	.LVL28:
 377              		.loc 1 1113 1 view .LVU130
 378 0008 1146     		mov	r1, r2
 379              	.LVL29:
 380              		.loc 1 1113 1 view .LVU131
 381 000a 069D     		ldr	r5, [sp, #24]
1114:lvgl/src/core/lv_refr.c **** 
1115:lvgl/src/core/lv_refr.c ****     uint32_t invert = (area_w * area_h) - 1;
 382              		.loc 1 1115 5 is_stmt 1 view .LVU132
 383              		.loc 1 1115 31 is_stmt 0 view .LVU133
 384 000c 02FB00F8 		mul	r8, r2, r0
 385              		.loc 1 1115 41 view .LVU134
 386 0010 08F1FF38 		add	r8, r8, #-1
 387              	.LVL30:
1116:lvgl/src/core/lv_refr.c ****     uint32_t initial_i = ((area_w - 1) * area_h);
 388              		.loc 1 1116 5 is_stmt 1 view .LVU135
 389              		.loc 1 1116 35 is_stmt 0 view .LVU136
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 30


 390 0014 471E     		subs	r7, r0, #1
 391              		.loc 1 1116 40 view .LVU137
 392 0016 02FB07F7 		mul	r7, r2, r7
 393              	.LVL31:
1117:lvgl/src/core/lv_refr.c ****     for(lv_coord_t y = 0; y < area_h; y++) {
 394              		.loc 1 1117 5 is_stmt 1 view .LVU138
 395              	.LBB74:
 396              		.loc 1 1117 9 view .LVU139
 397              		.loc 1 1117 20 is_stmt 0 view .LVU140
 398 001a 0026     		movs	r6, #0
 399              		.loc 1 1117 5 view .LVU141
 400 001c 11E0     		b	.L17
 401              	.LVL32:
 402              	.L20:
 403              	.LBB75:
 404              	.LBB76:
1118:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
1119:lvgl/src/core/lv_refr.c ****         if(invert_i)
1120:lvgl/src/core/lv_refr.c ****             i = invert - i;
1121:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
1122:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
1123:lvgl/src/core/lv_refr.c ****             if(invert_i)
1124:lvgl/src/core/lv_refr.c ****                 i += area_h;
1125:lvgl/src/core/lv_refr.c ****             else
1126:lvgl/src/core/lv_refr.c ****                 i -= area_h;
 405              		.loc 1 1126 17 is_stmt 1 view .LVU142
 406              		.loc 1 1126 19 is_stmt 0 view .LVU143
 407 001e AEEB010E 		sub	lr, lr, r1
 408              	.LVL33:
 409              	.L21:
1121:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 410              		.loc 1 1121 43 is_stmt 1 discriminator 2 view .LVU144
1121:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 411              		.loc 1 1121 44 is_stmt 0 discriminator 2 view .LVU145
 412 0022 0CF1010C 		add	ip, ip, #1
 413              	.LVL34:
1121:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 414              		.loc 1 1121 44 discriminator 2 view .LVU146
 415 0026 0FFA8CFC 		sxth	ip, ip
 416              	.LVL35:
 417              	.L19:
1121:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 418              		.loc 1 1121 31 is_stmt 1 discriminator 1 view .LVU147
1121:lvgl/src/core/lv_refr.c ****             rot_buf[i] = *(orig_color_p++);
 419              		.loc 1 1121 9 is_stmt 0 discriminator 1 view .LVU148
 420 002a 8445     		cmp	ip, r0
 421 002c 07DA     		bge	.L25
1122:lvgl/src/core/lv_refr.c ****             if(invert_i)
 422              		.loc 1 1122 13 is_stmt 1 view .LVU149
 423              	.LVL36:
1122:lvgl/src/core/lv_refr.c ****             if(invert_i)
 424              		.loc 1 1122 24 is_stmt 0 view .LVU150
 425 002e 53F8042B 		ldr	r2, [r3], #4
 426              	.LVL37:
1122:lvgl/src/core/lv_refr.c ****             if(invert_i)
 427              		.loc 1 1122 24 view .LVU151
 428 0032 45F82E20 		str	r2, [r5, lr, lsl #2]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 31


1123:lvgl/src/core/lv_refr.c ****                 i += area_h;
 429              		.loc 1 1123 13 is_stmt 1 view .LVU152
1123:lvgl/src/core/lv_refr.c ****                 i += area_h;
 430              		.loc 1 1123 15 is_stmt 0 view .LVU153
 431 0036 002C     		cmp	r4, #0
 432 0038 F1D0     		beq	.L20
1124:lvgl/src/core/lv_refr.c ****             else
 433              		.loc 1 1124 17 is_stmt 1 view .LVU154
1124:lvgl/src/core/lv_refr.c ****             else
 434              		.loc 1 1124 19 is_stmt 0 view .LVU155
 435 003a 8E44     		add	lr, lr, r1
 436              	.LVL38:
1124:lvgl/src/core/lv_refr.c ****             else
 437              		.loc 1 1124 19 view .LVU156
 438 003c F1E7     		b	.L21
 439              	.L25:
1124:lvgl/src/core/lv_refr.c ****             else
 440              		.loc 1 1124 19 view .LVU157
 441              	.LBE76:
 442              	.LBE75:
1117:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 443              		.loc 1 1117 39 is_stmt 1 discriminator 2 view .LVU158
1117:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 444              		.loc 1 1117 40 is_stmt 0 discriminator 2 view .LVU159
 445 003e 0136     		adds	r6, r6, #1
 446              	.LVL39:
1117:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 447              		.loc 1 1117 40 discriminator 2 view .LVU160
 448 0040 36B2     		sxth	r6, r6
 449              	.LVL40:
 450              	.L17:
1117:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 451              		.loc 1 1117 27 is_stmt 1 discriminator 1 view .LVU161
1117:lvgl/src/core/lv_refr.c ****         uint32_t i = initial_i + y;
 452              		.loc 1 1117 5 is_stmt 0 discriminator 1 view .LVU162
 453 0042 8E42     		cmp	r6, r1
 454 0044 07DA     		bge	.L26
 455              	.LBB77:
1118:lvgl/src/core/lv_refr.c ****         if(invert_i)
 456              		.loc 1 1118 9 is_stmt 1 view .LVU163
1118:lvgl/src/core/lv_refr.c ****         if(invert_i)
 457              		.loc 1 1118 18 is_stmt 0 view .LVU164
 458 0046 06EB070E 		add	lr, r6, r7
 459              	.LVL41:
1119:lvgl/src/core/lv_refr.c ****             i = invert - i;
 460              		.loc 1 1119 9 is_stmt 1 view .LVU165
1119:lvgl/src/core/lv_refr.c ****             i = invert - i;
 461              		.loc 1 1119 11 is_stmt 0 view .LVU166
 462 004a 0CB1     		cbz	r4, .L18
1120:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 463              		.loc 1 1120 13 is_stmt 1 view .LVU167
1120:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
 464              		.loc 1 1120 15 is_stmt 0 view .LVU168
 465 004c A8EB0E0E 		sub	lr, r8, lr
 466              	.LVL42:
 467              	.L18:
1120:lvgl/src/core/lv_refr.c ****         for(lv_coord_t x = 0; x < area_w; x++) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 32


 468              		.loc 1 1120 15 view .LVU169
 469              	.LBE77:
 470              	.LBE74:
1113:lvgl/src/core/lv_refr.c **** 
 471              		.loc 1 1113 1 discriminator 1 view .LVU170
 472 0050 4FF0000C 		mov	ip, #0
 473 0054 E9E7     		b	.L19
 474              	.LVL43:
 475              	.L26:
1127:lvgl/src/core/lv_refr.c ****         }
1128:lvgl/src/core/lv_refr.c ****     }
1129:lvgl/src/core/lv_refr.c **** }
 476              		.loc 1 1129 1 view .LVU171
 477 0056 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 478              		.loc 1 1129 1 view .LVU172
 479              		.cfi_endproc
 480              	.LFE188:
 482              		.section	.text.draw_buf_rotate_90_sqr,"ax",%progbits
 483              		.align	1
 484              		.syntax unified
 485              		.thumb
 486              		.thumb_func
 488              	draw_buf_rotate_90_sqr:
 489              	.LVL44:
 490              	.LFB190:
1130:lvgl/src/core/lv_refr.c **** 
1131:lvgl/src/core/lv_refr.c **** /**
1132:lvgl/src/core/lv_refr.c ****  * Helper function for draw_buf_rotate_90_sqr. Given a list of four numbers, rotate the entire list
1133:lvgl/src/core/lv_refr.c ****  */
1134:lvgl/src/core/lv_refr.c **** static inline void draw_buf_rotate4(lv_color_t * a, lv_color_t * b, lv_color_t * c, lv_color_t * d)
1135:lvgl/src/core/lv_refr.c **** {
1136:lvgl/src/core/lv_refr.c ****     lv_color_t tmp;
1137:lvgl/src/core/lv_refr.c ****     tmp = *a;
1138:lvgl/src/core/lv_refr.c ****     *a = *b;
1139:lvgl/src/core/lv_refr.c ****     *b = *c;
1140:lvgl/src/core/lv_refr.c ****     *c = *d;
1141:lvgl/src/core/lv_refr.c ****     *d = tmp;
1142:lvgl/src/core/lv_refr.c **** }
1143:lvgl/src/core/lv_refr.c **** 
1144:lvgl/src/core/lv_refr.c **** /**
1145:lvgl/src/core/lv_refr.c ****  * Rotate a square image 90/270 degrees in place.
1146:lvgl/src/core/lv_refr.c ****  * @note inspired by https://stackoverflow.com/a/43694906
1147:lvgl/src/core/lv_refr.c ****  */
1148:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate_90_sqr(bool is_270, lv_coord_t w, lv_color_t * color_p)
1149:lvgl/src/core/lv_refr.c **** {
 491              		.loc 1 1149 1 is_stmt 1 view -0
 492              		.cfi_startproc
 493              		@ args = 0, pretend = 0, frame = 0
 494              		@ frame_needed = 0, uses_anonymous_args = 0
 495              		.loc 1 1149 1 is_stmt 0 view .LVU174
 496 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 497              		.cfi_def_cfa_offset 28
 498              		.cfi_offset 4, -28
 499              		.cfi_offset 5, -24
 500              		.cfi_offset 6, -20
 501              		.cfi_offset 7, -16
 502              		.cfi_offset 8, -12
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 33


 503              		.cfi_offset 9, -8
 504              		.cfi_offset 14, -4
 505 0004 8146     		mov	r9, r0
1150:lvgl/src/core/lv_refr.c ****     for(lv_coord_t i = 0; i < w / 2; i++) {
 506              		.loc 1 1150 5 is_stmt 1 view .LVU175
 507              	.LBB78:
 508              		.loc 1 1150 9 view .LVU176
 509              	.LVL45:
 510              		.loc 1 1150 20 is_stmt 0 view .LVU177
 511 0006 0024     		movs	r4, #0
 512              		.loc 1 1150 5 view .LVU178
 513 0008 4EE0     		b	.L28
 514              	.LVL46:
 515              	.L29:
 516              	.LBB79:
 517              	.LBB80:
1151:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
1152:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
1153:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
1154:lvgl/src/core/lv_refr.c ****             if(is_270) {
1155:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
1156:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
1157:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i],
1158:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
1159:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i]
1160:lvgl/src/core/lv_refr.c ****                 );
1161:lvgl/src/core/lv_refr.c ****             }
1162:lvgl/src/core/lv_refr.c ****             else {
1163:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 518              		.loc 1 1163 17 is_stmt 1 view .LVU179
1164:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
 519              		.loc 1 1164 36 is_stmt 0 view .LVU180
 520 000a 01FB0456 		mla	r6, r1, r4, r5
 521              	.LVL47:
1165:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i],
 522              		.loc 1 1165 36 view .LVU181
 523 000e 01FB05C5 		mla	r5, r1, r5, ip
1166:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
 524              		.loc 1 1166 40 view .LVU182
 525 0012 01FB0C3C 		mla	ip, r1, ip, r3
 526              	.LVL48:
1167:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i]
 527              		.loc 1 1167 40 view .LVU183
 528 0016 01FB0343 		mla	r3, r1, r3, r4
 529              	.LVL49:
 530              	.LBB81:
 531              	.LBI81:
1134:lvgl/src/core/lv_refr.c **** {
 532              		.loc 1 1134 20 is_stmt 1 view .LVU184
 533              	.LBB82:
1136:lvgl/src/core/lv_refr.c ****     tmp = *a;
 534              		.loc 1 1136 5 view .LVU185
1137:lvgl/src/core/lv_refr.c ****     *a = *b;
 535              		.loc 1 1137 5 view .LVU186
1137:lvgl/src/core/lv_refr.c ****     *a = *b;
 536              		.loc 1 1137 9 is_stmt 0 view .LVU187
 537 001a 52F82670 		ldr	r7, [r2, r6, lsl #2]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 34


 538              	.LVL50:
1138:lvgl/src/core/lv_refr.c ****     *b = *c;
 539              		.loc 1 1138 5 is_stmt 1 view .LVU188
1138:lvgl/src/core/lv_refr.c ****     *b = *c;
 540              		.loc 1 1138 8 is_stmt 0 view .LVU189
 541 001e 52F82500 		ldr	r0, [r2, r5, lsl #2]
 542 0022 42F82600 		str	r0, [r2, r6, lsl #2]
1139:lvgl/src/core/lv_refr.c ****     *c = *d;
 543              		.loc 1 1139 5 is_stmt 1 view .LVU190
1139:lvgl/src/core/lv_refr.c ****     *c = *d;
 544              		.loc 1 1139 8 is_stmt 0 view .LVU191
 545 0026 52F82C00 		ldr	r0, [r2, ip, lsl #2]
 546 002a 42F82500 		str	r0, [r2, r5, lsl #2]
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 547              		.loc 1 1140 5 is_stmt 1 view .LVU192
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 548              		.loc 1 1140 8 is_stmt 0 view .LVU193
 549 002e 52F82350 		ldr	r5, [r2, r3, lsl #2]
 550              	.LVL51:
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 551              		.loc 1 1140 8 view .LVU194
 552 0032 42F82C50 		str	r5, [r2, ip, lsl #2]
1141:lvgl/src/core/lv_refr.c **** }
 553              		.loc 1 1141 5 is_stmt 1 view .LVU195
 554              	.LVL52:
1141:lvgl/src/core/lv_refr.c **** }
 555              		.loc 1 1141 8 is_stmt 0 view .LVU196
 556 0036 42F82370 		str	r7, [r2, r3, lsl #2]
 557              	.LVL53:
 558              	.L30:
1141:lvgl/src/core/lv_refr.c **** }
 559              		.loc 1 1141 8 view .LVU197
 560              	.LBE82:
 561              	.LBE81:
 562              	.LBE80:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 563              		.loc 1 1151 48 is_stmt 1 discriminator 2 view .LVU198
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 564              		.loc 1 1151 49 is_stmt 0 discriminator 2 view .LVU199
 565 003a 0EF1010E 		add	lr, lr, #1
 566              	.LVL54:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 567              		.loc 1 1151 49 discriminator 2 view .LVU200
 568 003e 0FFA8EFE 		sxth	lr, lr
 569              	.LVL55:
 570              	.L34:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 571              		.loc 1 1151 31 is_stmt 1 discriminator 1 view .LVU201
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 572              		.loc 1 1151 33 is_stmt 0 discriminator 1 view .LVU202
 573 0042 7546     		mov	r5, lr
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 574              		.loc 1 1151 43 discriminator 1 view .LVU203
 575 0044 4B1C     		adds	r3, r1, #1
 576 0046 2BD4     		bmi	.L37
 577              	.L31:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 35


 578              		.loc 1 1151 9 discriminator 1 view .LVU204
 579 0048 B5EB630F 		cmp	r5, r3, asr #1
 580 004c 2ADA     		bge	.L38
 581              	.LBB85:
1152:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 582              		.loc 1 1152 13 is_stmt 1 view .LVU205
1152:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 583              		.loc 1 1152 40 is_stmt 0 view .LVU206
 584 004e 8BB2     		uxth	r3, r1
 585 0050 A3EB040C 		sub	ip, r3, r4
 586 0054 0CF1FF3C 		add	ip, ip, #-1
1152:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_j = (w - 1) - j;
 587              		.loc 1 1152 24 view .LVU207
 588 0058 0FFA8CFC 		sxth	ip, ip
 589              	.LVL56:
1153:lvgl/src/core/lv_refr.c ****             if(is_270) {
 590              		.loc 1 1153 13 is_stmt 1 view .LVU208
1153:lvgl/src/core/lv_refr.c ****             if(is_270) {
 591              		.loc 1 1153 40 is_stmt 0 view .LVU209
 592 005c 1FFA8EFE 		uxth	lr, lr
1153:lvgl/src/core/lv_refr.c ****             if(is_270) {
 593              		.loc 1 1153 40 view .LVU210
 594 0060 A3EB0E03 		sub	r3, r3, lr
 595 0064 013B     		subs	r3, r3, #1
1153:lvgl/src/core/lv_refr.c ****             if(is_270) {
 596              		.loc 1 1153 24 view .LVU211
 597 0066 1BB2     		sxth	r3, r3
 598              	.LVL57:
1154:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 599              		.loc 1 1154 13 is_stmt 1 view .LVU212
1154:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate4(
 600              		.loc 1 1154 15 is_stmt 0 view .LVU213
 601 0068 B9F1000F 		cmp	r9, #0
 602 006c CDD0     		beq	.L29
1155:lvgl/src/core/lv_refr.c ****                     &color_p[i * w + j],
 603              		.loc 1 1155 17 is_stmt 1 view .LVU214
1156:lvgl/src/core/lv_refr.c ****                     &color_p[inv_j * w + i],
 604              		.loc 1 1156 36 is_stmt 0 view .LVU215
 605 006e 01FB0458 		mla	r8, r1, r4, r5
1157:lvgl/src/core/lv_refr.c ****                     &color_p[inv_i * w + inv_j],
 606              		.loc 1 1157 40 view .LVU216
 607 0072 01FB0347 		mla	r7, r1, r3, r4
 608              	.LVL58:
1158:lvgl/src/core/lv_refr.c ****                     &color_p[j * w + inv_i]
 609              		.loc 1 1158 40 view .LVU217
 610 0076 01FB0C33 		mla	r3, r1, ip, r3
 611              	.LVL59:
1159:lvgl/src/core/lv_refr.c ****                 );
 612              		.loc 1 1159 36 view .LVU218
 613 007a 01FB05C5 		mla	r5, r1, r5, ip
 614              	.LVL60:
 615              	.LBB83:
 616              	.LBI83:
1134:lvgl/src/core/lv_refr.c **** {
 617              		.loc 1 1134 20 is_stmt 1 view .LVU219
 618              	.LBB84:
1136:lvgl/src/core/lv_refr.c ****     tmp = *a;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 36


 619              		.loc 1 1136 5 view .LVU220
1137:lvgl/src/core/lv_refr.c ****     *a = *b;
 620              		.loc 1 1137 5 view .LVU221
1137:lvgl/src/core/lv_refr.c ****     *a = *b;
 621              		.loc 1 1137 9 is_stmt 0 view .LVU222
 622 007e 52F82860 		ldr	r6, [r2, r8, lsl #2]
 623              	.LVL61:
1138:lvgl/src/core/lv_refr.c ****     *b = *c;
 624              		.loc 1 1138 5 is_stmt 1 view .LVU223
1138:lvgl/src/core/lv_refr.c ****     *b = *c;
 625              		.loc 1 1138 8 is_stmt 0 view .LVU224
 626 0082 52F82700 		ldr	r0, [r2, r7, lsl #2]
 627 0086 42F82800 		str	r0, [r2, r8, lsl #2]
1139:lvgl/src/core/lv_refr.c ****     *c = *d;
 628              		.loc 1 1139 5 is_stmt 1 view .LVU225
1139:lvgl/src/core/lv_refr.c ****     *c = *d;
 629              		.loc 1 1139 8 is_stmt 0 view .LVU226
 630 008a 52F82300 		ldr	r0, [r2, r3, lsl #2]
 631 008e 42F82700 		str	r0, [r2, r7, lsl #2]
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 632              		.loc 1 1140 5 is_stmt 1 view .LVU227
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 633              		.loc 1 1140 8 is_stmt 0 view .LVU228
 634 0092 52F82570 		ldr	r7, [r2, r5, lsl #2]
 635              	.LVL62:
1140:lvgl/src/core/lv_refr.c ****     *d = tmp;
 636              		.loc 1 1140 8 view .LVU229
 637 0096 42F82370 		str	r7, [r2, r3, lsl #2]
1141:lvgl/src/core/lv_refr.c **** }
 638              		.loc 1 1141 5 is_stmt 1 view .LVU230
 639              	.LVL63:
1141:lvgl/src/core/lv_refr.c **** }
 640              		.loc 1 1141 8 is_stmt 0 view .LVU231
 641 009a 42F82560 		str	r6, [r2, r5, lsl #2]
1142:lvgl/src/core/lv_refr.c **** 
 642              		.loc 1 1142 1 view .LVU232
 643 009e CCE7     		b	.L30
 644              	.LVL64:
 645              	.L37:
1142:lvgl/src/core/lv_refr.c **** 
 646              		.loc 1 1142 1 view .LVU233
 647              	.LBE84:
 648              	.LBE83:
 649              	.LBE85:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 650              		.loc 1 1151 43 discriminator 1 view .LVU234
 651 00a0 0133     		adds	r3, r3, #1
 652 00a2 D1E7     		b	.L31
 653              	.L38:
 654              	.LBE79:
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 655              		.loc 1 1150 38 is_stmt 1 discriminator 2 view .LVU235
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 656              		.loc 1 1150 39 is_stmt 0 discriminator 2 view .LVU236
 657 00a4 0134     		adds	r4, r4, #1
 658              	.LVL65:
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 37


 659              		.loc 1 1150 39 discriminator 2 view .LVU237
 660 00a6 24B2     		sxth	r4, r4
 661              	.LVL66:
 662              	.L28:
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 663              		.loc 1 1150 27 is_stmt 1 discriminator 1 view .LVU238
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 664              		.loc 1 1150 29 is_stmt 0 discriminator 1 view .LVU239
 665 00a8 0B46     		mov	r3, r1
 666 00aa 0029     		cmp	r1, #0
 667 00ac 05DB     		blt	.L39
 668              	.L33:
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 669              		.loc 1 1150 5 discriminator 1 view .LVU240
 670 00ae B4EB630F 		cmp	r4, r3, asr #1
 671 00b2 04DA     		bge	.L40
 672              	.LBB86:
1151:lvgl/src/core/lv_refr.c ****             lv_coord_t inv_i = (w - 1) - i;
 673              		.loc 1 1151 24 view .LVU241
 674 00b4 4FF0000E 		mov	lr, #0
 675 00b8 C3E7     		b	.L34
 676              	.L39:
 677              	.LBE86:
1150:lvgl/src/core/lv_refr.c ****         for(lv_coord_t j = 0; j < (w + 1) / 2; j++) {
 678              		.loc 1 1150 29 discriminator 1 view .LVU242
 679 00ba 4B1C     		adds	r3, r1, #1
 680 00bc F7E7     		b	.L33
 681              	.L40:
 682              	.LBE78:
1168:lvgl/src/core/lv_refr.c ****                 );
1169:lvgl/src/core/lv_refr.c ****             }
1170:lvgl/src/core/lv_refr.c **** 
1171:lvgl/src/core/lv_refr.c ****         }
1172:lvgl/src/core/lv_refr.c ****     }
1173:lvgl/src/core/lv_refr.c **** }
 683              		.loc 1 1173 1 view .LVU243
 684 00be BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 685              		.loc 1 1173 1 view .LVU244
 686              		.cfi_endproc
 687              	.LFE190:
 689              		.section	.text.call_flush_cb,"ax",%progbits
 690              		.align	1
 691              		.syntax unified
 692              		.thumb
 693              		.thumb_func
 695              	call_flush_cb:
 696              	.LVL67:
 697              	.LFB193:
1174:lvgl/src/core/lv_refr.c **** 
1175:lvgl/src/core/lv_refr.c **** /**
1176:lvgl/src/core/lv_refr.c ****  * Rotate the draw_buf to the display's native orientation.
1177:lvgl/src/core/lv_refr.c ****  */
1178:lvgl/src/core/lv_refr.c **** static void draw_buf_rotate(lv_area_t * area, lv_color_t * color_p)
1179:lvgl/src/core/lv_refr.c **** {
1180:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
1181:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
1182:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 38


1183:lvgl/src/core/lv_refr.c ****         return;
1184:lvgl/src/core/lv_refr.c ****     }
1185:lvgl/src/core/lv_refr.c ****     if(drv->rotated == LV_DISP_ROT_180) {
1186:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
1187:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
1188:lvgl/src/core/lv_refr.c ****     }
1189:lvgl/src/core/lv_refr.c ****     else if(drv->rotated == LV_DISP_ROT_90 || drv->rotated == LV_DISP_ROT_270) {
1190:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
1191:lvgl/src/core/lv_refr.c ****         lv_color_t * rot_buf = NULL;
1192:lvgl/src/core/lv_refr.c ****         lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
1193:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
1194:lvgl/src/core/lv_refr.c ****         lv_coord_t area_h = lv_area_get_height(area);
1195:lvgl/src/core/lv_refr.c ****         /*Determine the maximum number of rows that can be rotated at a time*/
1196:lvgl/src/core/lv_refr.c ****         lv_coord_t max_row = LV_MIN((lv_coord_t)((LV_DISP_ROT_MAX_BUF / sizeof(lv_color_t)) / area_
1197:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
1198:lvgl/src/core/lv_refr.c ****         init_y_off = area->y1;
1199:lvgl/src/core/lv_refr.c ****         if(drv->rotated == LV_DISP_ROT_90) {
1200:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
1201:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
1202:lvgl/src/core/lv_refr.c ****         }
1203:lvgl/src/core/lv_refr.c ****         else {
1204:lvgl/src/core/lv_refr.c ****             area->y1 = area->x1;
1205:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
1206:lvgl/src/core/lv_refr.c ****         }
1207:lvgl/src/core/lv_refr.c **** 
1208:lvgl/src/core/lv_refr.c ****         /*Rotate the screen in chunks, flushing after each one*/
1209:lvgl/src/core/lv_refr.c ****         lv_coord_t row = 0;
1210:lvgl/src/core/lv_refr.c ****         while(row < area_h) {
1211:lvgl/src/core/lv_refr.c ****             lv_coord_t height = LV_MIN(max_row, area_h - row);
1212:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
1213:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
1214:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
1215:lvgl/src/core/lv_refr.c ****                 height = area_w;
1216:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
1217:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
1218:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
1219:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
1220:lvgl/src/core/lv_refr.c ****                 }
1221:lvgl/src/core/lv_refr.c ****                 else {
1222:lvgl/src/core/lv_refr.c ****                     area->x2 = drv->hor_res - 1 - init_y_off;
1223:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
1224:lvgl/src/core/lv_refr.c ****                 }
1225:lvgl/src/core/lv_refr.c ****             }
1226:lvgl/src/core/lv_refr.c ****             else {
1227:lvgl/src/core/lv_refr.c ****                 /*Rotate other areas using a maximum buffer size*/
1228:lvgl/src/core/lv_refr.c ****                 if(rot_buf == NULL) rot_buf = lv_mem_buf_get(LV_DISP_ROT_MAX_BUF);
1229:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
1230:lvgl/src/core/lv_refr.c **** 
1231:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
1232:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
1233:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
1234:lvgl/src/core/lv_refr.c ****                 }
1235:lvgl/src/core/lv_refr.c ****                 else {
1236:lvgl/src/core/lv_refr.c ****                     area->x2 = drv->hor_res - 1 - init_y_off - row;
1237:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
1238:lvgl/src/core/lv_refr.c ****                 }
1239:lvgl/src/core/lv_refr.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 39


1240:lvgl/src/core/lv_refr.c **** 
1241:lvgl/src/core/lv_refr.c ****             /* The original part (chunk of the current area) were split into more parts here.
1242:lvgl/src/core/lv_refr.c ****              * Set the original last_part flag on the last part of rotation. */
1243:lvgl/src/core/lv_refr.c ****             if(row + height >= area_h && draw_buf->last_area && draw_buf->last_part) {
1244:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
1245:lvgl/src/core/lv_refr.c ****             }
1246:lvgl/src/core/lv_refr.c ****             else {
1247:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 0;
1248:lvgl/src/core/lv_refr.c ****             }
1249:lvgl/src/core/lv_refr.c **** 
1250:lvgl/src/core/lv_refr.c ****             /*Flush the completed area to the display*/
1251:lvgl/src/core/lv_refr.c ****             call_flush_cb(drv, area, rot_buf == NULL ? color_p : rot_buf);
1252:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
1253:lvgl/src/core/lv_refr.c ****             while(draw_buf->flushing) {
1254:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
1255:lvgl/src/core/lv_refr.c ****             }
1256:lvgl/src/core/lv_refr.c ****             color_p += area_w * height;
1257:lvgl/src/core/lv_refr.c ****             row += height;
1258:lvgl/src/core/lv_refr.c ****         }
1259:lvgl/src/core/lv_refr.c ****         /*Free the allocated buffer at the end if necessary*/
1260:lvgl/src/core/lv_refr.c ****         if(rot_buf != NULL) lv_mem_buf_release(rot_buf);
1261:lvgl/src/core/lv_refr.c ****     }
1262:lvgl/src/core/lv_refr.c **** }
1263:lvgl/src/core/lv_refr.c **** 
1264:lvgl/src/core/lv_refr.c **** /**
1265:lvgl/src/core/lv_refr.c ****  * Flush the content of the draw buffer
1266:lvgl/src/core/lv_refr.c ****  */
1267:lvgl/src/core/lv_refr.c **** static void draw_buf_flush(lv_disp_t * disp)
1268:lvgl/src/core/lv_refr.c **** {
1269:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
1270:lvgl/src/core/lv_refr.c **** 
1271:lvgl/src/core/lv_refr.c ****     /*Flush the rendered content to the display*/
1272:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp->driver->draw_ctx;
1273:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
1274:lvgl/src/core/lv_refr.c **** 
1275:lvgl/src/core/lv_refr.c ****     /* In partial double buffered mode wait until the other buffer is freed
1276:lvgl/src/core/lv_refr.c ****      * and driver is ready to receive the new buffer */
1277:lvgl/src/core/lv_refr.c ****     bool full_sized = draw_buf->size == (uint32_t)disp_refr->driver->hor_res * disp_refr->driver->v
1278:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
1279:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
1280:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
1281:lvgl/src/core/lv_refr.c ****         }
1282:lvgl/src/core/lv_refr.c ****     }
1283:lvgl/src/core/lv_refr.c **** 
1284:lvgl/src/core/lv_refr.c ****     draw_buf->flushing = 1;
1285:lvgl/src/core/lv_refr.c **** 
1286:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->draw_buf->last_area && disp_refr->driver->draw_buf->last_part) draw_buf->
1287:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
1288:lvgl/src/core/lv_refr.c **** 
1289:lvgl/src/core/lv_refr.c ****     bool flushing_last = draw_buf->flushing_last;
1290:lvgl/src/core/lv_refr.c **** 
1291:lvgl/src/core/lv_refr.c ****     if(disp->driver->flush_cb) {
1292:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
1293:lvgl/src/core/lv_refr.c ****         if(disp->driver->rotated != LV_DISP_ROT_NONE && disp->driver->sw_rotate) {
1294:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
1295:lvgl/src/core/lv_refr.c ****         }
1296:lvgl/src/core/lv_refr.c ****         else {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 40


1297:lvgl/src/core/lv_refr.c ****             call_flush_cb(disp->driver, draw_ctx->buf_area, draw_ctx->buf);
1298:lvgl/src/core/lv_refr.c ****         }
1299:lvgl/src/core/lv_refr.c ****     }
1300:lvgl/src/core/lv_refr.c **** 
1301:lvgl/src/core/lv_refr.c ****     /*If there are 2 buffers swap them. With direct mode swap only on the last area*/
1302:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && (!disp->driver->direct_mode || flushing_last)) {
1303:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
1304:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
1305:lvgl/src/core/lv_refr.c ****         else
1306:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf1;
1307:lvgl/src/core/lv_refr.c ****     }
1308:lvgl/src/core/lv_refr.c **** }
1309:lvgl/src/core/lv_refr.c **** 
1310:lvgl/src/core/lv_refr.c **** static void call_flush_cb(lv_disp_drv_t * drv, const lv_area_t * area, lv_color_t * color_p)
1311:lvgl/src/core/lv_refr.c **** {
 698              		.loc 1 1311 1 is_stmt 1 view -0
 699              		.cfi_startproc
 700              		@ args = 0, pretend = 0, frame = 8
 701              		@ frame_needed = 0, uses_anonymous_args = 0
 702              		.loc 1 1311 1 is_stmt 0 view .LVU246
 703 0000 10B5     		push	{r4, lr}
 704              		.cfi_def_cfa_offset 8
 705              		.cfi_offset 4, -8
 706              		.cfi_offset 14, -4
 707 0002 82B0     		sub	sp, sp, #8
 708              		.cfi_def_cfa_offset 16
1312:lvgl/src/core/lv_refr.c ****     REFR_TRACE("Calling flush_cb on (%d;%d)(%d;%d) area with %p image pointer", area->x1, area->y1,
1313:lvgl/src/core/lv_refr.c ****                (void *)color_p);
 709              		.loc 1 1313 32 is_stmt 1 view .LVU247
1314:lvgl/src/core/lv_refr.c **** 
1315:lvgl/src/core/lv_refr.c ****     lv_area_t offset_area = {
 710              		.loc 1 1315 5 view .LVU248
1316:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 711              		.loc 1 1316 19 is_stmt 0 view .LVU249
 712 0004 0C88     		ldrh	r4, [r1]
 713              		.loc 1 1316 29 view .LVU250
 714 0006 B0F808E0 		ldrh	lr, [r0, #8]
 715              		.loc 1 1316 24 view .LVU251
 716 000a 7444     		add	r4, r4, lr
1315:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 717              		.loc 1 1315 15 view .LVU252
 718 000c ADF80040 		strh	r4, [sp]	@ movhi
1317:lvgl/src/core/lv_refr.c ****         .y1 = area->y1 + drv->offset_y,
 719              		.loc 1 1317 19 view .LVU253
 720 0010 4C88     		ldrh	r4, [r1, #2]
 721              		.loc 1 1317 29 view .LVU254
 722 0012 B0F80AC0 		ldrh	ip, [r0, #10]
 723              		.loc 1 1317 24 view .LVU255
 724 0016 6444     		add	r4, r4, ip
1315:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 725              		.loc 1 1315 15 view .LVU256
 726 0018 ADF80240 		strh	r4, [sp, #2]	@ movhi
1318:lvgl/src/core/lv_refr.c ****         .x2 = area->x2 + drv->offset_x,
 727              		.loc 1 1318 19 view .LVU257
 728 001c 8C88     		ldrh	r4, [r1, #4]
 729              		.loc 1 1318 24 view .LVU258
 730 001e A644     		add	lr, lr, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 41


1315:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 731              		.loc 1 1315 15 view .LVU259
 732 0020 ADF804E0 		strh	lr, [sp, #4]	@ movhi
1319:lvgl/src/core/lv_refr.c ****         .y2 = area->y2 + drv->offset_y
 733              		.loc 1 1319 19 view .LVU260
 734 0024 C988     		ldrh	r1, [r1, #6]
 735              	.LVL68:
 736              		.loc 1 1319 24 view .LVU261
 737 0026 8C44     		add	ip, ip, r1
1315:lvgl/src/core/lv_refr.c ****         .x1 = area->x1 + drv->offset_x,
 738              		.loc 1 1315 15 view .LVU262
 739 0028 ADF806C0 		strh	ip, [sp, #6]	@ movhi
1320:lvgl/src/core/lv_refr.c ****     };
1321:lvgl/src/core/lv_refr.c **** 
1322:lvgl/src/core/lv_refr.c ****     drv->flush_cb(drv, &offset_area, color_p);
 740              		.loc 1 1322 5 is_stmt 1 view .LVU263
 741              		.loc 1 1322 8 is_stmt 0 view .LVU264
 742 002c 4369     		ldr	r3, [r0, #20]
 743              		.loc 1 1322 5 view .LVU265
 744 002e 6946     		mov	r1, sp
 745 0030 9847     		blx	r3
 746              	.LVL69:
1323:lvgl/src/core/lv_refr.c **** }
 747              		.loc 1 1323 1 view .LVU266
 748 0032 02B0     		add	sp, sp, #8
 749              		.cfi_def_cfa_offset 8
 750              		@ sp needed
 751 0034 10BD     		pop	{r4, pc}
 752              		.cfi_endproc
 753              	.LFE193:
 755              		.section	.text.perf_monitor_init,"ax",%progbits
 756              		.align	1
 757              		.syntax unified
 758              		.thumb
 759              		.thumb_func
 761              	perf_monitor_init:
 762              	.LVL70:
 763              	.LFB194:
1324:lvgl/src/core/lv_refr.c **** 
1325:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
1326:lvgl/src/core/lv_refr.c **** static void perf_monitor_init(perf_monitor_t * _perf_monitor)
1327:lvgl/src/core/lv_refr.c **** {
 764              		.loc 1 1327 1 is_stmt 1 view -0
 765              		.cfi_startproc
 766              		@ args = 0, pretend = 0, frame = 0
 767              		@ frame_needed = 0, uses_anonymous_args = 0
 768              		@ link register save eliminated.
1328:lvgl/src/core/lv_refr.c ****     LV_ASSERT_NULL(_perf_monitor);
 769              		.loc 1 1328 5 view .LVU268
 770              		.loc 1 1328 5 view .LVU269
 771 0000 38B1     		cbz	r0, .L45
 772              		.loc 1 1328 5 discriminator 2 view .LVU270
 773              		.loc 1 1328 34 discriminator 2 view .LVU271
1329:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 774              		.loc 1 1329 5 discriminator 2 view .LVU272
 775              		.loc 1 1329 30 is_stmt 0 discriminator 2 view .LVU273
 776 0002 0022     		movs	r2, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 42


 777 0004 4260     		str	r2, [r0, #4]
1330:lvgl/src/core/lv_refr.c ****     _perf_monitor->fps_sum_all = 0;
 778              		.loc 1 1330 5 is_stmt 1 discriminator 2 view .LVU274
 779              		.loc 1 1330 32 is_stmt 0 discriminator 2 view .LVU275
 780 0006 0261     		str	r2, [r0, #16]
1331:lvgl/src/core/lv_refr.c ****     _perf_monitor->fps_sum_cnt = 0;
 781              		.loc 1 1331 5 is_stmt 1 discriminator 2 view .LVU276
 782              		.loc 1 1331 32 is_stmt 0 discriminator 2 view .LVU277
 783 0008 C260     		str	r2, [r0, #12]
1332:lvgl/src/core/lv_refr.c ****     _perf_monitor->frame_cnt = 0;
 784              		.loc 1 1332 5 is_stmt 1 discriminator 2 view .LVU278
 785              		.loc 1 1332 30 is_stmt 0 discriminator 2 view .LVU279
 786 000a 8260     		str	r2, [r0, #8]
1333:lvgl/src/core/lv_refr.c ****     _perf_monitor->perf_last_time = 0;
 787              		.loc 1 1333 5 is_stmt 1 discriminator 2 view .LVU280
 788              		.loc 1 1333 35 is_stmt 0 discriminator 2 view .LVU281
 789 000c 0260     		str	r2, [r0]
1334:lvgl/src/core/lv_refr.c ****     _perf_monitor->perf_label = NULL;
 790              		.loc 1 1334 5 is_stmt 1 discriminator 2 view .LVU282
 791              		.loc 1 1334 31 is_stmt 0 discriminator 2 view .LVU283
 792 000e 4261     		str	r2, [r0, #20]
1335:lvgl/src/core/lv_refr.c **** }
 793              		.loc 1 1335 1 discriminator 2 view .LVU284
 794 0010 7047     		bx	lr
 795              	.L45:
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 796              		.loc 1 1328 5 is_stmt 1 discriminator 1 view .LVU285
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 797              		.loc 1 1328 5 discriminator 1 view .LVU286
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 798              		.loc 1 1328 5 discriminator 1 view .LVU287
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 799              		.loc 1 1328 5 discriminator 1 view .LVU288
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 800              		.loc 1 1328 5 discriminator 1 view .LVU289
1328:lvgl/src/core/lv_refr.c ****     _perf_monitor->elaps_sum = 0;
 801              		.loc 1 1328 5 discriminator 1 view .LVU290
 802 0012 FEE7     		b	.L45
 803              		.cfi_endproc
 804              	.LFE194:
 806              		.section	.text.mem_monitor_init,"ax",%progbits
 807              		.align	1
 808              		.syntax unified
 809              		.thumb
 810              		.thumb_func
 812              	mem_monitor_init:
 813              	.LVL71:
 814              	.LFB195:
1336:lvgl/src/core/lv_refr.c **** #endif
1337:lvgl/src/core/lv_refr.c **** 
1338:lvgl/src/core/lv_refr.c **** #if LV_USE_MEM_MONITOR
1339:lvgl/src/core/lv_refr.c **** static void mem_monitor_init(mem_monitor_t * _mem_monitor)
1340:lvgl/src/core/lv_refr.c **** {
 815              		.loc 1 1340 1 view -0
 816              		.cfi_startproc
 817              		@ args = 0, pretend = 0, frame = 0
 818              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 43


 819              		@ link register save eliminated.
1341:lvgl/src/core/lv_refr.c ****     LV_ASSERT_NULL(_mem_monitor);
 820              		.loc 1 1341 5 view .LVU292
 821              		.loc 1 1341 5 view .LVU293
 822 0000 18B1     		cbz	r0, .L48
 823              		.loc 1 1341 5 discriminator 2 view .LVU294
 824              		.loc 1 1341 33 discriminator 2 view .LVU295
1342:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 825              		.loc 1 1342 5 discriminator 2 view .LVU296
 826              		.loc 1 1342 33 is_stmt 0 discriminator 2 view .LVU297
 827 0002 0022     		movs	r2, #0
 828 0004 0260     		str	r2, [r0]
1343:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_label = NULL;
 829              		.loc 1 1343 5 is_stmt 1 discriminator 2 view .LVU298
 830              		.loc 1 1343 29 is_stmt 0 discriminator 2 view .LVU299
 831 0006 4260     		str	r2, [r0, #4]
1344:lvgl/src/core/lv_refr.c **** }
 832              		.loc 1 1344 1 discriminator 2 view .LVU300
 833 0008 7047     		bx	lr
 834              	.L48:
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 835              		.loc 1 1341 5 is_stmt 1 discriminator 1 view .LVU301
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 836              		.loc 1 1341 5 discriminator 1 view .LVU302
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 837              		.loc 1 1341 5 discriminator 1 view .LVU303
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 838              		.loc 1 1341 5 discriminator 1 view .LVU304
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 839              		.loc 1 1341 5 discriminator 1 view .LVU305
1341:lvgl/src/core/lv_refr.c ****     _mem_monitor->mem_last_time = 0;
 840              		.loc 1 1341 5 discriminator 1 view .LVU306
 841 000a FEE7     		b	.L48
 842              		.cfi_endproc
 843              	.LFE195:
 845              		.section	.text.lv_refr_get_top_obj,"ax",%progbits
 846              		.align	1
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 851              	lv_refr_get_top_obj:
 852              	.LVL72:
 853              	.LFB181:
 806:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 854              		.loc 1 806 1 view -0
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 8
 857              		@ frame_needed = 0, uses_anonymous_args = 0
 806:lvgl/src/core/lv_refr.c ****     lv_obj_t * found_p = NULL;
 858              		.loc 1 806 1 is_stmt 0 view .LVU308
 859 0000 70B5     		push	{r4, r5, r6, lr}
 860              		.cfi_def_cfa_offset 16
 861              		.cfi_offset 4, -16
 862              		.cfi_offset 5, -12
 863              		.cfi_offset 6, -8
 864              		.cfi_offset 14, -4
 865 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 44


 866              		.cfi_def_cfa_offset 24
 867 0004 0646     		mov	r6, r0
 868 0006 0C46     		mov	r4, r1
 807:lvgl/src/core/lv_refr.c **** 
 869              		.loc 1 807 5 is_stmt 1 view .LVU309
 870              	.LVL73:
 809:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 871              		.loc 1 809 5 view .LVU310
 809:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 872              		.loc 1 809 8 is_stmt 0 view .LVU311
 873 0008 0022     		movs	r2, #0
 874 000a 1431     		adds	r1, r1, #20
 875              	.LVL74:
 809:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 876              		.loc 1 809 8 view .LVU312
 877 000c FFF7FEFF 		bl	_lv_area_is_in
 878              	.LVL75:
 809:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 879              		.loc 1 809 7 view .LVU313
 880 0010 68B3     		cbz	r0, .L54
 810:lvgl/src/core/lv_refr.c ****     if(_lv_obj_get_layer_type(obj) != LV_LAYER_TYPE_NONE) return NULL;
 881              		.loc 1 810 5 is_stmt 1 view .LVU314
 810:lvgl/src/core/lv_refr.c ****     if(_lv_obj_get_layer_type(obj) != LV_LAYER_TYPE_NONE) return NULL;
 882              		.loc 1 810 8 is_stmt 0 view .LVU315
 883 0012 0121     		movs	r1, #1
 884 0014 2046     		mov	r0, r4
 885 0016 FFF7FEFF 		bl	lv_obj_has_flag
 886              	.LVL76:
 810:lvgl/src/core/lv_refr.c ****     if(_lv_obj_get_layer_type(obj) != LV_LAYER_TYPE_NONE) return NULL;
 887              		.loc 1 810 7 view .LVU316
 888 001a 60BB     		cbnz	r0, .L55
 811:lvgl/src/core/lv_refr.c **** 
 889              		.loc 1 811 5 is_stmt 1 view .LVU317
 811:lvgl/src/core/lv_refr.c **** 
 890              		.loc 1 811 8 is_stmt 0 view .LVU318
 891 001c 2046     		mov	r0, r4
 892 001e FFF7FEFF 		bl	_lv_obj_get_layer_type
 893              	.LVL77:
 811:lvgl/src/core/lv_refr.c **** 
 894              		.loc 1 811 7 view .LVU319
 895 0022 50BB     		cbnz	r0, .L56
 814:lvgl/src/core/lv_refr.c ****     info.res = LV_COVER_RES_COVER;
 896              		.loc 1 814 5 is_stmt 1 view .LVU320
 815:lvgl/src/core/lv_refr.c ****     info.area = area_p;
 897              		.loc 1 815 5 view .LVU321
 815:lvgl/src/core/lv_refr.c ****     info.area = area_p;
 898              		.loc 1 815 14 is_stmt 0 view .LVU322
 899 0024 0023     		movs	r3, #0
 900 0026 8DF80030 		strb	r3, [sp]
 816:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 901              		.loc 1 816 5 is_stmt 1 view .LVU323
 816:lvgl/src/core/lv_refr.c ****     lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 902              		.loc 1 816 15 is_stmt 0 view .LVU324
 903 002a 0196     		str	r6, [sp, #4]
 817:lvgl/src/core/lv_refr.c ****     if(info.res == LV_COVER_RES_MASKED) return NULL;
 904              		.loc 1 817 5 is_stmt 1 view .LVU325
 905 002c 6A46     		mov	r2, sp
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 45


 906 002e 1221     		movs	r1, #18
 907 0030 2046     		mov	r0, r4
 908 0032 FFF7FEFF 		bl	lv_event_send
 909              	.LVL78:
 818:lvgl/src/core/lv_refr.c **** 
 910              		.loc 1 818 5 view .LVU326
 818:lvgl/src/core/lv_refr.c **** 
 911              		.loc 1 818 12 is_stmt 0 view .LVU327
 912 0036 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 818:lvgl/src/core/lv_refr.c **** 
 913              		.loc 1 818 7 view .LVU328
 914 003a 022B     		cmp	r3, #2
 915 003c 1FD0     		beq	.L57
 820:lvgl/src/core/lv_refr.c ****     int32_t child_cnt = lv_obj_get_child_cnt(obj);
 916              		.loc 1 820 5 is_stmt 1 view .LVU329
 821:lvgl/src/core/lv_refr.c ****     for(i = child_cnt - 1; i >= 0; i--) {
 917              		.loc 1 821 5 view .LVU330
 821:lvgl/src/core/lv_refr.c ****     for(i = child_cnt - 1; i >= 0; i--) {
 918              		.loc 1 821 25 is_stmt 0 view .LVU331
 919 003e 2046     		mov	r0, r4
 920 0040 FFF7FEFF 		bl	lv_obj_get_child_cnt
 921              	.LVL79:
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 922              		.loc 1 822 5 is_stmt 1 view .LVU332
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 923              		.loc 1 822 11 is_stmt 0 view .LVU333
 924 0044 451E     		subs	r5, r0, #1
 925              	.LVL80:
 807:lvgl/src/core/lv_refr.c **** 
 926              		.loc 1 807 16 view .LVU334
 927 0046 0023     		movs	r3, #0
 928              	.LVL81:
 929              	.L51:
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 930              		.loc 1 822 28 is_stmt 1 discriminator 1 view .LVU335
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 931              		.loc 1 822 5 is_stmt 0 discriminator 1 view .LVU336
 932 0048 002D     		cmp	r5, #0
 933 004a 0ADB     		blt	.L52
 934              	.LBB87:
 823:lvgl/src/core/lv_refr.c ****         found_p = lv_refr_get_top_obj(area_p, child);
 935              		.loc 1 823 9 is_stmt 1 view .LVU337
 823:lvgl/src/core/lv_refr.c ****         found_p = lv_refr_get_top_obj(area_p, child);
 936              		.loc 1 823 31 is_stmt 0 view .LVU338
 937 004c A368     		ldr	r3, [r4, #8]
 938              	.LVL82:
 823:lvgl/src/core/lv_refr.c ****         found_p = lv_refr_get_top_obj(area_p, child);
 939              		.loc 1 823 42 view .LVU339
 940 004e 1B68     		ldr	r3, [r3]
 941              	.LVL83:
 824:lvgl/src/core/lv_refr.c **** 
 942              		.loc 1 824 9 is_stmt 1 view .LVU340
 824:lvgl/src/core/lv_refr.c **** 
 943              		.loc 1 824 19 is_stmt 0 view .LVU341
 944 0050 53F82510 		ldr	r1, [r3, r5, lsl #2]
 945 0054 3046     		mov	r0, r6
 946 0056 FFF7D3FF 		bl	lv_refr_get_top_obj
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 46


 947              	.LVL84:
 827:lvgl/src/core/lv_refr.c ****             break;
 948              		.loc 1 827 9 is_stmt 1 view .LVU342
 827:lvgl/src/core/lv_refr.c ****             break;
 949              		.loc 1 827 11 is_stmt 0 view .LVU343
 950 005a 0346     		mov	r3, r0
 951 005c 08B9     		cbnz	r0, .L52
 952              	.LBE87:
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 953              		.loc 1 822 36 is_stmt 1 discriminator 2 view .LVU344
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 954              		.loc 1 822 37 is_stmt 0 discriminator 2 view .LVU345
 955 005e 013D     		subs	r5, r5, #1
 956              	.LVL85:
 822:lvgl/src/core/lv_refr.c ****         lv_obj_t * child = obj->spec_attr->children[i];
 957              		.loc 1 822 37 discriminator 2 view .LVU346
 958 0060 F2E7     		b	.L51
 959              	.LVL86:
 960              	.L52:
 833:lvgl/src/core/lv_refr.c ****         found_p = obj;
 961              		.loc 1 833 5 is_stmt 1 view .LVU347
 833:lvgl/src/core/lv_refr.c ****         found_p = obj;
 962              		.loc 1 833 7 is_stmt 0 view .LVU348
 963 0062 2BB9     		cbnz	r3, .L49
 833:lvgl/src/core/lv_refr.c ****         found_p = obj;
 964              		.loc 1 833 31 discriminator 1 view .LVU349
 965 0064 9DF80020 		ldrb	r2, [sp]	@ zero_extendqisi2
 833:lvgl/src/core/lv_refr.c ****         found_p = obj;
 966              		.loc 1 833 24 discriminator 1 view .LVU350
 967 0068 12B9     		cbnz	r2, .L49
 834:lvgl/src/core/lv_refr.c ****     }
 968              		.loc 1 834 17 view .LVU351
 969 006a 2346     		mov	r3, r4
 970              	.LVL87:
 834:lvgl/src/core/lv_refr.c ****     }
 971              		.loc 1 834 17 view .LVU352
 972 006c 00E0     		b	.L49
 973              	.LVL88:
 974              	.L54:
 809:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_HIDDEN)) return NULL;
 975              		.loc 1 809 65 view .LVU353
 976 006e 0023     		movs	r3, #0
 977              	.LVL89:
 978              	.L49:
 838:lvgl/src/core/lv_refr.c **** 
 979              		.loc 1 838 1 view .LVU354
 980 0070 1846     		mov	r0, r3
 981 0072 02B0     		add	sp, sp, #8
 982              		.cfi_remember_state
 983              		.cfi_def_cfa_offset 16
 984              		@ sp needed
 985 0074 70BD     		pop	{r4, r5, r6, pc}
 986              	.LVL90:
 987              	.L55:
 988              		.cfi_restore_state
 810:lvgl/src/core/lv_refr.c ****     if(_lv_obj_get_layer_type(obj) != LV_LAYER_TYPE_NONE) return NULL;
 989              		.loc 1 810 57 view .LVU355
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 47


 990 0076 0023     		movs	r3, #0
 991 0078 FAE7     		b	.L49
 992              	.L56:
 811:lvgl/src/core/lv_refr.c **** 
 993              		.loc 1 811 66 view .LVU356
 994 007a 0023     		movs	r3, #0
 995 007c F8E7     		b	.L49
 996              	.L57:
 818:lvgl/src/core/lv_refr.c **** 
 997              		.loc 1 818 48 view .LVU357
 998 007e 0023     		movs	r3, #0
 999 0080 F6E7     		b	.L49
 1000              		.cfi_endproc
 1001              	.LFE181:
 1003              		.section	.text.layer_get_area,"ax",%progbits
 1004              		.align	1
 1005              		.syntax unified
 1006              		.thumb
 1007              		.thumb_func
 1009              	layer_get_area:
 1010              	.LVL91:
 1011              	.LFB183:
 893:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 1012              		.loc 1 893 1 is_stmt 1 view -0
 1013              		.cfi_startproc
 1014              		@ args = 0, pretend = 0, frame = 32
 1015              		@ frame_needed = 0, uses_anonymous_args = 0
 893:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 1016              		.loc 1 893 1 is_stmt 0 view .LVU359
 1017 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1018              		.cfi_def_cfa_offset 24
 1019              		.cfi_offset 4, -24
 1020              		.cfi_offset 5, -20
 1021              		.cfi_offset 6, -16
 1022              		.cfi_offset 7, -12
 1023              		.cfi_offset 8, -8
 1024              		.cfi_offset 14, -4
 1025 0004 88B0     		sub	sp, sp, #32
 1026              		.cfi_def_cfa_offset 56
 1027 0006 8046     		mov	r8, r0
 1028 0008 0E46     		mov	r6, r1
 1029 000a 1446     		mov	r4, r2
 1030 000c 1F46     		mov	r7, r3
 894:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 1031              		.loc 1 894 5 is_stmt 1 view .LVU360
 894:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 1032              		.loc 1 894 32 is_stmt 0 view .LVU361
 1033 000e 0846     		mov	r0, r1
 1034              	.LVL92:
 894:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 1035              		.loc 1 894 32 view .LVU362
 1036 0010 FFF7FEFF 		bl	_lv_obj_get_ext_draw_size
 1037              	.LVL93:
 894:lvgl/src/core/lv_refr.c ****     lv_area_t obj_coords_ext;
 1038              		.loc 1 894 32 view .LVU363
 1039 0014 0546     		mov	r5, r0
 1040              	.LVL94:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 48


 895:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 1041              		.loc 1 895 5 is_stmt 1 view .LVU364
 896:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 1042              		.loc 1 896 5 view .LVU365
 1043 0016 06A9     		add	r1, sp, #24
 1044 0018 3046     		mov	r0, r6
 1045 001a FFF7FEFF 		bl	lv_obj_get_coords
 1046              	.LVL95:
 897:lvgl/src/core/lv_refr.c **** 
 1047              		.loc 1 897 5 view .LVU366
 1048 001e 2A46     		mov	r2, r5
 1049 0020 2946     		mov	r1, r5
 1050 0022 06A8     		add	r0, sp, #24
 1051 0024 FFF7FEFF 		bl	lv_area_increase
 1052              	.LVL96:
 899:lvgl/src/core/lv_refr.c ****         /*Get the transformed area and clip it to the current clip area.
 1053              		.loc 1 899 5 view .LVU367
 899:lvgl/src/core/lv_refr.c ****         /*Get the transformed area and clip it to the current clip area.
 1054              		.loc 1 899 7 is_stmt 0 view .LVU368
 1055 0028 022C     		cmp	r4, #2
 1056 002a 05D0     		beq	.L67
 920:lvgl/src/core/lv_refr.c ****         lv_area_t clip_coords_for_obj;
 1057              		.loc 1 920 10 is_stmt 1 view .LVU369
 920:lvgl/src/core/lv_refr.c ****         lv_area_t clip_coords_for_obj;
 1058              		.loc 1 920 12 is_stmt 0 view .LVU370
 1059 002c 012C     		cmp	r4, #1
 1060 002e 31D0     		beq	.L68
 929:lvgl/src/core/lv_refr.c ****     }
 1061              		.loc 1 929 16 view .LVU371
 1062 0030 0020     		movs	r0, #0
 1063              	.L63:
 933:lvgl/src/core/lv_refr.c **** 
 1064              		.loc 1 933 1 view .LVU372
 1065 0032 08B0     		add	sp, sp, #32
 1066              		.cfi_remember_state
 1067              		.cfi_def_cfa_offset 24
 1068              		@ sp needed
 1069 0034 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1070              	.LVL97:
 1071              	.L67:
 1072              		.cfi_restore_state
 1073              	.LBB88:
 902:lvgl/src/core/lv_refr.c ****         lv_area_t tranf_coords = obj_coords_ext;
 1074              		.loc 1 902 9 is_stmt 1 view .LVU373
 903:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &tranf_coords, false, false);
 1075              		.loc 1 903 9 view .LVU374
 903:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &tranf_coords, false, false);
 1076              		.loc 1 903 19 is_stmt 0 view .LVU375
 1077 0038 02AC     		add	r4, sp, #8
 1078 003a 08AB     		add	r3, sp, #32
 1079 003c 13E90300 		ldmdb	r3, {r0, r1}
 1080 0040 84E80300 		stm	r4, {r0, r1}
 904:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_obj, draw_ctx->clip_area, &tranf_coords)) {
 1081              		.loc 1 904 9 is_stmt 1 view .LVU376
 1082 0044 0023     		movs	r3, #0
 1083 0046 1A46     		mov	r2, r3
 1084 0048 2146     		mov	r1, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 49


 1085 004a 3046     		mov	r0, r6
 1086 004c FFF7FEFF 		bl	lv_obj_get_transformed_area
 1087              	.LVL98:
 905:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1088              		.loc 1 905 9 view .LVU377
 905:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1089              		.loc 1 905 13 is_stmt 0 view .LVU378
 1090 0050 2246     		mov	r2, r4
 1091 0052 D8F80810 		ldr	r1, [r8, #8]
 1092 0056 6846     		mov	r0, sp
 1093 0058 FFF7FEFF 		bl	_lv_area_intersect
 1094              	.LVL99:
 905:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1095              		.loc 1 905 11 view .LVU379
 1096 005c 08B9     		cbnz	r0, .L69
 1097              	.L62:
 906:lvgl/src/core/lv_refr.c ****         }
 1098              		.loc 1 906 20 discriminator 1 view .LVU380
 1099 005e 0020     		movs	r0, #0
 1100 0060 E7E7     		b	.L63
 1101              	.L69:
 912:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &inverse_clip_coords_for_obj, false, true);
 1102              		.loc 1 912 9 is_stmt 1 view .LVU381
 912:lvgl/src/core/lv_refr.c ****         lv_obj_get_transformed_area(obj, &inverse_clip_coords_for_obj, false, true);
 1103              		.loc 1 912 19 is_stmt 0 view .LVU382
 1104 0062 04AC     		add	r4, sp, #16
 1105 0064 6B46     		mov	r3, sp
 1106 0066 93E80300 		ldm	r3, {r0, r1}
 1107 006a 84E80300 		stm	r4, {r0, r1}
 913:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&inverse_clip_coords_for_obj, &inverse_clip_coords_for_obj, &obj_coo
 1108              		.loc 1 913 9 is_stmt 1 view .LVU383
 1109 006e 0123     		movs	r3, #1
 1110 0070 0022     		movs	r2, #0
 1111 0072 2146     		mov	r1, r4
 1112 0074 3046     		mov	r0, r6
 1113 0076 FFF7FEFF 		bl	lv_obj_get_transformed_area
 1114              	.LVL100:
 914:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1115              		.loc 1 914 9 view .LVU384
 914:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1116              		.loc 1 914 13 is_stmt 0 view .LVU385
 1117 007a 06AA     		add	r2, sp, #24
 1118 007c 2146     		mov	r1, r4
 1119 007e 2046     		mov	r0, r4
 1120 0080 FFF7FEFF 		bl	_lv_area_intersect
 1121              	.LVL101:
 914:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1122              		.loc 1 914 11 view .LVU386
 1123 0084 0028     		cmp	r0, #0
 1124 0086 EAD0     		beq	.L62
 918:lvgl/src/core/lv_refr.c ****     }
 1125              		.loc 1 918 9 is_stmt 1 view .LVU387
 918:lvgl/src/core/lv_refr.c ****     }
 1126              		.loc 1 918 25 is_stmt 0 view .LVU388
 1127 0088 2346     		mov	r3, r4
 1128 008a 03CB     		ldmia	r3!, {r0, r1}
 1129 008c 3860     		str	r0, [r7]	@ unaligned
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 50


 1130 008e 7960     		str	r1, [r7, #4]	@ unaligned
 1131              	.LBE88:
 932:lvgl/src/core/lv_refr.c **** }
 1132              		.loc 1 932 12 view .LVU389
 1133 0090 0120     		movs	r0, #1
 1134 0092 CEE7     		b	.L63
 1135              	.L68:
 1136              	.LBB89:
 921:lvgl/src/core/lv_refr.c ****         if(!_lv_area_intersect(&clip_coords_for_obj, draw_ctx->clip_area, &obj_coords_ext)) {
 1137              		.loc 1 921 9 is_stmt 1 view .LVU390
 922:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1138              		.loc 1 922 9 view .LVU391
 922:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1139              		.loc 1 922 13 is_stmt 0 view .LVU392
 1140 0094 06AA     		add	r2, sp, #24
 1141 0096 D8F80810 		ldr	r1, [r8, #8]
 1142 009a 04A8     		add	r0, sp, #16
 1143 009c FFF7FEFF 		bl	_lv_area_intersect
 1144              	.LVL102:
 922:lvgl/src/core/lv_refr.c ****             return LV_RES_INV;
 1145              		.loc 1 922 11 view .LVU393
 1146 00a0 0028     		cmp	r0, #0
 1147 00a2 C6D0     		beq	.L63
 925:lvgl/src/core/lv_refr.c ****     }
 1148              		.loc 1 925 9 is_stmt 1 view .LVU394
 925:lvgl/src/core/lv_refr.c ****     }
 1149              		.loc 1 925 25 is_stmt 0 view .LVU395
 1150 00a4 04AB     		add	r3, sp, #16
 1151 00a6 03CB     		ldmia	r3!, {r0, r1}
 1152 00a8 3860     		str	r0, [r7]	@ unaligned
 1153 00aa 7960     		str	r1, [r7, #4]	@ unaligned
 1154              	.LBE89:
 932:lvgl/src/core/lv_refr.c **** }
 1155              		.loc 1 932 12 view .LVU396
 1156 00ac 2046     		mov	r0, r4
 1157 00ae C0E7     		b	.L63
 1158              		.cfi_endproc
 1159              	.LFE183:
 1161              		.section	.text.layer_alpha_test,"ax",%progbits
 1162              		.align	1
 1163              		.syntax unified
 1164              		.thumb
 1165              		.thumb_func
 1167              	layer_alpha_test:
 1168              	.LVL103:
 1169              	.LFB184:
 937:lvgl/src/core/lv_refr.c ****     bool has_alpha;
 1170              		.loc 1 937 1 is_stmt 1 view -0
 1171              		.cfi_startproc
 1172              		@ args = 0, pretend = 0, frame = 8
 1173              		@ frame_needed = 0, uses_anonymous_args = 0
 937:lvgl/src/core/lv_refr.c ****     bool has_alpha;
 1174              		.loc 1 937 1 is_stmt 0 view .LVU398
 1175 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 1176              		.cfi_def_cfa_offset 20
 1177              		.cfi_offset 4, -20
 1178              		.cfi_offset 5, -16
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 51


 1179              		.cfi_offset 6, -12
 1180              		.cfi_offset 7, -8
 1181              		.cfi_offset 14, -4
 1182 0002 83B0     		sub	sp, sp, #12
 1183              		.cfi_def_cfa_offset 32
 1184 0004 0D46     		mov	r5, r1
 1185 0006 1446     		mov	r4, r2
 938:lvgl/src/core/lv_refr.c ****     /*If globally the layer has alpha maybe this smaller section has not (e.g. not on a rounded cor
 1186              		.loc 1 938 5 is_stmt 1 view .LVU399
 941:lvgl/src/core/lv_refr.c ****         /*Test for alpha by assuming there is no alpha. If it fails, fall back to rendering with al
 1187              		.loc 1 941 5 view .LVU400
 941:lvgl/src/core/lv_refr.c ****         /*Test for alpha by assuming there is no alpha. If it fails, fall back to rendering with al
 1188              		.loc 1 941 7 is_stmt 0 view .LVU401
 1189 0008 13F0010F 		tst	r3, #1
 1190 000c 0DD1     		bne	.L77
 957:lvgl/src/core/lv_refr.c ****     }
 1191              		.loc 1 957 19 view .LVU402
 1192 000e 0022     		movs	r2, #0
 1193              	.LVL104:
 1194              	.L71:
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1195              		.loc 1 960 5 is_stmt 1 view .LVU403
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1196              		.loc 1 960 27 is_stmt 0 view .LVU404
 1197 0010 B4F90E10 		ldrsh	r1, [r4, #14]
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1198              		.loc 1 960 53 view .LVU405
 1199 0014 B4F90630 		ldrsh	r3, [r4, #6]
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1200              		.loc 1 960 7 view .LVU406
 1201 0018 9942     		cmp	r1, r3
 1202 001a 00DD     		ble	.L74
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1203              		.loc 1 960 58 is_stmt 1 discriminator 1 view .LVU407
 960:lvgl/src/core/lv_refr.c ****     lv_draw_layer_adjust(draw_ctx, layer_ctx, has_alpha ? LV_DRAW_LAYER_FLAG_HAS_ALPHA : LV_DRAW_LA
 1204              		.loc 1 960 81 is_stmt 0 discriminator 1 view .LVU408
 1205 001c E381     		strh	r3, [r4, #14]	@ movhi
 1206              	.L74:
 961:lvgl/src/core/lv_refr.c **** }
 1207              		.loc 1 961 5 is_stmt 1 view .LVU409
 1208 001e 2146     		mov	r1, r4
 1209 0020 2846     		mov	r0, r5
 1210 0022 FFF7FEFF 		bl	lv_draw_layer_adjust
 1211              	.LVL105:
 962:lvgl/src/core/lv_refr.c **** 
 1212              		.loc 1 962 1 is_stmt 0 view .LVU410
 1213 0026 03B0     		add	sp, sp, #12
 1214              		.cfi_remember_state
 1215              		.cfi_def_cfa_offset 20
 1216              		@ sp needed
 1217 0028 F0BD     		pop	{r4, r5, r6, r7, pc}
 1218              	.LVL106:
 1219              	.L77:
 1220              		.cfi_restore_state
 962:lvgl/src/core/lv_refr.c **** 
 1221              		.loc 1 962 1 view .LVU411
 1222 002a 0646     		mov	r6, r0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 52


 943:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&layer_ctx->area_act, &obj->coords, 0)) {
 1223              		.loc 1 943 9 is_stmt 1 view .LVU412
 1224              	.LVL107:
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1225              		.loc 1 944 9 view .LVU413
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1226              		.loc 1 944 27 is_stmt 0 view .LVU414
 1227 002c 02F10807 		add	r7, r2, #8
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1228              		.loc 1 944 12 view .LVU415
 1229 0030 0022     		movs	r2, #0
 1230              	.LVL108:
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1231              		.loc 1 944 12 view .LVU416
 1232 0032 00F11401 		add	r1, r0, #20
 1233              	.LVL109:
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1234              		.loc 1 944 12 view .LVU417
 1235 0036 3846     		mov	r0, r7
 1236              	.LVL110:
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1237              		.loc 1 944 12 view .LVU418
 1238 0038 FFF7FEFF 		bl	_lv_area_is_in
 1239              	.LVL111:
 944:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 1240              		.loc 1 944 11 view .LVU419
 1241 003c 38B9     		cbnz	r0, .L78
 1242              	.L72:
 1243              	.LVL112:
 953:lvgl/src/core/lv_refr.c ****         }
 1244              		.loc 1 953 13 is_stmt 1 view .LVU420
 953:lvgl/src/core/lv_refr.c ****         }
 1245              		.loc 1 953 57 is_stmt 0 view .LVU421
 1246 003e 6389     		ldrh	r3, [r4, #10]
 953:lvgl/src/core/lv_refr.c ****         }
 1247              		.loc 1 953 72 view .LVU422
 1248 0040 228A     		ldrh	r2, [r4, #16]
 953:lvgl/src/core/lv_refr.c ****         }
 1249              		.loc 1 953 61 view .LVU423
 1250 0042 1344     		add	r3, r3, r2
 1251 0044 9BB2     		uxth	r3, r3
 953:lvgl/src/core/lv_refr.c ****         }
 1252              		.loc 1 953 93 view .LVU424
 1253 0046 013B     		subs	r3, r3, #1
 953:lvgl/src/core/lv_refr.c ****         }
 1254              		.loc 1 953 36 view .LVU425
 1255 0048 E381     		strh	r3, [r4, #14]	@ movhi
 1256 004a 0122     		movs	r2, #1
 1257 004c E0E7     		b	.L71
 1258              	.LVL113:
 1259              	.L78:
 1260              	.LBB90:
 945:lvgl/src/core/lv_refr.c ****             info.res = LV_COVER_RES_COVER;
 1261              		.loc 1 945 13 is_stmt 1 view .LVU426
 946:lvgl/src/core/lv_refr.c ****             info.area = &layer_ctx->area_act;
 1262              		.loc 1 946 13 view .LVU427
 946:lvgl/src/core/lv_refr.c ****             info.area = &layer_ctx->area_act;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 53


 1263              		.loc 1 946 22 is_stmt 0 view .LVU428
 1264 004e 0023     		movs	r3, #0
 1265 0050 8DF80030 		strb	r3, [sp]
 947:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 1266              		.loc 1 947 13 is_stmt 1 view .LVU429
 947:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 1267              		.loc 1 947 23 is_stmt 0 view .LVU430
 1268 0054 0197     		str	r7, [sp, #4]
 948:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) has_alpha = false;
 1269              		.loc 1 948 13 is_stmt 1 view .LVU431
 1270 0056 6A46     		mov	r2, sp
 1271 0058 1221     		movs	r1, #18
 1272 005a 3046     		mov	r0, r6
 1273 005c FFF7FEFF 		bl	lv_event_send
 1274              	.LVL114:
 949:lvgl/src/core/lv_refr.c ****         }
 1275              		.loc 1 949 13 view .LVU432
 949:lvgl/src/core/lv_refr.c ****         }
 1276              		.loc 1 949 20 is_stmt 0 view .LVU433
 1277 0060 9DF80030 		ldrb	r3, [sp]	@ zero_extendqisi2
 949:lvgl/src/core/lv_refr.c ****         }
 1278              		.loc 1 949 15 view .LVU434
 1279 0064 002B     		cmp	r3, #0
 1280 0066 EAD1     		bne	.L72
 949:lvgl/src/core/lv_refr.c ****         }
 1281              		.loc 1 949 48 is_stmt 1 view .LVU435
 1282              	.LVL115:
 949:lvgl/src/core/lv_refr.c ****         }
 1283              		.loc 1 949 48 is_stmt 0 view .LVU436
 1284              	.LBE90:
 952:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_alpha - 1;
 1285              		.loc 1 952 9 is_stmt 1 view .LVU437
 1286              	.LBB91:
 949:lvgl/src/core/lv_refr.c ****         }
 1287              		.loc 1 949 58 is_stmt 0 view .LVU438
 1288 0068 0022     		movs	r2, #0
 1289 006a D1E7     		b	.L71
 1290              	.LBE91:
 1291              		.cfi_endproc
 1292              	.LFE184:
 1294              		.section	.text.lv_refr_join_area,"ax",%progbits
 1295              		.align	1
 1296              		.syntax unified
 1297              		.thumb
 1298              		.thumb_func
 1300              	lv_refr_join_area:
 1301              	.LFB176:
 477:lvgl/src/core/lv_refr.c ****     uint32_t join_from;
 1302              		.loc 1 477 1 is_stmt 1 view -0
 1303              		.cfi_startproc
 1304              		@ args = 0, pretend = 0, frame = 8
 1305              		@ frame_needed = 0, uses_anonymous_args = 0
 1306 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 1307              		.cfi_def_cfa_offset 28
 1308              		.cfi_offset 4, -28
 1309              		.cfi_offset 5, -24
 1310              		.cfi_offset 6, -20
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 54


 1311              		.cfi_offset 7, -16
 1312              		.cfi_offset 8, -12
 1313              		.cfi_offset 9, -8
 1314              		.cfi_offset 14, -4
 1315 0004 83B0     		sub	sp, sp, #12
 1316              		.cfi_def_cfa_offset 40
 478:lvgl/src/core/lv_refr.c ****     uint32_t join_in;
 1317              		.loc 1 478 5 view .LVU440
 479:lvgl/src/core/lv_refr.c ****     lv_area_t joined_area;
 1318              		.loc 1 479 5 view .LVU441
 480:lvgl/src/core/lv_refr.c ****     for(join_in = 0; join_in < disp_refr->inv_p; join_in++) {
 1319              		.loc 1 480 5 view .LVU442
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1320              		.loc 1 481 5 view .LVU443
 1321              	.LVL116:
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1322              		.loc 1 481 17 is_stmt 0 view .LVU444
 1323 0006 0025     		movs	r5, #0
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1324              		.loc 1 481 5 view .LVU445
 1325 0008 51E0     		b	.L80
 1326              	.LVL117:
 1327              	.L83:
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1328              		.loc 1 485 58 is_stmt 1 discriminator 2 view .LVU446
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1329              		.loc 1 485 67 is_stmt 0 discriminator 2 view .LVU447
 1330 000a 0134     		adds	r4, r4, #1
 1331              	.LVL118:
 1332              	.L82:
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1333              		.loc 1 485 28 is_stmt 1 discriminator 1 view .LVU448
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1334              		.loc 1 485 49 is_stmt 0 discriminator 1 view .LVU449
 1335 000c 304B     		ldr	r3, .L88
 1336 000e 1968     		ldr	r1, [r3]
 1337 0010 B1F85431 		ldrh	r3, [r1, #340]
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1338              		.loc 1 485 9 discriminator 1 view .LVU450
 1339 0014 A342     		cmp	r3, r4
 1340 0016 49D9     		bls	.L81
 487:lvgl/src/core/lv_refr.c ****                 continue;
 1341              		.loc 1 487 13 is_stmt 1 view .LVU451
 487:lvgl/src/core/lv_refr.c ****                 continue;
 1342              		.loc 1 487 42 is_stmt 0 view .LVU452
 1343 0018 0B19     		adds	r3, r1, r4
 1344 001a 93F83431 		ldrb	r3, [r3, #308]	@ zero_extendqisi2
 487:lvgl/src/core/lv_refr.c ****                 continue;
 1345              		.loc 1 487 15 view .LVU453
 1346 001e 002B     		cmp	r3, #0
 1347 0020 F3D1     		bne	.L83
 487:lvgl/src/core/lv_refr.c ****                 continue;
 1348              		.loc 1 487 59 discriminator 1 view .LVU454
 1349 0022 AC42     		cmp	r4, r5
 1350 0024 F1D0     		beq	.L83
 492:lvgl/src/core/lv_refr.c ****                 continue;
 1351              		.loc 1 492 13 is_stmt 1 view .LVU455
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 55


 492:lvgl/src/core/lv_refr.c ****                 continue;
 1352              		.loc 1 492 31 is_stmt 0 view .LVU456
 1353 0026 A81D     		adds	r0, r5, #6
 1354 0028 01EBC000 		add	r0, r1, r0, lsl #3
 492:lvgl/src/core/lv_refr.c ****                 continue;
 1355              		.loc 1 492 63 view .LVU457
 1356 002c A31D     		adds	r3, r4, #6
 1357 002e 01EBC301 		add	r1, r1, r3, lsl #3
 492:lvgl/src/core/lv_refr.c ****                 continue;
 1358              		.loc 1 492 16 view .LVU458
 1359 0032 0431     		adds	r1, r1, #4
 1360 0034 0430     		adds	r0, r0, #4
 1361 0036 FFF7FEFF 		bl	_lv_area_is_on
 1362              	.LVL119:
 492:lvgl/src/core/lv_refr.c ****                 continue;
 1363              		.loc 1 492 15 view .LVU459
 1364 003a 0028     		cmp	r0, #0
 1365 003c E5D0     		beq	.L83
 496:lvgl/src/core/lv_refr.c **** 
 1366              		.loc 1 496 13 is_stmt 1 view .LVU460
 496:lvgl/src/core/lv_refr.c **** 
 1367              		.loc 1 496 51 is_stmt 0 view .LVU461
 1368 003e 244F     		ldr	r7, .L88
 1369 0040 3A68     		ldr	r2, [r7]
 496:lvgl/src/core/lv_refr.c **** 
 1370              		.loc 1 496 41 view .LVU462
 1371 0042 A91D     		adds	r1, r5, #6
 1372 0044 CE00     		lsls	r6, r1, #3
 1373 0046 02EBC101 		add	r1, r2, r1, lsl #3
 496:lvgl/src/core/lv_refr.c **** 
 1374              		.loc 1 496 73 view .LVU463
 1375 004a A31D     		adds	r3, r4, #6
 1376 004c 4FEAC308 		lsl	r8, r3, #3
 1377 0050 02EBC302 		add	r2, r2, r3, lsl #3
 496:lvgl/src/core/lv_refr.c **** 
 1378              		.loc 1 496 13 view .LVU464
 1379 0054 0432     		adds	r2, r2, #4
 1380 0056 0431     		adds	r1, r1, #4
 1381 0058 6846     		mov	r0, sp
 1382 005a FFF7FEFF 		bl	_lv_area_join
 1383              	.LVL120:
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1384              		.loc 1 499 13 is_stmt 1 view .LVU465
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1385              		.loc 1 499 16 is_stmt 0 view .LVU466
 1386 005e 6846     		mov	r0, sp
 1387 0060 FFF7FEFF 		bl	lv_area_get_size
 1388              	.LVL121:
 1389 0064 8146     		mov	r9, r0
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1390              		.loc 1 499 77 view .LVU467
 1391 0066 3868     		ldr	r0, [r7]
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1392              		.loc 1 499 67 view .LVU468
 1393 0068 3044     		add	r0, r0, r6
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1394              		.loc 1 499 50 view .LVU469
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 56


 1395 006a 0430     		adds	r0, r0, #4
 1396 006c FFF7FEFF 		bl	lv_area_get_size
 1397              	.LVL122:
 1398 0070 0646     		mov	r6, r0
 500:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 1399              		.loc 1 500 77 view .LVU470
 1400 0072 3868     		ldr	r0, [r7]
 500:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 1401              		.loc 1 500 67 view .LVU471
 1402 0074 4044     		add	r0, r0, r8
 500:lvgl/src/core/lv_refr.c ****                 lv_area_copy(&disp_refr->inv_areas[join_in], &joined_area);
 1403              		.loc 1 500 50 view .LVU472
 1404 0076 0430     		adds	r0, r0, #4
 1405 0078 FFF7FEFF 		bl	lv_area_get_size
 1406              	.LVL123:
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1407              		.loc 1 499 99 view .LVU473
 1408 007c 0644     		add	r6, r6, r0
 499:lvgl/src/core/lv_refr.c ****                                                  lv_area_get_size(&disp_refr->inv_areas[join_from])
 1409              		.loc 1 499 15 view .LVU474
 1410 007e B145     		cmp	r9, r6
 1411 0080 C3D2     		bcs	.L83
 501:lvgl/src/core/lv_refr.c **** 
 1412              		.loc 1 501 17 is_stmt 1 view .LVU475
 501:lvgl/src/core/lv_refr.c **** 
 1413              		.loc 1 501 40 is_stmt 0 view .LVU476
 1414 0082 3A68     		ldr	r2, [r7]
 1415              	.LVL124:
 1416              	.LBB92:
 1417              	.LBI92:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1418              		.loc 2 110 20 is_stmt 1 view .LVU477
 1419              	.LBB93:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1420              		.loc 2 112 5 view .LVU478
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1421              		.loc 2 112 19 is_stmt 0 view .LVU479
 1422 0084 BDF90010 		ldrsh	r1, [sp]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 1423              		.loc 2 112 14 view .LVU480
 1424 0088 AB1D     		adds	r3, r5, #6
 1425 008a 02EBC303 		add	r3, r2, r3, lsl #3
 1426 008e 9980     		strh	r1, [r3, #4]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1427              		.loc 2 113 5 is_stmt 1 view .LVU481
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1428              		.loc 2 113 19 is_stmt 0 view .LVU482
 1429 0090 BDF90210 		ldrsh	r1, [sp, #2]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 1430              		.loc 2 113 14 view .LVU483
 1431 0094 D980     		strh	r1, [r3, #6]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1432              		.loc 2 114 5 is_stmt 1 view .LVU484
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 1433              		.loc 2 114 19 is_stmt 0 view .LVU485
 1434 0096 BDF90410 		ldrsh	r1, [sp, #4]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 57


 1435              		.loc 2 114 14 view .LVU486
 1436 009a 1981     		strh	r1, [r3, #8]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1437              		.loc 2 115 5 is_stmt 1 view .LVU487
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1438              		.loc 2 115 19 is_stmt 0 view .LVU488
 1439 009c BDF90610 		ldrsh	r1, [sp, #6]
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1440              		.loc 2 115 14 view .LVU489
 1441 00a0 5981     		strh	r1, [r3, #10]	@ movhi
 1442              	.LVL125:
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1443              		.loc 2 115 14 view .LVU490
 1444              	.LBE93:
 1445              	.LBE92:
 504:lvgl/src/core/lv_refr.c ****             }
 1446              		.loc 1 504 17 is_stmt 1 view .LVU491
 504:lvgl/src/core/lv_refr.c ****             }
 1447              		.loc 1 504 55 is_stmt 0 view .LVU492
 1448 00a2 2244     		add	r2, r2, r4
 1449 00a4 0123     		movs	r3, #1
 1450 00a6 82F83431 		strb	r3, [r2, #308]
 1451 00aa AEE7     		b	.L83
 1452              	.LVL126:
 1453              	.L81:
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1454              		.loc 1 481 50 is_stmt 1 discriminator 2 view .LVU493
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1455              		.loc 1 481 57 is_stmt 0 discriminator 2 view .LVU494
 1456 00ac 0135     		adds	r5, r5, #1
 1457              	.LVL127:
 1458              	.L80:
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1459              		.loc 1 481 22 is_stmt 1 discriminator 1 view .LVU495
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1460              		.loc 1 481 41 is_stmt 0 discriminator 1 view .LVU496
 1461 00ae 084B     		ldr	r3, .L88
 1462 00b0 1B68     		ldr	r3, [r3]
 1463 00b2 B3F85421 		ldrh	r2, [r3, #340]
 481:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[join_in] != 0) continue;
 1464              		.loc 1 481 5 discriminator 1 view .LVU497
 1465 00b6 AA42     		cmp	r2, r5
 1466 00b8 06D9     		bls	.L87
 482:lvgl/src/core/lv_refr.c **** 
 1467              		.loc 1 482 9 is_stmt 1 view .LVU498
 482:lvgl/src/core/lv_refr.c **** 
 1468              		.loc 1 482 38 is_stmt 0 view .LVU499
 1469 00ba 2B44     		add	r3, r3, r5
 1470 00bc 93F83431 		ldrb	r3, [r3, #308]	@ zero_extendqisi2
 482:lvgl/src/core/lv_refr.c **** 
 1471              		.loc 1 482 11 view .LVU500
 1472 00c0 002B     		cmp	r3, #0
 1473 00c2 F3D1     		bne	.L81
 485:lvgl/src/core/lv_refr.c ****             /*Handle only unjoined areas and ignore itself*/
 1474              		.loc 1 485 23 view .LVU501
 1475 00c4 0024     		movs	r4, #0
 1476 00c6 A1E7     		b	.L82
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 58


 1477              	.L87:
 508:lvgl/src/core/lv_refr.c **** 
 1478              		.loc 1 508 1 view .LVU502
 1479 00c8 03B0     		add	sp, sp, #12
 1480              		.cfi_def_cfa_offset 28
 1481              		@ sp needed
 1482 00ca BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 1483              	.LVL128:
 1484              	.L89:
 508:lvgl/src/core/lv_refr.c **** 
 1485              		.loc 1 508 1 view .LVU503
 1486 00ce 00BF     		.align	2
 1487              	.L88:
 1488 00d0 00000000 		.word	.LANCHOR0
 1489              		.cfi_endproc
 1490              	.LFE176:
 1492              		.section	.text.refr_sync_areas,"ax",%progbits
 1493              		.align	1
 1494              		.syntax unified
 1495              		.thumb
 1496              		.thumb_func
 1498              	refr_sync_areas:
 1499              	.LFB177:
 514:lvgl/src/core/lv_refr.c ****     /*Do not sync if not direct mode*/
 1500              		.loc 1 514 1 is_stmt 1 view -0
 1501              		.cfi_startproc
 1502              		@ args = 0, pretend = 0, frame = 32
 1503              		@ frame_needed = 0, uses_anonymous_args = 0
 516:lvgl/src/core/lv_refr.c **** 
 1504              		.loc 1 516 5 view .LVU505
 516:lvgl/src/core/lv_refr.c **** 
 1505              		.loc 1 516 18 is_stmt 0 view .LVU506
 1506 0000 4F4B     		ldr	r3, .L112
 1507 0002 1868     		ldr	r0, [r3]
 1508 0004 0368     		ldr	r3, [r0]
 516:lvgl/src/core/lv_refr.c **** 
 1509              		.loc 1 516 8 view .LVU507
 1510 0006 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 516:lvgl/src/core/lv_refr.c **** 
 1511              		.loc 1 516 7 view .LVU508
 1512 0008 12F0010F 		tst	r2, #1
 1513 000c 00F09780 		beq	.L106
 519:lvgl/src/core/lv_refr.c **** 
 1514              		.loc 1 519 5 is_stmt 1 view .LVU509
 519:lvgl/src/core/lv_refr.c **** 
 1515              		.loc 1 519 25 is_stmt 0 view .LVU510
 1516 0010 DB68     		ldr	r3, [r3, #12]
 519:lvgl/src/core/lv_refr.c **** 
 1517              		.loc 1 519 35 view .LVU511
 1518 0012 5B68     		ldr	r3, [r3, #4]
 519:lvgl/src/core/lv_refr.c **** 
 1519              		.loc 1 519 7 view .LVU512
 1520 0014 002B     		cmp	r3, #0
 1521 0016 00F09280 		beq	.L106
 514:lvgl/src/core/lv_refr.c ****     /*Do not sync if not direct mode*/
 1522              		.loc 1 514 1 view .LVU513
 1523 001a 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 59


 1524              		.cfi_def_cfa_offset 36
 1525              		.cfi_offset 4, -36
 1526              		.cfi_offset 5, -32
 1527              		.cfi_offset 6, -28
 1528              		.cfi_offset 7, -24
 1529              		.cfi_offset 8, -20
 1530              		.cfi_offset 9, -16
 1531              		.cfi_offset 10, -12
 1532              		.cfi_offset 11, -8
 1533              		.cfi_offset 14, -4
 1534 001e 8DB0     		sub	sp, sp, #52
 1535              		.cfi_def_cfa_offset 88
 522:lvgl/src/core/lv_refr.c **** 
 1536              		.loc 1 522 5 is_stmt 1 view .LVU514
 522:lvgl/src/core/lv_refr.c **** 
 1537              		.loc 1 522 8 is_stmt 0 view .LVU515
 1538 0020 00F5AE70 		add	r0, r0, #348
 1539 0024 FFF7FEFF 		bl	_lv_ll_is_empty
 1540              	.LVL129:
 522:lvgl/src/core/lv_refr.c **** 
 1541              		.loc 1 522 7 view .LVU516
 1542 0028 0028     		cmp	r0, #0
 1543 002a 40F08580 		bne	.L90
 526:lvgl/src/core/lv_refr.c ****     void * buf_on_screen = disp_refr->driver->draw_buf->buf_act == disp_refr->driver->draw_buf->buf
 1544              		.loc 1 526 5 is_stmt 1 view .LVU517
 526:lvgl/src/core/lv_refr.c ****     void * buf_on_screen = disp_refr->driver->draw_buf->buf_act == disp_refr->driver->draw_buf->buf
 1545              		.loc 1 526 38 is_stmt 0 view .LVU518
 1546 002e 444B     		ldr	r3, .L112
 1547 0030 1868     		ldr	r0, [r3]
 1548 0032 0368     		ldr	r3, [r0]
 526:lvgl/src/core/lv_refr.c ****     void * buf_on_screen = disp_refr->driver->draw_buf->buf_act == disp_refr->driver->draw_buf->buf
 1549              		.loc 1 526 46 view .LVU519
 1550 0034 DB68     		ldr	r3, [r3, #12]
 526:lvgl/src/core/lv_refr.c ****     void * buf_on_screen = disp_refr->driver->draw_buf->buf_act == disp_refr->driver->draw_buf->buf
 1551              		.loc 1 526 12 view .LVU520
 1552 0036 D3F808B0 		ldr	fp, [r3, #8]
 1553              	.LVL130:
 527:lvgl/src/core/lv_refr.c ****                            ? disp_refr->driver->draw_buf->buf2
 1554              		.loc 1 527 5 is_stmt 1 view .LVU521
 527:lvgl/src/core/lv_refr.c ****                            ? disp_refr->driver->draw_buf->buf2
 1555              		.loc 1 527 95 is_stmt 0 view .LVU522
 1556 003a D3F800A0 		ldr	r10, [r3]
 529:lvgl/src/core/lv_refr.c **** 
 1557              		.loc 1 529 28 view .LVU523
 1558 003e DA45     		cmp	r10, fp
 1559 0040 0AD0     		beq	.L109
 1560              	.L92:
 1561              	.LVL131:
 532:lvgl/src/core/lv_refr.c **** 
 1562              		.loc 1 532 5 is_stmt 1 view .LVU524
 532:lvgl/src/core/lv_refr.c **** 
 1563              		.loc 1 532 25 is_stmt 0 view .LVU525
 1564 0042 FFF7FEFF 		bl	lv_disp_get_hor_res
 1565              	.LVL132:
 1566 0046 8146     		mov	r9, r0
 1567              	.LVL133:
 535:lvgl/src/core/lv_refr.c ****     int8_t res_c, j;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 60


 1568              		.loc 1 535 5 is_stmt 1 view .LVU526
 535:lvgl/src/core/lv_refr.c ****     int8_t res_c, j;
 1569              		.loc 1 535 15 is_stmt 0 view .LVU527
 1570 0048 2022     		movs	r2, #32
 1571 004a 0021     		movs	r1, #0
 1572 004c 04A8     		add	r0, sp, #16
 1573 004e FFF7FEFF 		bl	memset
 1574              	.LVL134:
 536:lvgl/src/core/lv_refr.c ****     uint32_t i;
 1575              		.loc 1 536 5 is_stmt 1 view .LVU528
 537:lvgl/src/core/lv_refr.c ****     lv_area_t * sync_area, * new_area, * next_area;
 1576              		.loc 1 537 5 view .LVU529
 538:lvgl/src/core/lv_refr.c ****     for(i = 0; i < disp_refr->inv_p; i++) {
 1577              		.loc 1 538 5 view .LVU530
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1578              		.loc 1 539 5 view .LVU531
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1579              		.loc 1 539 11 is_stmt 0 view .LVU532
 1580 0052 4FF00008 		mov	r8, #0
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1581              		.loc 1 539 5 view .LVU533
 1582 0056 3BE0     		b	.L93
 1583              	.LVL135:
 1584              	.L109:
 529:lvgl/src/core/lv_refr.c **** 
 1585              		.loc 1 529 28 discriminator 1 view .LVU534
 1586 0058 D3F804A0 		ldr	r10, [r3, #4]
 1587 005c F1E7     		b	.L92
 1588              	.LVL136:
 1589              	.L98:
 556:lvgl/src/core/lv_refr.c ****                     *new_area = res[j];
 1590              		.loc 1 556 21 is_stmt 1 discriminator 3 view .LVU535
 556:lvgl/src/core/lv_refr.c ****                     *new_area = res[j];
 1591              		.loc 1 556 58 is_stmt 0 discriminator 3 view .LVU536
 1592 005e 384B     		ldr	r3, .L112
 1593 0060 1868     		ldr	r0, [r3]
 556:lvgl/src/core/lv_refr.c ****                     *new_area = res[j];
 1594              		.loc 1 556 32 discriminator 3 view .LVU537
 1595 0062 2946     		mov	r1, r5
 1596 0064 00F5AE70 		add	r0, r0, #348
 1597 0068 FFF7FEFF 		bl	_lv_ll_ins_prev
 1598              	.LVL137:
 1599 006c 0246     		mov	r2, r0
 1600              	.LVL138:
 557:lvgl/src/core/lv_refr.c ****                 }
 1601              		.loc 1 557 21 is_stmt 1 discriminator 3 view .LVU538
 557:lvgl/src/core/lv_refr.c ****                 }
 1602              		.loc 1 557 31 is_stmt 0 discriminator 3 view .LVU539
 1603 006e 0CAB     		add	r3, sp, #48
 1604 0070 03EBC403 		add	r3, r3, r4, lsl #3
 1605 0074 203B     		subs	r3, r3, #32
 1606 0076 03CB     		ldmia	r3!, {r0, r1}
 1607              	.LVL139:
 557:lvgl/src/core/lv_refr.c ****                 }
 1608              		.loc 1 557 31 discriminator 3 view .LVU540
 1609 0078 1060     		str	r0, [r2]	@ unaligned
 1610 007a 5160     		str	r1, [r2, #4]	@ unaligned
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 61


 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1611              		.loc 1 555 39 is_stmt 1 discriminator 3 view .LVU541
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1612              		.loc 1 555 40 is_stmt 0 discriminator 3 view .LVU542
 1613 007c 0134     		adds	r4, r4, #1
 1614              	.LVL140:
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1615              		.loc 1 555 40 discriminator 3 view .LVU543
 1616 007e 64B2     		sxtb	r4, r4
 1617              	.LVL141:
 1618              	.L96:
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1619              		.loc 1 555 28 is_stmt 1 discriminator 1 view .LVU544
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1620              		.loc 1 555 17 is_stmt 0 discriminator 1 view .LVU545
 1621 0080 B442     		cmp	r4, r6
 1622 0082 ECDB     		blt	.L98
 559:lvgl/src/core/lv_refr.c ****                 lv_mem_free(sync_area);
 1623              		.loc 1 559 17 is_stmt 1 view .LVU546
 559:lvgl/src/core/lv_refr.c ****                 lv_mem_free(sync_area);
 1624              		.loc 1 559 41 is_stmt 0 view .LVU547
 1625 0084 2E4B     		ldr	r3, .L112
 1626 0086 1868     		ldr	r0, [r3]
 559:lvgl/src/core/lv_refr.c ****                 lv_mem_free(sync_area);
 1627              		.loc 1 559 17 view .LVU548
 1628 0088 2946     		mov	r1, r5
 1629 008a 00F5AE70 		add	r0, r0, #348
 1630 008e FFF7FEFF 		bl	_lv_ll_remove
 1631              	.LVL142:
 560:lvgl/src/core/lv_refr.c ****             }
 1632              		.loc 1 560 17 is_stmt 1 view .LVU549
 1633 0092 2846     		mov	r0, r5
 1634 0094 FFF7FEFF 		bl	lv_mem_free
 1635              	.LVL143:
 1636              	.L97:
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1637              		.loc 1 555 23 is_stmt 0 view .LVU550
 1638 0098 3D46     		mov	r5, r7
 1639              	.LVL144:
 1640              	.L95:
 545:lvgl/src/core/lv_refr.c ****             /*Get next sync area*/
 1641              		.loc 1 545 14 is_stmt 1 view .LVU551
 1642 009a BDB1     		cbz	r5, .L94
 547:lvgl/src/core/lv_refr.c **** 
 1643              		.loc 1 547 13 view .LVU552
 547:lvgl/src/core/lv_refr.c **** 
 1644              		.loc 1 547 51 is_stmt 0 view .LVU553
 1645 009c 284C     		ldr	r4, .L112
 1646 009e 2068     		ldr	r0, [r4]
 547:lvgl/src/core/lv_refr.c **** 
 1647              		.loc 1 547 25 view .LVU554
 1648 00a0 2946     		mov	r1, r5
 1649 00a2 00F5AE70 		add	r0, r0, #348
 1650 00a6 FFF7FEFF 		bl	_lv_ll_get_next
 1651              	.LVL145:
 1652 00aa 0746     		mov	r7, r0
 1653              	.LVL146:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 62


 550:lvgl/src/core/lv_refr.c **** 
 1654              		.loc 1 550 13 is_stmt 1 view .LVU555
 550:lvgl/src/core/lv_refr.c **** 
 1655              		.loc 1 550 61 is_stmt 0 view .LVU556
 1656 00ac 2268     		ldr	r2, [r4]
 550:lvgl/src/core/lv_refr.c **** 
 1657              		.loc 1 550 51 view .LVU557
 1658 00ae 08F10603 		add	r3, r8, #6
 1659 00b2 02EBC302 		add	r2, r2, r3, lsl #3
 550:lvgl/src/core/lv_refr.c **** 
 1660              		.loc 1 550 21 view .LVU558
 1661 00b6 0432     		adds	r2, r2, #4
 1662 00b8 2946     		mov	r1, r5
 1663 00ba 04A8     		add	r0, sp, #16
 1664              	.LVL147:
 550:lvgl/src/core/lv_refr.c **** 
 1665              		.loc 1 550 21 view .LVU559
 1666 00bc FFF7FEFF 		bl	_lv_area_diff
 1667              	.LVL148:
 1668 00c0 0646     		mov	r6, r0
 1669              	.LVL149:
 553:lvgl/src/core/lv_refr.c ****                 /*Replace old sync area with new areas*/
 1670              		.loc 1 553 13 is_stmt 1 view .LVU560
 553:lvgl/src/core/lv_refr.c ****                 /*Replace old sync area with new areas*/
 1671              		.loc 1 553 15 is_stmt 0 view .LVU561
 1672 00c2 B0F1FF3F 		cmp	r0, #-1
 1673 00c6 E7D0     		beq	.L97
 555:lvgl/src/core/lv_refr.c ****                     new_area = _lv_ll_ins_prev(&disp_refr->sync_areas, sync_area);
 1674              		.loc 1 555 23 view .LVU562
 1675 00c8 0024     		movs	r4, #0
 1676 00ca D9E7     		b	.L96
 1677              	.LVL150:
 1678              	.L94:
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1679              		.loc 1 539 38 is_stmt 1 discriminator 2 view .LVU563
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1680              		.loc 1 539 39 is_stmt 0 discriminator 2 view .LVU564
 1681 00cc 08F10108 		add	r8, r8, #1
 1682              	.LVL151:
 1683              	.L93:
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1684              		.loc 1 539 16 is_stmt 1 discriminator 1 view .LVU565
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1685              		.loc 1 539 29 is_stmt 0 discriminator 1 view .LVU566
 1686 00d0 1B4B     		ldr	r3, .L112
 1687 00d2 1868     		ldr	r0, [r3]
 1688 00d4 B0F85431 		ldrh	r3, [r0, #340]
 539:lvgl/src/core/lv_refr.c ****         /*Skip joined areas*/
 1689              		.loc 1 539 5 discriminator 1 view .LVU567
 1690 00d8 4345     		cmp	r3, r8
 1691 00da 0BD9     		bls	.L110
 541:lvgl/src/core/lv_refr.c **** 
 1692              		.loc 1 541 9 is_stmt 1 view .LVU568
 541:lvgl/src/core/lv_refr.c **** 
 1693              		.loc 1 541 38 is_stmt 0 view .LVU569
 1694 00dc 00EB0803 		add	r3, r0, r8
 1695 00e0 93F83431 		ldrb	r3, [r3, #308]	@ zero_extendqisi2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 63


 541:lvgl/src/core/lv_refr.c **** 
 1696              		.loc 1 541 11 view .LVU570
 1697 00e4 002B     		cmp	r3, #0
 1698 00e6 F1D1     		bne	.L94
 544:lvgl/src/core/lv_refr.c ****         while(sync_area != NULL) {
 1699              		.loc 1 544 9 is_stmt 1 view .LVU571
 544:lvgl/src/core/lv_refr.c ****         while(sync_area != NULL) {
 1700              		.loc 1 544 21 is_stmt 0 view .LVU572
 1701 00e8 00F5AE70 		add	r0, r0, #348
 1702 00ec FFF7FEFF 		bl	_lv_ll_get_head
 1703              	.LVL152:
 1704 00f0 0546     		mov	r5, r0
 1705              	.LVL153:
 545:lvgl/src/core/lv_refr.c ****             /*Get next sync area*/
 1706              		.loc 1 545 9 is_stmt 1 view .LVU573
 545:lvgl/src/core/lv_refr.c ****             /*Get next sync area*/
 1707              		.loc 1 545 14 is_stmt 0 view .LVU574
 1708 00f2 D2E7     		b	.L95
 1709              	.LVL154:
 1710              	.L110:
 569:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area)) {
 1711              		.loc 1 569 5 is_stmt 1 view .LVU575
 569:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area)) {
 1712              		.loc 1 569 21 is_stmt 0 view .LVU576
 1713 00f4 00F5AE70 		add	r0, r0, #348
 1714 00f8 FFF7FEFF 		bl	_lv_ll_get_head
 1715              	.LVL155:
 1716 00fc 0446     		mov	r4, r0
 1717              	.LVL156:
 1718              	.L101:
 569:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area)) {
 1719              		.loc 1 569 62 is_stmt 1 discriminator 1 view .LVU577
 569:lvgl/src/core/lv_refr.c ****         sync_area = _lv_ll_get_next(&disp_refr->sync_areas, sync_area)) {
 1720              		.loc 1 569 5 is_stmt 0 discriminator 1 view .LVU578
 1721 00fe ACB1     		cbz	r4, .L111
 571:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 1722              		.loc 1 571 9 is_stmt 1 view .LVU579
 571:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 1723              		.loc 1 571 18 is_stmt 0 view .LVU580
 1724 0100 0F4D     		ldr	r5, .L112
 1725 0102 2B68     		ldr	r3, [r5]
 1726 0104 1B68     		ldr	r3, [r3]
 571:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 1727              		.loc 1 571 26 view .LVU581
 1728 0106 D86B     		ldr	r0, [r3, #60]
 1729              	.LVL157:
 571:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 1730              		.loc 1 571 36 view .LVU582
 1731 0108 866B     		ldr	r6, [r0, #56]
 571:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_ctx,
 1732              		.loc 1 571 9 view .LVU583
 1733 010a 0294     		str	r4, [sp, #8]
 1734 010c CDF80490 		str	r9, [sp, #4]
 1735 0110 CDF800A0 		str	r10, [sp]
 1736 0114 2346     		mov	r3, r4
 1737 0116 4A46     		mov	r2, r9
 1738 0118 5946     		mov	r1, fp
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 64


 1739 011a B047     		blx	r6
 1740              	.LVL158:
 570:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_ctx->buffer_copy(
 1741              		.loc 1 570 9 is_stmt 1 view .LVU584
 570:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_ctx->buffer_copy(
 1742              		.loc 1 570 47 is_stmt 0 view .LVU585
 1743 011c 2868     		ldr	r0, [r5]
 570:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_ctx->buffer_copy(
 1744              		.loc 1 570 21 view .LVU586
 1745 011e 2146     		mov	r1, r4
 1746 0120 00F5AE70 		add	r0, r0, #348
 1747 0124 FFF7FEFF 		bl	_lv_ll_get_next
 1748              	.LVL159:
 1749 0128 0446     		mov	r4, r0
 1750              	.LVL160:
 570:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_ctx->buffer_copy(
 1751              		.loc 1 570 21 view .LVU587
 1752 012a E8E7     		b	.L101
 1753              	.L111:
 579:lvgl/src/core/lv_refr.c **** }
 1754              		.loc 1 579 5 is_stmt 1 view .LVU588
 579:lvgl/src/core/lv_refr.c **** }
 1755              		.loc 1 579 28 is_stmt 0 view .LVU589
 1756 012c 044B     		ldr	r3, .L112
 1757 012e 1868     		ldr	r0, [r3]
 1758              	.LVL161:
 579:lvgl/src/core/lv_refr.c **** }
 1759              		.loc 1 579 5 view .LVU590
 1760 0130 00F5AE70 		add	r0, r0, #348
 1761 0134 FFF7FEFF 		bl	_lv_ll_clear
 1762              	.LVL162:
 1763              	.L90:
 580:lvgl/src/core/lv_refr.c **** 
 1764              		.loc 1 580 1 view .LVU591
 1765 0138 0DB0     		add	sp, sp, #52
 1766              		.cfi_def_cfa_offset 36
 1767              		@ sp needed
 1768 013a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1769              	.L106:
 1770              		.cfi_def_cfa_offset 0
 1771              		.cfi_restore 4
 1772              		.cfi_restore 5
 1773              		.cfi_restore 6
 1774              		.cfi_restore 7
 1775              		.cfi_restore 8
 1776              		.cfi_restore 9
 1777              		.cfi_restore 10
 1778              		.cfi_restore 11
 1779              		.cfi_restore 14
 1780 013e 7047     		bx	lr
 1781              	.L113:
 1782              		.align	2
 1783              	.L112:
 1784 0140 00000000 		.word	.LANCHOR0
 1785              		.cfi_endproc
 1786              	.LFE177:
 1788              		.section	.text.draw_buf_rotate,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 65


 1789              		.align	1
 1790              		.syntax unified
 1791              		.thumb
 1792              		.thumb_func
 1794              	draw_buf_rotate:
 1795              	.LVL163:
 1796              	.LFB191:
1179:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
 1797              		.loc 1 1179 1 is_stmt 1 view -0
 1798              		.cfi_startproc
 1799              		@ args = 0, pretend = 0, frame = 32
 1800              		@ frame_needed = 0, uses_anonymous_args = 0
1179:lvgl/src/core/lv_refr.c ****     lv_disp_drv_t * drv = disp_refr->driver;
 1801              		.loc 1 1179 1 is_stmt 0 view .LVU593
 1802 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1803              		.cfi_def_cfa_offset 36
 1804              		.cfi_offset 4, -36
 1805              		.cfi_offset 5, -32
 1806              		.cfi_offset 6, -28
 1807              		.cfi_offset 7, -24
 1808              		.cfi_offset 8, -20
 1809              		.cfi_offset 9, -16
 1810              		.cfi_offset 10, -12
 1811              		.cfi_offset 11, -8
 1812              		.cfi_offset 14, -4
 1813 0004 8BB0     		sub	sp, sp, #44
 1814              		.cfi_def_cfa_offset 80
 1815 0006 8046     		mov	r8, r0
 1816 0008 0391     		str	r1, [sp, #12]
1180:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1817              		.loc 1 1180 5 is_stmt 1 view .LVU594
1180:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1818              		.loc 1 1180 36 is_stmt 0 view .LVU595
 1819 000a 844B     		ldr	r3, .L145
 1820 000c 1868     		ldr	r0, [r3]
 1821              	.LVL164:
1180:lvgl/src/core/lv_refr.c ****     if(disp_refr->driver->full_refresh && drv->sw_rotate) {
 1822              		.loc 1 1180 21 view .LVU596
 1823 000e 0468     		ldr	r4, [r0]
 1824              	.LVL165:
1181:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1825              		.loc 1 1181 5 is_stmt 1 view .LVU597
1181:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1826              		.loc 1 1181 8 is_stmt 0 view .LVU598
 1827 0010 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
1181:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1828              		.loc 1 1181 7 view .LVU599
 1829 0012 13F0020F 		tst	r3, #2
 1830 0016 02D0     		beq	.L115
1181:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("cannot rotate a full refreshed display!");
 1831              		.loc 1 1181 40 discriminator 1 view .LVU600
 1832 0018 13F0040F 		tst	r3, #4
 1833 001c 07D1     		bne	.L114
 1834              	.L115:
1185:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 1835              		.loc 1 1185 5 is_stmt 1 view .LVU601
1185:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 66


 1836              		.loc 1 1185 21 is_stmt 0 view .LVU602
 1837 001e 03F03003 		and	r3, r3, #48
1185:lvgl/src/core/lv_refr.c ****         draw_buf_rotate_180(drv, area, color_p);
 1838              		.loc 1 1185 7 view .LVU603
 1839 0022 202B     		cmp	r3, #32
 1840 0024 06D0     		beq	.L135
1189:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
 1841              		.loc 1 1189 10 is_stmt 1 view .LVU604
1189:lvgl/src/core/lv_refr.c ****         /*Allocate a temporary buffer to store rotated image*/
 1842              		.loc 1 1189 12 is_stmt 0 view .LVU605
 1843 0026 302B     		cmp	r3, #48
 1844 0028 18BF     		it	ne
 1845 002a 102B     		cmpne	r3, #16
 1846 002c 0ED0     		beq	.L136
 1847              	.LVL166:
 1848              	.L114:
1262:lvgl/src/core/lv_refr.c **** 
 1849              		.loc 1 1262 1 view .LVU606
 1850 002e 0BB0     		add	sp, sp, #44
 1851              		.cfi_remember_state
 1852              		.cfi_def_cfa_offset 36
 1853              		@ sp needed
 1854 0030 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1855              	.LVL167:
 1856              	.L135:
 1857              		.cfi_restore_state
1186:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
 1858              		.loc 1 1186 9 is_stmt 1 view .LVU607
 1859 0034 039D     		ldr	r5, [sp, #12]
 1860 0036 2A46     		mov	r2, r5
 1861 0038 4146     		mov	r1, r8
 1862              	.LVL168:
1186:lvgl/src/core/lv_refr.c ****         call_flush_cb(drv, area, color_p);
 1863              		.loc 1 1186 9 is_stmt 0 view .LVU608
 1864 003a 2046     		mov	r0, r4
 1865 003c FFF7FEFF 		bl	draw_buf_rotate_180
 1866              	.LVL169:
1187:lvgl/src/core/lv_refr.c ****     }
 1867              		.loc 1 1187 9 is_stmt 1 view .LVU609
 1868 0040 2A46     		mov	r2, r5
 1869 0042 4146     		mov	r1, r8
 1870 0044 2046     		mov	r0, r4
 1871 0046 FFF7FEFF 		bl	call_flush_cb
 1872              	.LVL170:
 1873 004a F0E7     		b	.L114
 1874              	.LVL171:
 1875              	.L136:
 1876              	.LBB94:
1191:lvgl/src/core/lv_refr.c ****         lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 1877              		.loc 1 1191 9 view .LVU610
1192:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 1878              		.loc 1 1192 9 view .LVU611
1192:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
 1879              		.loc 1 1192 41 is_stmt 0 view .LVU612
 1880 004c FFF7FEFF 		bl	lv_disp_get_draw_buf
 1881              	.LVL172:
1192:lvgl/src/core/lv_refr.c ****         lv_coord_t area_w = lv_area_get_width(area);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 67


 1882              		.loc 1 1192 41 view .LVU613
 1883 0050 0546     		mov	r5, r0
 1884              	.LVL173:
1193:lvgl/src/core/lv_refr.c ****         lv_coord_t area_h = lv_area_get_height(area);
 1885              		.loc 1 1193 9 is_stmt 1 view .LVU614
 1886              	.LBB95:
 1887              	.LBI95:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1888              		.loc 2 123 26 view .LVU615
 1889              	.LBB96:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1890              		.loc 2 125 5 view .LVU616
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1891              		.loc 2 125 31 is_stmt 0 view .LVU617
 1892 0052 B8F80430 		ldrh	r3, [r8, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1893              		.loc 2 125 44 view .LVU618
 1894 0056 B8F90010 		ldrsh	r1, [r8]
 1895 005a 8AB2     		uxth	r2, r1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1896              		.loc 2 125 36 view .LVU619
 1897 005c 9B1A     		subs	r3, r3, r2
 1898 005e 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1899              		.loc 2 125 49 view .LVU620
 1900 0060 0133     		adds	r3, r3, #1
 1901 0062 98B2     		uxth	r0, r3
 1902              	.LVL174:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1903              		.loc 2 125 49 view .LVU621
 1904 0064 0890     		str	r0, [sp, #32]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1905              		.loc 2 125 12 view .LVU622
 1906 0066 18B2     		sxth	r0, r3
 1907              	.LVL175:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 1908              		.loc 2 125 12 view .LVU623
 1909              	.LBE96:
 1910              	.LBE95:
1194:lvgl/src/core/lv_refr.c ****         /*Determine the maximum number of rows that can be rotated at a time*/
 1911              		.loc 1 1194 9 is_stmt 1 view .LVU624
 1912              	.LBB97:
 1913              	.LBI97:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 1914              		.loc 2 133 26 view .LVU625
 1915              	.LBB98:
 1916              		.loc 2 135 5 view .LVU626
 1917              		.loc 2 135 31 is_stmt 0 view .LVU627
 1918 0068 B8F80690 		ldrh	r9, [r8, #6]
 1919              		.loc 2 135 44 view .LVU628
 1920 006c B8F90230 		ldrsh	r3, [r8, #2]
 1921 0070 0993     		str	r3, [sp, #36]
 1922 0072 9BB2     		uxth	r3, r3
 1923 0074 0793     		str	r3, [sp, #28]
 1924              		.loc 2 135 36 view .LVU629
 1925 0076 A9EB0309 		sub	r9, r9, r3
 1926 007a 1FFA89F9 		uxth	r9, r9
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 68


 1927              		.loc 2 135 49 view .LVU630
 1928 007e 09F10109 		add	r9, r9, #1
 1929              		.loc 2 135 12 view .LVU631
 1930 0082 0FFA89F9 		sxth	r9, r9
 1931              	.LVL176:
 1932              		.loc 2 135 12 view .LVU632
 1933              	.LBE98:
 1934              	.LBE97:
1196:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1935              		.loc 1 1196 9 is_stmt 1 view .LVU633
1196:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1936              		.loc 1 1196 30 is_stmt 0 view .LVU634
 1937 0086 4FF42063 		mov	r3, #2560
 1938 008a B3FBF0F3 		udiv	r3, r3, r0
1196:lvgl/src/core/lv_refr.c ****         lv_coord_t init_y_off;
 1939              		.loc 1 1196 20 view .LVU635
 1940 008e 4B45     		cmp	r3, r9
 1941 0090 A8BF     		it	ge
 1942 0092 4B46     		movge	r3, r9
 1943 0094 0693     		str	r3, [sp, #24]
 1944              	.LVL177:
1197:lvgl/src/core/lv_refr.c ****         init_y_off = area->y1;
 1945              		.loc 1 1197 9 is_stmt 1 view .LVU636
1198:lvgl/src/core/lv_refr.c ****         if(drv->rotated == LV_DISP_ROT_90) {
 1946              		.loc 1 1198 9 view .LVU637
1199:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1947              		.loc 1 1199 9 view .LVU638
1199:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1948              		.loc 1 1199 25 is_stmt 0 view .LVU639
 1949 0096 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 1950 0098 03F03003 		and	r3, r3, #48
1199:lvgl/src/core/lv_refr.c ****             area->y2 = drv->ver_res - area->x1 - 1;
 1951              		.loc 1 1199 11 view .LVU640
 1952 009c 102B     		cmp	r3, #16
 1953 009e 0BD0     		beq	.L137
1204:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
 1954              		.loc 1 1204 13 is_stmt 1 view .LVU641
1204:lvgl/src/core/lv_refr.c ****             area->y2 = area->y1 + area_w - 1;
 1955              		.loc 1 1204 22 is_stmt 0 view .LVU642
 1956 00a0 A8F80210 		strh	r1, [r8, #2]	@ movhi
1205:lvgl/src/core/lv_refr.c ****         }
 1957              		.loc 1 1205 13 is_stmt 1 view .LVU643
1205:lvgl/src/core/lv_refr.c ****         }
 1958              		.loc 1 1205 33 is_stmt 0 view .LVU644
 1959 00a4 089B     		ldr	r3, [sp, #32]
 1960 00a6 D318     		adds	r3, r2, r3
 1961 00a8 9BB2     		uxth	r3, r3
1205:lvgl/src/core/lv_refr.c ****         }
 1962              		.loc 1 1205 42 view .LVU645
 1963 00aa 013B     		subs	r3, r3, #1
1205:lvgl/src/core/lv_refr.c ****         }
 1964              		.loc 1 1205 22 view .LVU646
 1965 00ac A8F80630 		strh	r3, [r8, #6]	@ movhi
 1966              	.L120:
 1967              	.LBB99:
1251:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 1968              		.loc 1 1251 13 view .LVU647
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 69


 1969 00b0 0026     		movs	r6, #0
 1970 00b2 0496     		str	r6, [sp, #16]
 1971 00b4 8346     		mov	fp, r0
 1972 00b6 63E0     		b	.L119
 1973              	.L137:
 1974              	.LBE99:
1200:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1975              		.loc 1 1200 13 is_stmt 1 view .LVU648
1200:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1976              		.loc 1 1200 27 is_stmt 0 view .LVU649
 1977 00b8 6388     		ldrh	r3, [r4, #2]
1200:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1978              		.loc 1 1200 37 view .LVU650
 1979 00ba 9B1A     		subs	r3, r3, r2
 1980 00bc 9BB2     		uxth	r3, r3
1200:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1981              		.loc 1 1200 48 view .LVU651
 1982 00be 013B     		subs	r3, r3, #1
 1983 00c0 9AB2     		uxth	r2, r3
1200:lvgl/src/core/lv_refr.c ****             area->y1 = area->y2 - area_w + 1;
 1984              		.loc 1 1200 22 view .LVU652
 1985 00c2 A8F80630 		strh	r3, [r8, #6]	@ movhi
1201:lvgl/src/core/lv_refr.c ****         }
 1986              		.loc 1 1201 13 is_stmt 1 view .LVU653
1201:lvgl/src/core/lv_refr.c ****         }
 1987              		.loc 1 1201 33 is_stmt 0 view .LVU654
 1988 00c6 089B     		ldr	r3, [sp, #32]
 1989 00c8 D31A     		subs	r3, r2, r3
 1990 00ca 9BB2     		uxth	r3, r3
1201:lvgl/src/core/lv_refr.c ****         }
 1991              		.loc 1 1201 42 view .LVU655
 1992 00cc 0133     		adds	r3, r3, #1
1201:lvgl/src/core/lv_refr.c ****         }
 1993              		.loc 1 1201 22 view .LVU656
 1994 00ce A8F80230 		strh	r3, [r8, #2]	@ movhi
 1995 00d2 EDE7     		b	.L120
 1996              	.LVL178:
 1997              	.L142:
 1998              	.LBB100:
1215:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 1999              		.loc 1 1215 17 is_stmt 1 view .LVU657
1216:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 2000              		.loc 1 1216 17 view .LVU658
1216:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 2001              		.loc 1 1216 53 is_stmt 0 view .LVU659
 2002 00d4 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
1216:lvgl/src/core/lv_refr.c ****                 if(drv->rotated == LV_DISP_ROT_90) {
 2003              		.loc 1 1216 17 view .LVU660
 2004 00d6 00F03000 		and	r0, r0, #48
 2005 00da 039A     		ldr	r2, [sp, #12]
 2006 00dc 5946     		mov	r1, fp
 2007 00de 3028     		cmp	r0, #48
 2008 00e0 14BF     		ite	ne
 2009 00e2 0020     		movne	r0, #0
 2010 00e4 0120     		moveq	r0, #1
 2011 00e6 FFF7FEFF 		bl	draw_buf_rotate_90_sqr
 2012              	.LVL179:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 70


1217:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 2013              		.loc 1 1217 17 is_stmt 1 view .LVU661
1217:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 2014              		.loc 1 1217 33 is_stmt 0 view .LVU662
 2015 00ea 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2016 00ec 03F03003 		and	r3, r3, #48
1217:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off;
 2017              		.loc 1 1217 19 view .LVU663
 2018 00f0 102B     		cmp	r3, #16
 2019 00f2 0ED0     		beq	.L138
1222:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 2020              		.loc 1 1222 21 is_stmt 1 view .LVU664
1222:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 2021              		.loc 1 1222 35 is_stmt 0 view .LVU665
 2022 00f4 2288     		ldrh	r2, [r4]
1222:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 2023              		.loc 1 1222 49 view .LVU666
 2024 00f6 079B     		ldr	r3, [sp, #28]
 2025 00f8 D21A     		subs	r2, r2, r3
 2026 00fa 013A     		subs	r2, r2, #1
 2027 00fc 93B2     		uxth	r3, r2
1222:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - area_w + 1;
 2028              		.loc 1 1222 30 view .LVU667
 2029 00fe A8F80420 		strh	r2, [r8, #4]	@ movhi
1223:lvgl/src/core/lv_refr.c ****                 }
 2030              		.loc 1 1223 21 is_stmt 1 view .LVU668
1223:lvgl/src/core/lv_refr.c ****                 }
 2031              		.loc 1 1223 41 is_stmt 0 view .LVU669
 2032 0102 089A     		ldr	r2, [sp, #32]
 2033 0104 9B1A     		subs	r3, r3, r2
 2034 0106 9BB2     		uxth	r3, r3
1223:lvgl/src/core/lv_refr.c ****                 }
 2035              		.loc 1 1223 50 view .LVU670
 2036 0108 0133     		adds	r3, r3, #1
1223:lvgl/src/core/lv_refr.c ****                 }
 2037              		.loc 1 1223 30 view .LVU671
 2038 010a A8F80030 		strh	r3, [r8]	@ movhi
1215:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 2039              		.loc 1 1215 24 view .LVU672
 2040 010e 5F46     		mov	r7, fp
 2041 0110 6CE0     		b	.L123
 2042              	.L138:
1218:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
 2043              		.loc 1 1218 21 is_stmt 1 view .LVU673
1218:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + area_w - 1;
 2044              		.loc 1 1218 30 is_stmt 0 view .LVU674
 2045 0112 099B     		ldr	r3, [sp, #36]
 2046 0114 A8F80030 		strh	r3, [r8]	@ movhi
1219:lvgl/src/core/lv_refr.c ****                 }
 2047              		.loc 1 1219 21 is_stmt 1 view .LVU675
1219:lvgl/src/core/lv_refr.c ****                 }
 2048              		.loc 1 1219 43 is_stmt 0 view .LVU676
 2049 0118 079B     		ldr	r3, [sp, #28]
 2050 011a 089A     		ldr	r2, [sp, #32]
 2051 011c 1344     		add	r3, r3, r2
 2052 011e 9BB2     		uxth	r3, r3
1219:lvgl/src/core/lv_refr.c ****                 }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 71


 2053              		.loc 1 1219 52 view .LVU677
 2054 0120 013B     		subs	r3, r3, #1
1219:lvgl/src/core/lv_refr.c ****                 }
 2055              		.loc 1 1219 30 view .LVU678
 2056 0122 A8F80430 		strh	r3, [r8, #4]	@ movhi
1215:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90_sqr(drv->rotated == LV_DISP_ROT_270, area_w, color_p);
 2057              		.loc 1 1215 24 view .LVU679
 2058 0126 5F46     		mov	r7, fp
 2059 0128 60E0     		b	.L123
 2060              	.LVL180:
 2061              	.L143:
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2062              		.loc 1 1228 37 is_stmt 1 discriminator 1 view .LVU680
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2063              		.loc 1 1228 47 is_stmt 0 discriminator 1 view .LVU681
 2064 012a 4FF42050 		mov	r0, #10240
 2065 012e FFF7FEFF 		bl	lv_mem_buf_get
 2066              	.LVL181:
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2067              		.loc 1 1228 47 discriminator 1 view .LVU682
 2068 0132 0490     		str	r0, [sp, #16]
 2069              	.LVL182:
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2070              		.loc 1 1228 47 discriminator 1 view .LVU683
 2071 0134 38E0     		b	.L124
 2072              	.LVL183:
 2073              	.L144:
1232:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 2074              		.loc 1 1232 21 is_stmt 1 view .LVU684
1232:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 2075              		.loc 1 1232 43 is_stmt 0 view .LVU685
 2076 0136 079B     		ldr	r3, [sp, #28]
 2077 0138 3344     		add	r3, r3, r6
1232:lvgl/src/core/lv_refr.c ****                     area->x2 = init_y_off + row + height - 1;
 2078              		.loc 1 1232 30 view .LVU686
 2079 013a A8F80030 		strh	r3, [r8]	@ movhi
1233:lvgl/src/core/lv_refr.c ****                 }
 2080              		.loc 1 1233 21 is_stmt 1 view .LVU687
1233:lvgl/src/core/lv_refr.c ****                 }
 2081              		.loc 1 1233 49 is_stmt 0 view .LVU688
 2082 013e 1AFA83F3 		uxtah	r3, r10, r3
 2083 0142 9BB2     		uxth	r3, r3
1233:lvgl/src/core/lv_refr.c ****                 }
 2084              		.loc 1 1233 58 view .LVU689
 2085 0144 013B     		subs	r3, r3, #1
1233:lvgl/src/core/lv_refr.c ****                 }
 2086              		.loc 1 1233 30 view .LVU690
 2087 0146 A8F80430 		strh	r3, [r8, #4]	@ movhi
 2088 014a 4FE0     		b	.L123
 2089              	.L126:
1247:lvgl/src/core/lv_refr.c ****             }
 2090              		.loc 1 1247 17 is_stmt 1 view .LVU691
1247:lvgl/src/core/lv_refr.c ****             }
 2091              		.loc 1 1247 41 is_stmt 0 view .LVU692
 2092 014c 0023     		movs	r3, #0
 2093 014e 6B61     		str	r3, [r5, #20]
 2094              	.L127:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 72


1251:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 2095              		.loc 1 1251 13 is_stmt 1 view .LVU693
 2096 0150 049A     		ldr	r2, [sp, #16]
 2097 0152 5AB1     		cbz	r2, .L139
 2098              	.L128:
1251:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 2099              		.loc 1 1251 13 is_stmt 0 discriminator 4 view .LVU694
 2100 0154 4146     		mov	r1, r8
 2101 0156 2046     		mov	r0, r4
 2102 0158 FFF7FEFF 		bl	call_flush_cb
 2103              	.LVL184:
1253:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 2104              		.loc 1 1253 13 is_stmt 1 discriminator 4 view .LVU695
 2105              	.L130:
1253:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 2106              		.loc 1 1253 18 view .LVU696
1253:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 2107              		.loc 1 1253 27 is_stmt 0 view .LVU697
 2108 015c 2B69     		ldr	r3, [r5, #16]
1253:lvgl/src/core/lv_refr.c ****                 if(drv->wait_cb) drv->wait_cb(drv);
 2109              		.loc 1 1253 18 view .LVU698
 2110 015e 3BB1     		cbz	r3, .L140
1254:lvgl/src/core/lv_refr.c ****             }
 2111              		.loc 1 1254 17 is_stmt 1 view .LVU699
1254:lvgl/src/core/lv_refr.c ****             }
 2112              		.loc 1 1254 23 is_stmt 0 view .LVU700
 2113 0160 A36A     		ldr	r3, [r4, #40]
1254:lvgl/src/core/lv_refr.c ****             }
 2114              		.loc 1 1254 19 view .LVU701
 2115 0162 002B     		cmp	r3, #0
 2116 0164 FAD0     		beq	.L130
1254:lvgl/src/core/lv_refr.c ****             }
 2117              		.loc 1 1254 34 is_stmt 1 discriminator 1 view .LVU702
 2118 0166 2046     		mov	r0, r4
 2119 0168 9847     		blx	r3
 2120              	.LVL185:
 2121 016a F7E7     		b	.L130
 2122              	.L139:
1251:lvgl/src/core/lv_refr.c ****             /*FIXME: Rotation forces legacy behavior where rendering and flushing are done serially
 2123              		.loc 1 1251 13 is_stmt 0 view .LVU703
 2124 016c 039A     		ldr	r2, [sp, #12]
 2125 016e F1E7     		b	.L128
 2126              	.L140:
1256:lvgl/src/core/lv_refr.c ****             row += height;
 2127              		.loc 1 1256 13 is_stmt 1 view .LVU704
1256:lvgl/src/core/lv_refr.c ****             row += height;
 2128              		.loc 1 1256 31 is_stmt 0 view .LVU705
 2129 0170 0AFB0BFA 		mul	r10, r10, fp
1256:lvgl/src/core/lv_refr.c ****             row += height;
 2130              		.loc 1 1256 21 view .LVU706
 2131 0174 039B     		ldr	r3, [sp, #12]
 2132 0176 03EB8A03 		add	r3, r3, r10, lsl #2
 2133 017a 0393     		str	r3, [sp, #12]
 2134              	.LVL186:
1257:lvgl/src/core/lv_refr.c ****         }
 2135              		.loc 1 1257 13 is_stmt 1 view .LVU707
1257:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 73


 2136              		.loc 1 1257 17 is_stmt 0 view .LVU708
 2137 017c 3E44     		add	r6, r6, r7
 2138              	.LVL187:
1257:lvgl/src/core/lv_refr.c ****         }
 2139              		.loc 1 1257 17 view .LVU709
 2140 017e 36B2     		sxth	r6, r6
 2141              	.LVL188:
 2142              	.L119:
1257:lvgl/src/core/lv_refr.c ****         }
 2143              		.loc 1 1257 17 view .LVU710
 2144              	.LBE100:
1210:lvgl/src/core/lv_refr.c ****             lv_coord_t height = LV_MIN(max_row, area_h - row);
 2145              		.loc 1 1210 14 is_stmt 1 view .LVU711
 2146 0180 4E45     		cmp	r6, r9
 2147 0182 43DA     		bge	.L141
 2148              	.LBB101:
1211:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 2149              		.loc 1 1211 13 view .LVU712
1211:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 2150              		.loc 1 1211 33 is_stmt 0 view .LVU713
 2151 0184 0596     		str	r6, [sp, #20]
 2152 0186 A9EB060A 		sub	r10, r9, r6
 2153 018a 069B     		ldr	r3, [sp, #24]
 2154 018c 9A45     		cmp	r10, r3
 2155 018e A8BF     		it	ge
 2156 0190 9A46     		movge	r10, r3
1211:lvgl/src/core/lv_refr.c ****             draw_buf->flushing = 1;
 2157              		.loc 1 1211 24 view .LVU714
 2158 0192 0FFA8AF7 		sxth	r7, r10
 2159              	.LVL189:
1212:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
 2160              		.loc 1 1212 13 is_stmt 1 view .LVU715
1212:lvgl/src/core/lv_refr.c ****             if((row == 0) && (area_h >= area_w)) {
 2161              		.loc 1 1212 32 is_stmt 0 view .LVU716
 2162 0196 0123     		movs	r3, #1
 2163 0198 2B61     		str	r3, [r5, #16]
1213:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
 2164              		.loc 1 1213 13 is_stmt 1 view .LVU717
1213:lvgl/src/core/lv_refr.c ****                 /*Rotate the initial area as a square*/
 2165              		.loc 1 1213 15 is_stmt 0 view .LVU718
 2166 019a D945     		cmp	r9, fp
 2167 019c A8BF     		it	ge
 2168 019e 002E     		cmpge	r6, #0
 2169 01a0 98D0     		beq	.L142
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2170              		.loc 1 1228 17 is_stmt 1 view .LVU719
1228:lvgl/src/core/lv_refr.c ****                 draw_buf_rotate_90(drv->rotated == LV_DISP_ROT_270, area_w, height, color_p, rot_bu
 2171              		.loc 1 1228 19 is_stmt 0 view .LVU720
 2172 01a2 049B     		ldr	r3, [sp, #16]
 2173 01a4 002B     		cmp	r3, #0
 2174 01a6 C0D0     		beq	.L143
 2175              	.L124:
1229:lvgl/src/core/lv_refr.c **** 
 2176              		.loc 1 1229 17 is_stmt 1 view .LVU721
1229:lvgl/src/core/lv_refr.c **** 
 2177              		.loc 1 1229 49 is_stmt 0 view .LVU722
 2178 01a8 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 74


1229:lvgl/src/core/lv_refr.c **** 
 2179              		.loc 1 1229 17 view .LVU723
 2180 01aa 00F03000 		and	r0, r0, #48
 2181 01ae 049B     		ldr	r3, [sp, #16]
 2182 01b0 0093     		str	r3, [sp]
 2183 01b2 039B     		ldr	r3, [sp, #12]
 2184 01b4 3A46     		mov	r2, r7
 2185 01b6 5946     		mov	r1, fp
 2186 01b8 3028     		cmp	r0, #48
 2187 01ba 14BF     		ite	ne
 2188 01bc 0020     		movne	r0, #0
 2189 01be 0120     		moveq	r0, #1
 2190 01c0 FFF7FEFF 		bl	draw_buf_rotate_90
 2191              	.LVL190:
1231:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 2192              		.loc 1 1231 17 is_stmt 1 view .LVU724
1231:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 2193              		.loc 1 1231 33 is_stmt 0 view .LVU725
 2194 01c4 237C     		ldrb	r3, [r4, #16]	@ zero_extendqisi2
 2195 01c6 03F03003 		and	r3, r3, #48
1231:lvgl/src/core/lv_refr.c ****                     area->x1 = init_y_off + row;
 2196              		.loc 1 1231 19 view .LVU726
 2197 01ca 102B     		cmp	r3, #16
 2198 01cc B3D0     		beq	.L144
1236:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 2199              		.loc 1 1236 21 is_stmt 1 view .LVU727
1236:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 2200              		.loc 1 1236 35 is_stmt 0 view .LVU728
 2201 01ce 2388     		ldrh	r3, [r4]
1236:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 2202              		.loc 1 1236 49 view .LVU729
 2203 01d0 079A     		ldr	r2, [sp, #28]
 2204 01d2 9B1A     		subs	r3, r3, r2
 2205 01d4 9BB2     		uxth	r3, r3
1236:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 2206              		.loc 1 1236 62 view .LVU730
 2207 01d6 9B1B     		subs	r3, r3, r6
 2208 01d8 013B     		subs	r3, r3, #1
 2209 01da 9AB2     		uxth	r2, r3
1236:lvgl/src/core/lv_refr.c ****                     area->x1 = area->x2 - height + 1;
 2210              		.loc 1 1236 30 view .LVU731
 2211 01dc A8F80430 		strh	r3, [r8, #4]	@ movhi
1237:lvgl/src/core/lv_refr.c ****                 }
 2212              		.loc 1 1237 21 is_stmt 1 view .LVU732
1237:lvgl/src/core/lv_refr.c ****                 }
 2213              		.loc 1 1237 41 is_stmt 0 view .LVU733
 2214 01e0 A2EB0A03 		sub	r3, r2, r10
 2215 01e4 9BB2     		uxth	r3, r3
1237:lvgl/src/core/lv_refr.c ****                 }
 2216              		.loc 1 1237 50 view .LVU734
 2217 01e6 0133     		adds	r3, r3, #1
1237:lvgl/src/core/lv_refr.c ****                 }
 2218              		.loc 1 1237 30 view .LVU735
 2219 01e8 A8F80030 		strh	r3, [r8]	@ movhi
 2220              	.LVL191:
 2221              	.L123:
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 75


 2222              		.loc 1 1243 13 is_stmt 1 view .LVU736
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2223              		.loc 1 1243 20 is_stmt 0 view .LVU737
 2224 01ec BA46     		mov	r10, r7
 2225 01ee 059B     		ldr	r3, [sp, #20]
 2226 01f0 3B44     		add	r3, r3, r7
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2227              		.loc 1 1243 15 view .LVU738
 2228 01f2 9945     		cmp	r9, r3
 2229 01f4 AADC     		bgt	.L126
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2230              		.loc 1 1243 50 discriminator 1 view .LVU739
 2231 01f6 AB69     		ldr	r3, [r5, #24]
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2232              		.loc 1 1243 39 discriminator 1 view .LVU740
 2233 01f8 13F0010F 		tst	r3, #1
 2234 01fc A6D0     		beq	.L126
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2235              		.loc 1 1243 73 discriminator 2 view .LVU741
 2236 01fe AB69     		ldr	r3, [r5, #24]
1243:lvgl/src/core/lv_refr.c ****                 draw_buf->flushing_last = 1;
 2237              		.loc 1 1243 62 discriminator 2 view .LVU742
 2238 0200 13F0020F 		tst	r3, #2
 2239 0204 A2D0     		beq	.L126
1244:lvgl/src/core/lv_refr.c ****             }
 2240              		.loc 1 1244 17 is_stmt 1 view .LVU743
1244:lvgl/src/core/lv_refr.c ****             }
 2241              		.loc 1 1244 41 is_stmt 0 view .LVU744
 2242 0206 0123     		movs	r3, #1
 2243 0208 6B61     		str	r3, [r5, #20]
 2244 020a A1E7     		b	.L127
 2245              	.LVL192:
 2246              	.L141:
1244:lvgl/src/core/lv_refr.c ****             }
 2247              		.loc 1 1244 41 view .LVU745
 2248              	.LBE101:
1260:lvgl/src/core/lv_refr.c ****     }
 2249              		.loc 1 1260 9 is_stmt 1 view .LVU746
1260:lvgl/src/core/lv_refr.c ****     }
 2250              		.loc 1 1260 11 is_stmt 0 view .LVU747
 2251 020c 049B     		ldr	r3, [sp, #16]
 2252 020e 002B     		cmp	r3, #0
 2253 0210 3FF40DAF 		beq	.L114
1260:lvgl/src/core/lv_refr.c ****     }
 2254              		.loc 1 1260 29 is_stmt 1 discriminator 1 view .LVU748
 2255 0214 1846     		mov	r0, r3
 2256 0216 FFF7FEFF 		bl	lv_mem_buf_release
 2257              	.LVL193:
 2258 021a 08E7     		b	.L114
 2259              	.L146:
 2260              		.align	2
 2261              	.L145:
 2262 021c 00000000 		.word	.LANCHOR0
 2263              	.LBE94:
 2264              		.cfi_endproc
 2265              	.LFE191:
 2267              		.section	.text.draw_buf_flush,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 76


 2268              		.align	1
 2269              		.syntax unified
 2270              		.thumb
 2271              		.thumb_func
 2273              	draw_buf_flush:
 2274              	.LVL194:
 2275              	.LFB192:
1268:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 2276              		.loc 1 1268 1 view -0
 2277              		.cfi_startproc
 2278              		@ args = 0, pretend = 0, frame = 0
 2279              		@ frame_needed = 0, uses_anonymous_args = 0
1268:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 2280              		.loc 1 1268 1 is_stmt 0 view .LVU750
 2281 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 2282              		.cfi_def_cfa_offset 24
 2283              		.cfi_offset 3, -24
 2284              		.cfi_offset 4, -20
 2285              		.cfi_offset 5, -16
 2286              		.cfi_offset 6, -12
 2287              		.cfi_offset 7, -8
 2288              		.cfi_offset 14, -4
 2289 0002 0546     		mov	r5, r0
1269:lvgl/src/core/lv_refr.c **** 
 2290              		.loc 1 1269 5 is_stmt 1 view .LVU751
1269:lvgl/src/core/lv_refr.c **** 
 2291              		.loc 1 1269 37 is_stmt 0 view .LVU752
 2292 0004 2E4B     		ldr	r3, .L163
 2293 0006 1868     		ldr	r0, [r3]
 2294              	.LVL195:
1269:lvgl/src/core/lv_refr.c **** 
 2295              		.loc 1 1269 37 view .LVU753
 2296 0008 FFF7FEFF 		bl	lv_disp_get_draw_buf
 2297              	.LVL196:
 2298 000c 0446     		mov	r4, r0
 2299              	.LVL197:
1272:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 2300              		.loc 1 1272 5 is_stmt 1 view .LVU754
1272:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 2301              		.loc 1 1272 36 is_stmt 0 view .LVU755
 2302 000e 2B68     		ldr	r3, [r5]
1272:lvgl/src/core/lv_refr.c ****     if(draw_ctx->wait_for_finish) draw_ctx->wait_for_finish(draw_ctx);
 2303              		.loc 1 1272 21 view .LVU756
 2304 0010 DE6B     		ldr	r6, [r3, #60]
 2305              	.LVL198:
1273:lvgl/src/core/lv_refr.c **** 
 2306              		.loc 1 1273 5 is_stmt 1 view .LVU757
1273:lvgl/src/core/lv_refr.c **** 
 2307              		.loc 1 1273 16 is_stmt 0 view .LVU758
 2308 0012 736B     		ldr	r3, [r6, #52]
1273:lvgl/src/core/lv_refr.c **** 
 2309              		.loc 1 1273 7 view .LVU759
 2310 0014 0BB1     		cbz	r3, .L148
1273:lvgl/src/core/lv_refr.c **** 
 2311              		.loc 1 1273 35 is_stmt 1 discriminator 1 view .LVU760
 2312 0016 3046     		mov	r0, r6
 2313              	.LVL199:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 77


1273:lvgl/src/core/lv_refr.c **** 
 2314              		.loc 1 1273 35 is_stmt 0 discriminator 1 view .LVU761
 2315 0018 9847     		blx	r3
 2316              	.LVL200:
 2317              	.L148:
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2318              		.loc 1 1277 5 is_stmt 1 view .LVU762
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2319              		.loc 1 1277 31 is_stmt 0 view .LVU763
 2320 001a E168     		ldr	r1, [r4, #12]
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2321              		.loc 1 1277 60 view .LVU764
 2322 001c 284B     		ldr	r3, .L163
 2323 001e 1B68     		ldr	r3, [r3]
 2324 0020 1A68     		ldr	r2, [r3]
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2325              		.loc 1 1277 68 view .LVU765
 2326 0022 B2F90030 		ldrsh	r3, [r2]
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2327              		.loc 1 1277 97 view .LVU766
 2328 0026 B2F90220 		ldrsh	r2, [r2, #2]
1277:lvgl/src/core/lv_refr.c ****     if(draw_buf->buf1 && draw_buf->buf2 && !full_sized) {
 2329              		.loc 1 1277 78 view .LVU767
 2330 002a 02FB03F3 		mul	r3, r2, r3
 2331              	.LVL201:
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2332              		.loc 1 1278 5 is_stmt 1 view .LVU768
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2333              		.loc 1 1278 16 is_stmt 0 view .LVU769
 2334 002e 2268     		ldr	r2, [r4]
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2335              		.loc 1 1278 7 view .LVU770
 2336 0030 6AB1     		cbz	r2, .L149
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2337              		.loc 1 1278 34 discriminator 1 view .LVU771
 2338 0032 6268     		ldr	r2, [r4, #4]
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2339              		.loc 1 1278 23 discriminator 1 view .LVU772
 2340 0034 5AB1     		cbz	r2, .L149
1278:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 2341              		.loc 1 1278 41 discriminator 2 view .LVU773
 2342 0036 9942     		cmp	r1, r3
 2343 0038 09D0     		beq	.L149
 2344              	.LVL202:
 2345              	.L151:
1279:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2346              		.loc 1 1279 14 is_stmt 1 view .LVU774
1279:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2347              		.loc 1 1279 23 is_stmt 0 view .LVU775
 2348 003a 2369     		ldr	r3, [r4, #16]
1279:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 2349              		.loc 1 1279 14 view .LVU776
 2350 003c 3BB1     		cbz	r3, .L149
1280:lvgl/src/core/lv_refr.c ****         }
 2351              		.loc 1 1280 13 is_stmt 1 view .LVU777
1280:lvgl/src/core/lv_refr.c ****         }
 2352              		.loc 1 1280 25 is_stmt 0 view .LVU778
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 78


 2353 003e 204B     		ldr	r3, .L163
 2354 0040 1B68     		ldr	r3, [r3]
 2355 0042 1868     		ldr	r0, [r3]
1280:lvgl/src/core/lv_refr.c ****         }
 2356              		.loc 1 1280 33 view .LVU779
 2357 0044 836A     		ldr	r3, [r0, #40]
1280:lvgl/src/core/lv_refr.c ****         }
 2358              		.loc 1 1280 15 view .LVU780
 2359 0046 002B     		cmp	r3, #0
 2360 0048 F7D0     		beq	.L151
1280:lvgl/src/core/lv_refr.c ****         }
 2361              		.loc 1 1280 44 is_stmt 1 discriminator 1 view .LVU781
 2362 004a 9847     		blx	r3
 2363              	.LVL203:
 2364 004c F5E7     		b	.L151
 2365              	.L149:
1284:lvgl/src/core/lv_refr.c **** 
 2366              		.loc 1 1284 5 view .LVU782
1284:lvgl/src/core/lv_refr.c **** 
 2367              		.loc 1 1284 24 is_stmt 0 view .LVU783
 2368 004e 0123     		movs	r3, #1
 2369 0050 2361     		str	r3, [r4, #16]
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2370              		.loc 1 1286 5 is_stmt 1 view .LVU784
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2371              		.loc 1 1286 17 is_stmt 0 view .LVU785
 2372 0052 1B4B     		ldr	r3, .L163
 2373 0054 1B68     		ldr	r3, [r3]
 2374 0056 1B68     		ldr	r3, [r3]
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2375              		.loc 1 1286 25 view .LVU786
 2376 0058 DB68     		ldr	r3, [r3, #12]
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2377              		.loc 1 1286 35 view .LVU787
 2378 005a 9A69     		ldr	r2, [r3, #24]
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2379              		.loc 1 1286 7 view .LVU788
 2380 005c 12F0010F 		tst	r2, #1
 2381 0060 06D0     		beq	.L153
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2382              		.loc 1 1286 77 discriminator 1 view .LVU789
 2383 0062 9B69     		ldr	r3, [r3, #24]
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2384              		.loc 1 1286 47 discriminator 1 view .LVU790
 2385 0064 13F0020F 		tst	r3, #2
 2386 0068 02D0     		beq	.L153
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2387              		.loc 1 1286 90 is_stmt 1 discriminator 2 view .LVU791
1286:lvgl/src/core/lv_refr.c ****     else draw_buf->flushing_last = 0;
 2388              		.loc 1 1286 114 is_stmt 0 discriminator 2 view .LVU792
 2389 006a 0123     		movs	r3, #1
 2390 006c 6361     		str	r3, [r4, #20]
 2391 006e 01E0     		b	.L154
 2392              	.L153:
1287:lvgl/src/core/lv_refr.c **** 
 2393              		.loc 1 1287 10 is_stmt 1 view .LVU793
1287:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 79


 2394              		.loc 1 1287 34 is_stmt 0 view .LVU794
 2395 0070 0023     		movs	r3, #0
 2396 0072 6361     		str	r3, [r4, #20]
 2397              	.L154:
1289:lvgl/src/core/lv_refr.c **** 
 2398              		.loc 1 1289 5 is_stmt 1 view .LVU795
1289:lvgl/src/core/lv_refr.c **** 
 2399              		.loc 1 1289 34 is_stmt 0 view .LVU796
 2400 0074 6769     		ldr	r7, [r4, #20]
 2401              	.LVL204:
1291:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 2402              		.loc 1 1291 5 is_stmt 1 view .LVU797
1291:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 2403              		.loc 1 1291 12 is_stmt 0 view .LVU798
 2404 0076 2868     		ldr	r0, [r5]
1291:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 2405              		.loc 1 1291 20 view .LVU799
 2406 0078 4369     		ldr	r3, [r0, #20]
1291:lvgl/src/core/lv_refr.c ****         /*Rotate the buffer to the display's native orientation if necessary*/
 2407              		.loc 1 1291 7 view .LVU800
 2408 007a 53B1     		cbz	r3, .L155
1293:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 2409              		.loc 1 1293 9 is_stmt 1 view .LVU801
1293:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 2410              		.loc 1 1293 34 is_stmt 0 view .LVU802
 2411 007c 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
1293:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 2412              		.loc 1 1293 11 view .LVU803
 2413 007e 13F0300F 		tst	r3, #48
 2414 0082 02D0     		beq	.L156
1293:lvgl/src/core/lv_refr.c ****             draw_buf_rotate(draw_ctx->buf_area, draw_ctx->buf);
 2415              		.loc 1 1293 54 discriminator 1 view .LVU804
 2416 0084 13F0040F 		tst	r3, #4
 2417 0088 12D1     		bne	.L161
 2418              	.L156:
1297:lvgl/src/core/lv_refr.c ****         }
 2419              		.loc 1 1297 13 is_stmt 1 view .LVU805
 2420 008a 3268     		ldr	r2, [r6]
 2421 008c 7168     		ldr	r1, [r6, #4]
 2422 008e FFF7FEFF 		bl	call_flush_cb
 2423              	.LVL205:
 2424              	.L155:
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2425              		.loc 1 1302 5 view .LVU806
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2426              		.loc 1 1302 16 is_stmt 0 view .LVU807
 2427 0092 2368     		ldr	r3, [r4]
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2428              		.loc 1 1302 7 view .LVU808
 2429 0094 5BB1     		cbz	r3, .L147
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2430              		.loc 1 1302 34 discriminator 1 view .LVU809
 2431 0096 6268     		ldr	r2, [r4, #4]
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2432              		.loc 1 1302 23 discriminator 1 view .LVU810
 2433 0098 4AB1     		cbz	r2, .L147
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 80


 2434              		.loc 1 1302 50 discriminator 2 view .LVU811
 2435 009a 2968     		ldr	r1, [r5]
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2436              		.loc 1 1302 45 discriminator 2 view .LVU812
 2437 009c 097C     		ldrb	r1, [r1, #16]	@ zero_extendqisi2
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2438              		.loc 1 1302 41 discriminator 2 view .LVU813
 2439 009e 11F0010F 		tst	r1, #1
 2440 00a2 00D0     		beq	.L158
1302:lvgl/src/core/lv_refr.c ****         if(draw_buf->buf_act == draw_buf->buf1)
 2441              		.loc 1 1302 72 discriminator 3 view .LVU814
 2442 00a4 1FB1     		cbz	r7, .L147
 2443              	.L158:
1303:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 2444              		.loc 1 1303 9 is_stmt 1 view .LVU815
1303:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 2445              		.loc 1 1303 20 is_stmt 0 view .LVU816
 2446 00a6 A168     		ldr	r1, [r4, #8]
1303:lvgl/src/core/lv_refr.c ****             draw_buf->buf_act = draw_buf->buf2;
 2447              		.loc 1 1303 11 view .LVU817
 2448 00a8 8B42     		cmp	r3, r1
 2449 00aa 06D0     		beq	.L162
1306:lvgl/src/core/lv_refr.c ****     }
 2450              		.loc 1 1306 13 is_stmt 1 view .LVU818
1306:lvgl/src/core/lv_refr.c ****     }
 2451              		.loc 1 1306 31 is_stmt 0 view .LVU819
 2452 00ac A360     		str	r3, [r4, #8]
 2453              	.L147:
1308:lvgl/src/core/lv_refr.c **** 
 2454              		.loc 1 1308 1 view .LVU820
 2455 00ae F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 2456              	.LVL206:
 2457              	.L161:
1294:lvgl/src/core/lv_refr.c ****         }
 2458              		.loc 1 1294 13 is_stmt 1 view .LVU821
 2459 00b0 3168     		ldr	r1, [r6]
 2460 00b2 7068     		ldr	r0, [r6, #4]
 2461 00b4 FFF7FEFF 		bl	draw_buf_rotate
 2462              	.LVL207:
 2463 00b8 EBE7     		b	.L155
 2464              	.L162:
1304:lvgl/src/core/lv_refr.c ****         else
 2465              		.loc 1 1304 13 view .LVU822
1304:lvgl/src/core/lv_refr.c ****         else
 2466              		.loc 1 1304 31 is_stmt 0 view .LVU823
 2467 00ba A260     		str	r2, [r4, #8]
 2468 00bc F7E7     		b	.L147
 2469              	.L164:
 2470 00be 00BF     		.align	2
 2471              	.L163:
 2472 00c0 00000000 		.word	.LANCHOR0
 2473              		.cfi_endproc
 2474              	.LFE192:
 2476              		.section	.text._lv_refr_init,"ax",%progbits
 2477              		.align	1
 2478              		.global	_lv_refr_init
 2479              		.syntax unified
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 81


 2480              		.thumb
 2481              		.thumb_func
 2483              	_lv_refr_init:
 2484              	.LFB167:
 104:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR
 2485              		.loc 1 104 1 is_stmt 1 view -0
 2486              		.cfi_startproc
 2487              		@ args = 0, pretend = 0, frame = 0
 2488              		@ frame_needed = 0, uses_anonymous_args = 0
 2489 0000 08B5     		push	{r3, lr}
 2490              		.cfi_def_cfa_offset 8
 2491              		.cfi_offset 3, -8
 2492              		.cfi_offset 14, -4
 106:lvgl/src/core/lv_refr.c **** #endif
 2493              		.loc 1 106 5 view .LVU825
 2494 0002 0348     		ldr	r0, .L167
 2495 0004 FFF7FEFF 		bl	perf_monitor_init
 2496              	.LVL208:
 109:lvgl/src/core/lv_refr.c **** #endif
 2497              		.loc 1 109 5 view .LVU826
 2498 0008 0248     		ldr	r0, .L167+4
 2499 000a FFF7FEFF 		bl	mem_monitor_init
 2500              	.LVL209:
 111:lvgl/src/core/lv_refr.c **** 
 2501              		.loc 1 111 1 is_stmt 0 view .LVU827
 2502 000e 08BD     		pop	{r3, pc}
 2503              	.L168:
 2504              		.align	2
 2505              	.L167:
 2506 0010 00000000 		.word	.LANCHOR1
 2507 0014 00000000 		.word	.LANCHOR2
 2508              		.cfi_endproc
 2509              	.LFE167:
 2511              		.section	.text.lv_obj_redraw,"ax",%progbits
 2512              		.align	1
 2513              		.global	lv_obj_redraw
 2514              		.syntax unified
 2515              		.thumb
 2516              		.thumb_func
 2518              	lv_obj_redraw:
 2519              	.LVL210:
 2520              	.LFB169:
 131:lvgl/src/core/lv_refr.c ****     const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 2521              		.loc 1 131 1 is_stmt 1 view -0
 2522              		.cfi_startproc
 2523              		@ args = 0, pretend = 0, frame = 24
 2524              		@ frame_needed = 0, uses_anonymous_args = 0
 131:lvgl/src/core/lv_refr.c ****     const lv_area_t * clip_area_ori = draw_ctx->clip_area;
 2525              		.loc 1 131 1 is_stmt 0 view .LVU829
 2526 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2527              		.cfi_def_cfa_offset 28
 2528              		.cfi_offset 4, -28
 2529              		.cfi_offset 5, -24
 2530              		.cfi_offset 6, -20
 2531              		.cfi_offset 7, -16
 2532              		.cfi_offset 8, -12
 2533              		.cfi_offset 9, -8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 82


 2534              		.cfi_offset 14, -4
 2535 0004 87B0     		sub	sp, sp, #28
 2536              		.cfi_def_cfa_offset 56
 2537 0006 0646     		mov	r6, r0
 2538 0008 0D46     		mov	r5, r1
 132:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 2539              		.loc 1 132 5 is_stmt 1 view .LVU830
 132:lvgl/src/core/lv_refr.c ****     lv_area_t clip_coords_for_obj;
 2540              		.loc 1 132 23 is_stmt 0 view .LVU831
 2541 000a D0F80880 		ldr	r8, [r0, #8]
 2542              	.LVL211:
 133:lvgl/src/core/lv_refr.c **** 
 2543              		.loc 1 133 5 is_stmt 1 view .LVU832
 136:lvgl/src/core/lv_refr.c ****     lv_obj_get_coords(obj, &obj_coords_ext);
 2544              		.loc 1 136 5 view .LVU833
 137:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 2545              		.loc 1 137 5 view .LVU834
 2546 000e 02A9     		add	r1, sp, #8
 2547              	.LVL212:
 137:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 2548              		.loc 1 137 5 is_stmt 0 view .LVU835
 2549 0010 2846     		mov	r0, r5
 2550              	.LVL213:
 137:lvgl/src/core/lv_refr.c ****     lv_coord_t ext_draw_size = _lv_obj_get_ext_draw_size(obj);
 2551              		.loc 1 137 5 view .LVU836
 2552 0012 FFF7FEFF 		bl	lv_obj_get_coords
 2553              	.LVL214:
 138:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 2554              		.loc 1 138 5 is_stmt 1 view .LVU837
 138:lvgl/src/core/lv_refr.c ****     lv_area_increase(&obj_coords_ext, ext_draw_size, ext_draw_size);
 2555              		.loc 1 138 32 is_stmt 0 view .LVU838
 2556 0016 2846     		mov	r0, r5
 2557 0018 FFF7FEFF 		bl	_lv_obj_get_ext_draw_size
 2558              	.LVL215:
 2559 001c 0146     		mov	r1, r0
 2560              	.LVL216:
 139:lvgl/src/core/lv_refr.c ****     bool com_clip_res = _lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext);
 2561              		.loc 1 139 5 is_stmt 1 view .LVU839
 2562 001e 0246     		mov	r2, r0
 2563 0020 02A8     		add	r0, sp, #8
 2564              	.LVL217:
 139:lvgl/src/core/lv_refr.c ****     bool com_clip_res = _lv_area_intersect(&clip_coords_for_obj, clip_area_ori, &obj_coords_ext);
 2565              		.loc 1 139 5 is_stmt 0 view .LVU840
 2566 0022 FFF7FEFF 		bl	lv_area_increase
 2567              	.LVL218:
 140:lvgl/src/core/lv_refr.c ****     /*If the object is visible on the current clip area OR has overflow visible draw it.
 2568              		.loc 1 140 5 is_stmt 1 view .LVU841
 140:lvgl/src/core/lv_refr.c ****     /*If the object is visible on the current clip area OR has overflow visible draw it.
 2569              		.loc 1 140 25 is_stmt 0 view .LVU842
 2570 0026 02AA     		add	r2, sp, #8
 2571 0028 4146     		mov	r1, r8
 2572 002a 04A8     		add	r0, sp, #16
 2573 002c FFF7FEFF 		bl	_lv_area_intersect
 2574              	.LVL219:
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 2575              		.loc 1 143 5 is_stmt 1 view .LVU843
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 83


 2576              		.loc 1 143 37 is_stmt 0 view .LVU844
 2577 0030 B0B1     		cbz	r0, .L181
 2578 0032 0123     		movs	r3, #1
 2579              	.LVL220:
 2580              	.L170:
 144:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
 2581              		.loc 1 144 5 is_stmt 1 discriminator 6 view .LVU845
 144:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
 2582              		.loc 1 144 7 is_stmt 0 discriminator 6 view .LVU846
 2583 0034 9946     		mov	r9, r3
 2584 0036 EBB9     		cbnz	r3, .L182
 2585              	.LVL221:
 2586              	.L171:
 165:lvgl/src/core/lv_refr.c ****     bool refr_children = true;
 2587              		.loc 1 165 5 is_stmt 1 view .LVU847
 166:lvgl/src/core/lv_refr.c ****     if(lv_obj_has_flag(obj, LV_OBJ_FLAG_OVERFLOW_VISIBLE)) {
 2588              		.loc 1 166 5 view .LVU848
 167:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2589              		.loc 1 167 5 view .LVU849
 167:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2590              		.loc 1 167 8 is_stmt 0 view .LVU850
 2591 0038 4FF40021 		mov	r1, #524288
 2592 003c 2846     		mov	r0, r5
 2593 003e FFF7FEFF 		bl	lv_obj_has_flag
 2594              	.LVL222:
 167:lvgl/src/core/lv_refr.c ****         clip_coords_for_children  = *clip_area_ori;
 2595              		.loc 1 167 7 view .LVU851
 2596 0042 48B3     		cbz	r0, .L172
 168:lvgl/src/core/lv_refr.c ****     }
 2597              		.loc 1 168 9 is_stmt 1 view .LVU852
 168:lvgl/src/core/lv_refr.c ****     }
 2598              		.loc 1 168 35 is_stmt 0 view .LVU853
 2599 0044 6B46     		mov	r3, sp
 2600 0046 D8F80000 		ldr	r0, [r8]	@ unaligned
 2601 004a D8F80410 		ldr	r1, [r8, #4]	@ unaligned
 2602 004e 03C3     		stmia	r3!, {r0, r1}
 176:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_children;
 2603              		.loc 1 176 5 is_stmt 1 view .LVU854
 2604              	.L173:
 2605              	.LVL223:
 2606              	.LBB102:
 177:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2607              		.loc 1 177 9 view .LVU855
 177:lvgl/src/core/lv_refr.c ****         uint32_t i;
 2608              		.loc 1 177 29 is_stmt 0 view .LVU856
 2609 0050 C6F808D0 		str	sp, [r6, #8]
 178:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(obj);
 2610              		.loc 1 178 9 is_stmt 1 view .LVU857
 179:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2611              		.loc 1 179 9 view .LVU858
 179:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 2612              		.loc 1 179 30 is_stmt 0 view .LVU859
 2613 0054 2846     		mov	r0, r5
 2614 0056 FFF7FEFF 		bl	lv_obj_get_child_cnt
 2615              	.LVL224:
 2616 005a 0746     		mov	r7, r0
 2617              	.LVL225:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 84


 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2618              		.loc 1 180 9 is_stmt 1 view .LVU860
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2619              		.loc 1 180 15 is_stmt 0 view .LVU861
 2620 005c 0024     		movs	r4, #0
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2621              		.loc 1 180 9 view .LVU862
 2622 005e 2BE0     		b	.L175
 2623              	.LVL226:
 2624              	.L181:
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2625              		.loc 1 180 9 view .LVU863
 2626              	.LBE102:
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 2627              		.loc 1 143 40 discriminator 2 view .LVU864
 2628 0060 4FF40021 		mov	r1, #524288
 2629 0064 2846     		mov	r0, r5
 2630              	.LVL227:
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 2631              		.loc 1 143 40 discriminator 2 view .LVU865
 2632 0066 FFF7FEFF 		bl	lv_obj_has_flag
 2633              	.LVL228:
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 2634              		.loc 1 143 37 discriminator 2 view .LVU866
 2635 006a 08B9     		cbnz	r0, .L179
 143:lvgl/src/core/lv_refr.c ****     if(should_draw) {
 2636              		.loc 1 143 37 view .LVU867
 2637 006c 0023     		movs	r3, #0
 2638 006e E1E7     		b	.L170
 2639              	.L179:
 2640 0070 0123     		movs	r3, #1
 2641 0072 DFE7     		b	.L170
 2642              	.LVL229:
 2643              	.L182:
 145:lvgl/src/core/lv_refr.c **** 
 2644              		.loc 1 145 9 is_stmt 1 view .LVU868
 145:lvgl/src/core/lv_refr.c **** 
 2645              		.loc 1 145 29 is_stmt 0 view .LVU869
 2646 0074 04AB     		add	r3, sp, #16
 2647              	.LVL230:
 145:lvgl/src/core/lv_refr.c **** 
 2648              		.loc 1 145 29 view .LVU870
 2649 0076 B360     		str	r3, [r6, #8]
 147:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_MAIN, draw_ctx);
 2650              		.loc 1 147 9 is_stmt 1 view .LVU871
 2651 0078 3246     		mov	r2, r6
 2652 007a 1421     		movs	r1, #20
 2653 007c 2846     		mov	r0, r5
 2654 007e FFF7FEFF 		bl	lv_event_send
 2655              	.LVL231:
 148:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_MAIN_END, draw_ctx);
 2656              		.loc 1 148 9 view .LVU872
 2657 0082 3246     		mov	r2, r6
 2658 0084 1521     		movs	r1, #21
 2659 0086 2846     		mov	r0, r5
 2660 0088 FFF7FEFF 		bl	lv_event_send
 2661              	.LVL232:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 85


 149:lvgl/src/core/lv_refr.c **** #if LV_USE_REFR_DEBUG
 2662              		.loc 1 149 9 view .LVU873
 2663 008c 3246     		mov	r2, r6
 2664 008e 1621     		movs	r1, #22
 2665 0090 2846     		mov	r0, r5
 2666 0092 FFF7FEFF 		bl	lv_event_send
 2667              	.LVL233:
 2668 0096 CFE7     		b	.L171
 2669              	.LVL234:
 2670              	.L172:
 171:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2671              		.loc 1 171 9 view .LVU874
 171:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2672              		.loc 1 171 13 is_stmt 0 view .LVU875
 2673 0098 05F11402 		add	r2, r5, #20
 2674 009c 4146     		mov	r1, r8
 2675 009e 6846     		mov	r0, sp
 2676 00a0 FFF7FEFF 		bl	_lv_area_intersect
 2677              	.LVL235:
 171:lvgl/src/core/lv_refr.c ****             refr_children = false;
 2678              		.loc 1 171 11 view .LVU876
 2679 00a4 50B1     		cbz	r0, .L174
 2680 00a6 D3E7     		b	.L173
 2681              	.LVL236:
 2682              	.L176:
 2683              	.LBB104:
 2684              	.LBB103:
 181:lvgl/src/core/lv_refr.c ****             refr_obj(draw_ctx, child);
 2685              		.loc 1 181 13 is_stmt 1 discriminator 3 view .LVU877
 181:lvgl/src/core/lv_refr.c ****             refr_obj(draw_ctx, child);
 2686              		.loc 1 181 35 is_stmt 0 discriminator 3 view .LVU878
 2687 00a8 AB68     		ldr	r3, [r5, #8]
 181:lvgl/src/core/lv_refr.c ****             refr_obj(draw_ctx, child);
 2688              		.loc 1 181 46 discriminator 3 view .LVU879
 2689 00aa 1B68     		ldr	r3, [r3]
 2690              	.LVL237:
 182:lvgl/src/core/lv_refr.c ****         }
 2691              		.loc 1 182 13 is_stmt 1 discriminator 3 view .LVU880
 2692 00ac 53F82410 		ldr	r1, [r3, r4, lsl #2]
 2693 00b0 3046     		mov	r0, r6
 2694 00b2 FFF7FEFF 		bl	refr_obj
 2695              	.LVL238:
 182:lvgl/src/core/lv_refr.c ****         }
 2696              		.loc 1 182 13 is_stmt 0 discriminator 3 view .LVU881
 2697              	.LBE103:
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2698              		.loc 1 180 35 is_stmt 1 discriminator 3 view .LVU882
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2699              		.loc 1 180 36 is_stmt 0 discriminator 3 view .LVU883
 2700 00b6 0134     		adds	r4, r4, #1
 2701              	.LVL239:
 2702              	.L175:
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2703              		.loc 1 180 20 is_stmt 1 discriminator 1 view .LVU884
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2704              		.loc 1 180 9 is_stmt 0 discriminator 1 view .LVU885
 2705 00b8 BC42     		cmp	r4, r7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 86


 2706 00ba F5D3     		bcc	.L176
 2707              	.LVL240:
 2708              	.L174:
 180:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = obj->spec_attr->children[i];
 2709              		.loc 1 180 9 discriminator 1 view .LVU886
 2710              	.LBE104:
 187:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
 2711              		.loc 1 187 5 is_stmt 1 view .LVU887
 187:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &clip_coords_for_obj;
 2712              		.loc 1 187 7 is_stmt 0 view .LVU888
 2713 00bc B9F1000F 		cmp	r9, #0
 2714 00c0 04D1     		bne	.L183
 2715              	.L177:
 196:lvgl/src/core/lv_refr.c **** }
 2716              		.loc 1 196 5 is_stmt 1 view .LVU889
 196:lvgl/src/core/lv_refr.c **** }
 2717              		.loc 1 196 25 is_stmt 0 view .LVU890
 2718 00c2 C6F80880 		str	r8, [r6, #8]
 197:lvgl/src/core/lv_refr.c **** 
 2719              		.loc 1 197 1 view .LVU891
 2720 00c6 07B0     		add	sp, sp, #28
 2721              		.cfi_remember_state
 2722              		.cfi_def_cfa_offset 28
 2723              		@ sp needed
 2724 00c8 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2725              	.LVL241:
 2726              	.L183:
 2727              		.cfi_restore_state
 188:lvgl/src/core/lv_refr.c **** 
 2728              		.loc 1 188 9 is_stmt 1 view .LVU892
 188:lvgl/src/core/lv_refr.c **** 
 2729              		.loc 1 188 29 is_stmt 0 view .LVU893
 2730 00cc 04AB     		add	r3, sp, #16
 2731 00ce B360     		str	r3, [r6, #8]
 191:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_POST, draw_ctx);
 2732              		.loc 1 191 9 is_stmt 1 view .LVU894
 2733 00d0 3246     		mov	r2, r6
 2734 00d2 1721     		movs	r1, #23
 2735 00d4 2846     		mov	r0, r5
 2736 00d6 FFF7FEFF 		bl	lv_event_send
 2737              	.LVL242:
 192:lvgl/src/core/lv_refr.c ****         lv_event_send(obj, LV_EVENT_DRAW_POST_END, draw_ctx);
 2738              		.loc 1 192 9 view .LVU895
 2739 00da 3246     		mov	r2, r6
 2740 00dc 1821     		movs	r1, #24
 2741 00de 2846     		mov	r0, r5
 2742 00e0 FFF7FEFF 		bl	lv_event_send
 2743              	.LVL243:
 193:lvgl/src/core/lv_refr.c ****     }
 2744              		.loc 1 193 9 view .LVU896
 2745 00e4 3246     		mov	r2, r6
 2746 00e6 1921     		movs	r1, #25
 2747 00e8 2846     		mov	r0, r5
 2748 00ea FFF7FEFF 		bl	lv_event_send
 2749              	.LVL244:
 2750 00ee E8E7     		b	.L177
 2751              		.cfi_endproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 87


 2752              	.LFE169:
 2754              		.section	.text.refr_obj,"ax",%progbits
 2755              		.align	1
 2756              		.syntax unified
 2757              		.thumb
 2758              		.thumb_func
 2760              	refr_obj:
 2761              	.LVL245:
 2762              	.LFB185:
 965:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 2763              		.loc 1 965 1 view -0
 2764              		.cfi_startproc
 2765              		@ args = 0, pretend = 0, frame = 40
 2766              		@ frame_needed = 0, uses_anonymous_args = 0
 965:lvgl/src/core/lv_refr.c ****     /*Do not refresh hidden objects*/
 2767              		.loc 1 965 1 is_stmt 0 view .LVU898
 2768 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 2769              		.cfi_def_cfa_offset 28
 2770              		.cfi_offset 4, -28
 2771              		.cfi_offset 5, -24
 2772              		.cfi_offset 6, -20
 2773              		.cfi_offset 7, -16
 2774              		.cfi_offset 8, -12
 2775              		.cfi_offset 9, -8
 2776              		.cfi_offset 14, -4
 2777 0004 8BB0     		sub	sp, sp, #44
 2778              		.cfi_def_cfa_offset 72
 2779 0006 0546     		mov	r5, r0
 2780 0008 0C46     		mov	r4, r1
 967:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 2781              		.loc 1 967 5 is_stmt 1 view .LVU899
 967:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 2782              		.loc 1 967 8 is_stmt 0 view .LVU900
 2783 000a 0121     		movs	r1, #1
 2784              	.LVL246:
 967:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 2785              		.loc 1 967 8 view .LVU901
 2786 000c 2046     		mov	r0, r4
 2787              	.LVL247:
 967:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 2788              		.loc 1 967 8 view .LVU902
 2789 000e FFF7FEFF 		bl	lv_obj_has_flag
 2790              	.LVL248:
 967:lvgl/src/core/lv_refr.c ****     lv_layer_type_t layer_type = _lv_obj_get_layer_type(obj);
 2791              		.loc 1 967 7 view .LVU903
 2792 0012 10B1     		cbz	r0, .L205
 2793              	.L184:
1047:lvgl/src/core/lv_refr.c **** 
 2794              		.loc 1 1047 1 view .LVU904
 2795 0014 0BB0     		add	sp, sp, #44
 2796              		.cfi_remember_state
 2797              		.cfi_def_cfa_offset 28
 2798              		@ sp needed
 2799 0016 BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 2800              	.LVL249:
 2801              	.L205:
 2802              		.cfi_restore_state
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 88


 968:lvgl/src/core/lv_refr.c ****     if(layer_type == LV_LAYER_TYPE_NONE) {
 2803              		.loc 1 968 5 is_stmt 1 view .LVU905
 968:lvgl/src/core/lv_refr.c ****     if(layer_type == LV_LAYER_TYPE_NONE) {
 2804              		.loc 1 968 34 is_stmt 0 view .LVU906
 2805 001a 2046     		mov	r0, r4
 2806 001c FFF7FEFF 		bl	_lv_obj_get_layer_type
 2807              	.LVL250:
 969:lvgl/src/core/lv_refr.c ****         lv_obj_redraw(draw_ctx, obj);
 2808              		.loc 1 969 5 is_stmt 1 view .LVU907
 969:lvgl/src/core/lv_refr.c ****         lv_obj_redraw(draw_ctx, obj);
 2809              		.loc 1 969 7 is_stmt 0 view .LVU908
 2810 0020 0646     		mov	r6, r0
 2811 0022 20B9     		cbnz	r0, .L186
 970:lvgl/src/core/lv_refr.c ****     }
 2812              		.loc 1 970 9 is_stmt 1 view .LVU909
 2813 0024 2146     		mov	r1, r4
 2814 0026 2846     		mov	r0, r5
 2815              	.LVL251:
 970:lvgl/src/core/lv_refr.c ****     }
 2816              		.loc 1 970 9 is_stmt 0 view .LVU910
 2817 0028 FFF7FEFF 		bl	lv_obj_redraw
 2818              	.LVL252:
 2819 002c F2E7     		b	.L184
 2820              	.LVL253:
 2821              	.L186:
 2822              	.LBB105:
 973:lvgl/src/core/lv_refr.c ****         if(opa < LV_OPA_MIN) return;
 2823              		.loc 1 973 9 is_stmt 1 view .LVU911
 2824              	.LBB106:
 2825              	.LBI106:
 2826              		.file 3 "lvgl/src/core/lv_obj_style_gen.h"
   1:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:lvgl/src/core/lv_obj_style_gen.h **** {
   3:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:lvgl/src/core/lv_obj_style_gen.h **** }
   6:lvgl/src/core/lv_obj_style_gen.h **** 
   7:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:lvgl/src/core/lv_obj_style_gen.h **** {
   9:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:lvgl/src/core/lv_obj_style_gen.h **** }
  12:lvgl/src/core/lv_obj_style_gen.h **** 
  13:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
  14:lvgl/src/core/lv_obj_style_gen.h **** {
  15:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:lvgl/src/core/lv_obj_style_gen.h **** }
  18:lvgl/src/core/lv_obj_style_gen.h **** 
  19:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:lvgl/src/core/lv_obj_style_gen.h **** {
  21:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:lvgl/src/core/lv_obj_style_gen.h **** }
  24:lvgl/src/core/lv_obj_style_gen.h **** 
  25:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 89


  27:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:lvgl/src/core/lv_obj_style_gen.h **** }
  30:lvgl/src/core/lv_obj_style_gen.h **** 
  31:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:lvgl/src/core/lv_obj_style_gen.h **** {
  33:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:lvgl/src/core/lv_obj_style_gen.h **** }
  36:lvgl/src/core/lv_obj_style_gen.h **** 
  37:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:lvgl/src/core/lv_obj_style_gen.h **** {
  39:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:lvgl/src/core/lv_obj_style_gen.h **** }
  42:lvgl/src/core/lv_obj_style_gen.h **** 
  43:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:lvgl/src/core/lv_obj_style_gen.h **** {
  45:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:lvgl/src/core/lv_obj_style_gen.h **** }
  48:lvgl/src/core/lv_obj_style_gen.h **** 
  49:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:lvgl/src/core/lv_obj_style_gen.h **** {
  51:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:lvgl/src/core/lv_obj_style_gen.h **** }
  54:lvgl/src/core/lv_obj_style_gen.h **** 
  55:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:lvgl/src/core/lv_obj_style_gen.h **** {
  57:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:lvgl/src/core/lv_obj_style_gen.h **** }
  60:lvgl/src/core/lv_obj_style_gen.h **** 
  61:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:lvgl/src/core/lv_obj_style_gen.h **** {
  63:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:lvgl/src/core/lv_obj_style_gen.h **** }
  66:lvgl/src/core/lv_obj_style_gen.h **** 
  67:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:lvgl/src/core/lv_obj_style_gen.h **** {
  69:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  71:lvgl/src/core/lv_obj_style_gen.h **** }
  72:lvgl/src/core/lv_obj_style_gen.h **** 
  73:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:lvgl/src/core/lv_obj_style_gen.h **** {
  75:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:lvgl/src/core/lv_obj_style_gen.h **** }
  78:lvgl/src/core/lv_obj_style_gen.h **** 
  79:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:lvgl/src/core/lv_obj_style_gen.h **** {
  81:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 90


  84:lvgl/src/core/lv_obj_style_gen.h **** 
  85:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:lvgl/src/core/lv_obj_style_gen.h **** {
  87:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:lvgl/src/core/lv_obj_style_gen.h **** }
  90:lvgl/src/core/lv_obj_style_gen.h **** 
  91:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_x(const struct _lv_obj_t * obj, uint32_t 
  92:lvgl/src/core/lv_obj_style_gen.h **** {
  93:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_X);
  94:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:lvgl/src/core/lv_obj_style_gen.h **** }
  96:lvgl/src/core/lv_obj_style_gen.h **** 
  97:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_y(const struct _lv_obj_t * obj, uint32_t 
  98:lvgl/src/core/lv_obj_style_gen.h **** {
  99:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_Y);
 100:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:lvgl/src/core/lv_obj_style_gen.h **** }
 102:lvgl/src/core/lv_obj_style_gen.h **** 
 103:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 104:lvgl/src/core/lv_obj_style_gen.h **** {
 105:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 106:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:lvgl/src/core/lv_obj_style_gen.h **** }
 108:lvgl/src/core/lv_obj_style_gen.h **** 
 109:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 110:lvgl/src/core/lv_obj_style_gen.h **** {
 111:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 112:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:lvgl/src/core/lv_obj_style_gen.h **** }
 114:lvgl/src/core/lv_obj_style_gen.h **** 
 115:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 116:lvgl/src/core/lv_obj_style_gen.h **** {
 117:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 118:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:lvgl/src/core/lv_obj_style_gen.h **** }
 120:lvgl/src/core/lv_obj_style_gen.h **** 
 121:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 122:lvgl/src/core/lv_obj_style_gen.h **** {
 123:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 124:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 125:lvgl/src/core/lv_obj_style_gen.h **** }
 126:lvgl/src/core/lv_obj_style_gen.h **** 
 127:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
 128:lvgl/src/core/lv_obj_style_gen.h **** {
 129:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 130:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:lvgl/src/core/lv_obj_style_gen.h **** }
 132:lvgl/src/core/lv_obj_style_gen.h **** 
 133:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 134:lvgl/src/core/lv_obj_style_gen.h **** {
 135:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 136:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 137:lvgl/src/core/lv_obj_style_gen.h **** }
 138:lvgl/src/core/lv_obj_style_gen.h **** 
 139:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 140:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 91


 141:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 142:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 143:lvgl/src/core/lv_obj_style_gen.h **** }
 144:lvgl/src/core/lv_obj_style_gen.h **** 
 145:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color_filtered(const struct _lv_obj_t * obj, uint32_t 
 146:lvgl/src/core/lv_obj_style_gen.h **** {
 147:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 148:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 149:lvgl/src/core/lv_obj_style_gen.h **** }
 150:lvgl/src/core/lv_obj_style_gen.h **** 
 151:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_opa(const struct _lv_obj_t * obj, uint32_t part)
 152:lvgl/src/core/lv_obj_style_gen.h **** {
 153:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_OPA);
 154:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 155:lvgl/src/core/lv_obj_style_gen.h **** }
 156:lvgl/src/core/lv_obj_style_gen.h **** 
 157:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color(const struct _lv_obj_t * obj, uint32_t part
 158:lvgl/src/core/lv_obj_style_gen.h **** {
 159:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_COLOR);
 160:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 161:lvgl/src/core/lv_obj_style_gen.h **** }
 162:lvgl/src/core/lv_obj_style_gen.h **** 
 163:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_grad_color_filtered(const struct _lv_obj_t * obj, uint
 164:lvgl/src/core/lv_obj_style_gen.h **** {
 165:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 166:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 167:lvgl/src/core/lv_obj_style_gen.h **** }
 168:lvgl/src/core/lv_obj_style_gen.h **** 
 169:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_grad_dir_t lv_obj_get_style_bg_grad_dir(const struct _lv_obj_t * obj, uint32_t par
 170:lvgl/src/core/lv_obj_style_gen.h **** {
 171:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_DIR);
 172:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_grad_dir_t)v.num;
 173:lvgl/src/core/lv_obj_style_gen.h **** }
 174:lvgl/src/core/lv_obj_style_gen.h **** 
 175:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_main_stop(const struct _lv_obj_t * obj, uint32_t part)
 176:lvgl/src/core/lv_obj_style_gen.h **** {
 177:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_MAIN_STOP);
 178:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 179:lvgl/src/core/lv_obj_style_gen.h **** }
 180:lvgl/src/core/lv_obj_style_gen.h **** 
 181:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_bg_grad_stop(const struct _lv_obj_t * obj, uint32_t part)
 182:lvgl/src/core/lv_obj_style_gen.h **** {
 183:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD_STOP);
 184:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 185:lvgl/src/core/lv_obj_style_gen.h **** }
 186:lvgl/src/core/lv_obj_style_gen.h **** 
 187:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_grad_dsc_t * lv_obj_get_style_bg_grad(const struct _lv_obj_t * obj, uint32_t
 188:lvgl/src/core/lv_obj_style_gen.h **** {
 189:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_GRAD);
 190:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_grad_dsc_t *)v.ptr;
 191:lvgl/src/core/lv_obj_style_gen.h **** }
 192:lvgl/src/core/lv_obj_style_gen.h **** 
 193:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_dither_mode_t lv_obj_get_style_bg_dither_mode(const struct _lv_obj_t * obj, uint32
 194:lvgl/src/core/lv_obj_style_gen.h **** {
 195:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_DITHER_MODE);
 196:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_dither_mode_t)v.num;
 197:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 92


 198:lvgl/src/core/lv_obj_style_gen.h **** 
 199:lvgl/src/core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_bg_img_src(const struct _lv_obj_t * obj, uint32_t part)
 200:lvgl/src/core/lv_obj_style_gen.h **** {
 201:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_SRC);
 202:lvgl/src/core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 203:lvgl/src/core/lv_obj_style_gen.h **** }
 204:lvgl/src/core/lv_obj_style_gen.h **** 
 205:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 206:lvgl/src/core/lv_obj_style_gen.h **** {
 207:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_OPA);
 208:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 209:lvgl/src/core/lv_obj_style_gen.h **** }
 210:lvgl/src/core/lv_obj_style_gen.h **** 
 211:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor(const struct _lv_obj_t * obj, uint32_t par
 212:lvgl/src/core/lv_obj_style_gen.h **** {
 213:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR);
 214:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 215:lvgl/src/core/lv_obj_style_gen.h **** }
 216:lvgl/src/core/lv_obj_style_gen.h **** 
 217:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_img_recolor_filtered(const struct _lv_obj_t * obj, uin
 218:lvgl/src/core/lv_obj_style_gen.h **** {
 219:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 220:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 221:lvgl/src/core/lv_obj_style_gen.h **** }
 222:lvgl/src/core/lv_obj_style_gen.h **** 
 223:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_bg_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t p
 224:lvgl/src/core/lv_obj_style_gen.h **** {
 225:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_RECOLOR_OPA);
 226:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 227:lvgl/src/core/lv_obj_style_gen.h **** }
 228:lvgl/src/core/lv_obj_style_gen.h **** 
 229:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_bg_img_tiled(const struct _lv_obj_t * obj, uint32_t part)
 230:lvgl/src/core/lv_obj_style_gen.h **** {
 231:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_IMG_TILED);
 232:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 233:lvgl/src/core/lv_obj_style_gen.h **** }
 234:lvgl/src/core/lv_obj_style_gen.h **** 
 235:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color(const struct _lv_obj_t * obj, uint32_t part)
 236:lvgl/src/core/lv_obj_style_gen.h **** {
 237:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_COLOR);
 238:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 239:lvgl/src/core/lv_obj_style_gen.h **** }
 240:lvgl/src/core/lv_obj_style_gen.h **** 
 241:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_border_color_filtered(const struct _lv_obj_t * obj, uint3
 242:lvgl/src/core/lv_obj_style_gen.h **** {
 243:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 244:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 245:lvgl/src/core/lv_obj_style_gen.h **** }
 246:lvgl/src/core/lv_obj_style_gen.h **** 
 247:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_border_opa(const struct _lv_obj_t * obj, uint32_t part)
 248:lvgl/src/core/lv_obj_style_gen.h **** {
 249:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_OPA);
 250:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 251:lvgl/src/core/lv_obj_style_gen.h **** }
 252:lvgl/src/core/lv_obj_style_gen.h **** 
 253:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_border_width(const struct _lv_obj_t * obj, uint32_t part)
 254:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 93


 255:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_WIDTH);
 256:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 257:lvgl/src/core/lv_obj_style_gen.h **** }
 258:lvgl/src/core/lv_obj_style_gen.h **** 
 259:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_border_side_t lv_obj_get_style_border_side(const struct _lv_obj_t * obj, uint32_t 
 260:lvgl/src/core/lv_obj_style_gen.h **** {
 261:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_SIDE);
 262:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_border_side_t)v.num;
 263:lvgl/src/core/lv_obj_style_gen.h **** }
 264:lvgl/src/core/lv_obj_style_gen.h **** 
 265:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_border_post(const struct _lv_obj_t * obj, uint32_t part)
 266:lvgl/src/core/lv_obj_style_gen.h **** {
 267:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BORDER_POST);
 268:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 269:lvgl/src/core/lv_obj_style_gen.h **** }
 270:lvgl/src/core/lv_obj_style_gen.h **** 
 271:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_width(const struct _lv_obj_t * obj, uint32_t part
 272:lvgl/src/core/lv_obj_style_gen.h **** {
 273:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_WIDTH);
 274:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 275:lvgl/src/core/lv_obj_style_gen.h **** }
 276:lvgl/src/core/lv_obj_style_gen.h **** 
 277:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color(const struct _lv_obj_t * obj, uint32_t part
 278:lvgl/src/core/lv_obj_style_gen.h **** {
 279:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_COLOR);
 280:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 281:lvgl/src/core/lv_obj_style_gen.h **** }
 282:lvgl/src/core/lv_obj_style_gen.h **** 
 283:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_outline_color_filtered(const struct _lv_obj_t * obj, uint
 284:lvgl/src/core/lv_obj_style_gen.h **** {
 285:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 286:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 287:lvgl/src/core/lv_obj_style_gen.h **** }
 288:lvgl/src/core/lv_obj_style_gen.h **** 
 289:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_outline_opa(const struct _lv_obj_t * obj, uint32_t part)
 290:lvgl/src/core/lv_obj_style_gen.h **** {
 291:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_OPA);
 292:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 293:lvgl/src/core/lv_obj_style_gen.h **** }
 294:lvgl/src/core/lv_obj_style_gen.h **** 
 295:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_outline_pad(const struct _lv_obj_t * obj, uint32_t part)
 296:lvgl/src/core/lv_obj_style_gen.h **** {
 297:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OUTLINE_PAD);
 298:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 299:lvgl/src/core/lv_obj_style_gen.h **** }
 300:lvgl/src/core/lv_obj_style_gen.h **** 
 301:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_width(const struct _lv_obj_t * obj, uint32_t part)
 302:lvgl/src/core/lv_obj_style_gen.h **** {
 303:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_WIDTH);
 304:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 305:lvgl/src/core/lv_obj_style_gen.h **** }
 306:lvgl/src/core/lv_obj_style_gen.h **** 
 307:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_x(const struct _lv_obj_t * obj, uint32_t part)
 308:lvgl/src/core/lv_obj_style_gen.h **** {
 309:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_X);
 310:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 311:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 94


 312:lvgl/src/core/lv_obj_style_gen.h **** 
 313:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_ofs_y(const struct _lv_obj_t * obj, uint32_t part)
 314:lvgl/src/core/lv_obj_style_gen.h **** {
 315:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OFS_Y);
 316:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 317:lvgl/src/core/lv_obj_style_gen.h **** }
 318:lvgl/src/core/lv_obj_style_gen.h **** 
 319:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_shadow_spread(const struct _lv_obj_t * obj, uint32_t part
 320:lvgl/src/core/lv_obj_style_gen.h **** {
 321:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_SPREAD);
 322:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 323:lvgl/src/core/lv_obj_style_gen.h **** }
 324:lvgl/src/core/lv_obj_style_gen.h **** 
 325:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color(const struct _lv_obj_t * obj, uint32_t part)
 326:lvgl/src/core/lv_obj_style_gen.h **** {
 327:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_COLOR);
 328:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 329:lvgl/src/core/lv_obj_style_gen.h **** }
 330:lvgl/src/core/lv_obj_style_gen.h **** 
 331:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_shadow_color_filtered(const struct _lv_obj_t * obj, uint3
 332:lvgl/src/core/lv_obj_style_gen.h **** {
 333:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 334:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 335:lvgl/src/core/lv_obj_style_gen.h **** }
 336:lvgl/src/core/lv_obj_style_gen.h **** 
 337:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_shadow_opa(const struct _lv_obj_t * obj, uint32_t part)
 338:lvgl/src/core/lv_obj_style_gen.h **** {
 339:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_SHADOW_OPA);
 340:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 341:lvgl/src/core/lv_obj_style_gen.h **** }
 342:lvgl/src/core/lv_obj_style_gen.h **** 
 343:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_opa(const struct _lv_obj_t * obj, uint32_t part)
 344:lvgl/src/core/lv_obj_style_gen.h **** {
 345:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_OPA);
 346:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 347:lvgl/src/core/lv_obj_style_gen.h **** }
 348:lvgl/src/core/lv_obj_style_gen.h **** 
 349:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor(const struct _lv_obj_t * obj, uint32_t part)
 350:lvgl/src/core/lv_obj_style_gen.h **** {
 351:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR);
 352:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 353:lvgl/src/core/lv_obj_style_gen.h **** }
 354:lvgl/src/core/lv_obj_style_gen.h **** 
 355:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_img_recolor_filtered(const struct _lv_obj_t * obj, uint32
 356:lvgl/src/core/lv_obj_style_gen.h **** {
 357:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 358:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 359:lvgl/src/core/lv_obj_style_gen.h **** }
 360:lvgl/src/core/lv_obj_style_gen.h **** 
 361:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_img_recolor_opa(const struct _lv_obj_t * obj, uint32_t part
 362:lvgl/src/core/lv_obj_style_gen.h **** {
 363:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_IMG_RECOLOR_OPA);
 364:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 365:lvgl/src/core/lv_obj_style_gen.h **** }
 366:lvgl/src/core/lv_obj_style_gen.h **** 
 367:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_width(const struct _lv_obj_t * obj, uint32_t part)
 368:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 95


 369:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_WIDTH);
 370:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 371:lvgl/src/core/lv_obj_style_gen.h **** }
 372:lvgl/src/core/lv_obj_style_gen.h **** 
 373:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_width(const struct _lv_obj_t * obj, uint32_t pa
 374:lvgl/src/core/lv_obj_style_gen.h **** {
 375:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_WIDTH);
 376:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 377:lvgl/src/core/lv_obj_style_gen.h **** }
 378:lvgl/src/core/lv_obj_style_gen.h **** 
 379:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_line_dash_gap(const struct _lv_obj_t * obj, uint32_t part
 380:lvgl/src/core/lv_obj_style_gen.h **** {
 381:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_DASH_GAP);
 382:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 383:lvgl/src/core/lv_obj_style_gen.h **** }
 384:lvgl/src/core/lv_obj_style_gen.h **** 
 385:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_line_rounded(const struct _lv_obj_t * obj, uint32_t part)
 386:lvgl/src/core/lv_obj_style_gen.h **** {
 387:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_ROUNDED);
 388:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 389:lvgl/src/core/lv_obj_style_gen.h **** }
 390:lvgl/src/core/lv_obj_style_gen.h **** 
 391:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color(const struct _lv_obj_t * obj, uint32_t part)
 392:lvgl/src/core/lv_obj_style_gen.h **** {
 393:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_COLOR);
 394:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 395:lvgl/src/core/lv_obj_style_gen.h **** }
 396:lvgl/src/core/lv_obj_style_gen.h **** 
 397:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_line_color_filtered(const struct _lv_obj_t * obj, uint32_
 398:lvgl/src/core/lv_obj_style_gen.h **** {
 399:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 400:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 401:lvgl/src/core/lv_obj_style_gen.h **** }
 402:lvgl/src/core/lv_obj_style_gen.h **** 
 403:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_line_opa(const struct _lv_obj_t * obj, uint32_t part)
 404:lvgl/src/core/lv_obj_style_gen.h **** {
 405:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_LINE_OPA);
 406:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 407:lvgl/src/core/lv_obj_style_gen.h **** }
 408:lvgl/src/core/lv_obj_style_gen.h **** 
 409:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_arc_width(const struct _lv_obj_t * obj, uint32_t part)
 410:lvgl/src/core/lv_obj_style_gen.h **** {
 411:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_WIDTH);
 412:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 413:lvgl/src/core/lv_obj_style_gen.h **** }
 414:lvgl/src/core/lv_obj_style_gen.h **** 
 415:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_arc_rounded(const struct _lv_obj_t * obj, uint32_t part)
 416:lvgl/src/core/lv_obj_style_gen.h **** {
 417:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_ROUNDED);
 418:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 419:lvgl/src/core/lv_obj_style_gen.h **** }
 420:lvgl/src/core/lv_obj_style_gen.h **** 
 421:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color(const struct _lv_obj_t * obj, uint32_t part)
 422:lvgl/src/core/lv_obj_style_gen.h **** {
 423:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_COLOR);
 424:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 425:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 96


 426:lvgl/src/core/lv_obj_style_gen.h **** 
 427:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_arc_color_filtered(const struct _lv_obj_t * obj, uint32_t
 428:lvgl/src/core/lv_obj_style_gen.h **** {
 429:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 430:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 431:lvgl/src/core/lv_obj_style_gen.h **** }
 432:lvgl/src/core/lv_obj_style_gen.h **** 
 433:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_arc_opa(const struct _lv_obj_t * obj, uint32_t part)
 434:lvgl/src/core/lv_obj_style_gen.h **** {
 435:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_OPA);
 436:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 437:lvgl/src/core/lv_obj_style_gen.h **** }
 438:lvgl/src/core/lv_obj_style_gen.h **** 
 439:lvgl/src/core/lv_obj_style_gen.h **** static inline const void * lv_obj_get_style_arc_img_src(const struct _lv_obj_t * obj, uint32_t part
 440:lvgl/src/core/lv_obj_style_gen.h **** {
 441:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ARC_IMG_SRC);
 442:lvgl/src/core/lv_obj_style_gen.h ****     return (const void *)v.ptr;
 443:lvgl/src/core/lv_obj_style_gen.h **** }
 444:lvgl/src/core/lv_obj_style_gen.h **** 
 445:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color(const struct _lv_obj_t * obj, uint32_t part)
 446:lvgl/src/core/lv_obj_style_gen.h **** {
 447:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_COLOR);
 448:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 449:lvgl/src/core/lv_obj_style_gen.h **** }
 450:lvgl/src/core/lv_obj_style_gen.h **** 
 451:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_text_color_filtered(const struct _lv_obj_t * obj, uint32_
 452:lvgl/src/core/lv_obj_style_gen.h **** {
 453:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = _lv_obj_style_apply_color_filter(obj, part, lv_obj_get_style_prop(obj, par
 454:lvgl/src/core/lv_obj_style_gen.h ****     return v.color;
 455:lvgl/src/core/lv_obj_style_gen.h **** }
 456:lvgl/src/core/lv_obj_style_gen.h **** 
 457:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_text_opa(const struct _lv_obj_t * obj, uint32_t part)
 458:lvgl/src/core/lv_obj_style_gen.h **** {
 459:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_OPA);
 460:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 461:lvgl/src/core/lv_obj_style_gen.h **** }
 462:lvgl/src/core/lv_obj_style_gen.h **** 
 463:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_font_t * lv_obj_get_style_text_font(const struct _lv_obj_t * obj, uint32_t p
 464:lvgl/src/core/lv_obj_style_gen.h **** {
 465:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_FONT);
 466:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_font_t *)v.ptr;
 467:lvgl/src/core/lv_obj_style_gen.h **** }
 468:lvgl/src/core/lv_obj_style_gen.h **** 
 469:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_letter_space(const struct _lv_obj_t * obj, uint32_t 
 470:lvgl/src/core/lv_obj_style_gen.h **** {
 471:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LETTER_SPACE);
 472:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 473:lvgl/src/core/lv_obj_style_gen.h **** }
 474:lvgl/src/core/lv_obj_style_gen.h **** 
 475:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_text_line_space(const struct _lv_obj_t * obj, uint32_t pa
 476:lvgl/src/core/lv_obj_style_gen.h **** {
 477:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_LINE_SPACE);
 478:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 479:lvgl/src/core/lv_obj_style_gen.h **** }
 480:lvgl/src/core/lv_obj_style_gen.h **** 
 481:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_text_decor_t lv_obj_get_style_text_decor(const struct _lv_obj_t * obj, uint32_t pa
 482:lvgl/src/core/lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 97


 483:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_DECOR);
 484:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_text_decor_t)v.num;
 485:lvgl/src/core/lv_obj_style_gen.h **** }
 486:lvgl/src/core/lv_obj_style_gen.h **** 
 487:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_text_align_t lv_obj_get_style_text_align(const struct _lv_obj_t * obj, uint32_t pa
 488:lvgl/src/core/lv_obj_style_gen.h **** {
 489:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TEXT_ALIGN);
 490:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_text_align_t)v.num;
 491:lvgl/src/core/lv_obj_style_gen.h **** }
 492:lvgl/src/core/lv_obj_style_gen.h **** 
 493:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_radius(const struct _lv_obj_t * obj, uint32_t part)
 494:lvgl/src/core/lv_obj_style_gen.h **** {
 495:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_RADIUS);
 496:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 497:lvgl/src/core/lv_obj_style_gen.h **** }
 498:lvgl/src/core/lv_obj_style_gen.h **** 
 499:lvgl/src/core/lv_obj_style_gen.h **** static inline bool lv_obj_get_style_clip_corner(const struct _lv_obj_t * obj, uint32_t part)
 500:lvgl/src/core/lv_obj_style_gen.h **** {
 501:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_CLIP_CORNER);
 502:lvgl/src/core/lv_obj_style_gen.h ****     return (bool)v.num;
 503:lvgl/src/core/lv_obj_style_gen.h **** }
 504:lvgl/src/core/lv_obj_style_gen.h **** 
 505:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa(const struct _lv_obj_t * obj, uint32_t part)
 506:lvgl/src/core/lv_obj_style_gen.h **** {
 507:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA);
 508:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 509:lvgl/src/core/lv_obj_style_gen.h **** }
 510:lvgl/src/core/lv_obj_style_gen.h **** 
 511:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_opa_layered(const struct _lv_obj_t * obj, uint32_t part)
 2827              		.loc 3 511 24 view .LVU912
 2828              	.LBB107:
 512:lvgl/src/core/lv_obj_style_gen.h **** {
 513:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_OPA_LAYERED);
 2829              		.loc 3 513 5 view .LVU913
 2830              		.loc 3 513 26 is_stmt 0 view .LVU914
 2831 002e 6122     		movs	r2, #97
 2832 0030 0021     		movs	r1, #0
 2833 0032 2046     		mov	r0, r4
 2834              	.LVL254:
 2835              		.loc 3 513 26 view .LVU915
 2836 0034 FFF7FEFF 		bl	lv_obj_get_style_prop
 2837              	.LVL255:
 514:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 2838              		.loc 3 514 5 is_stmt 1 view .LVU916
 2839              		.loc 3 514 12 is_stmt 0 view .LVU917
 2840 0038 5FFA80F8 		uxtb	r8, r0
 2841              	.LVL256:
 2842              		.loc 3 514 12 view .LVU918
 2843              	.LBE107:
 2844              	.LBE106:
 974:lvgl/src/core/lv_refr.c **** 
 2845              		.loc 1 974 9 is_stmt 1 view .LVU919
 974:lvgl/src/core/lv_refr.c **** 
 2846              		.loc 1 974 11 is_stmt 0 view .LVU920
 2847 003c B8F1010F 		cmp	r8, #1
 2848 0040 E8D9     		bls	.L184
 976:lvgl/src/core/lv_refr.c ****         lv_res_t res = layer_get_area(draw_ctx, obj, layer_type, &layer_area_full);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 98


 2849              		.loc 1 976 9 is_stmt 1 view .LVU921
 977:lvgl/src/core/lv_refr.c ****         if(res != LV_RES_OK) return;
 2850              		.loc 1 977 9 view .LVU922
 977:lvgl/src/core/lv_refr.c ****         if(res != LV_RES_OK) return;
 2851              		.loc 1 977 24 is_stmt 0 view .LVU923
 2852 0042 02AB     		add	r3, sp, #8
 2853 0044 3246     		mov	r2, r6
 2854 0046 2146     		mov	r1, r4
 2855 0048 2846     		mov	r0, r5
 2856 004a FFF7FEFF 		bl	layer_get_area
 2857              	.LVL257:
 2858 004e 0746     		mov	r7, r0
 2859              	.LVL258:
 978:lvgl/src/core/lv_refr.c **** 
 2860              		.loc 1 978 9 is_stmt 1 view .LVU924
 978:lvgl/src/core/lv_refr.c **** 
 2861              		.loc 1 978 11 is_stmt 0 view .LVU925
 2862 0050 0128     		cmp	r0, #1
 2863 0052 DFD1     		bne	.L184
 980:lvgl/src/core/lv_refr.c **** 
 2864              		.loc 1 980 9 is_stmt 1 view .LVU926
 2865              	.LVL259:
 982:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 2866              		.loc 1 982 9 view .LVU927
 982:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 2867              		.loc 1 982 12 is_stmt 0 view .LVU928
 2868 0054 0022     		movs	r2, #0
 2869 0056 04F11401 		add	r1, r4, #20
 2870 005a 02A8     		add	r0, sp, #8
 2871              	.LVL260:
 982:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 2872              		.loc 1 982 12 view .LVU929
 2873 005c FFF7FEFF 		bl	_lv_area_is_in
 2874              	.LVL261:
 982:lvgl/src/core/lv_refr.c ****             lv_cover_check_info_t info;
 2875              		.loc 1 982 11 view .LVU930
 2876 0060 0028     		cmp	r0, #0
 2877 0062 6ED1     		bne	.L206
 2878              	.LVL262:
 2879              	.L188:
 990:lvgl/src/core/lv_refr.c **** 
 2880              		.loc 1 990 9 is_stmt 1 view .LVU931
 990:lvgl/src/core/lv_refr.c **** 
 2881              		.loc 1 990 11 is_stmt 0 view .LVU932
 2882 0064 012E     		cmp	r6, #1
 2883 0066 7CD0     		beq	.L207
 2884              	.L190:
 992:lvgl/src/core/lv_refr.c ****         if(layer_ctx == NULL) {
 2885              		.loc 1 992 9 is_stmt 1 view .LVU933
 992:lvgl/src/core/lv_refr.c ****         if(layer_ctx == NULL) {
 2886              		.loc 1 992 43 is_stmt 0 view .LVU934
 2887 0068 3A46     		mov	r2, r7
 2888 006a 02A9     		add	r1, sp, #8
 2889 006c 2846     		mov	r0, r5
 2890 006e FFF7FEFF 		bl	lv_draw_layer_create
 2891              	.LVL263:
 993:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Couldn't create a new layer context");
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 99


 2892              		.loc 1 993 9 is_stmt 1 view .LVU935
 993:lvgl/src/core/lv_refr.c ****             LV_LOG_WARN("Couldn't create a new layer context");
 2893              		.loc 1 993 11 is_stmt 0 view .LVU936
 2894 0072 0646     		mov	r6, r0
 2895 0074 0028     		cmp	r0, #0
 2896 0076 CDD0     		beq	.L184
 997:lvgl/src/core/lv_refr.c ****             .x = lv_obj_get_style_transform_pivot_x(obj, 0),
 2897              		.loc 1 997 9 is_stmt 1 view .LVU937
 2898              	.LVL264:
 2899              	.LBB108:
 2900              	.LBI108:
  91:lvgl/src/core/lv_obj_style_gen.h **** {
 2901              		.loc 3 91 26 view .LVU938
 2902              	.LBB109:
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2903              		.loc 3 93 5 view .LVU939
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2904              		.loc 3 93 26 is_stmt 0 view .LVU940
 2905 0078 6F22     		movs	r2, #111
 2906 007a 0021     		movs	r1, #0
 2907 007c 2046     		mov	r0, r4
 2908              	.LVL265:
  93:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2909              		.loc 3 93 26 view .LVU941
 2910 007e FFF7FEFF 		bl	lv_obj_get_style_prop
 2911              	.LVL266:
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 2912              		.loc 3 94 5 is_stmt 1 view .LVU942
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 2913              		.loc 3 94 12 is_stmt 0 view .LVU943
 2914 0082 0FFA80F9 		sxth	r9, r0
 2915              	.LVL267:
  94:lvgl/src/core/lv_obj_style_gen.h **** }
 2916              		.loc 3 94 12 view .LVU944
 2917              	.LBE109:
 2918              	.LBE108:
 997:lvgl/src/core/lv_refr.c ****             .x = lv_obj_get_style_transform_pivot_x(obj, 0),
 2919              		.loc 1 997 20 view .LVU945
 2920 0086 ADF80490 		strh	r9, [sp, #4]	@ movhi
 2921              	.LVL268:
 2922              	.LBB110:
 2923              	.LBI110:
  97:lvgl/src/core/lv_obj_style_gen.h **** {
 2924              		.loc 3 97 26 is_stmt 1 view .LVU946
 2925              	.LBB111:
  99:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2926              		.loc 3 99 5 view .LVU947
  99:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2927              		.loc 3 99 26 is_stmt 0 view .LVU948
 2928 008a 7022     		movs	r2, #112
 2929 008c 0021     		movs	r1, #0
 2930 008e 2046     		mov	r0, r4
 2931 0090 FFF7FEFF 		bl	lv_obj_get_style_prop
 2932              	.LVL269:
 100:lvgl/src/core/lv_obj_style_gen.h **** }
 2933              		.loc 3 100 5 is_stmt 1 view .LVU949
 100:lvgl/src/core/lv_obj_style_gen.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 100


 2934              		.loc 3 100 12 is_stmt 0 view .LVU950
 2935 0094 00B2     		sxth	r0, r0
 2936              	.LVL270:
 100:lvgl/src/core/lv_obj_style_gen.h **** }
 2937              		.loc 3 100 12 view .LVU951
 2938              	.LBE111:
 2939              	.LBE110:
 997:lvgl/src/core/lv_refr.c ****             .x = lv_obj_get_style_transform_pivot_x(obj, 0),
 2940              		.loc 1 997 20 view .LVU952
 2941 0096 ADF80600 		strh	r0, [sp, #6]	@ movhi
1002:lvgl/src/core/lv_refr.c ****             pivot.x = (LV_COORD_GET_PCT(pivot.x) * lv_area_get_width(&obj->coords)) / 100;
 2942              		.loc 1 1002 9 is_stmt 1 view .LVU953
1002:lvgl/src/core/lv_refr.c ****             pivot.x = (LV_COORD_GET_PCT(pivot.x) * lv_area_get_width(&obj->coords)) / 100;
 2943              		.loc 1 1002 11 is_stmt 0 view .LVU954
 2944 009a 09F4C043 		and	r3, r9, #24576
 2945 009e B3F5005F 		cmp	r3, #8192
 2946 00a2 62D0     		beq	.L208
 2947              	.L191:
1005:lvgl/src/core/lv_refr.c ****             pivot.y = (LV_COORD_GET_PCT(pivot.y) * lv_area_get_height(&obj->coords)) / 100;
 2948              		.loc 1 1005 9 is_stmt 1 view .LVU955
1005:lvgl/src/core/lv_refr.c ****             pivot.y = (LV_COORD_GET_PCT(pivot.y) * lv_area_get_height(&obj->coords)) / 100;
 2949              		.loc 1 1005 11 is_stmt 0 view .LVU956
 2950 00a4 00F4C043 		and	r3, r0, #24576
 2951 00a8 B3F5005F 		cmp	r3, #8192
 2952 00ac 79D0     		beq	.L209
 2953              	.L194:
1009:lvgl/src/core/lv_refr.c ****         lv_draw_img_dsc_init(&draw_dsc);
 2954              		.loc 1 1009 9 is_stmt 1 view .LVU957
1010:lvgl/src/core/lv_refr.c ****         draw_dsc.opa = opa;
 2955              		.loc 1 1010 9 view .LVU958
 2956 00ae 04A8     		add	r0, sp, #16
 2957 00b0 FFF7FEFF 		bl	lv_draw_img_dsc_init
 2958              	.LVL271:
1011:lvgl/src/core/lv_refr.c ****         draw_dsc.angle = lv_obj_get_style_transform_angle(obj, 0);
 2959              		.loc 1 1011 9 view .LVU959
1011:lvgl/src/core/lv_refr.c ****         draw_dsc.angle = lv_obj_get_style_transform_angle(obj, 0);
 2960              		.loc 1 1011 22 is_stmt 0 view .LVU960
 2961 00b4 8DF81D80 		strb	r8, [sp, #29]
1012:lvgl/src/core/lv_refr.c ****         if(draw_dsc.angle > 3600) draw_dsc.angle -= 3600;
 2962              		.loc 1 1012 9 is_stmt 1 view .LVU961
 2963              	.LVL272:
 2964              	.LBB112:
 2965              	.LBI112:
  85:lvgl/src/core/lv_obj_style_gen.h **** {
 2966              		.loc 3 85 26 view .LVU962
 2967              	.LBB113:
  87:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2968              		.loc 3 87 5 view .LVU963
  87:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2969              		.loc 3 87 26 is_stmt 0 view .LVU964
 2970 00b8 6E22     		movs	r2, #110
 2971 00ba 0021     		movs	r1, #0
 2972 00bc 2046     		mov	r0, r4
 2973 00be FFF7FEFF 		bl	lv_obj_get_style_prop
 2974              	.LVL273:
  88:lvgl/src/core/lv_obj_style_gen.h **** }
 2975              		.loc 3 88 5 is_stmt 1 view .LVU965
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 101


  88:lvgl/src/core/lv_obj_style_gen.h **** }
 2976              		.loc 3 88 12 is_stmt 0 view .LVU966
 2977 00c2 00B2     		sxth	r0, r0
 2978              	.LVL274:
  88:lvgl/src/core/lv_obj_style_gen.h **** }
 2979              		.loc 3 88 12 view .LVU967
 2980              	.LBE113:
 2981              	.LBE112:
1012:lvgl/src/core/lv_refr.c ****         if(draw_dsc.angle > 3600) draw_dsc.angle -= 3600;
 2982              		.loc 1 1012 24 view .LVU968
 2983 00c4 ADF81000 		strh	r0, [sp, #16]	@ movhi
1013:lvgl/src/core/lv_refr.c ****         else if(draw_dsc.angle < 0) draw_dsc.angle += 3600;
 2984              		.loc 1 1013 9 is_stmt 1 view .LVU969
1013:lvgl/src/core/lv_refr.c ****         else if(draw_dsc.angle < 0) draw_dsc.angle += 3600;
 2985              		.loc 1 1013 11 is_stmt 0 view .LVU970
 2986 00c8 B0F5616F 		cmp	r0, #3600
 2987 00cc 40F38480 		ble	.L197
1013:lvgl/src/core/lv_refr.c ****         else if(draw_dsc.angle < 0) draw_dsc.angle += 3600;
 2988              		.loc 1 1013 35 is_stmt 1 discriminator 1 view .LVU971
1013:lvgl/src/core/lv_refr.c ****         else if(draw_dsc.angle < 0) draw_dsc.angle += 3600;
 2989              		.loc 1 1013 50 is_stmt 0 discriminator 1 view .LVU972
 2990 00d0 A0F56160 		sub	r0, r0, #3600
 2991 00d4 ADF81000 		strh	r0, [sp, #16]	@ movhi
 2992              	.L198:
1016:lvgl/src/core/lv_refr.c ****         draw_dsc.blend_mode = lv_obj_get_style_blend_mode(obj, 0);
 2993              		.loc 1 1016 9 is_stmt 1 view .LVU973
 2994              	.LVL275:
 2995              	.LBB114:
 2996              	.LBI114:
  79:lvgl/src/core/lv_obj_style_gen.h **** {
 2997              		.loc 3 79 26 view .LVU974
 2998              	.LBB115:
  81:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 2999              		.loc 3 81 5 view .LVU975
  81:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 3000              		.loc 3 81 26 is_stmt 0 view .LVU976
 3001 00d8 6D22     		movs	r2, #109
 3002 00da 0021     		movs	r1, #0
 3003 00dc 2046     		mov	r0, r4
 3004 00de FFF7FEFF 		bl	lv_obj_get_style_prop
 3005              	.LVL276:
  82:lvgl/src/core/lv_obj_style_gen.h **** }
 3006              		.loc 3 82 5 is_stmt 1 view .LVU977
  82:lvgl/src/core/lv_obj_style_gen.h **** }
 3007              		.loc 3 82 5 is_stmt 0 view .LVU978
 3008              	.LBE115:
 3009              	.LBE114:
1016:lvgl/src/core/lv_refr.c ****         draw_dsc.blend_mode = lv_obj_get_style_blend_mode(obj, 0);
 3010              		.loc 1 1016 23 view .LVU979
 3011 00e2 ADF81200 		strh	r0, [sp, #18]	@ movhi
1017:lvgl/src/core/lv_refr.c ****         draw_dsc.antialias = disp_refr->driver->antialiasing;
 3012              		.loc 1 1017 9 is_stmt 1 view .LVU980
 3013              	.LVL277:
 3014              	.LBB116:
 3015              	.LBI116:
 515:lvgl/src/core/lv_obj_style_gen.h **** }
 516:lvgl/src/core/lv_obj_style_gen.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 102


 517:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_color_filter_dsc_t * lv_obj_get_style_color_filter_dsc(const struct _lv_obj_
 518:lvgl/src/core/lv_obj_style_gen.h **** {
 519:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_DSC);
 520:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_color_filter_dsc_t *)v.ptr;
 521:lvgl/src/core/lv_obj_style_gen.h **** }
 522:lvgl/src/core/lv_obj_style_gen.h **** 
 523:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_opa_t lv_obj_get_style_color_filter_opa(const struct _lv_obj_t * obj, uint32_t par
 524:lvgl/src/core/lv_obj_style_gen.h **** {
 525:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_COLOR_FILTER_OPA);
 526:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_opa_t)v.num;
 527:lvgl/src/core/lv_obj_style_gen.h **** }
 528:lvgl/src/core/lv_obj_style_gen.h **** 
 529:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_anim_t * lv_obj_get_style_anim(const struct _lv_obj_t * obj, uint32_t part)
 530:lvgl/src/core/lv_obj_style_gen.h **** {
 531:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM);
 532:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_anim_t *)v.ptr;
 533:lvgl/src/core/lv_obj_style_gen.h **** }
 534:lvgl/src/core/lv_obj_style_gen.h **** 
 535:lvgl/src/core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_time(const struct _lv_obj_t * obj, uint32_t part)
 536:lvgl/src/core/lv_obj_style_gen.h **** {
 537:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_TIME);
 538:lvgl/src/core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 539:lvgl/src/core/lv_obj_style_gen.h **** }
 540:lvgl/src/core/lv_obj_style_gen.h **** 
 541:lvgl/src/core/lv_obj_style_gen.h **** static inline uint32_t lv_obj_get_style_anim_speed(const struct _lv_obj_t * obj, uint32_t part)
 542:lvgl/src/core/lv_obj_style_gen.h **** {
 543:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ANIM_SPEED);
 544:lvgl/src/core/lv_obj_style_gen.h ****     return (uint32_t)v.num;
 545:lvgl/src/core/lv_obj_style_gen.h **** }
 546:lvgl/src/core/lv_obj_style_gen.h **** 
 547:lvgl/src/core/lv_obj_style_gen.h **** static inline const lv_style_transition_dsc_t * lv_obj_get_style_transition(const struct _lv_obj_t 
 548:lvgl/src/core/lv_obj_style_gen.h **** {
 549:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSITION);
 550:lvgl/src/core/lv_obj_style_gen.h ****     return (const lv_style_transition_dsc_t *)v.ptr;
 551:lvgl/src/core/lv_obj_style_gen.h **** }
 552:lvgl/src/core/lv_obj_style_gen.h **** 
 553:lvgl/src/core/lv_obj_style_gen.h **** static inline lv_blend_mode_t lv_obj_get_style_blend_mode(const struct _lv_obj_t * obj, uint32_t pa
 3016              		.loc 3 553 31 view .LVU981
 3017              	.LBB117:
 554:lvgl/src/core/lv_obj_style_gen.h **** {
 555:lvgl/src/core/lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BLEND_MODE);
 3018              		.loc 3 555 5 view .LVU982
 3019              		.loc 3 555 26 is_stmt 0 view .LVU983
 3020 00e6 6822     		movs	r2, #104
 3021 00e8 0021     		movs	r1, #0
 3022 00ea 2046     		mov	r0, r4
 3023 00ec FFF7FEFF 		bl	lv_obj_get_style_prop
 3024              	.LVL278:
 556:lvgl/src/core/lv_obj_style_gen.h ****     return (lv_blend_mode_t)v.num;
 3025              		.loc 3 556 5 is_stmt 1 view .LVU984
 3026              		.loc 3 556 5 is_stmt 0 view .LVU985
 3027              	.LBE117:
 3028              	.LBE116:
1017:lvgl/src/core/lv_refr.c ****         draw_dsc.antialias = disp_refr->driver->antialiasing;
 3029              		.loc 1 1017 29 view .LVU986
 3030 00f0 9DF81E30 		ldrb	r3, [sp, #30]	@ zero_extendqisi2
 3031 00f4 60F30303 		bfi	r3, r0, #0, #4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 103


 3032 00f8 8DF81E30 		strb	r3, [sp, #30]
1018:lvgl/src/core/lv_refr.c **** 
 3033              		.loc 1 1018 9 is_stmt 1 view .LVU987
1018:lvgl/src/core/lv_refr.c **** 
 3034              		.loc 1 1018 39 is_stmt 0 view .LVU988
 3035 00fc 594B     		ldr	r3, .L210
 3036 00fe 1B68     		ldr	r3, [r3]
 3037 0100 1B68     		ldr	r3, [r3]
1018:lvgl/src/core/lv_refr.c **** 
 3038              		.loc 1 1018 47 view .LVU989
 3039 0102 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 3040 0104 C3F3C003 		ubfx	r3, r3, #3, #1
1018:lvgl/src/core/lv_refr.c **** 
 3041              		.loc 1 1018 28 view .LVU990
 3042 0108 9DF82420 		ldrb	r2, [sp, #36]	@ zero_extendqisi2
 3043 010c 63F30002 		bfi	r2, r3, #0, #1
 3044 0110 8DF82420 		strb	r2, [sp, #36]
1020:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act = layer_ctx->area_full;
 3045              		.loc 1 1020 9 is_stmt 1 view .LVU991
1020:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act = layer_ctx->area_full;
 3046              		.loc 1 1020 11 is_stmt 0 view .LVU992
 3047 0114 17F00208 		ands	r8, r7, #2
 3048              	.LVL279:
1020:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act = layer_ctx->area_full;
 3049              		.loc 1 1020 11 view .LVU993
 3050 0118 00F08E80 		beq	.L202
1021:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3051              		.loc 1 1021 13 is_stmt 1 view .LVU994
1021:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3052              		.loc 1 1021 33 is_stmt 0 view .LVU995
 3053 011c 06F10803 		add	r3, r6, #8
 3054 0120 96E80300 		ldm	r6, {r0, r1}
 3055 0124 83E80300 		stm	r3, {r0, r1}
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3056              		.loc 1 1022 13 is_stmt 1 view .LVU996
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3057              		.loc 1 1022 57 is_stmt 0 view .LVU997
 3058 0128 7389     		ldrh	r3, [r6, #10]
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3059              		.loc 1 1022 72 view .LVU998
 3060 012a 728A     		ldrh	r2, [r6, #18]
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3061              		.loc 1 1022 61 view .LVU999
 3062 012c 1344     		add	r3, r3, r2
 3063 012e 9BB2     		uxth	r3, r3
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3064              		.loc 1 1022 96 view .LVU1000
 3065 0130 013B     		subs	r3, r3, #1
 3066 0132 1BB2     		sxth	r3, r3
1022:lvgl/src/core/lv_refr.c ****             if(layer_ctx->area_act.y2 > layer_ctx->area_full.y2) layer_ctx->area_act.y2 = layer_ctx
 3067              		.loc 1 1022 36 view .LVU1001
 3068 0134 F381     		strh	r3, [r6, #14]	@ movhi
1023:lvgl/src/core/lv_refr.c ****         }
 3069              		.loc 1 1023 13 is_stmt 1 view .LVU1002
1023:lvgl/src/core/lv_refr.c ****         }
 3070              		.loc 1 1023 61 is_stmt 0 view .LVU1003
 3071 0136 B6F90620 		ldrsh	r2, [r6, #6]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 104


1023:lvgl/src/core/lv_refr.c ****         }
 3072              		.loc 1 1023 15 view .LVU1004
 3073 013a 9342     		cmp	r3, r2
 3074 013c 7CDD     		ble	.L202
1023:lvgl/src/core/lv_refr.c ****         }
 3075              		.loc 1 1023 66 is_stmt 1 discriminator 1 view .LVU1005
1023:lvgl/src/core/lv_refr.c ****         }
 3076              		.loc 1 1023 89 is_stmt 0 discriminator 1 view .LVU1006
 3077 013e F281     		strh	r2, [r6, #14]	@ movhi
 3078 0140 7AE0     		b	.L202
 3079              	.LVL280:
 3080              	.L206:
 3081              	.LBB118:
 983:lvgl/src/core/lv_refr.c ****             info.res = LV_COVER_RES_COVER;
 3082              		.loc 1 983 13 is_stmt 1 view .LVU1007
 984:lvgl/src/core/lv_refr.c ****             info.area = &layer_area_full;
 3083              		.loc 1 984 13 view .LVU1008
 984:lvgl/src/core/lv_refr.c ****             info.area = &layer_area_full;
 3084              		.loc 1 984 22 is_stmt 0 view .LVU1009
 3085 0142 0023     		movs	r3, #0
 3086 0144 8DF81030 		strb	r3, [sp, #16]
 985:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 3087              		.loc 1 985 13 is_stmt 1 view .LVU1010
 985:lvgl/src/core/lv_refr.c ****             lv_event_send(obj, LV_EVENT_COVER_CHECK, &info);
 3088              		.loc 1 985 23 is_stmt 0 view .LVU1011
 3089 0148 02AB     		add	r3, sp, #8
 3090 014a 0593     		str	r3, [sp, #20]
 986:lvgl/src/core/lv_refr.c ****             if(info.res == LV_COVER_RES_COVER) flags &= ~LV_DRAW_LAYER_FLAG_HAS_ALPHA;
 3091              		.loc 1 986 13 is_stmt 1 view .LVU1012
 3092 014c 04AA     		add	r2, sp, #16
 3093 014e 1221     		movs	r1, #18
 3094 0150 2046     		mov	r0, r4
 3095 0152 FFF7FEFF 		bl	lv_event_send
 3096              	.LVL281:
 987:lvgl/src/core/lv_refr.c ****         }
 3097              		.loc 1 987 13 view .LVU1013
 987:lvgl/src/core/lv_refr.c ****         }
 3098              		.loc 1 987 20 is_stmt 0 view .LVU1014
 3099 0156 9DF81030 		ldrb	r3, [sp, #16]	@ zero_extendqisi2
 987:lvgl/src/core/lv_refr.c ****         }
 3100              		.loc 1 987 15 view .LVU1015
 3101 015a 03B1     		cbz	r3, .L189
 3102              	.LBE118:
 980:lvgl/src/core/lv_refr.c **** 
 3103              		.loc 1 980 31 view .LVU1016
 3104 015c 3B46     		mov	r3, r7
 3105              	.L189:
 3106              	.LVL282:
 3107              	.LBB119:
 980:lvgl/src/core/lv_refr.c **** 
 3108              		.loc 1 980 31 view .LVU1017
 3109 015e 1F46     		mov	r7, r3
 3110 0160 80E7     		b	.L188
 3111              	.LVL283:
 3112              	.L207:
 980:lvgl/src/core/lv_refr.c **** 
 3113              		.loc 1 980 31 view .LVU1018
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 105


 3114              	.LBE119:
 990:lvgl/src/core/lv_refr.c **** 
 3115              		.loc 1 990 48 is_stmt 1 discriminator 1 view .LVU1019
 990:lvgl/src/core/lv_refr.c **** 
 3116              		.loc 1 990 54 is_stmt 0 discriminator 1 view .LVU1020
 3117 0162 47F00207 		orr	r7, r7, #2
 3118              	.LVL284:
 990:lvgl/src/core/lv_refr.c **** 
 3119              		.loc 1 990 54 discriminator 1 view .LVU1021
 3120 0166 FFB2     		uxtb	r7, r7
 3121              	.LVL285:
 990:lvgl/src/core/lv_refr.c **** 
 3122              		.loc 1 990 54 discriminator 1 view .LVU1022
 3123 0168 7EE7     		b	.L190
 3124              	.LVL286:
 3125              	.L208:
1002:lvgl/src/core/lv_refr.c ****             pivot.x = (LV_COORD_GET_PCT(pivot.x) * lv_area_get_width(&obj->coords)) / 100;
 3126              		.loc 1 1002 12 discriminator 1 view .LVU1023
 3127 016a 29F4C049 		bic	r9, r9, #24576
 3128 016e B9F5FA6F 		cmp	r9, #2000
 3129 0172 97DC     		bgt	.L191
1003:lvgl/src/core/lv_refr.c ****         }
 3130              		.loc 1 1003 13 is_stmt 1 view .LVU1024
1003:lvgl/src/core/lv_refr.c ****         }
 3131              		.loc 1 1003 24 is_stmt 0 view .LVU1025
 3132 0174 B9F57A7F 		cmp	r9, #1000
 3133 0178 01DD     		ble	.L193
1003:lvgl/src/core/lv_refr.c ****         }
 3134              		.loc 1 1003 24 discriminator 1 view .LVU1026
 3135 017a C9F57A79 		rsb	r9, r9, #1000
 3136              	.L193:
 3137              	.LVL287:
 3138              	.LBB120:
 3139              	.LBI120:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 3140              		.loc 2 123 26 is_stmt 1 discriminator 4 view .LVU1027
 3141              	.LBB121:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3142              		.loc 2 125 5 discriminator 4 view .LVU1028
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3143              		.loc 2 125 31 is_stmt 0 discriminator 4 view .LVU1029
 3144 017e 238B     		ldrh	r3, [r4, #24]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3145              		.loc 2 125 44 discriminator 4 view .LVU1030
 3146 0180 A28A     		ldrh	r2, [r4, #20]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3147              		.loc 2 125 36 discriminator 4 view .LVU1031
 3148 0182 9B1A     		subs	r3, r3, r2
 3149 0184 9BB2     		uxth	r3, r3
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3150              		.loc 2 125 49 discriminator 4 view .LVU1032
 3151 0186 0133     		adds	r3, r3, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3152              		.loc 2 125 12 discriminator 4 view .LVU1033
 3153 0188 1BB2     		sxth	r3, r3
 3154              	.LVL288:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 106


 3155              		.loc 2 125 12 discriminator 4 view .LVU1034
 3156              	.LBE121:
 3157              	.LBE120:
1003:lvgl/src/core/lv_refr.c ****         }
 3158              		.loc 1 1003 50 discriminator 4 view .LVU1035
 3159 018a 09FB03F9 		mul	r9, r9, r3
1003:lvgl/src/core/lv_refr.c ****         }
 3160              		.loc 1 1003 85 discriminator 4 view .LVU1036
 3161 018e 364B     		ldr	r3, .L210+4
 3162 0190 83FB0923 		smull	r2, r3, r3, r9
 3163 0194 4FEAE979 		asr	r9, r9, #31
 3164 0198 C9EB6313 		rsb	r3, r9, r3, asr #5
1003:lvgl/src/core/lv_refr.c ****         }
 3165              		.loc 1 1003 21 discriminator 4 view .LVU1037
 3166 019c ADF80430 		strh	r3, [sp, #4]	@ movhi
 3167 01a0 80E7     		b	.L191
 3168              	.L209:
1005:lvgl/src/core/lv_refr.c ****             pivot.y = (LV_COORD_GET_PCT(pivot.y) * lv_area_get_height(&obj->coords)) / 100;
 3169              		.loc 1 1005 12 discriminator 1 view .LVU1038
 3170 01a2 20F4C040 		bic	r0, r0, #24576
 3171 01a6 B0F5FA6F 		cmp	r0, #2000
 3172 01aa 80DC     		bgt	.L194
1006:lvgl/src/core/lv_refr.c ****         }
 3173              		.loc 1 1006 13 is_stmt 1 view .LVU1039
1006:lvgl/src/core/lv_refr.c ****         }
 3174              		.loc 1 1006 24 is_stmt 0 view .LVU1040
 3175 01ac B0F57A7F 		cmp	r0, #1000
 3176 01b0 01DD     		ble	.L196
1006:lvgl/src/core/lv_refr.c ****         }
 3177              		.loc 1 1006 24 discriminator 1 view .LVU1041
 3178 01b2 C0F57A70 		rsb	r0, r0, #1000
 3179              	.L196:
 3180              	.LVL289:
 3181              	.LBB122:
 3182              	.LBI122:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 3183              		.loc 2 133 26 is_stmt 1 discriminator 4 view .LVU1042
 3184              	.LBB123:
 3185              		.loc 2 135 5 discriminator 4 view .LVU1043
 3186              		.loc 2 135 31 is_stmt 0 discriminator 4 view .LVU1044
 3187 01b6 638B     		ldrh	r3, [r4, #26]
 3188              		.loc 2 135 44 discriminator 4 view .LVU1045
 3189 01b8 E28A     		ldrh	r2, [r4, #22]
 3190              		.loc 2 135 36 discriminator 4 view .LVU1046
 3191 01ba 9B1A     		subs	r3, r3, r2
 3192 01bc 9BB2     		uxth	r3, r3
 3193              		.loc 2 135 49 discriminator 4 view .LVU1047
 3194 01be 0133     		adds	r3, r3, #1
 3195              		.loc 2 135 12 discriminator 4 view .LVU1048
 3196 01c0 1BB2     		sxth	r3, r3
 3197              	.LVL290:
 3198              		.loc 2 135 12 discriminator 4 view .LVU1049
 3199              	.LBE123:
 3200              	.LBE122:
1006:lvgl/src/core/lv_refr.c ****         }
 3201              		.loc 1 1006 50 discriminator 4 view .LVU1050
 3202 01c2 03FB00F0 		mul	r0, r3, r0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 107


1006:lvgl/src/core/lv_refr.c ****         }
 3203              		.loc 1 1006 86 discriminator 4 view .LVU1051
 3204 01c6 284B     		ldr	r3, .L210+4
 3205 01c8 83FB0023 		smull	r2, r3, r3, r0
 3206 01cc C017     		asrs	r0, r0, #31
 3207 01ce C0EB6313 		rsb	r3, r0, r3, asr #5
1006:lvgl/src/core/lv_refr.c ****         }
 3208              		.loc 1 1006 21 discriminator 4 view .LVU1052
 3209 01d2 ADF80630 		strh	r3, [sp, #6]	@ movhi
 3210 01d6 6AE7     		b	.L194
 3211              	.L197:
1014:lvgl/src/core/lv_refr.c **** 
 3212              		.loc 1 1014 14 is_stmt 1 view .LVU1053
1014:lvgl/src/core/lv_refr.c **** 
 3213              		.loc 1 1014 16 is_stmt 0 view .LVU1054
 3214 01d8 0028     		cmp	r0, #0
 3215 01da BFF67DAF 		bge	.L198
1014:lvgl/src/core/lv_refr.c **** 
 3216              		.loc 1 1014 37 is_stmt 1 discriminator 1 view .LVU1055
1014:lvgl/src/core/lv_refr.c **** 
 3217              		.loc 1 1014 52 is_stmt 0 discriminator 1 view .LVU1056
 3218 01de 00F56160 		add	r0, r0, #3600
 3219 01e2 ADF81000 		strh	r0, [sp, #16]	@ movhi
 3220 01e6 77E7     		b	.L198
 3221              	.LVL291:
 3222              	.L200:
1031:lvgl/src/core/lv_refr.c **** 
 3223              		.loc 1 1031 13 is_stmt 1 view .LVU1057
 3224 01e8 2146     		mov	r1, r4
 3225 01ea 2846     		mov	r0, r5
 3226 01ec FFF7FEFF 		bl	lv_obj_redraw
 3227              	.LVL292:
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3228              		.loc 1 1033 13 view .LVU1058
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3229              		.loc 1 1033 43 is_stmt 0 view .LVU1059
 3230 01f0 A38A     		ldrh	r3, [r4, #20]
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3231              		.loc 1 1033 54 view .LVU1060
 3232 01f2 BDF80420 		ldrh	r2, [sp, #4]
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3233              		.loc 1 1033 47 view .LVU1061
 3234 01f6 1344     		add	r3, r3, r2
 3235 01f8 9BB2     		uxth	r3, r3
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3236              		.loc 1 1033 67 view .LVU1062
 3237 01fa 6A68     		ldr	r2, [r5, #4]
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3238              		.loc 1 1033 77 view .LVU1063
 3239 01fc 1188     		ldrh	r1, [r2]
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3240              		.loc 1 1033 57 view .LVU1064
 3241 01fe 5B1A     		subs	r3, r3, r1
1033:lvgl/src/core/lv_refr.c ****             draw_dsc.pivot.y = obj->coords.y1 + pivot.y - draw_ctx->buf_area->y1;
 3242              		.loc 1 1033 30 view .LVU1065
 3243 0200 ADF81430 		strh	r3, [sp, #20]	@ movhi
1034:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 108


 3244              		.loc 1 1034 13 is_stmt 1 view .LVU1066
1034:lvgl/src/core/lv_refr.c **** 
 3245              		.loc 1 1034 43 is_stmt 0 view .LVU1067
 3246 0204 E38A     		ldrh	r3, [r4, #22]
1034:lvgl/src/core/lv_refr.c **** 
 3247              		.loc 1 1034 54 view .LVU1068
 3248 0206 BDF80610 		ldrh	r1, [sp, #6]
1034:lvgl/src/core/lv_refr.c **** 
 3249              		.loc 1 1034 47 view .LVU1069
 3250 020a 0B44     		add	r3, r3, r1
 3251 020c 9BB2     		uxth	r3, r3
1034:lvgl/src/core/lv_refr.c **** 
 3252              		.loc 1 1034 77 view .LVU1070
 3253 020e 5288     		ldrh	r2, [r2, #2]
1034:lvgl/src/core/lv_refr.c **** 
 3254              		.loc 1 1034 57 view .LVU1071
 3255 0210 9B1A     		subs	r3, r3, r2
1034:lvgl/src/core/lv_refr.c **** 
 3256              		.loc 1 1034 30 view .LVU1072
 3257 0212 ADF81630 		strh	r3, [sp, #22]	@ movhi
1037:lvgl/src/core/lv_refr.c **** 
 3258              		.loc 1 1037 13 is_stmt 1 view .LVU1073
 3259 0216 04AA     		add	r2, sp, #16
 3260 0218 3146     		mov	r1, r6
 3261 021a 2846     		mov	r0, r5
 3262 021c FFF7FEFF 		bl	lv_draw_layer_blend
 3263              	.LVL293:
1039:lvgl/src/core/lv_refr.c **** 
 3264              		.loc 1 1039 13 view .LVU1074
1039:lvgl/src/core/lv_refr.c **** 
 3265              		.loc 1 1039 15 is_stmt 0 view .LVU1075
 3266 0220 B8F1000F 		cmp	r8, #0
 3267 0224 18D0     		beq	.L201
1041:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3268              		.loc 1 1041 13 is_stmt 1 view .LVU1076
1041:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3269              		.loc 1 1041 57 is_stmt 0 view .LVU1077
 3270 0226 F189     		ldrh	r1, [r6, #14]
1041:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3271              		.loc 1 1041 61 view .LVU1078
 3272 0228 0131     		adds	r1, r1, #1
1041:lvgl/src/core/lv_refr.c ****             layer_ctx->area_act.y2 = layer_ctx->area_act.y1 + layer_ctx->max_row_with_no_alpha - 1;
 3273              		.loc 1 1041 36 view .LVU1079
 3274 022a 7181     		strh	r1, [r6, #10]	@ movhi
1042:lvgl/src/core/lv_refr.c ****         }
 3275              		.loc 1 1042 13 is_stmt 1 view .LVU1080
1042:lvgl/src/core/lv_refr.c ****         }
 3276              		.loc 1 1042 72 is_stmt 0 view .LVU1081
 3277 022c 738A     		ldrh	r3, [r6, #18]
1042:lvgl/src/core/lv_refr.c ****         }
 3278              		.loc 1 1042 61 view .LVU1082
 3279 022e 13FA81F1 		uxtah	r1, r3, r1
 3280 0232 89B2     		uxth	r1, r1
1042:lvgl/src/core/lv_refr.c ****         }
 3281              		.loc 1 1042 96 view .LVU1083
 3282 0234 0139     		subs	r1, r1, #1
1042:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 109


 3283              		.loc 1 1042 36 view .LVU1084
 3284 0236 F181     		strh	r1, [r6, #14]	@ movhi
 3285              	.L202:
1026:lvgl/src/core/lv_refr.c ****             if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
 3286              		.loc 1 1026 14 is_stmt 1 view .LVU1085
1026:lvgl/src/core/lv_refr.c ****             if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
 3287              		.loc 1 1026 34 is_stmt 0 view .LVU1086
 3288 0238 B6F90A20 		ldrsh	r2, [r6, #10]
1026:lvgl/src/core/lv_refr.c ****             if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
 3289              		.loc 1 1026 56 view .LVU1087
 3290 023c BDF90E30 		ldrsh	r3, [sp, #14]
1026:lvgl/src/core/lv_refr.c ****             if(flags & LV_DRAW_LAYER_FLAG_CAN_SUBDIVIDE) {
 3291              		.loc 1 1026 14 view .LVU1088
 3292 0240 9A42     		cmp	r2, r3
 3293 0242 09DC     		bgt	.L201
1027:lvgl/src/core/lv_refr.c ****                 layer_alpha_test(obj, draw_ctx, layer_ctx, flags);
 3294              		.loc 1 1027 13 is_stmt 1 view .LVU1089
1027:lvgl/src/core/lv_refr.c ****                 layer_alpha_test(obj, draw_ctx, layer_ctx, flags);
 3295              		.loc 1 1027 15 is_stmt 0 view .LVU1090
 3296 0244 B8F1000F 		cmp	r8, #0
 3297 0248 CED0     		beq	.L200
1028:lvgl/src/core/lv_refr.c ****             }
 3298              		.loc 1 1028 17 is_stmt 1 view .LVU1091
 3299 024a 3B46     		mov	r3, r7
 3300 024c 3246     		mov	r2, r6
 3301 024e 2946     		mov	r1, r5
 3302 0250 2046     		mov	r0, r4
 3303 0252 FFF7FEFF 		bl	layer_alpha_test
 3304              	.LVL294:
 3305 0256 C7E7     		b	.L200
 3306              	.L201:
1045:lvgl/src/core/lv_refr.c ****     }
 3307              		.loc 1 1045 9 view .LVU1092
 3308 0258 3146     		mov	r1, r6
 3309 025a 2846     		mov	r0, r5
 3310 025c FFF7FEFF 		bl	lv_draw_layer_destroy
 3311              	.LVL295:
 3312 0260 D8E6     		b	.L184
 3313              	.L211:
 3314 0262 00BF     		.align	2
 3315              	.L210:
 3316 0264 00000000 		.word	.LANCHOR0
 3317 0268 1F85EB51 		.word	1374389535
 3318              	.LBE105:
 3319              		.cfi_endproc
 3320              	.LFE185:
 3322              		.section	.text.refr_obj_and_children,"ax",%progbits
 3323              		.align	1
 3324              		.syntax unified
 3325              		.thumb
 3326              		.thumb_func
 3328              	refr_obj_and_children:
 3329              	.LVL296:
 3330              	.LFB182:
 846:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 3331              		.loc 1 846 1 view -0
 3332              		.cfi_startproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 110


 3333              		@ args = 0, pretend = 0, frame = 0
 3334              		@ frame_needed = 0, uses_anonymous_args = 0
 846:lvgl/src/core/lv_refr.c ****     /*Normally always will be a top_obj (at least the screen)
 3335              		.loc 1 846 1 is_stmt 0 view .LVU1094
 3336 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 3337              		.cfi_def_cfa_offset 32
 3338              		.cfi_offset 3, -32
 3339              		.cfi_offset 4, -28
 3340              		.cfi_offset 5, -24
 3341              		.cfi_offset 6, -20
 3342              		.cfi_offset 7, -16
 3343              		.cfi_offset 8, -12
 3344              		.cfi_offset 9, -8
 3345              		.cfi_offset 14, -4
 3346 0004 8146     		mov	r9, r0
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3347              		.loc 1 850 5 is_stmt 1 view .LVU1095
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3348              		.loc 1 850 7 is_stmt 0 view .LVU1096
 3349 0006 8846     		mov	r8, r1
 3350 0008 59B1     		cbz	r1, .L223
 3351              	.LVL297:
 3352              	.L213:
 851:lvgl/src/core/lv_refr.c **** 
 3353              		.loc 1 851 5 is_stmt 1 view .LVU1097
 851:lvgl/src/core/lv_refr.c **** 
 3354              		.loc 1 851 7 is_stmt 0 view .LVU1098
 3355 000a B8F1000F 		cmp	r8, #0
 3356 000e 3AD0     		beq	.L212
 854:lvgl/src/core/lv_refr.c **** 
 3357              		.loc 1 854 5 is_stmt 1 view .LVU1099
 3358 0010 4146     		mov	r1, r8
 3359 0012 4846     		mov	r0, r9
 3360 0014 FFF7FEFF 		bl	refr_obj
 3361              	.LVL298:
 857:lvgl/src/core/lv_refr.c ****     lv_obj_t * border_p = top_obj;
 3362              		.loc 1 857 5 view .LVU1100
 858:lvgl/src/core/lv_refr.c **** 
 3363              		.loc 1 858 5 view .LVU1101
 860:lvgl/src/core/lv_refr.c **** 
 3364              		.loc 1 860 5 view .LVU1102
 860:lvgl/src/core/lv_refr.c **** 
 3365              		.loc 1 860 14 is_stmt 0 view .LVU1103
 3366 0018 4046     		mov	r0, r8
 3367 001a FFF7FEFF 		bl	lv_obj_get_parent
 3368              	.LVL299:
 3369 001e 0546     		mov	r5, r0
 3370              	.LVL300:
 863:lvgl/src/core/lv_refr.c ****         bool go = false;
 3371              		.loc 1 863 5 is_stmt 1 view .LVU1104
 863:lvgl/src/core/lv_refr.c ****         bool go = false;
 3372              		.loc 1 863 10 is_stmt 0 view .LVU1105
 3373 0020 29E0     		b	.L215
 3374              	.LVL301:
 3375              	.L223:
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3376              		.loc 1 850 25 is_stmt 1 discriminator 1 view .LVU1106
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 111


 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3377              		.loc 1 850 35 is_stmt 0 discriminator 1 view .LVU1107
 3378 0022 1A4B     		ldr	r3, .L225
 3379 0024 1868     		ldr	r0, [r3]
 3380              	.LVL302:
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3381              		.loc 1 850 35 discriminator 1 view .LVU1108
 3382 0026 FFF7FEFF 		bl	lv_disp_get_scr_act
 3383              	.LVL303:
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3384              		.loc 1 850 35 discriminator 1 view .LVU1109
 3385 002a 8046     		mov	r8, r0
 3386              	.LVL304:
 850:lvgl/src/core/lv_refr.c ****     if(top_obj == NULL) return;  /*Shouldn't happen*/
 3387              		.loc 1 850 35 discriminator 1 view .LVU1110
 3388 002c EDE7     		b	.L213
 3389              	.LVL305:
 3390              	.L217:
 3391              	.LBB124:
 3392              	.LBB125:
 874:lvgl/src/core/lv_refr.c ****             }
 3393              		.loc 1 874 17 is_stmt 1 view .LVU1111
 3394 002e 4846     		mov	r0, r9
 3395 0030 FFF7FEFF 		bl	refr_obj
 3396              	.LVL306:
 3397              	.L218:
 874:lvgl/src/core/lv_refr.c ****             }
 3398              		.loc 1 874 17 is_stmt 0 view .LVU1112
 3399              	.LBE125:
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3400              		.loc 1 867 35 is_stmt 1 discriminator 2 view .LVU1113
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3401              		.loc 1 867 36 is_stmt 0 discriminator 2 view .LVU1114
 3402 0034 0134     		adds	r4, r4, #1
 3403              	.LVL307:
 3404              	.L216:
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3405              		.loc 1 867 20 is_stmt 1 discriminator 1 view .LVU1115
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3406              		.loc 1 867 9 is_stmt 0 discriminator 1 view .LVU1116
 3407 0036 B442     		cmp	r4, r6
 3408 0038 09D2     		bcs	.L224
 3409              	.LBB126:
 868:lvgl/src/core/lv_refr.c ****             if(!go) {
 3410              		.loc 1 868 13 is_stmt 1 view .LVU1117
 868:lvgl/src/core/lv_refr.c ****             if(!go) {
 3411              		.loc 1 868 38 is_stmt 0 view .LVU1118
 3412 003a AB68     		ldr	r3, [r5, #8]
 868:lvgl/src/core/lv_refr.c ****             if(!go) {
 3413              		.loc 1 868 49 view .LVU1119
 3414 003c 1B68     		ldr	r3, [r3]
 868:lvgl/src/core/lv_refr.c ****             if(!go) {
 3415              		.loc 1 868 24 view .LVU1120
 3416 003e 53F82410 		ldr	r1, [r3, r4, lsl #2]
 3417              	.LVL308:
 869:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 3418              		.loc 1 869 13 is_stmt 1 view .LVU1121
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 112


 869:lvgl/src/core/lv_refr.c ****                 if(child == border_p) go = true;
 3419              		.loc 1 869 15 is_stmt 0 view .LVU1122
 3420 0042 002F     		cmp	r7, #0
 3421 0044 F3D1     		bne	.L217
 870:lvgl/src/core/lv_refr.c ****             }
 3422              		.loc 1 870 17 is_stmt 1 view .LVU1123
 870:lvgl/src/core/lv_refr.c ****             }
 3423              		.loc 1 870 19 is_stmt 0 view .LVU1124
 3424 0046 8845     		cmp	r8, r1
 3425 0048 F4D1     		bne	.L218
 870:lvgl/src/core/lv_refr.c ****             }
 3426              		.loc 1 870 42 view .LVU1125
 3427 004a 0127     		movs	r7, #1
 3428              	.LVL309:
 870:lvgl/src/core/lv_refr.c ****             }
 3429              		.loc 1 870 42 view .LVU1126
 3430 004c F2E7     		b	.L218
 3431              	.LVL310:
 3432              	.L224:
 870:lvgl/src/core/lv_refr.c ****             }
 3433              		.loc 1 870 42 view .LVU1127
 3434              	.LBE126:
 879:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST, (void *)draw_ctx);
 3435              		.loc 1 879 9 is_stmt 1 view .LVU1128
 3436 004e 4A46     		mov	r2, r9
 3437 0050 1721     		movs	r1, #23
 3438 0052 2846     		mov	r0, r5
 3439 0054 FFF7FEFF 		bl	lv_event_send
 3440              	.LVL311:
 880:lvgl/src/core/lv_refr.c ****         lv_event_send(parent, LV_EVENT_DRAW_POST_END, (void *)draw_ctx);
 3441              		.loc 1 880 9 view .LVU1129
 3442 0058 4A46     		mov	r2, r9
 3443 005a 1821     		movs	r1, #24
 3444 005c 2846     		mov	r0, r5
 3445 005e FFF7FEFF 		bl	lv_event_send
 3446              	.LVL312:
 881:lvgl/src/core/lv_refr.c **** 
 3447              		.loc 1 881 9 view .LVU1130
 3448 0062 4A46     		mov	r2, r9
 3449 0064 1921     		movs	r1, #25
 3450 0066 2846     		mov	r0, r5
 3451 0068 FFF7FEFF 		bl	lv_event_send
 3452              	.LVL313:
 885:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
 3453              		.loc 1 885 9 view .LVU1131
 887:lvgl/src/core/lv_refr.c ****     }
 3454              		.loc 1 887 9 view .LVU1132
 887:lvgl/src/core/lv_refr.c ****     }
 3455              		.loc 1 887 18 is_stmt 0 view .LVU1133
 3456 006c 2846     		mov	r0, r5
 3457 006e FFF7FEFF 		bl	lv_obj_get_parent
 3458              	.LVL314:
 885:lvgl/src/core/lv_refr.c ****         /*Go a level deeper*/
 3459              		.loc 1 885 18 view .LVU1134
 3460 0072 A846     		mov	r8, r5
 887:lvgl/src/core/lv_refr.c ****     }
 3461              		.loc 1 887 18 view .LVU1135
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 113


 3462 0074 0546     		mov	r5, r0
 3463              	.LVL315:
 3464              	.L215:
 887:lvgl/src/core/lv_refr.c ****     }
 3465              		.loc 1 887 18 view .LVU1136
 3466              	.LBE124:
 863:lvgl/src/core/lv_refr.c ****         bool go = false;
 3467              		.loc 1 863 10 is_stmt 1 view .LVU1137
 3468 0076 35B1     		cbz	r5, .L212
 3469              	.LBB127:
 864:lvgl/src/core/lv_refr.c ****         uint32_t i;
 3470              		.loc 1 864 9 view .LVU1138
 3471              	.LVL316:
 865:lvgl/src/core/lv_refr.c ****         uint32_t child_cnt = lv_obj_get_child_cnt(parent);
 3472              		.loc 1 865 9 view .LVU1139
 866:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 3473              		.loc 1 866 9 view .LVU1140
 866:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 3474              		.loc 1 866 30 is_stmt 0 view .LVU1141
 3475 0078 2846     		mov	r0, r5
 866:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 3476              		.loc 1 866 30 view .LVU1142
 3477 007a FFF7FEFF 		bl	lv_obj_get_child_cnt
 3478              	.LVL317:
 866:lvgl/src/core/lv_refr.c ****         for(i = 0; i < child_cnt; i++) {
 3479              		.loc 1 866 30 view .LVU1143
 3480 007e 0646     		mov	r6, r0
 3481              	.LVL318:
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3482              		.loc 1 867 9 is_stmt 1 view .LVU1144
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3483              		.loc 1 867 15 is_stmt 0 view .LVU1145
 3484 0080 0024     		movs	r4, #0
 864:lvgl/src/core/lv_refr.c ****         uint32_t i;
 3485              		.loc 1 864 14 view .LVU1146
 3486 0082 2746     		mov	r7, r4
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3487              		.loc 1 867 9 view .LVU1147
 3488 0084 D7E7     		b	.L216
 3489              	.LVL319:
 3490              	.L212:
 867:lvgl/src/core/lv_refr.c ****             lv_obj_t * child = parent->spec_attr->children[i];
 3491              		.loc 1 867 9 view .LVU1148
 3492              	.LBE127:
 889:lvgl/src/core/lv_refr.c **** 
 3493              		.loc 1 889 1 view .LVU1149
 3494 0086 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 3495              	.LVL320:
 3496              	.L226:
 889:lvgl/src/core/lv_refr.c **** 
 3497              		.loc 1 889 1 view .LVU1150
 3498 008a 00BF     		.align	2
 3499              	.L225:
 3500 008c 00000000 		.word	.LANCHOR0
 3501              		.cfi_endproc
 3502              	.LFE182:
 3504              		.section	.text.refr_area_part,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 114


 3505              		.align	1
 3506              		.syntax unified
 3507              		.thumb
 3508              		.thumb_func
 3510              	refr_area_part:
 3511              	.LVL321:
 3512              	.LFB180:
 697:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 3513              		.loc 1 697 1 is_stmt 1 view -0
 3514              		.cfi_startproc
 3515              		@ args = 0, pretend = 0, frame = 96
 3516              		@ frame_needed = 0, uses_anonymous_args = 0
 697:lvgl/src/core/lv_refr.c ****     lv_disp_draw_buf_t * draw_buf = lv_disp_get_draw_buf(disp_refr);
 3517              		.loc 1 697 1 is_stmt 0 view .LVU1152
 3518 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 3519              		.cfi_def_cfa_offset 24
 3520              		.cfi_offset 4, -24
 3521              		.cfi_offset 5, -20
 3522              		.cfi_offset 6, -16
 3523              		.cfi_offset 7, -12
 3524              		.cfi_offset 8, -8
 3525              		.cfi_offset 14, -4
 3526 0004 9AB0     		sub	sp, sp, #104
 3527              		.cfi_def_cfa_offset 128
 3528 0006 0546     		mov	r5, r0
 698:lvgl/src/core/lv_refr.c **** 
 3529              		.loc 1 698 5 is_stmt 1 view .LVU1153
 698:lvgl/src/core/lv_refr.c **** 
 3530              		.loc 1 698 37 is_stmt 0 view .LVU1154
 3531 0008 6C4B     		ldr	r3, .L256
 3532 000a 1868     		ldr	r0, [r3]
 3533              	.LVL322:
 698:lvgl/src/core/lv_refr.c **** 
 3534              		.loc 1 698 37 view .LVU1155
 3535 000c FFF7FEFF 		bl	lv_disp_get_draw_buf
 3536              	.LVL323:
 3537 0010 0446     		mov	r4, r0
 3538              	.LVL324:
 700:lvgl/src/core/lv_refr.c ****         draw_ctx->init_buf(draw_ctx);
 3539              		.loc 1 700 5 is_stmt 1 view .LVU1156
 700:lvgl/src/core/lv_refr.c ****         draw_ctx->init_buf(draw_ctx);
 3540              		.loc 1 700 16 is_stmt 0 view .LVU1157
 3541 0012 EB68     		ldr	r3, [r5, #12]
 700:lvgl/src/core/lv_refr.c ****         draw_ctx->init_buf(draw_ctx);
 3542              		.loc 1 700 7 view .LVU1158
 3543 0014 0BB1     		cbz	r3, .L228
 701:lvgl/src/core/lv_refr.c **** 
 3544              		.loc 1 701 9 is_stmt 1 view .LVU1159
 3545 0016 2846     		mov	r0, r5
 3546              	.LVL325:
 701:lvgl/src/core/lv_refr.c **** 
 3547              		.loc 1 701 9 is_stmt 0 view .LVU1160
 3548 0018 9847     		blx	r3
 3549              	.LVL326:
 3550              	.L228:
 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3551              		.loc 1 706 5 is_stmt 1 view .LVU1161
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 115


 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3552              		.loc 1 706 31 is_stmt 0 view .LVU1162
 3553 001a E068     		ldr	r0, [r4, #12]
 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3554              		.loc 1 706 60 view .LVU1163
 3555 001c 674B     		ldr	r3, .L256
 3556 001e 1B68     		ldr	r3, [r3]
 3557 0020 1A68     		ldr	r2, [r3]
 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3558              		.loc 1 706 68 view .LVU1164
 3559 0022 B2F90030 		ldrsh	r3, [r2]
 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3560              		.loc 1 706 97 view .LVU1165
 3561 0026 B2F90220 		ldrsh	r2, [r2, #2]
 706:lvgl/src/core/lv_refr.c ****     if((draw_buf->buf1 && !draw_buf->buf2) ||
 3562              		.loc 1 706 78 view .LVU1166
 3563 002a 02FB03F3 		mul	r3, r2, r3
 3564              	.LVL327:
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3565              		.loc 1 707 5 is_stmt 1 view .LVU1167
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3566              		.loc 1 707 17 is_stmt 0 view .LVU1168
 3567 002e 2268     		ldr	r2, [r4]
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3568              		.loc 1 707 7 view .LVU1169
 3569 0030 12B1     		cbz	r2, .L229
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3570              		.loc 1 707 36 discriminator 1 view .LVU1170
 3571 0032 6168     		ldr	r1, [r4, #4]
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3572              		.loc 1 707 24 discriminator 1 view .LVU1171
 3573 0034 0029     		cmp	r1, #0
 3574 0036 33D0     		beq	.L232
 3575              	.L229:
 707:lvgl/src/core/lv_refr.c ****        (draw_buf->buf1 && draw_buf->buf2 && full_sized)) {
 3576              		.loc 1 707 44 discriminator 3 view .LVU1172
 3577 0038 1AB1     		cbz	r2, .L231
 708:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 3578              		.loc 1 708 35 view .LVU1173
 3579 003a 6268     		ldr	r2, [r4, #4]
 708:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 3580              		.loc 1 708 24 view .LVU1174
 3581 003c 0AB1     		cbz	r2, .L231
 708:lvgl/src/core/lv_refr.c ****         while(draw_buf->flushing) {
 3582              		.loc 1 708 42 discriminator 1 view .LVU1175
 3583 003e 9842     		cmp	r0, r3
 3584 0040 2ED0     		beq	.L232
 3585              	.LVL328:
 3586              	.L231:
 726:lvgl/src/core/lv_refr.c ****     lv_obj_t * top_prev_scr = NULL;
 3587              		.loc 1 726 5 is_stmt 1 view .LVU1176
 727:lvgl/src/core/lv_refr.c **** 
 3588              		.loc 1 727 5 view .LVU1177
 730:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 3589              		.loc 1 730 5 view .LVU1178
 730:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 3590              		.loc 1 730 47 is_stmt 0 view .LVU1179
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 116


 3591 0042 6E68     		ldr	r6, [r5, #4]
 730:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 3592              		.loc 1 730 19 view .LVU1180
 3593 0044 5D4C     		ldr	r4, .L256
 3594              	.LVL329:
 730:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) {
 3595              		.loc 1 730 19 view .LVU1181
 3596 0046 2068     		ldr	r0, [r4]
 3597 0048 FFF7FEFF 		bl	lv_disp_get_scr_act
 3598              	.LVL330:
 3599 004c 0146     		mov	r1, r0
 3600 004e 3046     		mov	r0, r6
 3601 0050 FFF7FEFF 		bl	lv_refr_get_top_obj
 3602              	.LVL331:
 3603 0054 0646     		mov	r6, r0
 3604              	.LVL332:
 731:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 3605              		.loc 1 731 5 is_stmt 1 view .LVU1182
 731:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 3606              		.loc 1 731 17 is_stmt 0 view .LVU1183
 3607 0056 2368     		ldr	r3, [r4]
 3608 0058 5C69     		ldr	r4, [r3, #20]
 731:lvgl/src/core/lv_refr.c ****         top_prev_scr = lv_refr_get_top_obj(draw_ctx->buf_area, disp_refr->prev_scr);
 3609              		.loc 1 731 7 view .LVU1184
 3610 005a 24B1     		cbz	r4, .L235
 732:lvgl/src/core/lv_refr.c ****     }
 3611              		.loc 1 732 9 is_stmt 1 view .LVU1185
 732:lvgl/src/core/lv_refr.c ****     }
 3612              		.loc 1 732 24 is_stmt 0 view .LVU1186
 3613 005c 2146     		mov	r1, r4
 3614 005e 6868     		ldr	r0, [r5, #4]
 3615              	.LVL333:
 732:lvgl/src/core/lv_refr.c ****     }
 3616              		.loc 1 732 24 view .LVU1187
 3617 0060 FFF7FEFF 		bl	lv_refr_get_top_obj
 3618              	.LVL334:
 3619 0064 0446     		mov	r4, r0
 3620              	.LVL335:
 3621              	.L235:
 736:lvgl/src/core/lv_refr.c ****         lv_area_t a;
 3622              		.loc 1 736 5 is_stmt 1 view .LVU1188
 736:lvgl/src/core/lv_refr.c ****         lv_area_t a;
 3623              		.loc 1 736 7 is_stmt 0 view .LVU1189
 3624 0066 002E     		cmp	r6, #0
 3625 0068 08BF     		it	eq
 3626 006a 002C     		cmpeq	r4, #0
 3627 006c 23D0     		beq	.L251
 3628              	.L236:
 771:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 3629              		.loc 1 771 5 is_stmt 1 view .LVU1190
 771:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 3630              		.loc 1 771 17 is_stmt 0 view .LVU1191
 3631 006e 534B     		ldr	r3, .L256
 3632 0070 1B68     		ldr	r3, [r3]
 771:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 3633              		.loc 1 771 8 view .LVU1192
 3634 0072 93F82820 		ldrb	r2, [r3, #40]	@ zero_extendqisi2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 117


 771:lvgl/src/core/lv_refr.c ****         if(top_act_scr == NULL) top_act_scr = disp_refr->act_scr;
 3635              		.loc 1 771 7 view .LVU1193
 3636 0076 12F0010F 		tst	r2, #1
 3637 007a 78D0     		beq	.L241
 772:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3638              		.loc 1 772 9 is_stmt 1 view .LVU1194
 772:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3639              		.loc 1 772 11 is_stmt 0 view .LVU1195
 3640 007c 002E     		cmp	r6, #0
 3641 007e 72D0     		beq	.L252
 3642              	.L242:
 773:lvgl/src/core/lv_refr.c **** 
 3643              		.loc 1 773 9 is_stmt 1 view .LVU1196
 3644 0080 3146     		mov	r1, r6
 3645 0082 2846     		mov	r0, r5
 3646 0084 FFF7FEFF 		bl	refr_obj_and_children
 3647              	.LVL336:
 776:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3648              		.loc 1 776 9 view .LVU1197
 776:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3649              		.loc 1 776 21 is_stmt 0 view .LVU1198
 3650 0088 4C4B     		ldr	r3, .L256
 3651 008a 1B68     		ldr	r3, [r3]
 3652 008c 5B69     		ldr	r3, [r3, #20]
 776:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3653              		.loc 1 776 11 view .LVU1199
 3654 008e 002B     		cmp	r3, #0
 3655 0090 79D0     		beq	.L243
 777:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3656              		.loc 1 777 13 is_stmt 1 view .LVU1200
 777:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3657              		.loc 1 777 15 is_stmt 0 view .LVU1201
 3658 0092 002C     		cmp	r4, #0
 3659 0094 69D0     		beq	.L253
 3660              	.LVL337:
 3661              	.L244:
 778:lvgl/src/core/lv_refr.c ****         }
 3662              		.loc 1 778 13 is_stmt 1 view .LVU1202
 3663 0096 2146     		mov	r1, r4
 3664 0098 2846     		mov	r0, r5
 3665 009a FFF7FEFF 		bl	refr_obj_and_children
 3666              	.LVL338:
 3667 009e 72E0     		b	.L243
 3668              	.LVL339:
 3669              	.L232:
 709:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 3670              		.loc 1 709 14 view .LVU1203
 709:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 3671              		.loc 1 709 23 is_stmt 0 view .LVU1204
 3672 00a0 2369     		ldr	r3, [r4, #16]
 709:lvgl/src/core/lv_refr.c ****             if(disp_refr->driver->wait_cb) disp_refr->driver->wait_cb(disp_refr->driver);
 3673              		.loc 1 709 14 view .LVU1205
 3674 00a2 002B     		cmp	r3, #0
 3675 00a4 CDD0     		beq	.L231
 710:lvgl/src/core/lv_refr.c ****         }
 3676              		.loc 1 710 13 is_stmt 1 view .LVU1206
 710:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 118


 3677              		.loc 1 710 25 is_stmt 0 view .LVU1207
 3678 00a6 454B     		ldr	r3, .L256
 3679 00a8 1B68     		ldr	r3, [r3]
 3680 00aa 1868     		ldr	r0, [r3]
 710:lvgl/src/core/lv_refr.c ****         }
 3681              		.loc 1 710 33 view .LVU1208
 3682 00ac 836A     		ldr	r3, [r0, #40]
 710:lvgl/src/core/lv_refr.c ****         }
 3683              		.loc 1 710 15 view .LVU1209
 3684 00ae 002B     		cmp	r3, #0
 3685 00b0 F6D0     		beq	.L232
 710:lvgl/src/core/lv_refr.c ****         }
 3686              		.loc 1 710 44 is_stmt 1 discriminator 1 view .LVU1210
 3687 00b2 9847     		blx	r3
 3688              	.LVL340:
 3689 00b4 F4E7     		b	.L232
 3690              	.LVL341:
 3691              	.L251:
 3692              	.LBB128:
 737:lvgl/src/core/lv_refr.c ****         lv_area_set(&a, 0, 0,
 3693              		.loc 1 737 9 view .LVU1211
 738:lvgl/src/core/lv_refr.c ****                     lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_refr) - 1);
 3694              		.loc 1 738 9 view .LVU1212
 739:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 3695              		.loc 1 739 21 is_stmt 0 view .LVU1213
 3696 00b6 DFF80481 		ldr	r8, .L256
 3697 00ba D8F80000 		ldr	r0, [r8]
 3698 00be FFF7FEFF 		bl	lv_disp_get_hor_res
 3699              	.LVL342:
 3700 00c2 87B2     		uxth	r7, r0
 739:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 3701              		.loc 1 739 52 view .LVU1214
 3702 00c4 013F     		subs	r7, r7, #1
 3703 00c6 BFB2     		uxth	r7, r7
 739:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 3704              		.loc 1 739 57 view .LVU1215
 3705 00c8 D8F80000 		ldr	r0, [r8]
 3706 00cc FFF7FEFF 		bl	lv_disp_get_ver_res
 3707              	.LVL343:
 3708 00d0 83B2     		uxth	r3, r0
 739:lvgl/src/core/lv_refr.c ****         if(draw_ctx->draw_bg) {
 3709              		.loc 1 739 88 view .LVU1216
 3710 00d2 013B     		subs	r3, r3, #1
 738:lvgl/src/core/lv_refr.c ****                     lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_refr) - 1);
 3711              		.loc 1 738 9 view .LVU1217
 3712 00d4 1BB2     		sxth	r3, r3
 3713 00d6 0093     		str	r3, [sp]
 3714 00d8 3BB2     		sxth	r3, r7
 3715 00da 0022     		movs	r2, #0
 3716 00dc 1146     		mov	r1, r2
 3717 00de 04A8     		add	r0, sp, #16
 3718 00e0 FFF7FEFF 		bl	lv_area_set
 3719              	.LVL344:
 740:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 3720              		.loc 1 740 9 is_stmt 1 view .LVU1218
 740:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 3721              		.loc 1 740 20 is_stmt 0 view .LVU1219
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 119


 3722 00e4 2B6B     		ldr	r3, [r5, #48]
 740:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_t dsc;
 3723              		.loc 1 740 11 view .LVU1220
 3724 00e6 A3B1     		cbz	r3, .L237
 3725              	.LBB129:
 741:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 3726              		.loc 1 741 13 is_stmt 1 view .LVU1221
 742:lvgl/src/core/lv_refr.c ****             dsc.bg_img_src = disp_refr->bg_img;
 3727              		.loc 1 742 13 view .LVU1222
 3728 00e8 06A8     		add	r0, sp, #24
 3729 00ea FFF7FEFF 		bl	lv_draw_rect_dsc_init
 3730              	.LVL345:
 743:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 3731              		.loc 1 743 13 view .LVU1223
 743:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 3732              		.loc 1 743 39 is_stmt 0 view .LVU1224
 3733 00ee D8F80030 		ldr	r3, [r8]
 3734 00f2 1A6B     		ldr	r2, [r3, #48]
 743:lvgl/src/core/lv_refr.c ****             dsc.bg_img_opa = disp_refr->bg_opa;
 3735              		.loc 1 743 28 view .LVU1225
 3736 00f4 0D92     		str	r2, [sp, #52]
 744:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 3737              		.loc 1 744 13 is_stmt 1 view .LVU1226
 744:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 3738              		.loc 1 744 39 is_stmt 0 view .LVU1227
 3739 00f6 93F82920 		ldrb	r2, [r3, #41]	@ zero_extendqisi2
 744:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 3740              		.loc 1 744 28 view .LVU1228
 3741 00fa 8DF84020 		strb	r2, [sp, #64]
 745:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 3742              		.loc 1 745 13 is_stmt 1 view .LVU1229
 745:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 3743              		.loc 1 745 26 is_stmt 0 view .LVU1230
 3744 00fe DB6A     		ldr	r3, [r3, #44]
 3745 0100 0793     		str	r3, [sp, #28]
 746:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, &a);
 3746              		.loc 1 746 13 is_stmt 1 view .LVU1231
 746:lvgl/src/core/lv_refr.c ****             draw_ctx->draw_bg(draw_ctx, &dsc, &a);
 3747              		.loc 1 746 24 is_stmt 0 view .LVU1232
 3748 0102 8DF81B20 		strb	r2, [sp, #27]
 747:lvgl/src/core/lv_refr.c ****         }
 3749              		.loc 1 747 13 is_stmt 1 view .LVU1233
 747:lvgl/src/core/lv_refr.c ****         }
 3750              		.loc 1 747 21 is_stmt 0 view .LVU1234
 3751 0106 2B6B     		ldr	r3, [r5, #48]
 747:lvgl/src/core/lv_refr.c ****         }
 3752              		.loc 1 747 13 view .LVU1235
 3753 0108 04AA     		add	r2, sp, #16
 3754 010a 06A9     		add	r1, sp, #24
 3755 010c 2846     		mov	r0, r5
 3756 010e 9847     		blx	r3
 3757              	.LVL346:
 3758              	.LBE129:
 3759 0110 ADE7     		b	.L236
 3760              	.L237:
 749:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 3761              		.loc 1 749 14 is_stmt 1 view .LVU1236
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 120


 749:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 3762              		.loc 1 749 26 is_stmt 0 view .LVU1237
 3763 0112 2A4B     		ldr	r3, .L256
 3764 0114 1B68     		ldr	r3, [r3]
 3765 0116 186B     		ldr	r0, [r3, #48]
 749:lvgl/src/core/lv_refr.c ****             lv_img_header_t header;
 3766              		.loc 1 749 16 view .LVU1238
 3767 0118 A0B1     		cbz	r0, .L239
 3768              	.LBB130:
 750:lvgl/src/core/lv_refr.c ****             lv_res_t res = lv_img_decoder_get_info(disp_refr->bg_img, &header);
 3769              		.loc 1 750 13 is_stmt 1 view .LVU1239
 751:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 3770              		.loc 1 751 13 view .LVU1240
 751:lvgl/src/core/lv_refr.c ****             if(res == LV_RES_OK) {
 3771              		.loc 1 751 28 is_stmt 0 view .LVU1241
 3772 011a 03A9     		add	r1, sp, #12
 3773 011c FFF7FEFF 		bl	lv_img_decoder_get_info
 3774              	.LVL347:
 752:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 3775              		.loc 1 752 13 is_stmt 1 view .LVU1242
 752:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_t dsc;
 3776              		.loc 1 752 15 is_stmt 0 view .LVU1243
 3777 0120 0128     		cmp	r0, #1
 3778 0122 A4D1     		bne	.L236
 3779              	.LBB131:
 753:lvgl/src/core/lv_refr.c ****                 lv_draw_img_dsc_init(&dsc);
 3780              		.loc 1 753 17 is_stmt 1 view .LVU1244
 754:lvgl/src/core/lv_refr.c ****                 dsc.opa = disp_refr->bg_opa;
 3781              		.loc 1 754 17 view .LVU1245
 3782 0124 06A8     		add	r0, sp, #24
 3783              	.LVL348:
 754:lvgl/src/core/lv_refr.c ****                 dsc.opa = disp_refr->bg_opa;
 3784              		.loc 1 754 17 is_stmt 0 view .LVU1246
 3785 0126 FFF7FEFF 		bl	lv_draw_img_dsc_init
 3786              	.LVL349:
 755:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 3787              		.loc 1 755 17 is_stmt 1 view .LVU1247
 755:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 3788              		.loc 1 755 36 is_stmt 0 view .LVU1248
 3789 012a 244B     		ldr	r3, .L256
 3790 012c 1B68     		ldr	r3, [r3]
 3791 012e 93F82920 		ldrb	r2, [r3, #41]	@ zero_extendqisi2
 755:lvgl/src/core/lv_refr.c ****                 lv_draw_img(draw_ctx, &dsc, &a, disp_refr->bg_img);
 3792              		.loc 1 755 25 view .LVU1249
 3793 0132 8DF82520 		strb	r2, [sp, #37]
 756:lvgl/src/core/lv_refr.c ****             }
 3794              		.loc 1 756 17 is_stmt 1 view .LVU1250
 3795 0136 1B6B     		ldr	r3, [r3, #48]
 3796 0138 04AA     		add	r2, sp, #16
 3797 013a 06A9     		add	r1, sp, #24
 3798 013c 2846     		mov	r0, r5
 3799 013e FFF7FEFF 		bl	lv_draw_img
 3800              	.LVL350:
 3801              	.LBE131:
 759:lvgl/src/core/lv_refr.c ****             }
 3802              		.loc 1 759 17 view .LVU1251
 759:lvgl/src/core/lv_refr.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 121


 3803              		.loc 1 759 17 view .LVU1252
 759:lvgl/src/core/lv_refr.c ****             }
 3804              		.loc 1 759 17 view .LVU1253
 3805 0142 94E7     		b	.L236
 3806              	.L239:
 759:lvgl/src/core/lv_refr.c ****             }
 3807              		.loc 1 759 17 is_stmt 0 view .LVU1254
 3808              	.LBE130:
 3809              	.LBB132:
 763:lvgl/src/core/lv_refr.c ****             lv_draw_rect_dsc_init(&dsc);
 3810              		.loc 1 763 13 is_stmt 1 discriminator 4 view .LVU1255
 764:lvgl/src/core/lv_refr.c ****             dsc.bg_color = disp_refr->bg_color;
 3811              		.loc 1 764 13 discriminator 4 view .LVU1256
 3812 0144 06A8     		add	r0, sp, #24
 3813 0146 FFF7FEFF 		bl	lv_draw_rect_dsc_init
 3814              	.LVL351:
 765:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 3815              		.loc 1 765 13 discriminator 4 view .LVU1257
 765:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 3816              		.loc 1 765 37 is_stmt 0 discriminator 4 view .LVU1258
 3817 014a 1C4B     		ldr	r3, .L256
 3818 014c 1B68     		ldr	r3, [r3]
 765:lvgl/src/core/lv_refr.c ****             dsc.bg_opa = disp_refr->bg_opa;
 3819              		.loc 1 765 26 discriminator 4 view .LVU1259
 3820 014e DA6A     		ldr	r2, [r3, #44]
 3821 0150 0792     		str	r2, [sp, #28]
 766:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 3822              		.loc 1 766 13 is_stmt 1 discriminator 4 view .LVU1260
 766:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 3823              		.loc 1 766 35 is_stmt 0 discriminator 4 view .LVU1261
 3824 0152 93F82930 		ldrb	r3, [r3, #41]	@ zero_extendqisi2
 766:lvgl/src/core/lv_refr.c ****             lv_draw_rect(draw_ctx, &dsc, draw_ctx->buf_area);
 3825              		.loc 1 766 24 discriminator 4 view .LVU1262
 3826 0156 8DF81B30 		strb	r3, [sp, #27]
 767:lvgl/src/core/lv_refr.c ****         }
 3827              		.loc 1 767 13 is_stmt 1 discriminator 4 view .LVU1263
 3828 015a 6A68     		ldr	r2, [r5, #4]
 3829 015c 06A9     		add	r1, sp, #24
 3830 015e 2846     		mov	r0, r5
 3831 0160 FFF7FEFF 		bl	lv_draw_rect
 3832              	.LVL352:
 3833 0164 83E7     		b	.L236
 3834              	.L252:
 767:lvgl/src/core/lv_refr.c ****         }
 3835              		.loc 1 767 13 is_stmt 0 discriminator 4 view .LVU1264
 3836              	.LBE132:
 3837              	.LBE128:
 772:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3838              		.loc 1 772 33 is_stmt 1 discriminator 1 view .LVU1265
 772:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3839              		.loc 1 772 45 is_stmt 0 discriminator 1 view .LVU1266
 3840 0166 1E69     		ldr	r6, [r3, #16]
 3841              	.LVL353:
 772:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3842              		.loc 1 772 45 discriminator 1 view .LVU1267
 3843 0168 8AE7     		b	.L242
 3844              	.L253:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 122


 777:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3845              		.loc 1 777 51 view .LVU1268
 3846 016a 1C46     		mov	r4, r3
 3847              	.LVL354:
 777:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3848              		.loc 1 777 51 view .LVU1269
 3849 016c 93E7     		b	.L244
 3850              	.LVL355:
 3851              	.L241:
 783:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3852              		.loc 1 783 9 is_stmt 1 view .LVU1270
 783:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3853              		.loc 1 783 21 is_stmt 0 view .LVU1271
 3854 016e 5B69     		ldr	r3, [r3, #20]
 783:lvgl/src/core/lv_refr.c ****             if(top_prev_scr == NULL) top_prev_scr = disp_refr->prev_scr;
 3855              		.loc 1 783 11 view .LVU1272
 3856 0170 23B1     		cbz	r3, .L245
 784:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3857              		.loc 1 784 13 is_stmt 1 view .LVU1273
 784:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3858              		.loc 1 784 15 is_stmt 0 view .LVU1274
 3859 0172 ECB1     		cbz	r4, .L254
 3860              	.LVL356:
 3861              	.L246:
 785:lvgl/src/core/lv_refr.c ****         }
 3862              		.loc 1 785 13 is_stmt 1 view .LVU1275
 3863 0174 2146     		mov	r1, r4
 3864 0176 2846     		mov	r0, r5
 3865 0178 FFF7FEFF 		bl	refr_obj_and_children
 3866              	.LVL357:
 3867              	.L245:
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3868              		.loc 1 788 9 view .LVU1276
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3869              		.loc 1 788 11 is_stmt 0 view .LVU1277
 3870 017c D6B1     		cbz	r6, .L255
 3871              	.L247:
 789:lvgl/src/core/lv_refr.c ****     }
 3872              		.loc 1 789 9 is_stmt 1 view .LVU1278
 3873 017e 3146     		mov	r1, r6
 3874 0180 2846     		mov	r0, r5
 3875 0182 FFF7FEFF 		bl	refr_obj_and_children
 3876              	.LVL358:
 3877              	.L243:
 793:lvgl/src/core/lv_refr.c ****     refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 3878              		.loc 1 793 5 view .LVU1279
 3879 0186 0D4C     		ldr	r4, .L256
 3880              	.LVL359:
 793:lvgl/src/core/lv_refr.c ****     refr_obj_and_children(draw_ctx, lv_disp_get_layer_sys(disp_refr));
 3881              		.loc 1 793 5 is_stmt 0 view .LVU1280
 3882 0188 2068     		ldr	r0, [r4]
 3883 018a FFF7FEFF 		bl	lv_disp_get_layer_top
 3884              	.LVL360:
 3885 018e 0146     		mov	r1, r0
 3886 0190 2846     		mov	r0, r5
 3887 0192 FFF7FEFF 		bl	refr_obj_and_children
 3888              	.LVL361:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 123


 794:lvgl/src/core/lv_refr.c **** 
 3889              		.loc 1 794 5 is_stmt 1 view .LVU1281
 3890 0196 2068     		ldr	r0, [r4]
 3891 0198 FFF7FEFF 		bl	lv_disp_get_layer_sys
 3892              	.LVL362:
 3893 019c 0146     		mov	r1, r0
 3894 019e 2846     		mov	r0, r5
 3895 01a0 FFF7FEFF 		bl	refr_obj_and_children
 3896              	.LVL363:
 796:lvgl/src/core/lv_refr.c **** }
 3897              		.loc 1 796 5 view .LVU1282
 3898 01a4 2068     		ldr	r0, [r4]
 3899 01a6 FFF7FEFF 		bl	draw_buf_flush
 3900              	.LVL364:
 797:lvgl/src/core/lv_refr.c **** 
 3901              		.loc 1 797 1 is_stmt 0 view .LVU1283
 3902 01aa 1AB0     		add	sp, sp, #104
 3903              		.cfi_remember_state
 3904              		.cfi_def_cfa_offset 24
 3905              		@ sp needed
 3906 01ac BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 3907              	.LVL365:
 3908              	.L254:
 3909              		.cfi_restore_state
 784:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3910              		.loc 1 784 51 view .LVU1284
 3911 01b0 1C46     		mov	r4, r3
 3912              	.LVL366:
 784:lvgl/src/core/lv_refr.c ****             refr_obj_and_children(draw_ctx, top_prev_scr);
 3913              		.loc 1 784 51 view .LVU1285
 3914 01b2 DFE7     		b	.L246
 3915              	.LVL367:
 3916              	.L255:
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3917              		.loc 1 788 33 is_stmt 1 discriminator 1 view .LVU1286
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3918              		.loc 1 788 56 is_stmt 0 discriminator 1 view .LVU1287
 3919 01b4 014B     		ldr	r3, .L256
 3920 01b6 1B68     		ldr	r3, [r3]
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3921              		.loc 1 788 45 discriminator 1 view .LVU1288
 3922 01b8 1E69     		ldr	r6, [r3, #16]
 3923              	.LVL368:
 788:lvgl/src/core/lv_refr.c ****         refr_obj_and_children(draw_ctx, top_act_scr);
 3924              		.loc 1 788 45 discriminator 1 view .LVU1289
 3925 01ba E0E7     		b	.L247
 3926              	.L257:
 3927              		.align	2
 3928              	.L256:
 3929 01bc 00000000 		.word	.LANCHOR0
 3930              		.cfi_endproc
 3931              	.LFE180:
 3933              		.section	.text.refr_area,"ax",%progbits
 3934              		.align	1
 3935              		.syntax unified
 3936              		.thumb
 3937              		.thumb_func
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 124


 3939              	refr_area:
 3940              	.LVL369:
 3941              	.LFB179:
 630:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 3942              		.loc 1 630 1 is_stmt 1 view -0
 3943              		.cfi_startproc
 3944              		@ args = 0, pretend = 0, frame = 16
 3945              		@ frame_needed = 0, uses_anonymous_args = 0
 630:lvgl/src/core/lv_refr.c ****     lv_draw_ctx_t * draw_ctx = disp_refr->driver->draw_ctx;
 3946              		.loc 1 630 1 is_stmt 0 view .LVU1291
 3947 0000 2DE9F043 		push	{r4, r5, r6, r7, r8, r9, lr}
 3948              		.cfi_def_cfa_offset 28
 3949              		.cfi_offset 4, -28
 3950              		.cfi_offset 5, -24
 3951              		.cfi_offset 6, -20
 3952              		.cfi_offset 7, -16
 3953              		.cfi_offset 8, -12
 3954              		.cfi_offset 9, -8
 3955              		.cfi_offset 14, -4
 3956 0004 87B0     		sub	sp, sp, #28
 3957              		.cfi_def_cfa_offset 56
 3958 0006 0746     		mov	r7, r0
 631:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3959              		.loc 1 631 5 is_stmt 1 view .LVU1292
 631:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3960              		.loc 1 631 41 is_stmt 0 view .LVU1293
 3961 0008 614B     		ldr	r3, .L276
 3962 000a 1868     		ldr	r0, [r3]
 3963              	.LVL370:
 631:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3964              		.loc 1 631 41 view .LVU1294
 3965 000c 0368     		ldr	r3, [r0]
 631:lvgl/src/core/lv_refr.c ****     draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 3966              		.loc 1 631 21 view .LVU1295
 3967 000e DD6B     		ldr	r5, [r3, #60]
 3968              	.LVL371:
 632:lvgl/src/core/lv_refr.c **** 
 3969              		.loc 1 632 5 is_stmt 1 view .LVU1296
 632:lvgl/src/core/lv_refr.c **** 
 3970              		.loc 1 632 38 is_stmt 0 view .LVU1297
 3971 0010 DB68     		ldr	r3, [r3, #12]
 632:lvgl/src/core/lv_refr.c **** 
 3972              		.loc 1 632 48 view .LVU1298
 3973 0012 9B68     		ldr	r3, [r3, #8]
 632:lvgl/src/core/lv_refr.c **** 
 3974              		.loc 1 632 19 view .LVU1299
 3975 0014 2B60     		str	r3, [r5]
 636:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 3976              		.loc 1 636 5 is_stmt 1 view .LVU1300
 636:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 3977              		.loc 1 636 17 is_stmt 0 view .LVU1301
 3978 0016 0368     		ldr	r3, [r0]
 636:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 3979              		.loc 1 636 40 view .LVU1302
 3980 0018 1B7C     		ldrb	r3, [r3, #16]	@ zero_extendqisi2
 636:lvgl/src/core/lv_refr.c ****         lv_area_t disp_area;
 3981              		.loc 1 636 7 view .LVU1303
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 125


 3982 001a 13F0030F 		tst	r3, #3
 3983 001e 24D1     		bne	.L271
 656:lvgl/src/core/lv_refr.c ****     lv_coord_t h = lv_area_get_height(area_p);
 3984              		.loc 1 656 5 is_stmt 1 view .LVU1304
 3985              	.LVL372:
 3986              	.LBB133:
 3987              	.LBI133:
 123:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 3988              		.loc 2 123 26 view .LVU1305
 3989              	.LBB134:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3990              		.loc 2 125 5 view .LVU1306
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3991              		.loc 2 125 31 is_stmt 0 view .LVU1307
 3992 0020 BC88     		ldrh	r4, [r7, #4]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3993              		.loc 2 125 44 view .LVU1308
 3994 0022 3B88     		ldrh	r3, [r7]
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3995              		.loc 2 125 36 view .LVU1309
 3996 0024 E41A     		subs	r4, r4, r3
 3997 0026 A4B2     		uxth	r4, r4
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 3998              		.loc 2 125 49 view .LVU1310
 3999 0028 0134     		adds	r4, r4, #1
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4000              		.loc 2 125 12 view .LVU1311
 4001 002a 24B2     		sxth	r4, r4
 4002              	.LVL373:
 125:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4003              		.loc 2 125 12 view .LVU1312
 4004              	.LBE134:
 4005              	.LBE133:
 657:lvgl/src/core/lv_refr.c ****     lv_coord_t y2 = area_p->y2 >= lv_disp_get_ver_res(disp_refr) ?
 4006              		.loc 1 657 5 is_stmt 1 view .LVU1313
 4007              	.LBB135:
 4008              	.LBI135:
 133:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 4009              		.loc 2 133 26 view .LVU1314
 4010              	.LBB136:
 4011              		.loc 2 135 5 view .LVU1315
 4012              		.loc 2 135 31 is_stmt 0 view .LVU1316
 4013 002c B7F90660 		ldrsh	r6, [r7, #6]
 4014 0030 1FFA86F8 		uxth	r8, r6
 4015              		.loc 2 135 44 view .LVU1317
 4016 0034 7B88     		ldrh	r3, [r7, #2]
 4017              		.loc 2 135 36 view .LVU1318
 4018 0036 A8EB0308 		sub	r8, r8, r3
 4019 003a 1FFA88F8 		uxth	r8, r8
 4020              		.loc 2 135 49 view .LVU1319
 4021 003e 08F10108 		add	r8, r8, #1
 4022              		.loc 2 135 12 view .LVU1320
 4023 0042 0FFA88F8 		sxth	r8, r8
 4024              	.LVL374:
 4025              		.loc 2 135 12 view .LVU1321
 4026              	.LBE136:
 4027              	.LBE135:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 126


 658:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 4028              		.loc 1 658 5 is_stmt 1 view .LVU1322
 658:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 4029              		.loc 1 658 35 is_stmt 0 view .LVU1323
 4030 0046 FFF7FEFF 		bl	lv_disp_get_ver_res
 4031              	.LVL375:
 658:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 4032              		.loc 1 658 16 view .LVU1324
 4033 004a B042     		cmp	r0, r6
 4034 004c 40DD     		ble	.L272
 658:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 4035              		.loc 1 658 16 discriminator 2 view .LVU1325
 4036 004e B7F90660 		ldrsh	r6, [r7, #6]
 4037              	.L264:
 4038              	.LVL376:
 661:lvgl/src/core/lv_refr.c **** 
 4039              		.loc 1 661 5 is_stmt 1 discriminator 4 view .LVU1326
 661:lvgl/src/core/lv_refr.c **** 
 4040              		.loc 1 661 23 is_stmt 0 discriminator 4 view .LVU1327
 4041 0052 4246     		mov	r2, r8
 4042 0054 2146     		mov	r1, r4
 4043 0056 4E4B     		ldr	r3, .L276
 4044 0058 1868     		ldr	r0, [r3]
 4045 005a FFF7FEFF 		bl	get_max_row
 4046              	.LVL377:
 4047 005e 8046     		mov	r8, r0
 4048              	.LVL378:
 663:lvgl/src/core/lv_refr.c ****     lv_coord_t row_last = 0;
 4049              		.loc 1 663 5 is_stmt 1 discriminator 4 view .LVU1328
 664:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 4050              		.loc 1 664 5 discriminator 4 view .LVU1329
 665:lvgl/src/core/lv_refr.c ****     for(row = area_p->y1; row + max_row - 1 <= y2; row += max_row) {
 4051              		.loc 1 665 5 discriminator 4 view .LVU1330
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4052              		.loc 1 666 5 discriminator 4 view .LVU1331
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4053              		.loc 1 666 13 is_stmt 0 discriminator 4 view .LVU1332
 4054 0060 B7F90230 		ldrsh	r3, [r7, #2]
 4055              	.LVL379:
 664:lvgl/src/core/lv_refr.c ****     lv_area_t sub_area;
 4056              		.loc 1 664 16 discriminator 4 view .LVU1333
 4057 0064 4FF00009 		mov	r9, #0
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4058              		.loc 1 666 5 discriminator 4 view .LVU1334
 4059 0068 42E0     		b	.L265
 4060              	.LVL380:
 4061              	.L271:
 4062              	.LBB137:
 637:lvgl/src/core/lv_refr.c ****         lv_area_set(&disp_area, 0, 0, lv_disp_get_hor_res(disp_refr) - 1, lv_disp_get_ver_res(disp_
 4063              		.loc 1 637 9 is_stmt 1 view .LVU1335
 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4064              		.loc 1 638 9 view .LVU1336
 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4065              		.loc 1 638 39 is_stmt 0 view .LVU1337
 4066 006a FFF7FEFF 		bl	lv_disp_get_hor_res
 4067              	.LVL381:
 4068 006e 84B2     		uxth	r4, r0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 127


 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4069              		.loc 1 638 70 view .LVU1338
 4070 0070 013C     		subs	r4, r4, #1
 4071 0072 A4B2     		uxth	r4, r4
 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4072              		.loc 1 638 75 view .LVU1339
 4073 0074 464E     		ldr	r6, .L276
 4074 0076 3068     		ldr	r0, [r6]
 4075 0078 FFF7FEFF 		bl	lv_disp_get_ver_res
 4076              	.LVL382:
 4077 007c 83B2     		uxth	r3, r0
 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4078              		.loc 1 638 106 view .LVU1340
 4079 007e 013B     		subs	r3, r3, #1
 638:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &disp_area;
 4080              		.loc 1 638 9 view .LVU1341
 4081 0080 0DF10808 		add	r8, sp, #8
 4082 0084 1BB2     		sxth	r3, r3
 4083 0086 0093     		str	r3, [sp]
 4084 0088 23B2     		sxth	r3, r4
 4085 008a 0022     		movs	r2, #0
 4086 008c 1146     		mov	r1, r2
 4087 008e 4046     		mov	r0, r8
 4088 0090 FFF7FEFF 		bl	lv_area_set
 4089              	.LVL383:
 639:lvgl/src/core/lv_refr.c **** 
 4090              		.loc 1 639 9 is_stmt 1 view .LVU1342
 639:lvgl/src/core/lv_refr.c **** 
 4091              		.loc 1 639 28 is_stmt 0 view .LVU1343
 4092 0094 C5F80480 		str	r8, [r5, #4]
 641:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 4093              		.loc 1 641 9 is_stmt 1 view .LVU1344
 641:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 4094              		.loc 1 641 21 is_stmt 0 view .LVU1345
 4095 0098 3368     		ldr	r3, [r6]
 4096 009a 1B68     		ldr	r3, [r3]
 641:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 4097              		.loc 1 641 12 view .LVU1346
 4098 009c 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 641:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 1;
 4099              		.loc 1 641 11 view .LVU1347
 4100 009e 12F0020F 		tst	r2, #2
 4101 00a2 0AD0     		beq	.L260
 642:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 4102              		.loc 1 642 13 is_stmt 1 view .LVU1348
 642:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 4103              		.loc 1 642 30 is_stmt 0 view .LVU1349
 4104 00a4 DA68     		ldr	r2, [r3, #12]
 642:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = &disp_area;
 4105              		.loc 1 642 52 view .LVU1350
 4106 00a6 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4107 00a8 43F00203 		orr	r3, r3, #2
 4108 00ac 1376     		strb	r3, [r2, #24]
 643:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 4109              		.loc 1 643 13 is_stmt 1 view .LVU1351
 643:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 4110              		.loc 1 643 33 is_stmt 0 view .LVU1352
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 128


 4111 00ae C5F80880 		str	r8, [r5, #8]
 644:lvgl/src/core/lv_refr.c ****         }
 4112              		.loc 1 644 13 is_stmt 1 view .LVU1353
 4113 00b2 2846     		mov	r0, r5
 4114 00b4 FFF7FEFF 		bl	refr_area_part
 4115              	.LVL384:
 4116 00b8 47E0     		b	.L258
 4117              	.L260:
 647:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 4118              		.loc 1 647 13 view .LVU1354
 647:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 4119              		.loc 1 647 71 is_stmt 0 view .LVU1355
 4120 00ba DA68     		ldr	r2, [r3, #12]
 647:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 4121              		.loc 1 647 81 view .LVU1356
 4122 00bc 9169     		ldr	r1, [r2, #24]
 647:lvgl/src/core/lv_refr.c ****             draw_ctx->clip_area = area_p;
 4123              		.loc 1 647 52 view .LVU1357
 4124 00be 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4125 00c0 61F34103 		bfi	r3, r1, #1, #1
 4126 00c4 1376     		strb	r3, [r2, #24]
 648:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 4127              		.loc 1 648 13 is_stmt 1 view .LVU1358
 648:lvgl/src/core/lv_refr.c ****             refr_area_part(draw_ctx);
 4128              		.loc 1 648 33 is_stmt 0 view .LVU1359
 4129 00c6 AF60     		str	r7, [r5, #8]
 649:lvgl/src/core/lv_refr.c ****         }
 4130              		.loc 1 649 13 is_stmt 1 view .LVU1360
 4131 00c8 2846     		mov	r0, r5
 4132 00ca FFF7FEFF 		bl	refr_area_part
 4133              	.LVL385:
 651:lvgl/src/core/lv_refr.c ****     }
 4134              		.loc 1 651 9 view .LVU1361
 4135 00ce 3CE0     		b	.L258
 4136              	.LVL386:
 4137              	.L272:
 651:lvgl/src/core/lv_refr.c ****     }
 4138              		.loc 1 651 9 is_stmt 0 view .LVU1362
 4139              	.LBE137:
 659:lvgl/src/core/lv_refr.c **** 
 4140              		.loc 1 659 21 discriminator 1 view .LVU1363
 4141 00d0 2F4B     		ldr	r3, .L276
 4142 00d2 1868     		ldr	r0, [r3]
 4143 00d4 FFF7FEFF 		bl	lv_disp_get_ver_res
 4144              	.LVL387:
 4145 00d8 86B2     		uxth	r6, r0
 659:lvgl/src/core/lv_refr.c **** 
 4146              		.loc 1 659 52 discriminator 1 view .LVU1364
 4147 00da 013E     		subs	r6, r6, #1
 658:lvgl/src/core/lv_refr.c ****                     lv_disp_get_ver_res(disp_refr) - 1 : area_p->y2;
 4148              		.loc 1 658 16 discriminator 1 view .LVU1365
 4149 00dc 36B2     		sxth	r6, r6
 4150 00de B8E7     		b	.L264
 4151              	.LVL388:
 4152              	.L266:
 676:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 4153              		.loc 1 676 9 is_stmt 1 view .LVU1366
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 129


 676:lvgl/src/core/lv_refr.c ****         if(y2 == row_last) disp_refr->driver->draw_buf->last_part = 1;
 4154              		.loc 1 676 18 is_stmt 0 view .LVU1367
 4155 00e0 BDF91690 		ldrsh	r9, [sp, #22]
 4156              	.LVL389:
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4157              		.loc 1 677 9 is_stmt 1 view .LVU1368
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4158              		.loc 1 677 11 is_stmt 0 view .LVU1369
 4159 00e4 4E45     		cmp	r6, r9
 4160 00e6 27D0     		beq	.L273
 4161              	.L267:
 678:lvgl/src/core/lv_refr.c ****     }
 4162              		.loc 1 678 9 is_stmt 1 discriminator 2 view .LVU1370
 4163 00e8 2846     		mov	r0, r5
 4164 00ea FFF7FEFF 		bl	refr_area_part
 4165              	.LVL390:
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4166              		.loc 1 666 52 discriminator 2 view .LVU1371
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4167              		.loc 1 666 56 is_stmt 0 discriminator 2 view .LVU1372
 4168 00ee 23B2     		sxth	r3, r4
 4169              	.LVL391:
 4170              	.L265:
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4171              		.loc 1 666 27 is_stmt 1 discriminator 1 view .LVU1373
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4172              		.loc 1 666 31 is_stmt 0 discriminator 1 view .LVU1374
 4173 00f0 03EB0802 		add	r2, r3, r8
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4174              		.loc 1 666 41 discriminator 1 view .LVU1375
 4175 00f4 013A     		subs	r2, r2, #1
 666:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4176              		.loc 1 666 5 discriminator 1 view .LVU1376
 4177 00f6 B242     		cmp	r2, r6
 4178 00f8 25DC     		bgt	.L274
 668:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4179              		.loc 1 668 9 is_stmt 1 view .LVU1377
 668:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4180              		.loc 1 668 29 is_stmt 0 view .LVU1378
 4181 00fa B7F90020 		ldrsh	r2, [r7]
 668:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4182              		.loc 1 668 21 view .LVU1379
 4183 00fe ADF81020 		strh	r2, [sp, #16]	@ movhi
 669:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4184              		.loc 1 669 9 is_stmt 1 view .LVU1380
 669:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4185              		.loc 1 669 29 is_stmt 0 view .LVU1381
 4186 0102 B7F90420 		ldrsh	r2, [r7, #4]
 669:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4187              		.loc 1 669 21 view .LVU1382
 4188 0106 ADF81420 		strh	r2, [sp, #20]	@ movhi
 670:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 4189              		.loc 1 670 9 is_stmt 1 view .LVU1383
 670:lvgl/src/core/lv_refr.c ****         sub_area.y2 = row + max_row - 1;
 4190              		.loc 1 670 21 is_stmt 0 view .LVU1384
 4191 010a ADF81230 		strh	r3, [sp, #18]	@ movhi
 671:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 130


 4192              		.loc 1 671 9 is_stmt 1 view .LVU1385
 671:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 4193              		.loc 1 671 27 is_stmt 0 view .LVU1386
 4194 010e 4344     		add	r3, r3, r8
 4195              	.LVL392:
 671:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 4196              		.loc 1 671 27 view .LVU1387
 4197 0110 9CB2     		uxth	r4, r3
 671:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 4198              		.loc 1 671 37 view .LVU1388
 4199 0112 631E     		subs	r3, r4, #1
 671:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 4200              		.loc 1 671 21 view .LVU1389
 4201 0114 ADF81630 		strh	r3, [sp, #22]	@ movhi
 672:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 4202              		.loc 1 672 9 is_stmt 1 view .LVU1390
 672:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 4203              		.loc 1 672 28 is_stmt 0 view .LVU1391
 4204 0118 04AB     		add	r3, sp, #16
 4205 011a 6B60     		str	r3, [r5, #4]
 673:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 4206              		.loc 1 673 9 is_stmt 1 view .LVU1392
 673:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 4207              		.loc 1 673 29 is_stmt 0 view .LVU1393
 4208 011c AB60     		str	r3, [r5, #8]
 674:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 4209              		.loc 1 674 9 is_stmt 1 view .LVU1394
 674:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 4210              		.loc 1 674 34 is_stmt 0 view .LVU1395
 4211 011e 1C4B     		ldr	r3, .L276
 4212 0120 1B68     		ldr	r3, [r3]
 4213 0122 1A68     		ldr	r2, [r3]
 674:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 4214              		.loc 1 674 42 view .LVU1396
 4215 0124 D268     		ldr	r2, [r2, #12]
 674:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 4216              		.loc 1 674 52 view .LVU1397
 4217 0126 9268     		ldr	r2, [r2, #8]
 674:lvgl/src/core/lv_refr.c ****         if(sub_area.y2 > y2) sub_area.y2 = y2;
 4218              		.loc 1 674 23 view .LVU1398
 4219 0128 2A60     		str	r2, [r5]
 4220              	.LVL393:
 675:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 4221              		.loc 1 675 9 is_stmt 1 view .LVU1399
 675:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 4222              		.loc 1 675 20 is_stmt 0 view .LVU1400
 4223 012a BDF91620 		ldrsh	r2, [sp, #22]
 675:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 4224              		.loc 1 675 11 view .LVU1401
 4225 012e B242     		cmp	r2, r6
 4226 0130 D6DD     		ble	.L266
 675:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 4227              		.loc 1 675 30 is_stmt 1 discriminator 1 view .LVU1402
 675:lvgl/src/core/lv_refr.c ****         row_last = sub_area.y2;
 4228              		.loc 1 675 42 is_stmt 0 discriminator 1 view .LVU1403
 4229 0132 ADF81660 		strh	r6, [sp, #22]	@ movhi
 4230 0136 D3E7     		b	.L266
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 131


 4231              	.L273:
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4232              		.loc 1 677 28 is_stmt 1 discriminator 1 view .LVU1404
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4233              		.loc 1 677 37 is_stmt 0 discriminator 1 view .LVU1405
 4234 0138 1B68     		ldr	r3, [r3]
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4235              		.loc 1 677 45 discriminator 1 view .LVU1406
 4236 013a DA68     		ldr	r2, [r3, #12]
 677:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4237              		.loc 1 677 67 discriminator 1 view .LVU1407
 4238 013c 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4239 013e 43F00203 		orr	r3, r3, #2
 4240 0142 1376     		strb	r3, [r2, #24]
 4241 0144 D0E7     		b	.L267
 4242              	.LVL394:
 4243              	.L274:
 682:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4244              		.loc 1 682 5 is_stmt 1 view .LVU1408
 682:lvgl/src/core/lv_refr.c ****         /*Calc. the next y coordinates of draw_buf*/
 4245              		.loc 1 682 7 is_stmt 0 view .LVU1409
 4246 0146 B145     		cmp	r9, r6
 4247 0148 02D1     		bne	.L275
 4248              	.LVL395:
 4249              	.L258:
 694:lvgl/src/core/lv_refr.c **** 
 4250              		.loc 1 694 1 view .LVU1410
 4251 014a 07B0     		add	sp, sp, #28
 4252              		.cfi_remember_state
 4253              		.cfi_def_cfa_offset 28
 4254              		@ sp needed
 4255 014c BDE8F083 		pop	{r4, r5, r6, r7, r8, r9, pc}
 4256              	.LVL396:
 4257              	.L275:
 4258              		.cfi_restore_state
 684:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4259              		.loc 1 684 9 is_stmt 1 view .LVU1411
 684:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4260              		.loc 1 684 29 is_stmt 0 view .LVU1412
 4261 0150 B7F90020 		ldrsh	r2, [r7]
 684:lvgl/src/core/lv_refr.c ****         sub_area.x2 = area_p->x2;
 4262              		.loc 1 684 21 view .LVU1413
 4263 0154 ADF81020 		strh	r2, [sp, #16]	@ movhi
 685:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4264              		.loc 1 685 9 is_stmt 1 view .LVU1414
 685:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4265              		.loc 1 685 29 is_stmt 0 view .LVU1415
 4266 0158 B7F90420 		ldrsh	r2, [r7, #4]
 685:lvgl/src/core/lv_refr.c ****         sub_area.y1 = row;
 4267              		.loc 1 685 21 view .LVU1416
 4268 015c ADF81420 		strh	r2, [sp, #20]	@ movhi
 686:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 4269              		.loc 1 686 9 is_stmt 1 view .LVU1417
 686:lvgl/src/core/lv_refr.c ****         sub_area.y2 = y2;
 4270              		.loc 1 686 21 is_stmt 0 view .LVU1418
 4271 0160 ADF81230 		strh	r3, [sp, #18]	@ movhi
 687:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 132


 4272              		.loc 1 687 9 is_stmt 1 view .LVU1419
 687:lvgl/src/core/lv_refr.c ****         draw_ctx->buf_area = &sub_area;
 4273              		.loc 1 687 21 is_stmt 0 view .LVU1420
 4274 0164 ADF81660 		strh	r6, [sp, #22]	@ movhi
 688:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 4275              		.loc 1 688 9 is_stmt 1 view .LVU1421
 688:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 4276              		.loc 1 688 28 is_stmt 0 view .LVU1422
 4277 0168 04AB     		add	r3, sp, #16
 4278              	.LVL397:
 688:lvgl/src/core/lv_refr.c ****         draw_ctx->clip_area = &sub_area;
 4279              		.loc 1 688 28 view .LVU1423
 4280 016a 6B60     		str	r3, [r5, #4]
 689:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 4281              		.loc 1 689 9 is_stmt 1 view .LVU1424
 689:lvgl/src/core/lv_refr.c ****         draw_ctx->buf = disp_refr->driver->draw_buf->buf_act;
 4282              		.loc 1 689 29 is_stmt 0 view .LVU1425
 4283 016c AB60     		str	r3, [r5, #8]
 690:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 4284              		.loc 1 690 9 is_stmt 1 view .LVU1426
 690:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 4285              		.loc 1 690 34 is_stmt 0 view .LVU1427
 4286 016e 084B     		ldr	r3, .L276
 4287 0170 1B68     		ldr	r3, [r3]
 4288 0172 1A68     		ldr	r2, [r3]
 690:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 4289              		.loc 1 690 42 view .LVU1428
 4290 0174 D268     		ldr	r2, [r2, #12]
 690:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 4291              		.loc 1 690 52 view .LVU1429
 4292 0176 9268     		ldr	r2, [r2, #8]
 690:lvgl/src/core/lv_refr.c ****         disp_refr->driver->draw_buf->last_part = 1;
 4293              		.loc 1 690 23 view .LVU1430
 4294 0178 2A60     		str	r2, [r5]
 4295              	.LVL398:
 691:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4296              		.loc 1 691 9 is_stmt 1 view .LVU1431
 691:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4297              		.loc 1 691 18 is_stmt 0 view .LVU1432
 4298 017a 1B68     		ldr	r3, [r3]
 691:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4299              		.loc 1 691 26 view .LVU1433
 4300 017c DA68     		ldr	r2, [r3, #12]
 691:lvgl/src/core/lv_refr.c ****         refr_area_part(draw_ctx);
 4301              		.loc 1 691 48 view .LVU1434
 4302 017e 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4303 0180 43F00203 		orr	r3, r3, #2
 4304 0184 1376     		strb	r3, [r2, #24]
 692:lvgl/src/core/lv_refr.c ****     }
 4305              		.loc 1 692 9 is_stmt 1 view .LVU1435
 4306 0186 2846     		mov	r0, r5
 4307 0188 FFF7FEFF 		bl	refr_area_part
 4308              	.LVL399:
 4309 018c DDE7     		b	.L258
 4310              	.L277:
 4311 018e 00BF     		.align	2
 4312              	.L276:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 133


 4313 0190 00000000 		.word	.LANCHOR0
 4314              		.cfi_endproc
 4315              	.LFE179:
 4317              		.section	.text.refr_invalid_areas,"ax",%progbits
 4318              		.align	1
 4319              		.syntax unified
 4320              		.thumb
 4321              		.thumb_func
 4323              	refr_invalid_areas:
 4324              	.LFB178:
 586:lvgl/src/core/lv_refr.c ****     px_num = 0;
 4325              		.loc 1 586 1 view -0
 4326              		.cfi_startproc
 4327              		@ args = 0, pretend = 0, frame = 0
 4328              		@ frame_needed = 0, uses_anonymous_args = 0
 4329 0000 70B5     		push	{r4, r5, r6, lr}
 4330              		.cfi_def_cfa_offset 16
 4331              		.cfi_offset 4, -16
 4332              		.cfi_offset 5, -12
 4333              		.cfi_offset 6, -8
 4334              		.cfi_offset 14, -4
 587:lvgl/src/core/lv_refr.c **** 
 4335              		.loc 1 587 5 view .LVU1437
 587:lvgl/src/core/lv_refr.c **** 
 4336              		.loc 1 587 12 is_stmt 0 view .LVU1438
 4337 0002 304B     		ldr	r3, .L291
 4338 0004 0022     		movs	r2, #0
 4339 0006 1A60     		str	r2, [r3]
 589:lvgl/src/core/lv_refr.c **** 
 4340              		.loc 1 589 5 is_stmt 1 view .LVU1439
 589:lvgl/src/core/lv_refr.c **** 
 4341              		.loc 1 589 17 is_stmt 0 view .LVU1440
 4342 0008 2F4B     		ldr	r3, .L291+4
 4343 000a 1A68     		ldr	r2, [r3]
 4344 000c B2F85441 		ldrh	r4, [r2, #340]
 589:lvgl/src/core/lv_refr.c **** 
 4345              		.loc 1 589 7 view .LVU1441
 4346 0010 002C     		cmp	r4, #0
 4347 0012 55D0     		beq	.L278
 592:lvgl/src/core/lv_refr.c ****     int32_t last_i = 0;
 4348              		.loc 1 592 5 is_stmt 1 view .LVU1442
 593:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 4349              		.loc 1 593 5 view .LVU1443
 4350              	.LVL400:
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4351              		.loc 1 594 5 view .LVU1444
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4352              		.loc 1 594 11 is_stmt 0 view .LVU1445
 4353 0014 013C     		subs	r4, r4, #1
 4354              	.LVL401:
 4355              	.L280:
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4356              		.loc 1 594 35 is_stmt 1 discriminator 1 view .LVU1446
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4357              		.loc 1 594 5 is_stmt 0 discriminator 1 view .LVU1447
 4358 0016 002C     		cmp	r4, #0
 4359 0018 05DB     		blt	.L289
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 134


 595:lvgl/src/core/lv_refr.c ****             last_i = i;
 4360              		.loc 1 595 9 is_stmt 1 view .LVU1448
 595:lvgl/src/core/lv_refr.c ****             last_i = i;
 4361              		.loc 1 595 38 is_stmt 0 view .LVU1449
 4362 001a 1319     		adds	r3, r2, r4
 4363 001c 93F83431 		ldrb	r3, [r3, #308]	@ zero_extendqisi2
 595:lvgl/src/core/lv_refr.c ****             last_i = i;
 4364              		.loc 1 595 11 view .LVU1450
 4365 0020 13B1     		cbz	r3, .L281
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4366              		.loc 1 594 43 is_stmt 1 discriminator 2 view .LVU1451
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4367              		.loc 1 594 44 is_stmt 0 discriminator 2 view .LVU1452
 4368 0022 013C     		subs	r4, r4, #1
 4369              	.LVL402:
 594:lvgl/src/core/lv_refr.c ****         if(disp_refr->inv_area_joined[i] == 0) {
 4370              		.loc 1 594 44 discriminator 2 view .LVU1453
 4371 0024 F7E7     		b	.L280
 4372              	.L289:
 593:lvgl/src/core/lv_refr.c ****     for(i = disp_refr->inv_p - 1; i >= 0; i--) {
 4373              		.loc 1 593 13 view .LVU1454
 4374 0026 0024     		movs	r4, #0
 4375              	.LVL403:
 4376              	.L281:
 602:lvgl/src/core/lv_refr.c ****         disp_refr->driver->render_start_cb(disp_refr->driver);
 4377              		.loc 1 602 5 is_stmt 1 view .LVU1455
 602:lvgl/src/core/lv_refr.c ****         disp_refr->driver->render_start_cb(disp_refr->driver);
 4378              		.loc 1 602 17 is_stmt 0 view .LVU1456
 4379 0028 1068     		ldr	r0, [r2]
 602:lvgl/src/core/lv_refr.c ****         disp_refr->driver->render_start_cb(disp_refr->driver);
 4380              		.loc 1 602 25 view .LVU1457
 4381 002a 436B     		ldr	r3, [r0, #52]
 602:lvgl/src/core/lv_refr.c ****         disp_refr->driver->render_start_cb(disp_refr->driver);
 4382              		.loc 1 602 7 view .LVU1458
 4383 002c 03B1     		cbz	r3, .L283
 603:lvgl/src/core/lv_refr.c ****     }
 4384              		.loc 1 603 9 is_stmt 1 view .LVU1459
 4385 002e 9847     		blx	r3
 4386              	.LVL404:
 4387              	.L283:
 606:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 4388              		.loc 1 606 5 view .LVU1460
 606:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 4389              		.loc 1 606 14 is_stmt 0 view .LVU1461
 4390 0030 254B     		ldr	r3, .L291+4
 4391 0032 1B68     		ldr	r3, [r3]
 4392 0034 1A68     		ldr	r2, [r3]
 606:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 4393              		.loc 1 606 22 view .LVU1462
 4394 0036 D168     		ldr	r1, [r2, #12]
 606:lvgl/src/core/lv_refr.c ****     disp_refr->driver->draw_buf->last_part = 0;
 4395              		.loc 1 606 44 view .LVU1463
 4396 0038 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 4397 003a 6FF30002 		bfc	r2, #0, #1
 4398 003e 0A76     		strb	r2, [r1, #24]
 607:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = true;
 4399              		.loc 1 607 5 is_stmt 1 view .LVU1464
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 135


 607:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = true;
 4400              		.loc 1 607 14 is_stmt 0 view .LVU1465
 4401 0040 1A68     		ldr	r2, [r3]
 607:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = true;
 4402              		.loc 1 607 22 view .LVU1466
 4403 0042 D168     		ldr	r1, [r2, #12]
 607:lvgl/src/core/lv_refr.c ****     disp_refr->rendering_in_progress = true;
 4404              		.loc 1 607 44 view .LVU1467
 4405 0044 0A7E     		ldrb	r2, [r1, #24]	@ zero_extendqisi2
 4406 0046 6FF34102 		bfc	r2, #1, #1
 4407 004a 0A76     		strb	r2, [r1, #24]
 608:lvgl/src/core/lv_refr.c **** 
 4408              		.loc 1 608 5 is_stmt 1 view .LVU1468
 608:lvgl/src/core/lv_refr.c **** 
 4409              		.loc 1 608 38 is_stmt 0 view .LVU1469
 4410 004c 93F82820 		ldrb	r2, [r3, #40]	@ zero_extendqisi2
 4411 0050 42F00402 		orr	r2, r2, #4
 4412 0054 83F82820 		strb	r2, [r3, #40]
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4413              		.loc 1 610 5 is_stmt 1 view .LVU1470
 4414              	.LVL405:
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4415              		.loc 1 610 11 is_stmt 0 view .LVU1471
 4416 0058 0025     		movs	r5, #0
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4417              		.loc 1 610 5 view .LVU1472
 4418 005a 17E0     		b	.L284
 4419              	.LVL406:
 4420              	.L286:
 615:lvgl/src/core/lv_refr.c ****             refr_area(&disp_refr->inv_areas[i]);
 4421              		.loc 1 615 13 is_stmt 1 view .LVU1473
 615:lvgl/src/core/lv_refr.c ****             refr_area(&disp_refr->inv_areas[i]);
 4422              		.loc 1 615 22 is_stmt 0 view .LVU1474
 4423 005c 0368     		ldr	r3, [r0]
 615:lvgl/src/core/lv_refr.c ****             refr_area(&disp_refr->inv_areas[i]);
 4424              		.loc 1 615 30 view .LVU1475
 4425 005e DA68     		ldr	r2, [r3, #12]
 615:lvgl/src/core/lv_refr.c ****             refr_area(&disp_refr->inv_areas[i]);
 4426              		.loc 1 615 52 view .LVU1476
 4427 0060 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4428 0062 6FF34103 		bfc	r3, #1, #1
 4429 0066 1376     		strb	r3, [r2, #24]
 616:lvgl/src/core/lv_refr.c **** 
 4430              		.loc 1 616 13 is_stmt 1 view .LVU1477
 616:lvgl/src/core/lv_refr.c **** 
 4431              		.loc 1 616 23 is_stmt 0 view .LVU1478
 4432 0068 AB1D     		adds	r3, r5, #6
 4433 006a DE00     		lsls	r6, r3, #3
 4434 006c 00EBC300 		add	r0, r0, r3, lsl #3
 616:lvgl/src/core/lv_refr.c **** 
 4435              		.loc 1 616 13 view .LVU1479
 4436 0070 0430     		adds	r0, r0, #4
 4437 0072 FFF7FEFF 		bl	refr_area
 4438              	.LVL407:
 618:lvgl/src/core/lv_refr.c ****         }
 4439              		.loc 1 618 13 is_stmt 1 view .LVU1480
 618:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 136


 4440              		.loc 1 618 50 is_stmt 0 view .LVU1481
 4441 0076 144B     		ldr	r3, .L291+4
 4442 0078 1868     		ldr	r0, [r3]
 618:lvgl/src/core/lv_refr.c ****         }
 4443              		.loc 1 618 40 view .LVU1482
 4444 007a 3044     		add	r0, r0, r6
 618:lvgl/src/core/lv_refr.c ****         }
 4445              		.loc 1 618 23 view .LVU1483
 4446 007c 0430     		adds	r0, r0, #4
 4447 007e FFF7FEFF 		bl	lv_area_get_size
 4448              	.LVL408:
 618:lvgl/src/core/lv_refr.c ****         }
 4449              		.loc 1 618 20 view .LVU1484
 4450 0082 104A     		ldr	r2, .L291
 4451 0084 1368     		ldr	r3, [r2]
 4452 0086 0344     		add	r3, r3, r0
 4453 0088 1360     		str	r3, [r2]
 4454              	.L285:
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4455              		.loc 1 610 38 is_stmt 1 discriminator 2 view .LVU1485
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4456              		.loc 1 610 39 is_stmt 0 discriminator 2 view .LVU1486
 4457 008a 0135     		adds	r5, r5, #1
 4458              	.LVL409:
 4459              	.L284:
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4460              		.loc 1 610 16 is_stmt 1 discriminator 1 view .LVU1487
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4461              		.loc 1 610 29 is_stmt 0 discriminator 1 view .LVU1488
 4462 008c 0E4B     		ldr	r3, .L291+4
 4463 008e 1868     		ldr	r0, [r3]
 4464 0090 B0F85431 		ldrh	r3, [r0, #340]
 610:lvgl/src/core/lv_refr.c ****         /*Refresh the unjoined areas*/
 4465              		.loc 1 610 5 discriminator 1 view .LVU1489
 4466 0094 AB42     		cmp	r3, r5
 4467 0096 0DDD     		ble	.L290
 612:lvgl/src/core/lv_refr.c **** 
 4468              		.loc 1 612 9 is_stmt 1 view .LVU1490
 612:lvgl/src/core/lv_refr.c **** 
 4469              		.loc 1 612 38 is_stmt 0 view .LVU1491
 4470 0098 4319     		adds	r3, r0, r5
 4471 009a 93F83431 		ldrb	r3, [r3, #308]	@ zero_extendqisi2
 612:lvgl/src/core/lv_refr.c **** 
 4472              		.loc 1 612 11 view .LVU1492
 4473 009e 002B     		cmp	r3, #0
 4474 00a0 F3D1     		bne	.L285
 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4475              		.loc 1 614 13 is_stmt 1 view .LVU1493
 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4476              		.loc 1 614 15 is_stmt 0 view .LVU1494
 4477 00a2 A542     		cmp	r5, r4
 4478 00a4 DAD1     		bne	.L286
 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4479              		.loc 1 614 29 is_stmt 1 discriminator 1 view .LVU1495
 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4480              		.loc 1 614 38 is_stmt 0 discriminator 1 view .LVU1496
 4481 00a6 0368     		ldr	r3, [r0]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 137


 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4482              		.loc 1 614 46 discriminator 1 view .LVU1497
 4483 00a8 DA68     		ldr	r2, [r3, #12]
 614:lvgl/src/core/lv_refr.c ****             disp_refr->driver->draw_buf->last_part = 0;
 4484              		.loc 1 614 68 discriminator 1 view .LVU1498
 4485 00aa 137E     		ldrb	r3, [r2, #24]	@ zero_extendqisi2
 4486 00ac 43F00103 		orr	r3, r3, #1
 4487 00b0 1376     		strb	r3, [r2, #24]
 4488 00b2 D3E7     		b	.L286
 4489              	.L290:
 622:lvgl/src/core/lv_refr.c **** }
 4490              		.loc 1 622 5 is_stmt 1 view .LVU1499
 622:lvgl/src/core/lv_refr.c **** }
 4491              		.loc 1 622 38 is_stmt 0 view .LVU1500
 4492 00b4 90F82830 		ldrb	r3, [r0, #40]	@ zero_extendqisi2
 4493 00b8 6FF38203 		bfc	r3, #2, #1
 4494 00bc 80F82830 		strb	r3, [r0, #40]
 4495              	.LVL410:
 4496              	.L278:
 623:lvgl/src/core/lv_refr.c **** 
 4497              		.loc 1 623 1 view .LVU1501
 4498 00c0 70BD     		pop	{r4, r5, r6, pc}
 4499              	.L292:
 4500 00c2 00BF     		.align	2
 4501              	.L291:
 4502 00c4 00000000 		.word	.LANCHOR3
 4503 00c8 00000000 		.word	.LANCHOR0
 4504              		.cfi_endproc
 4505              	.LFE178:
 4507              		.section	.text._lv_inv_area,"ax",%progbits
 4508              		.align	1
 4509              		.global	_lv_inv_area
 4510              		.syntax unified
 4511              		.thumb
 4512              		.thumb_func
 4514              	_lv_inv_area:
 4515              	.LVL411:
 4516              	.LFB170:
 206:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 4517              		.loc 1 206 1 is_stmt 1 view -0
 4518              		.cfi_startproc
 4519              		@ args = 0, pretend = 0, frame = 16
 4520              		@ frame_needed = 0, uses_anonymous_args = 0
 206:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 4521              		.loc 1 206 1 is_stmt 0 view .LVU1503
 4522 0000 30B5     		push	{r4, r5, lr}
 4523              		.cfi_def_cfa_offset 12
 4524              		.cfi_offset 4, -12
 4525              		.cfi_offset 5, -8
 4526              		.cfi_offset 14, -4
 4527 0002 85B0     		sub	sp, sp, #20
 4528              		.cfi_def_cfa_offset 32
 4529 0004 0D46     		mov	r5, r1
 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4530              		.loc 1 207 5 is_stmt 1 view .LVU1504
 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4531              		.loc 1 207 7 is_stmt 0 view .LVU1505
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 138


 4532 0006 0446     		mov	r4, r0
 4533 0008 0028     		cmp	r0, #0
 4534 000a 3FD0     		beq	.L307
 4535              	.LVL412:
 4536              	.L294:
 208:lvgl/src/core/lv_refr.c ****     if(!lv_disp_is_invalidation_enabled(disp)) return;
 4537              		.loc 1 208 5 is_stmt 1 view .LVU1506
 208:lvgl/src/core/lv_refr.c ****     if(!lv_disp_is_invalidation_enabled(disp)) return;
 4538              		.loc 1 208 7 is_stmt 0 view .LVU1507
 4539 000c 002C     		cmp	r4, #0
 4540 000e 44D0     		beq	.L293
 209:lvgl/src/core/lv_refr.c **** 
 4541              		.loc 1 209 5 is_stmt 1 view .LVU1508
 209:lvgl/src/core/lv_refr.c **** 
 4542              		.loc 1 209 9 is_stmt 0 view .LVU1509
 4543 0010 2046     		mov	r0, r4
 209:lvgl/src/core/lv_refr.c **** 
 4544              		.loc 1 209 9 view .LVU1510
 4545 0012 FFF7FEFF 		bl	lv_disp_is_invalidation_enabled
 4546              	.LVL413:
 209:lvgl/src/core/lv_refr.c **** 
 4547              		.loc 1 209 7 view .LVU1511
 4548 0016 0028     		cmp	r0, #0
 4549 0018 3FD0     		beq	.L293
 211:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("detected modifying dirty areas in render");
 4550              		.loc 1 211 5 is_stmt 1 view .LVU1512
 211:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("detected modifying dirty areas in render");
 4551              		.loc 1 211 8 is_stmt 0 view .LVU1513
 4552 001a 94F82830 		ldrb	r3, [r4, #40]	@ zero_extendqisi2
 211:lvgl/src/core/lv_refr.c ****         LV_LOG_ERROR("detected modifying dirty areas in render");
 4553              		.loc 1 211 7 view .LVU1514
 4554 001e 13F0040F 		tst	r3, #4
 4555 0022 3AD1     		bne	.L293
 217:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 4556              		.loc 1 217 5 is_stmt 1 view .LVU1515
 217:lvgl/src/core/lv_refr.c ****         disp->inv_p = 0;
 4557              		.loc 1 217 7 is_stmt 0 view .LVU1516
 4558 0024 B5B3     		cbz	r5, .L308
 222:lvgl/src/core/lv_refr.c ****     scr_area.x1 = 0;
 4559              		.loc 1 222 5 is_stmt 1 view .LVU1517
 223:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 4560              		.loc 1 223 5 view .LVU1518
 223:lvgl/src/core/lv_refr.c ****     scr_area.y1 = 0;
 4561              		.loc 1 223 17 is_stmt 0 view .LVU1519
 4562 0026 0023     		movs	r3, #0
 4563 0028 ADF80830 		strh	r3, [sp, #8]	@ movhi
 224:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 4564              		.loc 1 224 5 is_stmt 1 view .LVU1520
 224:lvgl/src/core/lv_refr.c ****     scr_area.x2 = lv_disp_get_hor_res(disp) - 1;
 4565              		.loc 1 224 17 is_stmt 0 view .LVU1521
 4566 002c ADF80A30 		strh	r3, [sp, #10]	@ movhi
 225:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 4567              		.loc 1 225 5 is_stmt 1 view .LVU1522
 225:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 4568              		.loc 1 225 19 is_stmt 0 view .LVU1523
 4569 0030 2046     		mov	r0, r4
 4570 0032 FFF7FEFF 		bl	lv_disp_get_hor_res
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 139


 4571              	.LVL414:
 4572 0036 80B2     		uxth	r0, r0
 225:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 4573              		.loc 1 225 45 view .LVU1524
 4574 0038 0138     		subs	r0, r0, #1
 225:lvgl/src/core/lv_refr.c ****     scr_area.y2 = lv_disp_get_ver_res(disp) - 1;
 4575              		.loc 1 225 17 view .LVU1525
 4576 003a ADF80C00 		strh	r0, [sp, #12]	@ movhi
 226:lvgl/src/core/lv_refr.c **** 
 4577              		.loc 1 226 5 is_stmt 1 view .LVU1526
 226:lvgl/src/core/lv_refr.c **** 
 4578              		.loc 1 226 19 is_stmt 0 view .LVU1527
 4579 003e 2046     		mov	r0, r4
 4580 0040 FFF7FEFF 		bl	lv_disp_get_ver_res
 4581              	.LVL415:
 4582 0044 80B2     		uxth	r0, r0
 226:lvgl/src/core/lv_refr.c **** 
 4583              		.loc 1 226 45 view .LVU1528
 4584 0046 0138     		subs	r0, r0, #1
 226:lvgl/src/core/lv_refr.c **** 
 4585              		.loc 1 226 17 view .LVU1529
 4586 0048 ADF80E00 		strh	r0, [sp, #14]	@ movhi
 228:lvgl/src/core/lv_refr.c ****     bool suc;
 4587              		.loc 1 228 5 is_stmt 1 view .LVU1530
 229:lvgl/src/core/lv_refr.c **** 
 4588              		.loc 1 229 5 view .LVU1531
 231:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 4589              		.loc 1 231 5 view .LVU1532
 231:lvgl/src/core/lv_refr.c ****     if(suc == false)  return; /*Out of the screen*/
 4590              		.loc 1 231 11 is_stmt 0 view .LVU1533
 4591 004c 02AA     		add	r2, sp, #8
 4592 004e 2946     		mov	r1, r5
 4593 0050 6846     		mov	r0, sp
 4594 0052 FFF7FEFF 		bl	_lv_area_intersect
 4595              	.LVL416:
 232:lvgl/src/core/lv_refr.c **** 
 4596              		.loc 1 232 5 is_stmt 1 view .LVU1534
 232:lvgl/src/core/lv_refr.c **** 
 4597              		.loc 1 232 7 is_stmt 0 view .LVU1535
 4598 0056 00B3     		cbz	r0, .L293
 235:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 4599              		.loc 1 235 5 is_stmt 1 view .LVU1536
 235:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 4600              		.loc 1 235 12 is_stmt 0 view .LVU1537
 4601 0058 2068     		ldr	r0, [r4]
 4602              	.LVL417:
 235:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 4603              		.loc 1 235 8 view .LVU1538
 4604 005a 037C     		ldrb	r3, [r0, #16]	@ zero_extendqisi2
 235:lvgl/src/core/lv_refr.c ****         disp->inv_areas[0] = scr_area;
 4605              		.loc 1 235 7 view .LVU1539
 4606 005c 13F0020F 		tst	r3, #2
 4607 0060 1DD1     		bne	.L309
 242:lvgl/src/core/lv_refr.c **** 
 4608              		.loc 1 242 5 is_stmt 1 view .LVU1540
 242:lvgl/src/core/lv_refr.c **** 
 4609              		.loc 1 242 20 is_stmt 0 view .LVU1541
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 140


 4610 0062 8369     		ldr	r3, [r0, #24]
 242:lvgl/src/core/lv_refr.c **** 
 4611              		.loc 1 242 7 view .LVU1542
 4612 0064 0BB1     		cbz	r3, .L299
 242:lvgl/src/core/lv_refr.c **** 
 4613              		.loc 1 242 34 is_stmt 1 discriminator 1 view .LVU1543
 4614 0066 6946     		mov	r1, sp
 4615 0068 9847     		blx	r3
 4616              	.LVL418:
 4617              	.L299:
 206:lvgl/src/core/lv_refr.c ****     if(!disp) disp = lv_disp_get_default();
 4618              		.loc 1 206 1 is_stmt 0 discriminator 1 view .LVU1544
 4619 006a 0025     		movs	r5, #0
 4620              	.LVL419:
 4621              	.L300:
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4622              		.loc 1 246 16 is_stmt 1 discriminator 1 view .LVU1545
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4623              		.loc 1 246 24 is_stmt 0 discriminator 1 view .LVU1546
 4624 006c B4F85431 		ldrh	r3, [r4, #340]
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4625              		.loc 1 246 5 discriminator 1 view .LVU1547
 4626 0070 AB42     		cmp	r3, r5
 4627 0072 24D9     		bls	.L310
 247:lvgl/src/core/lv_refr.c ****     }
 4628              		.loc 1 247 9 is_stmt 1 view .LVU1548
 247:lvgl/src/core/lv_refr.c ****     }
 4629              		.loc 1 247 38 is_stmt 0 view .LVU1549
 4630 0074 A91D     		adds	r1, r5, #6
 4631 0076 04EBC101 		add	r1, r4, r1, lsl #3
 247:lvgl/src/core/lv_refr.c ****     }
 4632              		.loc 1 247 12 view .LVU1550
 4633 007a 0022     		movs	r2, #0
 4634 007c 0431     		adds	r1, r1, #4
 4635 007e 6846     		mov	r0, sp
 4636 0080 FFF7FEFF 		bl	_lv_area_is_in
 4637              	.LVL420:
 247:lvgl/src/core/lv_refr.c ****     }
 4638              		.loc 1 247 11 view .LVU1551
 4639 0084 48B9     		cbnz	r0, .L293
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4640              		.loc 1 246 33 is_stmt 1 discriminator 2 view .LVU1552
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4641              		.loc 1 246 34 is_stmt 0 discriminator 2 view .LVU1553
 4642 0086 0135     		adds	r5, r5, #1
 4643              	.LVL421:
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4644              		.loc 1 246 34 discriminator 2 view .LVU1554
 4645 0088 ADB2     		uxth	r5, r5
 4646              	.LVL422:
 246:lvgl/src/core/lv_refr.c ****         if(_lv_area_is_in(&com_area, &disp->inv_areas[i], 0) != false) return;
 4647              		.loc 1 246 34 discriminator 2 view .LVU1555
 4648 008a EFE7     		b	.L300
 4649              	.LVL423:
 4650              	.L307:
 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4651              		.loc 1 207 15 is_stmt 1 discriminator 1 view .LVU1556
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 141


 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4652              		.loc 1 207 22 is_stmt 0 discriminator 1 view .LVU1557
 4653 008c FFF7FEFF 		bl	lv_disp_get_default
 4654              	.LVL424:
 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4655              		.loc 1 207 22 discriminator 1 view .LVU1558
 4656 0090 0446     		mov	r4, r0
 4657              	.LVL425:
 207:lvgl/src/core/lv_refr.c ****     if(!disp) return;
 4658              		.loc 1 207 22 discriminator 1 view .LVU1559
 4659 0092 BBE7     		b	.L294
 4660              	.LVL426:
 4661              	.L308:
 218:lvgl/src/core/lv_refr.c ****         return;
 4662              		.loc 1 218 9 is_stmt 1 view .LVU1560
 218:lvgl/src/core/lv_refr.c ****         return;
 4663              		.loc 1 218 21 is_stmt 0 view .LVU1561
 4664 0094 0023     		movs	r3, #0
 4665 0096 A4F85431 		strh	r3, [r4, #340]	@ movhi
 219:lvgl/src/core/lv_refr.c ****     }
 4666              		.loc 1 219 9 is_stmt 1 view .LVU1562
 4667              	.LVL427:
 4668              	.L293:
 260:lvgl/src/core/lv_refr.c **** 
 4669              		.loc 1 260 1 is_stmt 0 view .LVU1563
 4670 009a 05B0     		add	sp, sp, #20
 4671              		.cfi_remember_state
 4672              		.cfi_def_cfa_offset 12
 4673              		@ sp needed
 4674 009c 30BD     		pop	{r4, r5, pc}
 4675              	.LVL428:
 4676              	.L309:
 4677              		.cfi_restore_state
 236:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 4678              		.loc 1 236 9 is_stmt 1 view .LVU1564
 236:lvgl/src/core/lv_refr.c ****         disp->inv_p = 1;
 4679              		.loc 1 236 28 is_stmt 0 view .LVU1565
 4680 009e 04F13403 		add	r3, r4, #52
 4681 00a2 04AA     		add	r2, sp, #16
 4682 00a4 12E90300 		ldmdb	r2, {r0, r1}
 4683 00a8 83E80300 		stm	r3, {r0, r1}
 237:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 4684              		.loc 1 237 9 is_stmt 1 view .LVU1566
 237:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 4685              		.loc 1 237 21 is_stmt 0 view .LVU1567
 4686 00ac 0123     		movs	r3, #1
 4687 00ae A4F85431 		strh	r3, [r4, #340]	@ movhi
 238:lvgl/src/core/lv_refr.c ****         return;
 4688              		.loc 1 238 9 is_stmt 1 view .LVU1568
 238:lvgl/src/core/lv_refr.c ****         return;
 4689              		.loc 1 238 16 is_stmt 0 view .LVU1569
 4690 00b2 6068     		ldr	r0, [r4, #4]
 238:lvgl/src/core/lv_refr.c ****         return;
 4691              		.loc 1 238 11 view .LVU1570
 4692 00b4 0028     		cmp	r0, #0
 4693 00b6 F0D0     		beq	.L293
 238:lvgl/src/core/lv_refr.c ****         return;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 142


 4694              		.loc 1 238 30 is_stmt 1 discriminator 1 view .LVU1571
 4695 00b8 FFF7FEFF 		bl	lv_timer_resume
 4696              	.LVL429:
 239:lvgl/src/core/lv_refr.c ****     }
 4697              		.loc 1 239 9 discriminator 1 view .LVU1572
 4698 00bc EDE7     		b	.L293
 4699              	.LVL430:
 4700              	.L310:
 251:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 4701              		.loc 1 251 5 view .LVU1573
 251:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &com_area);
 4702              		.loc 1 251 7 is_stmt 0 view .LVU1574
 4703 00be 1F2B     		cmp	r3, #31
 4704 00c0 19D8     		bhi	.L302
 252:lvgl/src/core/lv_refr.c ****     }
 4705              		.loc 1 252 9 is_stmt 1 view .LVU1575
 4706              	.LVL431:
 4707              	.LBB138:
 4708              	.LBI138:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 4709              		.loc 2 110 20 view .LVU1576
 4710              	.LBB139:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4711              		.loc 2 112 5 view .LVU1577
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4712              		.loc 2 112 19 is_stmt 0 view .LVU1578
 4713 00c2 BDF90020 		ldrsh	r2, [sp]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4714              		.loc 2 112 14 view .LVU1579
 4715 00c6 0633     		adds	r3, r3, #6
 4716              	.LVL432:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4717              		.loc 2 112 14 view .LVU1580
 4718 00c8 04EBC303 		add	r3, r4, r3, lsl #3
 4719 00cc 9A80     		strh	r2, [r3, #4]	@ movhi
 4720              	.LVL433:
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4721              		.loc 2 113 5 is_stmt 1 view .LVU1581
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4722              		.loc 2 113 19 is_stmt 0 view .LVU1582
 4723 00ce BDF90220 		ldrsh	r2, [sp, #2]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4724              		.loc 2 113 14 view .LVU1583
 4725 00d2 DA80     		strh	r2, [r3, #6]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4726              		.loc 2 114 5 is_stmt 1 view .LVU1584
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4727              		.loc 2 114 19 is_stmt 0 view .LVU1585
 4728 00d4 BDF90420 		ldrsh	r2, [sp, #4]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4729              		.loc 2 114 14 view .LVU1586
 4730 00d8 1A81     		strh	r2, [r3, #8]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4731              		.loc 2 115 5 is_stmt 1 view .LVU1587
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4732              		.loc 2 115 19 is_stmt 0 view .LVU1588
 4733 00da BDF90620 		ldrsh	r2, [sp, #6]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 143


 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4734              		.loc 2 115 14 view .LVU1589
 4735 00de 5A81     		strh	r2, [r3, #10]	@ movhi
 4736              	.LVL434:
 4737              	.L303:
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4738              		.loc 2 115 14 view .LVU1590
 4739              	.LBE139:
 4740              	.LBE138:
 258:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 4741              		.loc 1 258 5 is_stmt 1 view .LVU1591
 258:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 4742              		.loc 1 258 9 is_stmt 0 view .LVU1592
 4743 00e0 B4F85431 		ldrh	r3, [r4, #340]
 258:lvgl/src/core/lv_refr.c ****     if(disp->refr_timer) lv_timer_resume(disp->refr_timer);
 4744              		.loc 1 258 16 view .LVU1593
 4745 00e4 0133     		adds	r3, r3, #1
 4746 00e6 A4F85431 		strh	r3, [r4, #340]	@ movhi
 259:lvgl/src/core/lv_refr.c **** }
 4747              		.loc 1 259 5 is_stmt 1 view .LVU1594
 259:lvgl/src/core/lv_refr.c **** }
 4748              		.loc 1 259 12 is_stmt 0 view .LVU1595
 4749 00ea 6068     		ldr	r0, [r4, #4]
 259:lvgl/src/core/lv_refr.c **** }
 4750              		.loc 1 259 7 view .LVU1596
 4751 00ec 0028     		cmp	r0, #0
 4752 00ee D4D0     		beq	.L293
 259:lvgl/src/core/lv_refr.c **** }
 4753              		.loc 1 259 26 is_stmt 1 discriminator 1 view .LVU1597
 4754 00f0 FFF7FEFF 		bl	lv_timer_resume
 4755              	.LVL435:
 4756 00f4 D1E7     		b	.L293
 4757              	.L302:
 255:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 4758              		.loc 1 255 9 view .LVU1598
 255:lvgl/src/core/lv_refr.c ****         lv_area_copy(&disp->inv_areas[disp->inv_p], &scr_area);
 4759              		.loc 1 255 21 is_stmt 0 view .LVU1599
 4760 00f6 0023     		movs	r3, #0
 4761 00f8 A4F85431 		strh	r3, [r4, #340]	@ movhi
 256:lvgl/src/core/lv_refr.c ****     }
 4762              		.loc 1 256 9 is_stmt 1 view .LVU1600
 4763              	.LVL436:
 4764              	.LBB140:
 4765              	.LBI140:
 110:lvgl/src/core/../misc/../font/../misc/lv_area.h **** {
 4766              		.loc 2 110 20 view .LVU1601
 4767              	.LBB141:
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4768              		.loc 2 112 5 view .LVU1602
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4769              		.loc 2 112 19 is_stmt 0 view .LVU1603
 4770 00fc BDF90830 		ldrsh	r3, [sp, #8]
 112:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 4771              		.loc 2 112 14 view .LVU1604
 4772 0100 A386     		strh	r3, [r4, #52]	@ movhi
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4773              		.loc 2 113 5 is_stmt 1 view .LVU1605
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 144


 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4774              		.loc 2 113 19 is_stmt 0 view .LVU1606
 4775 0102 BDF90A30 		ldrsh	r3, [sp, #10]
 113:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 4776              		.loc 2 113 14 view .LVU1607
 4777 0106 E386     		strh	r3, [r4, #54]	@ movhi
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4778              		.loc 2 114 5 is_stmt 1 view .LVU1608
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4779              		.loc 2 114 19 is_stmt 0 view .LVU1609
 4780 0108 BDF90C30 		ldrsh	r3, [sp, #12]
 114:lvgl/src/core/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 4781              		.loc 2 114 14 view .LVU1610
 4782 010c 2387     		strh	r3, [r4, #56]	@ movhi
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4783              		.loc 2 115 5 is_stmt 1 view .LVU1611
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4784              		.loc 2 115 19 is_stmt 0 view .LVU1612
 4785 010e BDF90E30 		ldrsh	r3, [sp, #14]
 115:lvgl/src/core/../misc/../font/../misc/lv_area.h **** }
 4786              		.loc 2 115 14 view .LVU1613
 4787 0112 6387     		strh	r3, [r4, #58]	@ movhi
 116:lvgl/src/core/../misc/../font/../misc/lv_area.h **** 
 4788              		.loc 2 116 1 view .LVU1614
 4789 0114 E4E7     		b	.L303
 4790              	.LBE141:
 4791              	.LBE140:
 4792              		.cfi_endproc
 4793              	.LFE170:
 4795              		.section	.text._lv_refr_get_disp_refreshing,"ax",%progbits
 4796              		.align	1
 4797              		.global	_lv_refr_get_disp_refreshing
 4798              		.syntax unified
 4799              		.thumb
 4800              		.thumb_func
 4802              	_lv_refr_get_disp_refreshing:
 4803              	.LFB171:
 267:lvgl/src/core/lv_refr.c ****     return disp_refr;
 4804              		.loc 1 267 1 is_stmt 1 view -0
 4805              		.cfi_startproc
 4806              		@ args = 0, pretend = 0, frame = 0
 4807              		@ frame_needed = 0, uses_anonymous_args = 0
 4808              		@ link register save eliminated.
 268:lvgl/src/core/lv_refr.c **** }
 4809              		.loc 1 268 5 view .LVU1616
 269:lvgl/src/core/lv_refr.c **** 
 4810              		.loc 1 269 1 is_stmt 0 view .LVU1617
 4811 0000 014B     		ldr	r3, .L312
 4812 0002 1868     		ldr	r0, [r3]
 4813 0004 7047     		bx	lr
 4814              	.L313:
 4815 0006 00BF     		.align	2
 4816              	.L312:
 4817 0008 00000000 		.word	.LANCHOR0
 4818              		.cfi_endproc
 4819              	.LFE171:
 4821              		.section	.text._lv_refr_set_disp_refreshing,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 145


 4822              		.align	1
 4823              		.global	_lv_refr_set_disp_refreshing
 4824              		.syntax unified
 4825              		.thumb
 4826              		.thumb_func
 4828              	_lv_refr_set_disp_refreshing:
 4829              	.LVL437:
 4830              	.LFB172:
 278:lvgl/src/core/lv_refr.c ****     disp_refr = disp;
 4831              		.loc 1 278 1 is_stmt 1 view -0
 4832              		.cfi_startproc
 4833              		@ args = 0, pretend = 0, frame = 0
 4834              		@ frame_needed = 0, uses_anonymous_args = 0
 4835              		@ link register save eliminated.
 279:lvgl/src/core/lv_refr.c **** }
 4836              		.loc 1 279 5 view .LVU1619
 279:lvgl/src/core/lv_refr.c **** }
 4837              		.loc 1 279 15 is_stmt 0 view .LVU1620
 4838 0000 014B     		ldr	r3, .L315
 4839 0002 1860     		str	r0, [r3]
 280:lvgl/src/core/lv_refr.c **** 
 4840              		.loc 1 280 1 view .LVU1621
 4841 0004 7047     		bx	lr
 4842              	.L316:
 4843 0006 00BF     		.align	2
 4844              	.L315:
 4845 0008 00000000 		.word	.LANCHOR0
 4846              		.cfi_endproc
 4847              	.LFE172:
 4849              		.section	.rodata._lv_disp_refr_timer.str1.4,"aMS",%progbits,1
 4850              		.align	2
 4851              	.LC0:
 4852 0000 3F00     		.ascii	"?\000"
 4853 0002 0000     		.align	2
 4854              	.LC1:
 4855 0004 256C7520 		.ascii	"%lu FPS\012%lu%% CPU\000"
 4855      4650530A 
 4855      256C7525 
 4855      25204350 
 4855      5500
 4856              		.section	.text._lv_disp_refr_timer,"ax",%progbits
 4857              		.align	1
 4858              		.global	_lv_disp_refr_timer
 4859              		.syntax unified
 4860              		.thumb
 4861              		.thumb_func
 4863              	_lv_disp_refr_timer:
 4864              	.LVL438:
 4865              	.LFB173:
 287:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 4866              		.loc 1 287 1 is_stmt 1 view -0
 4867              		.cfi_startproc
 4868              		@ args = 0, pretend = 0, frame = 8
 4869              		@ frame_needed = 0, uses_anonymous_args = 0
 287:lvgl/src/core/lv_refr.c ****     REFR_TRACE("begin");
 4870              		.loc 1 287 1 is_stmt 0 view .LVU1623
 4871 0000 30B5     		push	{r4, r5, lr}
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 146


 4872              		.cfi_def_cfa_offset 12
 4873              		.cfi_offset 4, -12
 4874              		.cfi_offset 5, -8
 4875              		.cfi_offset 14, -4
 4876 0002 83B0     		sub	sp, sp, #12
 4877              		.cfi_def_cfa_offset 24
 4878 0004 0446     		mov	r4, r0
 288:lvgl/src/core/lv_refr.c **** 
 4879              		.loc 1 288 24 is_stmt 1 view .LVU1624
 290:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 4880              		.loc 1 290 5 view .LVU1625
 290:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 4881              		.loc 1 290 22 is_stmt 0 view .LVU1626
 4882 0006 FFF7FEFF 		bl	lv_tick_get
 4883              	.LVL439:
 290:lvgl/src/core/lv_refr.c ****     volatile uint32_t elaps = 0;
 4884              		.loc 1 290 22 view .LVU1627
 4885 000a 0546     		mov	r5, r0
 4886              	.LVL440:
 291:lvgl/src/core/lv_refr.c **** 
 4887              		.loc 1 291 5 is_stmt 1 view .LVU1628
 291:lvgl/src/core/lv_refr.c **** 
 4888              		.loc 1 291 23 is_stmt 0 view .LVU1629
 4889 000c 0023     		movs	r3, #0
 4890 000e 0193     		str	r3, [sp, #4]
 293:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 4891              		.loc 1 293 5 is_stmt 1 view .LVU1630
 293:lvgl/src/core/lv_refr.c ****         disp_refr = tmr->user_data;
 4892              		.loc 1 293 7 is_stmt 0 view .LVU1631
 4893 0010 002C     		cmp	r4, #0
 4894 0012 2ED0     		beq	.L318
 294:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 4895              		.loc 1 294 9 is_stmt 1 view .LVU1632
 294:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 4896              		.loc 1 294 24 is_stmt 0 view .LVU1633
 4897 0014 E268     		ldr	r2, [r4, #12]
 294:lvgl/src/core/lv_refr.c **** #if LV_USE_PERF_MONITOR == 0 && LV_USE_MEM_MONITOR == 0
 4898              		.loc 1 294 19 view .LVU1634
 4899 0016 864B     		ldr	r3, .L340
 4900 0018 1A60     		str	r2, [r3]
 4901              	.LVL441:
 4902              	.L319:
 308:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 4903              		.loc 1 308 5 is_stmt 1 view .LVU1635
 308:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 4904              		.loc 1 308 35 is_stmt 0 view .LVU1636
 4905 001a 854C     		ldr	r4, .L340
 4906              	.LVL442:
 308:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 4907              		.loc 1 308 35 view .LVU1637
 4908 001c 2368     		ldr	r3, [r4]
 308:lvgl/src/core/lv_refr.c ****     if(disp_refr->prev_scr) lv_obj_update_layout(disp_refr->prev_scr);
 4909              		.loc 1 308 5 view .LVU1638
 4910 001e 1869     		ldr	r0, [r3, #16]
 4911 0020 FFF7FEFF 		bl	lv_obj_update_layout
 4912              	.LVL443:
 309:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 147


 4913              		.loc 1 309 5 is_stmt 1 view .LVU1639
 309:lvgl/src/core/lv_refr.c **** 
 4914              		.loc 1 309 17 is_stmt 0 view .LVU1640
 4915 0024 2368     		ldr	r3, [r4]
 4916 0026 5869     		ldr	r0, [r3, #20]
 309:lvgl/src/core/lv_refr.c **** 
 4917              		.loc 1 309 7 view .LVU1641
 4918 0028 08B1     		cbz	r0, .L320
 309:lvgl/src/core/lv_refr.c **** 
 4919              		.loc 1 309 29 is_stmt 1 discriminator 1 view .LVU1642
 4920 002a FFF7FEFF 		bl	lv_obj_update_layout
 4921              	.LVL444:
 4922              	.L320:
 311:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 4923              		.loc 1 311 5 view .LVU1643
 311:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 4924              		.loc 1 311 35 is_stmt 0 view .LVU1644
 4925 002e 804C     		ldr	r4, .L340
 4926 0030 2368     		ldr	r3, [r4]
 311:lvgl/src/core/lv_refr.c ****     lv_obj_update_layout(disp_refr->sys_layer);
 4927              		.loc 1 311 5 view .LVU1645
 4928 0032 D869     		ldr	r0, [r3, #28]
 4929 0034 FFF7FEFF 		bl	lv_obj_update_layout
 4930              	.LVL445:
 312:lvgl/src/core/lv_refr.c **** 
 4931              		.loc 1 312 5 is_stmt 1 view .LVU1646
 312:lvgl/src/core/lv_refr.c **** 
 4932              		.loc 1 312 35 is_stmt 0 view .LVU1647
 4933 0038 2368     		ldr	r3, [r4]
 312:lvgl/src/core/lv_refr.c **** 
 4934              		.loc 1 312 5 view .LVU1648
 4935 003a 186A     		ldr	r0, [r3, #32]
 4936 003c FFF7FEFF 		bl	lv_obj_update_layout
 4937              	.LVL446:
 315:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 4938              		.loc 1 315 5 is_stmt 1 view .LVU1649
 315:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 4939              		.loc 1 315 17 is_stmt 0 view .LVU1650
 4940 0040 2368     		ldr	r3, [r4]
 4941 0042 1A69     		ldr	r2, [r3, #16]
 315:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 4942              		.loc 1 315 7 view .LVU1651
 4943 0044 D2B1     		cbz	r2, .L338
 322:lvgl/src/core/lv_refr.c ****     refr_sync_areas();
 4944              		.loc 1 322 5 is_stmt 1 view .LVU1652
 4945 0046 FFF7FEFF 		bl	lv_refr_join_area
 4946              	.LVL447:
 323:lvgl/src/core/lv_refr.c ****     refr_invalid_areas();
 4947              		.loc 1 323 5 view .LVU1653
 4948 004a FFF7FEFF 		bl	refr_sync_areas
 4949              	.LVL448:
 324:lvgl/src/core/lv_refr.c **** 
 4950              		.loc 1 324 5 view .LVU1654
 4951 004e FFF7FEFF 		bl	refr_invalid_areas
 4952              	.LVL449:
 327:lvgl/src/core/lv_refr.c **** 
 4953              		.loc 1 327 5 view .LVU1655
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 148


 327:lvgl/src/core/lv_refr.c **** 
 4954              		.loc 1 327 17 is_stmt 0 view .LVU1656
 4955 0052 774B     		ldr	r3, .L340
 4956 0054 1B68     		ldr	r3, [r3]
 4957 0056 B3F85421 		ldrh	r2, [r3, #340]
 327:lvgl/src/core/lv_refr.c **** 
 4958              		.loc 1 327 7 view .LVU1657
 4959 005a 002A     		cmp	r2, #0
 4960 005c 4BD0     		beq	.L323
 330:lvgl/src/core/lv_refr.c **** 
 4961              		.loc 1 330 9 is_stmt 1 view .LVU1658
 330:lvgl/src/core/lv_refr.c **** 
 4962              		.loc 1 330 21 is_stmt 0 view .LVU1659
 4963 005e 1B68     		ldr	r3, [r3]
 330:lvgl/src/core/lv_refr.c **** 
 4964              		.loc 1 330 12 view .LVU1660
 4965 0060 1A7C     		ldrb	r2, [r3, #16]	@ zero_extendqisi2
 330:lvgl/src/core/lv_refr.c **** 
 4966              		.loc 1 330 11 view .LVU1661
 4967 0062 12F0010F 		tst	r2, #1
 4968 0066 29D0     		beq	.L324
 330:lvgl/src/core/lv_refr.c **** 
 4969              		.loc 1 330 63 discriminator 1 view .LVU1662
 4970 0068 DB68     		ldr	r3, [r3, #12]
 330:lvgl/src/core/lv_refr.c **** 
 4971              		.loc 1 330 73 discriminator 1 view .LVU1663
 4972 006a 5B68     		ldr	r3, [r3, #4]
 330:lvgl/src/core/lv_refr.c **** 
 4973              		.loc 1 330 43 discriminator 1 view .LVU1664
 4974 006c 33B3     		cbz	r3, .L324
 4975              	.LBB153:
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 4976              		.loc 1 333 19 view .LVU1665
 4977 006e 0024     		movs	r4, #0
 4978 0070 0AE0     		b	.L325
 4979              	.LVL450:
 4980              	.L318:
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 4981              		.loc 1 333 19 view .LVU1666
 4982              	.LBE153:
 304:lvgl/src/core/lv_refr.c ****     }
 4983              		.loc 1 304 9 is_stmt 1 view .LVU1667
 304:lvgl/src/core/lv_refr.c ****     }
 4984              		.loc 1 304 21 is_stmt 0 view .LVU1668
 4985 0072 FFF7FEFF 		bl	lv_disp_get_default
 4986              	.LVL451:
 304:lvgl/src/core/lv_refr.c ****     }
 4987              		.loc 1 304 19 view .LVU1669
 4988 0076 6E4B     		ldr	r3, .L340
 4989 0078 1860     		str	r0, [r3]
 4990 007a CEE7     		b	.L319
 4991              	.LVL452:
 4992              	.L338:
 316:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 4993              		.loc 1 316 9 is_stmt 1 view .LVU1670
 316:lvgl/src/core/lv_refr.c ****         LV_LOG_WARN("there is no active screen");
 4994              		.loc 1 316 26 is_stmt 0 view .LVU1671
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 149


 4995 007c A3F85421 		strh	r2, [r3, #340]	@ movhi
 317:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 4996              		.loc 1 317 9 is_stmt 1 view .LVU1672
 317:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 4997              		.loc 1 317 9 view .LVU1673
 317:lvgl/src/core/lv_refr.c ****         REFR_TRACE("finished");
 4998              		.loc 1 317 9 view .LVU1674
 318:lvgl/src/core/lv_refr.c ****         return;
 4999              		.loc 1 318 31 view .LVU1675
 319:lvgl/src/core/lv_refr.c ****     }
 5000              		.loc 1 319 9 view .LVU1676
 5001              	.LVL453:
 5002              	.L317:
 451:lvgl/src/core/lv_refr.c **** 
 5003              		.loc 1 451 1 is_stmt 0 view .LVU1677
 5004 0080 03B0     		add	sp, sp, #12
 5005              		.cfi_remember_state
 5006              		.cfi_def_cfa_offset 12
 5007              		@ sp needed
 5008 0082 30BD     		pop	{r4, r5, pc}
 5009              	.LVL454:
 5010              	.L326:
 5011              		.cfi_restore_state
 5012              	.LBB155:
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5013              		.loc 1 333 46 is_stmt 1 discriminator 2 view .LVU1678
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5014              		.loc 1 333 47 is_stmt 0 discriminator 2 view .LVU1679
 5015 0084 0134     		adds	r4, r4, #1
 5016              	.LVL455:
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5017              		.loc 1 333 47 discriminator 2 view .LVU1680
 5018 0086 A4B2     		uxth	r4, r4
 5019              	.LVL456:
 5020              	.L325:
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5021              		.loc 1 333 24 is_stmt 1 discriminator 1 view .LVU1681
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5022              		.loc 1 333 37 is_stmt 0 discriminator 1 view .LVU1682
 5023 0088 694B     		ldr	r3, .L340
 5024 008a 1868     		ldr	r0, [r3]
 5025 008c B0F85421 		ldrh	r2, [r0, #340]
 333:lvgl/src/core/lv_refr.c ****                 if(disp_refr->inv_area_joined[i])
 5026              		.loc 1 333 13 discriminator 1 view .LVU1683
 5027 0090 A242     		cmp	r2, r4
 5028 0092 13D9     		bls	.L324
 5029              	.LBB154:
 334:lvgl/src/core/lv_refr.c ****                     continue;
 5030              		.loc 1 334 17 is_stmt 1 view .LVU1684
 334:lvgl/src/core/lv_refr.c ****                     continue;
 5031              		.loc 1 334 46 is_stmt 0 view .LVU1685
 5032 0094 0219     		adds	r2, r0, r4
 5033 0096 92F83421 		ldrb	r2, [r2, #308]	@ zero_extendqisi2
 334:lvgl/src/core/lv_refr.c ****                     continue;
 5034              		.loc 1 334 19 view .LVU1686
 5035 009a 002A     		cmp	r2, #0
 5036 009c F2D1     		bne	.L326
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 150


 337:lvgl/src/core/lv_refr.c ****                 *sync_area = disp_refr->inv_areas[i];
 5037              		.loc 1 337 17 is_stmt 1 view .LVU1687
 337:lvgl/src/core/lv_refr.c ****                 *sync_area = disp_refr->inv_areas[i];
 5038              		.loc 1 337 41 is_stmt 0 view .LVU1688
 5039 009e 00F5AE70 		add	r0, r0, #348
 5040 00a2 FFF7FEFF 		bl	_lv_ll_ins_tail
 5041              	.LVL457:
 5042 00a6 0246     		mov	r2, r0
 5043              	.LVL458:
 338:lvgl/src/core/lv_refr.c ****             }
 5044              		.loc 1 338 17 is_stmt 1 view .LVU1689
 338:lvgl/src/core/lv_refr.c ****             }
 5045              		.loc 1 338 39 is_stmt 0 view .LVU1690
 5046 00a8 614B     		ldr	r3, .L340
 5047 00aa 1B68     		ldr	r3, [r3]
 338:lvgl/src/core/lv_refr.c ****             }
 5048              		.loc 1 338 28 view .LVU1691
 5049 00ac A11D     		adds	r1, r4, #6
 5050 00ae 03EBC103 		add	r3, r3, r1, lsl #3
 5051 00b2 0433     		adds	r3, r3, #4
 5052 00b4 03CB     		ldmia	r3!, {r0, r1}
 5053              	.LVL459:
 338:lvgl/src/core/lv_refr.c ****             }
 5054              		.loc 1 338 28 view .LVU1692
 5055 00b6 1060     		str	r0, [r2]	@ unaligned
 5056 00b8 5160     		str	r1, [r2, #4]	@ unaligned
 5057 00ba E3E7     		b	.L326
 5058              	.LVL460:
 5059              	.L324:
 338:lvgl/src/core/lv_refr.c ****             }
 5060              		.loc 1 338 28 view .LVU1693
 5061              	.LBE154:
 5062              	.LBE155:
 343:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 5063              		.loc 1 343 9 is_stmt 1 view .LVU1694
 343:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 5064              		.loc 1 343 31 is_stmt 0 view .LVU1695
 5065 00bc 5C4C     		ldr	r4, .L340
 5066 00be 2068     		ldr	r0, [r4]
 343:lvgl/src/core/lv_refr.c ****         lv_memset_00(disp_refr->inv_area_joined, sizeof(disp_refr->inv_area_joined));
 5067              		.loc 1 343 9 view .LVU1696
 5068 00c0 4FF48071 		mov	r1, #256
 5069 00c4 3430     		adds	r0, r0, #52
 5070 00c6 FFF7FEFF 		bl	lv_memset_00
 5071              	.LVL461:
 344:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 5072              		.loc 1 344 9 is_stmt 1 view .LVU1697
 344:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 5073              		.loc 1 344 31 is_stmt 0 view .LVU1698
 5074 00ca 2068     		ldr	r0, [r4]
 344:lvgl/src/core/lv_refr.c ****         disp_refr->inv_p = 0;
 5075              		.loc 1 344 9 view .LVU1699
 5076 00cc 2021     		movs	r1, #32
 5077 00ce 00F59A70 		add	r0, r0, #308
 5078 00d2 FFF7FEFF 		bl	lv_memset_00
 5079              	.LVL462:
 345:lvgl/src/core/lv_refr.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 151


 5080              		.loc 1 345 9 is_stmt 1 view .LVU1700
 345:lvgl/src/core/lv_refr.c **** 
 5081              		.loc 1 345 18 is_stmt 0 view .LVU1701
 5082 00d6 2368     		ldr	r3, [r4]
 345:lvgl/src/core/lv_refr.c **** 
 5083              		.loc 1 345 26 view .LVU1702
 5084 00d8 0022     		movs	r2, #0
 5085 00da A3F85421 		strh	r2, [r3, #340]	@ movhi
 347:lvgl/src/core/lv_refr.c **** 
 5086              		.loc 1 347 9 is_stmt 1 view .LVU1703
 347:lvgl/src/core/lv_refr.c **** 
 5087              		.loc 1 347 17 is_stmt 0 view .LVU1704
 5088 00de 2846     		mov	r0, r5
 5089 00e0 FFF7FEFF 		bl	lv_tick_elaps
 5090              	.LVL463:
 347:lvgl/src/core/lv_refr.c **** 
 5091              		.loc 1 347 15 view .LVU1705
 5092 00e4 0190     		str	r0, [sp, #4]
 350:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 5093              		.loc 1 350 9 is_stmt 1 view .LVU1706
 350:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 5094              		.loc 1 350 21 is_stmt 0 view .LVU1707
 5095 00e6 2368     		ldr	r3, [r4]
 5096 00e8 1868     		ldr	r0, [r3]
 350:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 5097              		.loc 1 350 29 view .LVU1708
 5098 00ea 436A     		ldr	r3, [r0, #36]
 350:lvgl/src/core/lv_refr.c ****             disp_refr->driver->monitor_cb(disp_refr->driver, elaps, px_num);
 5099              		.loc 1 350 11 view .LVU1709
 5100 00ec 1BB1     		cbz	r3, .L323
 351:lvgl/src/core/lv_refr.c ****         }
 5101              		.loc 1 351 13 is_stmt 1 view .LVU1710
 5102 00ee 0199     		ldr	r1, [sp, #4]
 5103 00f0 504A     		ldr	r2, .L340+4
 5104 00f2 1268     		ldr	r2, [r2]
 5105 00f4 9847     		blx	r3
 5106              	.LVL464:
 5107              	.L323:
 355:lvgl/src/core/lv_refr.c ****     _lv_font_clean_up_fmt_txt();
 5108              		.loc 1 355 5 view .LVU1711
 5109 00f6 FFF7FEFF 		bl	lv_mem_buf_free_all
 5110              	.LVL465:
 356:lvgl/src/core/lv_refr.c **** 
 5111              		.loc 1 356 5 view .LVU1712
 5112 00fa FFF7FEFF 		bl	_lv_font_clean_up_fmt_txt
 5113              	.LVL466:
 359:lvgl/src/core/lv_refr.c **** #endif
 5114              		.loc 1 359 5 view .LVU1713
 5115 00fe FFF7FEFF 		bl	_lv_draw_mask_cleanup
 5116              	.LVL467:
 363:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 5117              		.loc 1 363 5 view .LVU1714
 363:lvgl/src/core/lv_refr.c ****     if(perf_label == NULL) {
 5118              		.loc 1 363 16 is_stmt 0 view .LVU1715
 5119 0102 4D4B     		ldr	r3, .L340+8
 5120 0104 5C69     		ldr	r4, [r3, #20]
 5121              	.LVL468:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 152


 364:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 5122              		.loc 1 364 5 is_stmt 1 view .LVU1716
 364:lvgl/src/core/lv_refr.c ****         perf_label = lv_label_create(lv_layer_sys());
 5123              		.loc 1 364 7 is_stmt 0 view .LVU1717
 5124 0106 ACB1     		cbz	r4, .L339
 5125              	.L328:
 379:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 5126              		.loc 1 379 5 is_stmt 1 view .LVU1718
 379:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 5127              		.loc 1 379 8 is_stmt 0 view .LVU1719
 5128 0108 4B4B     		ldr	r3, .L340+8
 5129 010a 1868     		ldr	r0, [r3]
 5130 010c FFF7FEFF 		bl	lv_tick_elaps
 5131              	.LVL469:
 379:lvgl/src/core/lv_refr.c ****         if(px_num > 5000) {
 5132              		.loc 1 379 7 view .LVU1720
 5133 0110 B0F5967F 		cmp	r0, #300
 5134 0114 52D2     		bcs	.L329
 380:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 5135              		.loc 1 380 9 is_stmt 1 view .LVU1721
 380:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 5136              		.loc 1 380 19 is_stmt 0 view .LVU1722
 5137 0116 474B     		ldr	r3, .L340+4
 5138 0118 1A68     		ldr	r2, [r3]
 380:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum += elaps;
 5139              		.loc 1 380 11 view .LVU1723
 5140 011a 41F28833 		movw	r3, #5000
 5141 011e 9A42     		cmp	r2, r3
 5142 0120 AED9     		bls	.L317
 381:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 5143              		.loc 1 381 13 is_stmt 1 view .LVU1724
 5144 0122 0199     		ldr	r1, [sp, #4]
 381:lvgl/src/core/lv_refr.c ****             perf_monitor.frame_cnt ++;
 5145              		.loc 1 381 36 is_stmt 0 view .LVU1725
 5146 0124 444B     		ldr	r3, .L340+8
 5147 0126 5A68     		ldr	r2, [r3, #4]
 5148 0128 0A44     		add	r2, r2, r1
 5149 012a 5A60     		str	r2, [r3, #4]
 382:lvgl/src/core/lv_refr.c ****         }
 5150              		.loc 1 382 13 is_stmt 1 view .LVU1726
 382:lvgl/src/core/lv_refr.c ****         }
 5151              		.loc 1 382 25 is_stmt 0 view .LVU1727
 5152 012c 9A68     		ldr	r2, [r3, #8]
 382:lvgl/src/core/lv_refr.c ****         }
 5153              		.loc 1 382 36 view .LVU1728
 5154 012e 0132     		adds	r2, r2, #1
 5155 0130 9A60     		str	r2, [r3, #8]
 5156 0132 A5E7     		b	.L317
 5157              	.L339:
 365:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 5158              		.loc 1 365 9 is_stmt 1 view .LVU1729
 5159              	.LBB156:
 5160              	.LBI156:
 5161              		.file 4 "lvgl/src/core/lv_disp.h"
   1:lvgl/src/core/lv_disp.h **** /**
   2:lvgl/src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/src/core/lv_disp.h ****  *
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 153


   4:lvgl/src/core/lv_disp.h ****  */
   5:lvgl/src/core/lv_disp.h **** 
   6:lvgl/src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/src/core/lv_disp.h **** 
   9:lvgl/src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/src/core/lv_disp.h **** extern "C" {
  11:lvgl/src/core/lv_disp.h **** #endif
  12:lvgl/src/core/lv_disp.h **** 
  13:lvgl/src/core/lv_disp.h **** /*********************
  14:lvgl/src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/src/core/lv_disp.h ****  *********************/
  16:lvgl/src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/src/core/lv_disp.h **** 
  20:lvgl/src/core/lv_disp.h **** /*********************
  21:lvgl/src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/src/core/lv_disp.h ****  *********************/
  23:lvgl/src/core/lv_disp.h **** 
  24:lvgl/src/core/lv_disp.h **** /**********************
  25:lvgl/src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/src/core/lv_disp.h ****  **********************/
  27:lvgl/src/core/lv_disp.h **** 
  28:lvgl/src/core/lv_disp.h **** typedef enum {
  29:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/src/core/lv_disp.h **** 
  47:lvgl/src/core/lv_disp.h **** /**********************
  48:lvgl/src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/src/core/lv_disp.h ****  **********************/
  50:lvgl/src/core/lv_disp.h **** 
  51:lvgl/src/core/lv_disp.h **** /**
  52:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the active screen
  53:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/src/core/lv_disp.h ****  * screen)
  55:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/src/core/lv_disp.h ****  */
  57:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:lvgl/src/core/lv_disp.h **** 
  59:lvgl/src/core/lv_disp.h **** /**
  60:lvgl/src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 154


  61:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/src/core/lv_disp.h ****  * screen)
  63:lvgl/src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/src/core/lv_disp.h ****  */
  65:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/src/core/lv_disp.h **** 
  67:lvgl/src/core/lv_disp.h **** /**
  68:lvgl/src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/src/core/lv_disp.h ****  */
  71:lvgl/src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/src/core/lv_disp.h **** 
  73:lvgl/src/core/lv_disp.h **** /**
  74:lvgl/src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/src/core/lv_disp.h ****  */
  78:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:lvgl/src/core/lv_disp.h **** 
  80:lvgl/src/core/lv_disp.h **** /**
  81:lvgl/src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/src/core/lv_disp.h ****  * layer)
  83:lvgl/src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/src/core/lv_disp.h ****  */
  86:lvgl/src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/src/core/lv_disp.h **** 
  88:lvgl/src/core/lv_disp.h **** /**
  89:lvgl/src/core/lv_disp.h ****  * Set the theme of a display
  90:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/src/core/lv_disp.h ****  */
  92:lvgl/src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/src/core/lv_disp.h **** 
  94:lvgl/src/core/lv_disp.h **** /**
  95:lvgl/src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/src/core/lv_disp.h ****  */
  99:lvgl/src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/src/core/lv_disp.h **** 
 101:lvgl/src/core/lv_disp.h **** /**
 102:lvgl/src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/src/core/lv_disp.h ****  */
 106:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/src/core/lv_disp.h **** 
 108:lvgl/src/core/lv_disp.h **** /**
 109:lvgl/src/core/lv_disp.h ****  * Set the background image of a display
 110:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/src/core/lv_disp.h ****  */
 113:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/src/core/lv_disp.h **** 
 115:lvgl/src/core/lv_disp.h **** /**
 116:lvgl/src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 155


 118:lvgl/src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/src/core/lv_disp.h ****  */
 120:lvgl/src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/src/core/lv_disp.h **** 
 122:lvgl/src/core/lv_disp.h **** /**
 123:lvgl/src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/src/core/lv_disp.h ****  * @param delay delay before the transition
 128:lvgl/src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/src/core/lv_disp.h ****  */
 130:lvgl/src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/src/core/lv_disp.h **** 
 132:lvgl/src/core/lv_disp.h **** /**
 133:lvgl/src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:lvgl/src/core/lv_disp.h ****  */
 137:lvgl/src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/src/core/lv_disp.h **** 
 139:lvgl/src/core/lv_disp.h **** /**
 140:lvgl/src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/src/core/lv_disp.h ****  */
 143:lvgl/src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/src/core/lv_disp.h **** 
 145:lvgl/src/core/lv_disp.h **** /**
 146:lvgl/src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/src/core/lv_disp.h ****  */
 149:lvgl/src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/src/core/lv_disp.h **** 
 151:lvgl/src/core/lv_disp.h **** /**
 152:lvgl/src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/src/core/lv_disp.h ****  */
 156:lvgl/src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/src/core/lv_disp.h **** 
 158:lvgl/src/core/lv_disp.h **** /**
 159:lvgl/src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/src/core/lv_disp.h ****  */
 163:lvgl/src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/src/core/lv_disp.h **** 
 165:lvgl/src/core/lv_disp.h **** /**
 166:lvgl/src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:lvgl/src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/src/core/lv_disp.h ****  */
 171:lvgl/src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:lvgl/src/core/lv_disp.h **** 
 173:lvgl/src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/src/core/lv_disp.h ****  * To improve backward compatibility
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 156


 175:lvgl/src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/src/core/lv_disp.h **** 
 178:lvgl/src/core/lv_disp.h **** /**
 179:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/src/core/lv_disp.h ****  */
 182:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 183:lvgl/src/core/lv_disp.h **** {
 184:lvgl/src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 185:lvgl/src/core/lv_disp.h **** }
 186:lvgl/src/core/lv_disp.h **** 
 187:lvgl/src/core/lv_disp.h **** /**
 188:lvgl/src/core/lv_disp.h ****  * Get the top layer  of the default display
 189:lvgl/src/core/lv_disp.h ****  * @return pointer to the top layer
 190:lvgl/src/core/lv_disp.h ****  */
 191:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_top(void)
 192:lvgl/src/core/lv_disp.h **** {
 193:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_top(lv_disp_get_default());
 194:lvgl/src/core/lv_disp.h **** }
 195:lvgl/src/core/lv_disp.h **** 
 196:lvgl/src/core/lv_disp.h **** /**
 197:lvgl/src/core/lv_disp.h ****  * Get the active screen of the default display
 198:lvgl/src/core/lv_disp.h ****  * @return  pointer to the sys layer
 199:lvgl/src/core/lv_disp.h ****  */
 200:lvgl/src/core/lv_disp.h **** static inline lv_obj_t * lv_layer_sys(void)
 5162              		.loc 4 200 26 view .LVU1730
 5163              	.LBB157:
 201:lvgl/src/core/lv_disp.h **** {
 202:lvgl/src/core/lv_disp.h ****     return lv_disp_get_layer_sys(lv_disp_get_default());
 5164              		.loc 4 202 5 view .LVU1731
 5165              		.loc 4 202 12 is_stmt 0 view .LVU1732
 5166 0134 FFF7FEFF 		bl	lv_disp_get_default
 5167              	.LVL470:
 5168 0138 FFF7FEFF 		bl	lv_disp_get_layer_sys
 5169              	.LVL471:
 5170              	.LBE157:
 5171              	.LBE156:
 365:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_opa(perf_label, LV_OPA_50, 0);
 5172              		.loc 1 365 22 view .LVU1733
 5173 013c FFF7FEFF 		bl	lv_label_create
 5174              	.LVL472:
 5175 0140 0446     		mov	r4, r0
 5176              	.LVL473:
 366:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_bg_color(perf_label, lv_color_black(), 0);
 5177              		.loc 1 366 9 is_stmt 1 view .LVU1734
 5178 0142 0022     		movs	r2, #0
 5179 0144 7F21     		movs	r1, #127
 5180 0146 FFF7FEFF 		bl	lv_obj_set_style_bg_opa
 5181              	.LVL474:
 367:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 5182              		.loc 1 367 9 view .LVU1735
 5183              	.LBB158:
 5184              	.LBI158:
 5185              		.file 5 "lvgl/src/core/../misc/lv_color.h"
   1:lvgl/src/core/../misc/lv_color.h **** /**
   2:lvgl/src/core/../misc/lv_color.h ****  * @file lv_color.h
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 157


   3:lvgl/src/core/../misc/lv_color.h ****  *
   4:lvgl/src/core/../misc/lv_color.h ****  */
   5:lvgl/src/core/../misc/lv_color.h **** 
   6:lvgl/src/core/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/core/../misc/lv_color.h **** 
   9:lvgl/src/core/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/core/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/core/../misc/lv_color.h **** #endif
  12:lvgl/src/core/../misc/lv_color.h **** 
  13:lvgl/src/core/../misc/lv_color.h **** /*********************
  14:lvgl/src/core/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/core/../misc/lv_color.h ****  *********************/
  16:lvgl/src/core/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/core/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/core/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/core/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/core/../misc/lv_color.h **** 
  21:lvgl/src/core/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/core/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/core/../misc/lv_color.h **** #endif
  25:lvgl/src/core/../misc/lv_color.h **** 
  26:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/core/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/core/../misc/lv_color.h **** #endif
  29:lvgl/src/core/../misc/lv_color.h **** 
  30:lvgl/src/core/../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/core/../misc/lv_color.h **** 
  32:lvgl/src/core/../misc/lv_color.h **** /*********************
  33:lvgl/src/core/../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/core/../misc/lv_color.h ****  *********************/
  35:lvgl/src/core/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/core/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/core/../misc/lv_color.h **** 
  38:lvgl/src/core/../misc/lv_color.h **** /**
  39:lvgl/src/core/../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/core/../misc/lv_color.h ****  */
  41:lvgl/src/core/../misc/lv_color.h **** enum {
  42:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/core/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/core/../misc/lv_color.h **** };
  56:lvgl/src/core/../misc/lv_color.h **** 
  57:lvgl/src/core/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/core/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/core/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 158


  60:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/core/../misc/lv_color.h **** #else
  69:lvgl/src/core/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/core/../misc/lv_color.h **** #endif
  71:lvgl/src/core/../misc/lv_color.h **** 
  72:lvgl/src/core/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/core/../misc/lv_color.h **** /**
  74:lvgl/src/core/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/core/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/core/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/core/../misc/lv_color.h **** */
  78:lvgl/src/core/../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/core/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/core/../misc/lv_color.h **** #endif
  82:lvgl/src/core/../misc/lv_color.h **** #else
  83:lvgl/src/core/../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/core/../misc/lv_color.h **** #endif
  86:lvgl/src/core/../misc/lv_color.h **** #endif
  87:lvgl/src/core/../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/core/../misc/lv_color.h **** 
  89:lvgl/src/core/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/core/../misc/lv_color.h **** #endif
  92:lvgl/src/core/../misc/lv_color.h **** 
  93:lvgl/src/core/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/core/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/core/../misc/lv_color.h **** #else
  97:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/core/../misc/lv_color.h **** #endif
  99:lvgl/src/core/../misc/lv_color.h **** 
 100:lvgl/src/core/../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/core/../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/core/../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/core/../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/core/../misc/lv_color.h **** 
 109:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/core/../misc/lv_color.h **** 
 114:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/core/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 159


 117:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/core/../misc/lv_color.h **** 
 122:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/core/../misc/lv_color.h **** 
 127:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/core/../misc/lv_color.h **** 
 130:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/core/../misc/lv_color.h **** #else
 134:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/core/../misc/lv_color.h **** #endif
 136:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/core/../misc/lv_color.h **** 
 139:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/core/../misc/lv_color.h **** #else
 143:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/core/../misc/lv_color.h **** #endif
 145:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/core/../misc/lv_color.h **** 
 148:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/core/../misc/lv_color.h **** #else
 152:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/core/../misc/lv_color.h **** #endif
 155:lvgl/src/core/../misc/lv_color.h **** 
 156:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/core/../misc/lv_color.h **** 
 161:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/core/../misc/lv_color.h **** 
 166:lvgl/src/core/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/core/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/core/../misc/lv_color.h **** 
 169:lvgl/src/core/../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/core/../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/core/../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/core/../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 160


 174:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/core/../misc/lv_color.h **** 
 178:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/core/../misc/lv_color.h **** 
 183:lvgl/src/core/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/core/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/core/../misc/lv_color.h **** 
 186:lvgl/src/core/../misc/lv_color.h **** /**********************
 187:lvgl/src/core/../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/core/../misc/lv_color.h ****  **********************/
 189:lvgl/src/core/../misc/lv_color.h **** 
 190:lvgl/src/core/../misc/lv_color.h **** typedef union {
 191:lvgl/src/core/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/core/../misc/lv_color.h ****     union {
 193:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/core/../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/core/../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/core/../misc/lv_color.h ****     } ch;
 197:lvgl/src/core/../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/core/../misc/lv_color.h **** 
 199:lvgl/src/core/../misc/lv_color.h **** typedef union {
 200:lvgl/src/core/../misc/lv_color.h ****     struct {
 201:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/core/../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/core/../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/core/../misc/lv_color.h ****     } ch;
 205:lvgl/src/core/../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/core/../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/core/../misc/lv_color.h **** 
 208:lvgl/src/core/../misc/lv_color.h **** typedef union {
 209:lvgl/src/core/../misc/lv_color.h ****     struct {
 210:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/core/../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/core/../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/core/../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/core/../misc/lv_color.h **** #else
 215:lvgl/src/core/../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/core/../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/core/../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/core/../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/core/../misc/lv_color.h **** #endif
 220:lvgl/src/core/../misc/lv_color.h ****     } ch;
 221:lvgl/src/core/../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/core/../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/core/../misc/lv_color.h **** 
 224:lvgl/src/core/../misc/lv_color.h **** typedef union {
 225:lvgl/src/core/../misc/lv_color.h ****     struct {
 226:lvgl/src/core/../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/core/../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/core/../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/core/../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/core/../misc/lv_color.h ****     } ch;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 161


 231:lvgl/src/core/../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/core/../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/core/../misc/lv_color.h **** 
 234:lvgl/src/core/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/core/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/core/../misc/lv_color.h **** 
 237:lvgl/src/core/../misc/lv_color.h **** typedef struct {
 238:lvgl/src/core/../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/core/../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/core/../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/core/../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/core/../misc/lv_color.h **** 
 243:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/core/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/core/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 247:lvgl/src/core/../misc/lv_color.h **** 
 248:lvgl/src/core/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/core/../misc/lv_color.h **** 
 250:lvgl/src/core/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/core/../misc/lv_color.h **** 
 252:lvgl/src/core/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/core/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/core/../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/core/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/core/../misc/lv_color.h **** 
 257:lvgl/src/core/../misc/lv_color.h **** typedef enum {
 258:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/core/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/core/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/core/../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/core/../misc/lv_color.h **** 
 281:lvgl/src/core/../misc/lv_color.h **** /**********************
 282:lvgl/src/core/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/core/../misc/lv_color.h ****  **********************/
 284:lvgl/src/core/../misc/lv_color.h **** 
 285:lvgl/src/core/../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/core/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/core/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 162


 288:lvgl/src/core/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/core/../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/core/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/core/../misc/lv_color.h ****  *
 292:lvgl/src/core/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/core/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/core/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/core/../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/core/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/core/../misc/lv_color.h ****  */
 298:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/core/../misc/lv_color.h **** {
 300:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 302:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/core/../misc/lv_color.h ****         return 1;
 305:lvgl/src/core/../misc/lv_color.h ****     }
 306:lvgl/src/core/../misc/lv_color.h ****     else {
 307:lvgl/src/core/../misc/lv_color.h ****         return 0;
 308:lvgl/src/core/../misc/lv_color.h ****     }
 309:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/core/../misc/lv_color.h ****         return 1;
 312:lvgl/src/core/../misc/lv_color.h ****     }
 313:lvgl/src/core/../misc/lv_color.h ****     else {
 314:lvgl/src/core/../misc/lv_color.h ****         return 0;
 315:lvgl/src/core/../misc/lv_color.h ****     }
 316:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/core/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/core/../misc/lv_color.h ****         return 1;
 319:lvgl/src/core/../misc/lv_color.h ****     }
 320:lvgl/src/core/../misc/lv_color.h ****     else {
 321:lvgl/src/core/../misc/lv_color.h ****         return 0;
 322:lvgl/src/core/../misc/lv_color.h ****     }
 323:lvgl/src/core/../misc/lv_color.h **** #endif
 324:lvgl/src/core/../misc/lv_color.h **** }
 325:lvgl/src/core/../misc/lv_color.h **** 
 326:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/core/../misc/lv_color.h **** {
 328:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/core/../misc/lv_color.h ****         return 0;
 331:lvgl/src/core/../misc/lv_color.h ****     else
 332:lvgl/src/core/../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 335:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/core/../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/core/../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 163


 345:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/core/../misc/lv_color.h **** #endif
 348:lvgl/src/core/../misc/lv_color.h **** }
 349:lvgl/src/core/../misc/lv_color.h **** 
 350:lvgl/src/core/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/core/../misc/lv_color.h **** {
 352:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/core/../misc/lv_color.h ****         return 0;
 355:lvgl/src/core/../misc/lv_color.h ****     else
 356:lvgl/src/core/../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/core/../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 365:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/core/../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/core/../misc/lv_color.h **** #endif
 372:lvgl/src/core/../misc/lv_color.h **** }
 373:lvgl/src/core/../misc/lv_color.h **** 
 374:lvgl/src/core/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/core/../misc/lv_color.h **** {
 376:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/core/../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/core/../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/core/../misc/lv_color.h ****     else
 380:lvgl/src/core/../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/core/../misc/lv_color.h ****     /**
 390:lvgl/src/core/../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/core/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/core/../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/core/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/core/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/core/../misc/lv_color.h ****      *
 396:lvgl/src/core/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/core/../misc/lv_color.h ****      *
 398:lvgl/src/core/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/core/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/core/../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/core/../misc/lv_color.h ****      *       1          16     14        7       255
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 164


 402:lvgl/src/core/../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/core/../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/core/../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/core/../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/core/../misc/lv_color.h ****      *
 407:lvgl/src/core/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/core/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/core/../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/core/../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/core/../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/core/../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/core/../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/core/../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/core/../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/core/../misc/lv_color.h ****      */
 417:lvgl/src/core/../misc/lv_color.h **** 
 418:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/core/../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/core/../misc/lv_color.h ****     return color.full;
 426:lvgl/src/core/../misc/lv_color.h **** #endif
 427:lvgl/src/core/../misc/lv_color.h **** }
 428:lvgl/src/core/../misc/lv_color.h **** 
 429:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/core/../misc/lv_color.h **** 
 431:lvgl/src/core/../misc/lv_color.h **** /**
 432:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/core/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/core/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/core/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/core/../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/core/../misc/lv_color.h ****  */
 438:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/core/../misc/lv_color.h **** {
 440:lvgl/src/core/../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/core/../misc/lv_color.h **** 
 442:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/core/../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/core/../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/core/../misc/lv_color.h **** #endif
 447:lvgl/src/core/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/core/../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/core/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/core/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/core/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/core/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/core/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/core/../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/core/../misc/lv_color.h **** #endif
 457:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 165


 459:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/core/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/core/../misc/lv_color.h **** #else
 467:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/core/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/core/../misc/lv_color.h **** #endif
 470:lvgl/src/core/../misc/lv_color.h **** 
 471:lvgl/src/core/../misc/lv_color.h ****     return ret;
 472:lvgl/src/core/../misc/lv_color.h **** }
 473:lvgl/src/core/../misc/lv_color.h **** 
 474:lvgl/src/core/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/core/../misc/lv_color.h **** {
 476:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/core/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/core/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/core/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/core/../misc/lv_color.h **** #else
 481:lvgl/src/core/../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/core/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/core/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/core/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/core/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:lvgl/src/core/../misc/lv_color.h **** #endif
 487:lvgl/src/core/../misc/lv_color.h **** 
 488:lvgl/src/core/../misc/lv_color.h **** }
 489:lvgl/src/core/../misc/lv_color.h **** 
 490:lvgl/src/core/../misc/lv_color.h **** /**
 491:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/core/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/core/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/core/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/core/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/core/../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/core/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/core/../misc/lv_color.h ****  */
 499:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/core/../misc/lv_color.h **** {
 501:lvgl/src/core/../misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/core/../misc/lv_color.h **** #else
 509:lvgl/src/core/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/core/../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/core/../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/core/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/core/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 166


 516:lvgl/src/core/../misc/lv_color.h **** #endif
 517:lvgl/src/core/../misc/lv_color.h **** 
 518:lvgl/src/core/../misc/lv_color.h ****     return ret;
 519:lvgl/src/core/../misc/lv_color.h **** }
 520:lvgl/src/core/../misc/lv_color.h **** 
 521:lvgl/src/core/../misc/lv_color.h **** /**
 522:lvgl/src/core/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/core/../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/core/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/core/../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/core/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/core/../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/core/../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/core/../misc/lv_color.h ****  */
 530:lvgl/src/core/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/core/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/core/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/core/../misc/lv_color.h **** {
 534:lvgl/src/core/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/core/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/core/../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/core/../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/core/../misc/lv_color.h ****     }
 539:lvgl/src/core/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/core/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/core/../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/core/../misc/lv_color.h ****         *res_opa = bg_opa;
 543:lvgl/src/core/../misc/lv_color.h ****     }
 544:lvgl/src/core/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/core/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/core/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/core/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/core/../misc/lv_color.h ****     }
 549:lvgl/src/core/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/core/../misc/lv_color.h ****     else {
 551:lvgl/src/core/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/core/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/core/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/core/../misc/lv_color.h **** 
 559:lvgl/src/core/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/core/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/core/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/core/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/core/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/core/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/core/../misc/lv_color.h ****             /*Info:
 566:lvgl/src/core/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/core/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/core/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/core/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/core/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/core/../misc/lv_color.h **** 
 572:lvgl/src/core/../misc/lv_color.h ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 167


 573:lvgl/src/core/../misc/lv_color.h **** 
 574:lvgl/src/core/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/core/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/core/../misc/lv_color.h ****     }
 577:lvgl/src/core/../misc/lv_color.h **** }
 578:lvgl/src/core/../misc/lv_color.h **** 
 579:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 580:lvgl/src/core/../misc/lv_color.h **** 
 581:lvgl/src/core/../misc/lv_color.h **** /**
 582:lvgl/src/core/../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/core/../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/core/../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/core/../misc/lv_color.h ****  */
 586:lvgl/src/core/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/core/../misc/lv_color.h **** {
 588:lvgl/src/core/../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/core/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/core/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/core/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/core/../misc/lv_color.h **** }
 593:lvgl/src/core/../misc/lv_color.h **** 
 594:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/core/../misc/lv_color.h **** {
 596:lvgl/src/core/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/core/../misc/lv_color.h **** }
 598:lvgl/src/core/../misc/lv_color.h **** 
 599:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
 600:lvgl/src/core/../misc/lv_color.h **** {
 601:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/core/../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/core/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/core/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/core/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/core/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/core/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/core/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/core/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/core/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/core/../misc/lv_color.h **** 
 612:lvgl/src/core/../misc/lv_color.h ****         A bit better:
 613:lvgl/src/core/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/core/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/core/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/core/../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/core/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/core/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/core/../misc/lv_color.h **** #else
 620:lvgl/src/core/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/core/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/core/../misc/lv_color.h **** #endif
 623:lvgl/src/core/../misc/lv_color.h ****     return r;
 624:lvgl/src/core/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/core/../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/core/../misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/core/../misc/lv_color.h ****     return r;
 628:lvgl/src/core/../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 168


 630:lvgl/src/core/../misc/lv_color.h **** #endif
 631:lvgl/src/core/../misc/lv_color.h **** }
 632:lvgl/src/core/../misc/lv_color.h **** 
 633:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/core/../misc/lv_color.h **** {
 635:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/core/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/core/../misc/lv_color.h **** }
 638:lvgl/src/core/../misc/lv_color.h **** 
 639:lvgl/src/core/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/core/../misc/lv_color.h **** {
 641:lvgl/src/core/../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/core/../misc/lv_color.h **** }
 643:lvgl/src/core/../misc/lv_color.h **** 
 644:lvgl/src/core/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/core/../misc/lv_color.h **** //!
 646:lvgl/src/core/../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/core/../misc/lv_color.h **** 
 648:lvgl/src/core/../misc/lv_color.h **** //! @endcond
 649:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/core/../misc/lv_color.h **** 
 651:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/core/../misc/lv_color.h **** 
 653:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/core/../misc/lv_color.h **** 
 655:lvgl/src/core/../misc/lv_color.h **** /**
 656:lvgl/src/core/../misc/lv_color.h ****  * Convert a HSV color to RGB
 657:lvgl/src/core/../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/core/../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/core/../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/core/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/core/../misc/lv_color.h ****  */
 662:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/core/../misc/lv_color.h **** 
 664:lvgl/src/core/../misc/lv_color.h **** /**
 665:lvgl/src/core/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/core/../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/core/../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/core/../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/core/../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/core/../misc/lv_color.h ****  */
 671:lvgl/src/core/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/core/../misc/lv_color.h **** 
 673:lvgl/src/core/../misc/lv_color.h **** /**
 674:lvgl/src/core/../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/core/../misc/lv_color.h ****  * @param color color
 676:lvgl/src/core/../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/core/../misc/lv_color.h ****  */
 678:lvgl/src/core/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/core/../misc/lv_color.h **** 
 680:lvgl/src/core/../misc/lv_color.h **** /**
 681:lvgl/src/core/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/core/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/core/../misc/lv_color.h ****  */
 684:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/core/../misc/lv_color.h **** {
 686:lvgl/src/core/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 169


 687:lvgl/src/core/../misc/lv_color.h **** }
 688:lvgl/src/core/../misc/lv_color.h **** 
 689:lvgl/src/core/../misc/lv_color.h **** /**********************
 690:lvgl/src/core/../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/core/../misc/lv_color.h ****  **********************/
 692:lvgl/src/core/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/core/../misc/lv_color.h **** 
 694:lvgl/src/core/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
 696:lvgl/src/core/../misc/lv_color.h **** {
 697:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
 698:lvgl/src/core/../misc/lv_color.h **** }
 699:lvgl/src/core/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
 5186              		.loc 5 699 26 view .LVU1736
 5187              	.LBE158:
 700:lvgl/src/core/../misc/lv_color.h **** {
 701:lvgl/src/core/../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
 5188              		.loc 5 701 5 view .LVU1737
 5189              	.LBB161:
 5190              	.LBB159:
 5191              	.LBI159:
 594:lvgl/src/core/../misc/lv_color.h **** {
 5192              		.loc 5 594 26 view .LVU1738
 5193              	.LBB160:
 596:lvgl/src/core/../misc/lv_color.h **** }
 5194              		.loc 5 596 5 view .LVU1739
 596:lvgl/src/core/../misc/lv_color.h **** }
 5195              		.loc 5 596 12 is_stmt 0 view .LVU1740
 5196 014a 0021     		movs	r1, #0
 5197 014c 6FF30701 		bfc	r1, #0, #8
 5198 0150 6FF30F21 		bfc	r1, #8, #8
 5199 0154 6FF31741 		bfc	r1, #16, #8
 5200              	.LVL475:
 596:lvgl/src/core/../misc/lv_color.h **** }
 5201              		.loc 5 596 12 view .LVU1741
 5202              	.LBE160:
 5203              	.LBE159:
 5204              	.LBE161:
 367:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_color(perf_label, lv_color_white(), 0);
 5205              		.loc 1 367 9 view .LVU1742
 5206 0158 0022     		movs	r2, #0
 5207 015a 41F07F41 		orr	r1, r1, #-16777216
 5208 015e 2046     		mov	r0, r4
 5209 0160 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 5210              	.LVL476:
 368:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 5211              		.loc 1 368 9 is_stmt 1 view .LVU1743
 5212              	.LBB162:
 5213              	.LBI162:
 695:lvgl/src/core/../misc/lv_color.h **** {
 5214              		.loc 5 695 26 view .LVU1744
 5215              	.LBE162:
 697:lvgl/src/core/../misc/lv_color.h **** }
 5216              		.loc 5 697 5 view .LVU1745
 5217              	.LBB165:
 5218              	.LBB163:
 5219              	.LBI163:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 170


 594:lvgl/src/core/../misc/lv_color.h **** {
 5220              		.loc 5 594 26 view .LVU1746
 5221              	.LBB164:
 596:lvgl/src/core/../misc/lv_color.h **** }
 5222              		.loc 5 596 5 view .LVU1747
 596:lvgl/src/core/../misc/lv_color.h **** }
 5223              		.loc 5 596 5 is_stmt 0 view .LVU1748
 5224              	.LBE164:
 5225              	.LBE163:
 5226              	.LBE165:
 368:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_top(perf_label, 3, 0);
 5227              		.loc 1 368 9 view .LVU1749
 5228 0164 0022     		movs	r2, #0
 5229 0166 4FF0FF31 		mov	r1, #-1
 5230 016a 2046     		mov	r0, r4
 5231 016c FFF7FEFF 		bl	lv_obj_set_style_text_color
 5232              	.LVL477:
 369:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_bottom(perf_label, 3, 0);
 5233              		.loc 1 369 9 is_stmt 1 view .LVU1750
 5234 0170 0022     		movs	r2, #0
 5235 0172 0321     		movs	r1, #3
 5236 0174 2046     		mov	r0, r4
 5237 0176 FFF7FEFF 		bl	lv_obj_set_style_pad_top
 5238              	.LVL478:
 370:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_left(perf_label, 3, 0);
 5239              		.loc 1 370 9 view .LVU1751
 5240 017a 0022     		movs	r2, #0
 5241 017c 0321     		movs	r1, #3
 5242 017e 2046     		mov	r0, r4
 5243 0180 FFF7FEFF 		bl	lv_obj_set_style_pad_bottom
 5244              	.LVL479:
 371:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_pad_right(perf_label, 3, 0);
 5245              		.loc 1 371 9 view .LVU1752
 5246 0184 0022     		movs	r2, #0
 5247 0186 0321     		movs	r1, #3
 5248 0188 2046     		mov	r0, r4
 5249 018a FFF7FEFF 		bl	lv_obj_set_style_pad_left
 5250              	.LVL480:
 372:lvgl/src/core/lv_refr.c ****         lv_obj_set_style_text_align(perf_label, LV_TEXT_ALIGN_RIGHT, 0);
 5251              		.loc 1 372 9 view .LVU1753
 5252 018e 0022     		movs	r2, #0
 5253 0190 0321     		movs	r1, #3
 5254 0192 2046     		mov	r0, r4
 5255 0194 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 5256              	.LVL481:
 373:lvgl/src/core/lv_refr.c ****         lv_label_set_text(perf_label, "?");
 5257              		.loc 1 373 9 view .LVU1754
 5258 0198 0022     		movs	r2, #0
 5259 019a 0321     		movs	r1, #3
 5260 019c 2046     		mov	r0, r4
 5261 019e FFF7FEFF 		bl	lv_obj_set_style_text_align
 5262              	.LVL482:
 374:lvgl/src/core/lv_refr.c ****         lv_obj_align(perf_label, LV_USE_PERF_MONITOR_POS, 0, 0);
 5263              		.loc 1 374 9 view .LVU1755
 5264 01a2 2649     		ldr	r1, .L340+12
 5265 01a4 2046     		mov	r0, r4
 5266 01a6 FFF7FEFF 		bl	lv_label_set_text
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 171


 5267              	.LVL483:
 375:lvgl/src/core/lv_refr.c ****         perf_monitor.perf_label = perf_label;
 5268              		.loc 1 375 9 view .LVU1756
 5269 01aa 0023     		movs	r3, #0
 5270 01ac 1A46     		mov	r2, r3
 5271 01ae 0621     		movs	r1, #6
 5272 01b0 2046     		mov	r0, r4
 5273 01b2 FFF7FEFF 		bl	lv_obj_align
 5274              	.LVL484:
 376:lvgl/src/core/lv_refr.c ****     }
 5275              		.loc 1 376 9 view .LVU1757
 376:lvgl/src/core/lv_refr.c ****     }
 5276              		.loc 1 376 33 is_stmt 0 view .LVU1758
 5277 01b6 204B     		ldr	r3, .L340+8
 5278 01b8 5C61     		str	r4, [r3, #20]
 5279 01ba A5E7     		b	.L328
 5280              	.L329:
 5281              	.LBB166:
 386:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit;
 5282              		.loc 1 386 9 is_stmt 1 view .LVU1759
 386:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit;
 5283              		.loc 1 386 39 is_stmt 0 view .LVU1760
 5284 01bc FFF7FEFF 		bl	lv_tick_get
 5285              	.LVL485:
 386:lvgl/src/core/lv_refr.c ****         uint32_t fps_limit;
 5286              		.loc 1 386 37 view .LVU1761
 5287 01c0 1D4B     		ldr	r3, .L340+8
 5288 01c2 1860     		str	r0, [r3]
 387:lvgl/src/core/lv_refr.c ****         uint32_t fps;
 5289              		.loc 1 387 9 is_stmt 1 view .LVU1762
 388:lvgl/src/core/lv_refr.c **** 
 5290              		.loc 1 388 9 view .LVU1763
 390:lvgl/src/core/lv_refr.c ****             fps_limit = 1000 / disp_refr->refr_timer->period;
 5291              		.loc 1 390 9 view .LVU1764
 390:lvgl/src/core/lv_refr.c ****             fps_limit = 1000 / disp_refr->refr_timer->period;
 5292              		.loc 1 390 21 is_stmt 0 view .LVU1765
 5293 01c4 1A4B     		ldr	r3, .L340
 5294 01c6 1B68     		ldr	r3, [r3]
 5295 01c8 5B68     		ldr	r3, [r3, #4]
 390:lvgl/src/core/lv_refr.c ****             fps_limit = 1000 / disp_refr->refr_timer->period;
 5296              		.loc 1 390 11 view .LVU1766
 5297 01ca 6BB3     		cbz	r3, .L335
 391:lvgl/src/core/lv_refr.c ****         }
 5298              		.loc 1 391 13 is_stmt 1 view .LVU1767
 391:lvgl/src/core/lv_refr.c ****         }
 5299              		.loc 1 391 53 is_stmt 0 view .LVU1768
 5300 01cc 1B68     		ldr	r3, [r3]
 391:lvgl/src/core/lv_refr.c ****         }
 5301              		.loc 1 391 23 view .LVU1769
 5302 01ce 4FF47A75 		mov	r5, #1000
 5303              	.LVL486:
 391:lvgl/src/core/lv_refr.c ****         }
 5304              		.loc 1 391 23 view .LVU1770
 5305 01d2 B5FBF3F5 		udiv	r5, r5, r3
 5306              	.LVL487:
 5307              	.L330:
 397:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 172


 5308              		.loc 1 397 9 is_stmt 1 view .LVU1771
 397:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 5309              		.loc 1 397 24 is_stmt 0 view .LVU1772
 5310 01d6 184B     		ldr	r3, .L340+8
 5311 01d8 5B68     		ldr	r3, [r3, #4]
 397:lvgl/src/core/lv_refr.c ****             perf_monitor.elaps_sum = 1;
 5312              		.loc 1 397 11 view .LVU1773
 5313 01da 13B9     		cbnz	r3, .L331
 398:lvgl/src/core/lv_refr.c ****         }
 5314              		.loc 1 398 13 is_stmt 1 view .LVU1774
 398:lvgl/src/core/lv_refr.c ****         }
 5315              		.loc 1 398 36 is_stmt 0 view .LVU1775
 5316 01dc 164B     		ldr	r3, .L340+8
 5317 01de 0122     		movs	r2, #1
 5318 01e0 5A60     		str	r2, [r3, #4]
 5319              	.L331:
 400:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 5320              		.loc 1 400 9 is_stmt 1 view .LVU1776
 400:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 5321              		.loc 1 400 24 is_stmt 0 view .LVU1777
 5322 01e2 154B     		ldr	r3, .L340+8
 5323 01e4 9B68     		ldr	r3, [r3, #8]
 400:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 5324              		.loc 1 400 11 view .LVU1778
 5325 01e6 0BB3     		cbz	r3, .L336
 404:lvgl/src/core/lv_refr.c ****         }
 5326              		.loc 1 404 13 is_stmt 1 view .LVU1779
 404:lvgl/src/core/lv_refr.c ****         }
 5327              		.loc 1 404 25 is_stmt 0 view .LVU1780
 5328 01e8 4FF47A72 		mov	r2, #1000
 5329 01ec 02FB03F3 		mul	r3, r2, r3
 404:lvgl/src/core/lv_refr.c ****         }
 5330              		.loc 1 404 65 view .LVU1781
 5331 01f0 114A     		ldr	r2, .L340+8
 5332 01f2 5268     		ldr	r2, [r2, #4]
 404:lvgl/src/core/lv_refr.c ****         }
 5333              		.loc 1 404 17 view .LVU1782
 5334 01f4 B3FBF2F3 		udiv	r3, r3, r2
 5335              	.LVL488:
 5336              	.L332:
 406:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 5337              		.loc 1 406 9 is_stmt 1 view .LVU1783
 406:lvgl/src/core/lv_refr.c ****         perf_monitor.frame_cnt = 0;
 5338              		.loc 1 406 32 is_stmt 0 view .LVU1784
 5339 01f8 0F4A     		ldr	r2, .L340+8
 5340 01fa 0021     		movs	r1, #0
 5341 01fc 5160     		str	r1, [r2, #4]
 407:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 5342              		.loc 1 407 9 is_stmt 1 view .LVU1785
 407:lvgl/src/core/lv_refr.c ****         if(fps > fps_limit) {
 5343              		.loc 1 407 32 is_stmt 0 view .LVU1786
 5344 01fe 9160     		str	r1, [r2, #8]
 408:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 5345              		.loc 1 408 9 is_stmt 1 view .LVU1787
 408:lvgl/src/core/lv_refr.c ****             fps = fps_limit;
 5346              		.loc 1 408 11 is_stmt 0 view .LVU1788
 5347 0200 9D42     		cmp	r5, r3
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 173


 5348 0202 00D3     		bcc	.L333
 5349 0204 1D46     		mov	r5, r3
 5350              	.LVL489:
 5351              	.L333:
 412:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 5352              		.loc 1 412 9 is_stmt 1 view .LVU1789
 412:lvgl/src/core/lv_refr.c ****         perf_monitor.fps_sum_cnt ++;
 5353              		.loc 1 412 34 is_stmt 0 view .LVU1790
 5354 0206 0C4B     		ldr	r3, .L340+8
 5355 0208 1A69     		ldr	r2, [r3, #16]
 5356 020a 2A44     		add	r2, r2, r5
 5357 020c 1A61     		str	r2, [r3, #16]
 413:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 5358              		.loc 1 413 9 is_stmt 1 view .LVU1791
 413:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 5359              		.loc 1 413 21 is_stmt 0 view .LVU1792
 5360 020e DA68     		ldr	r2, [r3, #12]
 413:lvgl/src/core/lv_refr.c ****         uint32_t cpu = 100 - lv_timer_get_idle();
 5361              		.loc 1 413 34 view .LVU1793
 5362 0210 0132     		adds	r2, r2, #1
 5363 0212 DA60     		str	r2, [r3, #12]
 414:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 5364              		.loc 1 414 9 is_stmt 1 view .LVU1794
 414:lvgl/src/core/lv_refr.c ****         lv_label_set_text_fmt(perf_label, "%"LV_PRIu32" FPS\n%"LV_PRIu32"%% CPU", fps, cpu);
 5365              		.loc 1 414 30 is_stmt 0 view .LVU1795
 5366 0214 FFF7FEFF 		bl	lv_timer_get_idle
 5367              	.LVL490:
 415:lvgl/src/core/lv_refr.c ****     }
 5368              		.loc 1 415 9 is_stmt 1 view .LVU1796
 5369 0218 C0F16403 		rsb	r3, r0, #100
 5370              	.LVL491:
 415:lvgl/src/core/lv_refr.c ****     }
 5371              		.loc 1 415 9 is_stmt 0 view .LVU1797
 5372 021c 2A46     		mov	r2, r5
 5373 021e 0849     		ldr	r1, .L340+16
 5374 0220 2046     		mov	r0, r4
 5375 0222 FFF7FEFF 		bl	lv_label_set_text_fmt
 5376              	.LVL492:
 415:lvgl/src/core/lv_refr.c ****     }
 5377              		.loc 1 415 9 view .LVU1798
 5378              	.LBE166:
 450:lvgl/src/core/lv_refr.c **** }
 5379              		.loc 1 450 27 is_stmt 1 view .LVU1799
 5380 0226 2BE7     		b	.L317
 5381              	.LVL493:
 5382              	.L335:
 5383              	.LBB167:
 394:lvgl/src/core/lv_refr.c ****         }
 5384              		.loc 1 394 23 is_stmt 0 view .LVU1800
 5385 0228 2125     		movs	r5, #33
 5386              	.LVL494:
 394:lvgl/src/core/lv_refr.c ****         }
 5387              		.loc 1 394 23 view .LVU1801
 5388 022a D4E7     		b	.L330
 5389              	.LVL495:
 5390              	.L336:
 401:lvgl/src/core/lv_refr.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 174


 5391              		.loc 1 401 17 view .LVU1802
 5392 022c 2B46     		mov	r3, r5
 5393 022e E3E7     		b	.L332
 5394              	.L341:
 5395              		.align	2
 5396              	.L340:
 5397 0230 00000000 		.word	.LANCHOR0
 5398 0234 00000000 		.word	.LANCHOR3
 5399 0238 00000000 		.word	.LANCHOR1
 5400 023c 00000000 		.word	.LC0
 5401 0240 04000000 		.word	.LC1
 5402              	.LBE167:
 5403              		.cfi_endproc
 5404              	.LFE173:
 5406              		.section	.text.lv_refr_now,"ax",%progbits
 5407              		.align	1
 5408              		.global	lv_refr_now
 5409              		.syntax unified
 5410              		.thumb
 5411              		.thumb_func
 5413              	lv_refr_now:
 5414              	.LVL496:
 5415              	.LFB168:
 114:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 5416              		.loc 1 114 1 is_stmt 1 view -0
 5417              		.cfi_startproc
 5418              		@ args = 0, pretend = 0, frame = 0
 5419              		@ frame_needed = 0, uses_anonymous_args = 0
 114:lvgl/src/core/lv_refr.c ****     lv_anim_refr_now();
 5420              		.loc 1 114 1 is_stmt 0 view .LVU1804
 5421 0000 10B5     		push	{r4, lr}
 5422              		.cfi_def_cfa_offset 8
 5423              		.cfi_offset 4, -8
 5424              		.cfi_offset 14, -4
 5425 0002 0446     		mov	r4, r0
 115:lvgl/src/core/lv_refr.c **** 
 5426              		.loc 1 115 5 is_stmt 1 view .LVU1805
 5427 0004 FFF7FEFF 		bl	lv_anim_refr_now
 5428              	.LVL497:
 117:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 5429              		.loc 1 117 5 view .LVU1806
 117:lvgl/src/core/lv_refr.c ****         if(disp->refr_timer) _lv_disp_refr_timer(disp->refr_timer);
 5430              		.loc 1 117 7 is_stmt 0 view .LVU1807
 5431 0008 24B1     		cbz	r4, .L343
 118:lvgl/src/core/lv_refr.c ****     }
 5432              		.loc 1 118 9 is_stmt 1 view .LVU1808
 118:lvgl/src/core/lv_refr.c ****     }
 5433              		.loc 1 118 16 is_stmt 0 view .LVU1809
 5434 000a 6068     		ldr	r0, [r4, #4]
 118:lvgl/src/core/lv_refr.c ****     }
 5435              		.loc 1 118 11 view .LVU1810
 5436 000c 08B1     		cbz	r0, .L342
 118:lvgl/src/core/lv_refr.c ****     }
 5437              		.loc 1 118 30 is_stmt 1 discriminator 1 view .LVU1811
 5438 000e FFF7FEFF 		bl	_lv_disp_refr_timer
 5439              	.LVL498:
 5440              	.L342:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 175


 128:lvgl/src/core/lv_refr.c **** 
 5441              		.loc 1 128 1 is_stmt 0 view .LVU1812
 5442 0012 10BD     		pop	{r4, pc}
 5443              	.LVL499:
 5444              	.L343:
 5445              	.LBB168:
 121:lvgl/src/core/lv_refr.c ****         d = lv_disp_get_next(NULL);
 5446              		.loc 1 121 9 is_stmt 1 view .LVU1813
 122:lvgl/src/core/lv_refr.c ****         while(d) {
 5447              		.loc 1 122 9 view .LVU1814
 122:lvgl/src/core/lv_refr.c ****         while(d) {
 5448              		.loc 1 122 13 is_stmt 0 view .LVU1815
 5449 0014 0020     		movs	r0, #0
 5450 0016 FFF7FEFF 		bl	lv_disp_get_next
 5451              	.LVL500:
 5452 001a 0446     		mov	r4, r0
 5453              	.LVL501:
 123:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 5454              		.loc 1 123 9 is_stmt 1 view .LVU1816
 123:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 5455              		.loc 1 123 14 is_stmt 0 view .LVU1817
 5456 001c 03E0     		b	.L345
 5457              	.LVL502:
 5458              	.L346:
 125:lvgl/src/core/lv_refr.c ****         }
 5459              		.loc 1 125 13 is_stmt 1 view .LVU1818
 125:lvgl/src/core/lv_refr.c ****         }
 5460              		.loc 1 125 17 is_stmt 0 view .LVU1819
 5461 001e 2046     		mov	r0, r4
 5462 0020 FFF7FEFF 		bl	lv_disp_get_next
 5463              	.LVL503:
 5464 0024 0446     		mov	r4, r0
 5465              	.LVL504:
 5466              	.L345:
 123:lvgl/src/core/lv_refr.c ****             if(d->refr_timer) _lv_disp_refr_timer(d->refr_timer);
 5467              		.loc 1 123 14 is_stmt 1 view .LVU1820
 5468 0026 002C     		cmp	r4, #0
 5469 0028 F3D0     		beq	.L342
 124:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 5470              		.loc 1 124 13 view .LVU1821
 124:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 5471              		.loc 1 124 17 is_stmt 0 view .LVU1822
 5472 002a 6068     		ldr	r0, [r4, #4]
 5473              	.LVL505:
 124:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 5474              		.loc 1 124 15 view .LVU1823
 5475 002c 0028     		cmp	r0, #0
 5476 002e F6D0     		beq	.L346
 124:lvgl/src/core/lv_refr.c ****             d = lv_disp_get_next(d);
 5477              		.loc 1 124 31 is_stmt 1 discriminator 1 view .LVU1824
 5478 0030 FFF7FEFF 		bl	_lv_disp_refr_timer
 5479              	.LVL506:
 5480 0034 F3E7     		b	.L346
 5481              	.LBE168:
 5482              		.cfi_endproc
 5483              	.LFE168:
 5485              		.section	.text.lv_refr_reset_fps_counter,"ax",%progbits
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 176


 5486              		.align	1
 5487              		.global	lv_refr_reset_fps_counter
 5488              		.syntax unified
 5489              		.thumb
 5490              		.thumb_func
 5492              	lv_refr_reset_fps_counter:
 5493              	.LFB174:
 455:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_all = 0;
 5494              		.loc 1 455 1 view -0
 5495              		.cfi_startproc
 5496              		@ args = 0, pretend = 0, frame = 0
 5497              		@ frame_needed = 0, uses_anonymous_args = 0
 5498              		@ link register save eliminated.
 456:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 5499              		.loc 1 456 5 view .LVU1826
 456:lvgl/src/core/lv_refr.c ****     perf_monitor.fps_sum_cnt = 0;
 5500              		.loc 1 456 30 is_stmt 0 view .LVU1827
 5501 0000 024B     		ldr	r3, .L350
 5502 0002 0022     		movs	r2, #0
 5503 0004 1A61     		str	r2, [r3, #16]
 457:lvgl/src/core/lv_refr.c **** }
 5504              		.loc 1 457 5 is_stmt 1 view .LVU1828
 457:lvgl/src/core/lv_refr.c **** }
 5505              		.loc 1 457 30 is_stmt 0 view .LVU1829
 5506 0006 DA60     		str	r2, [r3, #12]
 458:lvgl/src/core/lv_refr.c **** 
 5507              		.loc 1 458 1 view .LVU1830
 5508 0008 7047     		bx	lr
 5509              	.L351:
 5510 000a 00BF     		.align	2
 5511              	.L350:
 5512 000c 00000000 		.word	.LANCHOR1
 5513              		.cfi_endproc
 5514              	.LFE174:
 5516              		.section	.text.lv_refr_get_fps_avg,"ax",%progbits
 5517              		.align	1
 5518              		.global	lv_refr_get_fps_avg
 5519              		.syntax unified
 5520              		.thumb
 5521              		.thumb_func
 5523              	lv_refr_get_fps_avg:
 5524              	.LFB175:
 461:lvgl/src/core/lv_refr.c ****     if(perf_monitor.fps_sum_cnt == 0) {
 5525              		.loc 1 461 1 is_stmt 1 view -0
 5526              		.cfi_startproc
 5527              		@ args = 0, pretend = 0, frame = 0
 5528              		@ frame_needed = 0, uses_anonymous_args = 0
 5529              		@ link register save eliminated.
 462:lvgl/src/core/lv_refr.c ****         return 0;
 5530              		.loc 1 462 5 view .LVU1832
 462:lvgl/src/core/lv_refr.c ****         return 0;
 5531              		.loc 1 462 20 is_stmt 0 view .LVU1833
 5532 0000 034B     		ldr	r3, .L354
 5533 0002 D868     		ldr	r0, [r3, #12]
 462:lvgl/src/core/lv_refr.c ****         return 0;
 5534              		.loc 1 462 7 view .LVU1834
 5535 0004 10B1     		cbz	r0, .L352
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 177


 465:lvgl/src/core/lv_refr.c **** }
 5536              		.loc 1 465 5 is_stmt 1 view .LVU1835
 465:lvgl/src/core/lv_refr.c **** }
 5537              		.loc 1 465 24 is_stmt 0 view .LVU1836
 5538 0006 1B69     		ldr	r3, [r3, #16]
 465:lvgl/src/core/lv_refr.c **** }
 5539              		.loc 1 465 37 view .LVU1837
 5540 0008 B3FBF0F0 		udiv	r0, r3, r0
 5541              	.L352:
 466:lvgl/src/core/lv_refr.c **** #endif
 5542              		.loc 1 466 1 view .LVU1838
 5543 000c 7047     		bx	lr
 5544              	.L355:
 5545 000e 00BF     		.align	2
 5546              	.L354:
 5547 0010 00000000 		.word	.LANCHOR1
 5548              		.cfi_endproc
 5549              	.LFE175:
 5551              		.section	.bss.disp_refr,"aw",%nobits
 5552              		.align	2
 5553              		.set	.LANCHOR0,. + 0
 5556              	disp_refr:
 5557 0000 00000000 		.space	4
 5558              		.section	.bss.mem_monitor,"aw",%nobits
 5559              		.align	2
 5560              		.set	.LANCHOR2,. + 0
 5563              	mem_monitor:
 5564 0000 00000000 		.space	8
 5564      00000000 
 5565              		.section	.bss.perf_monitor,"aw",%nobits
 5566              		.align	2
 5567              		.set	.LANCHOR1,. + 0
 5570              	perf_monitor:
 5571 0000 00000000 		.space	24
 5571      00000000 
 5571      00000000 
 5571      00000000 
 5571      00000000 
 5572              		.section	.bss.px_num,"aw",%nobits
 5573              		.align	2
 5574              		.set	.LANCHOR3,. + 0
 5577              	px_num:
 5578 0000 00000000 		.space	4
 5579              		.text
 5580              	.Letext0:
 5581              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 5582              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 5583              		.file 8 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 5584              		.file 9 "lvgl/src/core/../misc/../font/lv_font.h"
 5585              		.file 10 "lvgl/src/core/../misc/lv_types.h"
 5586              		.file 11 "lvgl/src/core/../misc/lv_txt.h"
 5587              		.file 12 "lvgl/src/core/../misc/lv_bidi.h"
 5588              		.file 13 "lvgl/src/core/../misc/lv_style.h"
 5589              		.file 14 "lvgl/src/core/../hal/../draw/lv_img_buf.h"
 5590              		.file 15 "lvgl/src/core/lv_obj.h"
 5591              		.file 16 "lvgl/src/core/../hal/../draw/lv_draw_rect.h"
 5592              		.file 17 "lvgl/src/core/../hal/../draw/lv_draw_label.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 178


 5593              		.file 18 "lvgl/src/core/../hal/../draw/lv_draw_img.h"
 5594              		.file 19 "lvgl/src/core/../hal/../draw/lv_draw_line.h"
 5595              		.file 20 "lvgl/src/core/../hal/../draw/lv_draw_arc.h"
 5596              		.file 21 "lvgl/src/core/../hal/../draw/lv_draw_layer.h"
 5597              		.file 22 "lvgl/src/core/../hal/../draw/lv_draw.h"
 5598              		.file 23 "lvgl/src/core/../hal/../misc/lv_ll.h"
 5599              		.file 24 "lvgl/src/core/../hal/../misc/lv_timer.h"
 5600              		.file 25 "lvgl/src/core/../hal/lv_hal_disp.h"
 5601              		.file 26 "lvgl/src/core/lv_theme.h"
 5602              		.file 27 "lvgl/src/core/lv_group.h"
 5603              		.file 28 "lvgl/src/core/lv_obj_scroll.h"
 5604              		.file 29 "lvgl/src/core/lv_obj_style.h"
 5605              		.file 30 "lvgl/src/core/lv_obj_draw.h"
 5606              		.file 31 "lvgl/src/core/lv_obj_class.h"
 5607              		.file 32 "lvgl/src/core/lv_event.h"
 5608              		.file 33 "lvgl/src/core/../misc/lv_mem.h"
 5609              		.file 34 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
 5610              		.file 35 "lvgl/src/core/lv_obj_tree.h"
 5611              		.file 36 "lvgl/src/core/../hal/../draw/lv_img_decoder.h"
 5612              		.file 37 "lvgl/src/core/../hal/../misc/../hal/lv_hal_tick.h"
 5613              		.file 38 "lvgl/src/core/../widgets/lv_label.h"
 5614              		.file 39 "lvgl/src/core/../font/lv_font_fmt_txt.h"
 5615              		.file 40 "lvgl/src/core/../hal/../draw/lv_draw_mask.h"
 5616              		.file 41 "lvgl/src/core/../misc/lv_anim.h"
 5617              		.file 42 "<built-in>"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 179


DEFINED SYMBOLS
                            *ABS*:00000000 lv_refr.c
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:19     .text.get_max_row:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:24     .text.get_max_row:00000000 get_max_row
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:179    .text.get_max_row:00000074 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:185    .text.draw_buf_rotate_180:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:190    .text.draw_buf_rotate_180:00000000 draw_buf_rotate_180
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:353    .text.draw_buf_rotate_90:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:358    .text.draw_buf_rotate_90:00000000 draw_buf_rotate_90
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:483    .text.draw_buf_rotate_90_sqr:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:488    .text.draw_buf_rotate_90_sqr:00000000 draw_buf_rotate_90_sqr
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:690    .text.call_flush_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:695    .text.call_flush_cb:00000000 call_flush_cb
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:756    .text.perf_monitor_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:761    .text.perf_monitor_init:00000000 perf_monitor_init
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:807    .text.mem_monitor_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:812    .text.mem_monitor_init:00000000 mem_monitor_init
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:846    .text.lv_refr_get_top_obj:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:851    .text.lv_refr_get_top_obj:00000000 lv_refr_get_top_obj
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1004   .text.layer_get_area:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1009   .text.layer_get_area:00000000 layer_get_area
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1162   .text.layer_alpha_test:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1167   .text.layer_alpha_test:00000000 layer_alpha_test
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1295   .text.lv_refr_join_area:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1300   .text.lv_refr_join_area:00000000 lv_refr_join_area
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1488   .text.lv_refr_join_area:000000d0 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1493   .text.refr_sync_areas:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1498   .text.refr_sync_areas:00000000 refr_sync_areas
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1784   .text.refr_sync_areas:00000140 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1789   .text.draw_buf_rotate:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:1794   .text.draw_buf_rotate:00000000 draw_buf_rotate
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2262   .text.draw_buf_rotate:0000021c $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2268   .text.draw_buf_flush:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2273   .text.draw_buf_flush:00000000 draw_buf_flush
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2472   .text.draw_buf_flush:000000c0 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2477   .text._lv_refr_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2483   .text._lv_refr_init:00000000 _lv_refr_init
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2506   .text._lv_refr_init:00000010 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2512   .text.lv_obj_redraw:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2518   .text.lv_obj_redraw:00000000 lv_obj_redraw
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2760   .text.refr_obj:00000000 refr_obj
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:2755   .text.refr_obj:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3316   .text.refr_obj:00000264 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3323   .text.refr_obj_and_children:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3328   .text.refr_obj_and_children:00000000 refr_obj_and_children
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3500   .text.refr_obj_and_children:0000008c $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3505   .text.refr_area_part:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3510   .text.refr_area_part:00000000 refr_area_part
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3929   .text.refr_area_part:000001bc $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3934   .text.refr_area:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:3939   .text.refr_area:00000000 refr_area
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4313   .text.refr_area:00000190 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4318   .text.refr_invalid_areas:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4323   .text.refr_invalid_areas:00000000 refr_invalid_areas
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4502   .text.refr_invalid_areas:000000c4 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4508   .text._lv_inv_area:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4514   .text._lv_inv_area:00000000 _lv_inv_area
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 180


C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4796   .text._lv_refr_get_disp_refreshing:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4802   .text._lv_refr_get_disp_refreshing:00000000 _lv_refr_get_disp_refreshing
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4817   .text._lv_refr_get_disp_refreshing:00000008 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4822   .text._lv_refr_set_disp_refreshing:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4828   .text._lv_refr_set_disp_refreshing:00000000 _lv_refr_set_disp_refreshing
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4845   .text._lv_refr_set_disp_refreshing:00000008 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4850   .rodata._lv_disp_refr_timer.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4857   .text._lv_disp_refr_timer:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:4863   .text._lv_disp_refr_timer:00000000 _lv_disp_refr_timer
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5397   .text._lv_disp_refr_timer:00000230 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5407   .text.lv_refr_now:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5413   .text.lv_refr_now:00000000 lv_refr_now
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5486   .text.lv_refr_reset_fps_counter:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5492   .text.lv_refr_reset_fps_counter:00000000 lv_refr_reset_fps_counter
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5512   .text.lv_refr_reset_fps_counter:0000000c $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5517   .text.lv_refr_get_fps_avg:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5523   .text.lv_refr_get_fps_avg:00000000 lv_refr_get_fps_avg
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5547   .text.lv_refr_get_fps_avg:00000010 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5552   .bss.disp_refr:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5556   .bss.disp_refr:00000000 disp_refr
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5559   .bss.mem_monitor:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5563   .bss.mem_monitor:00000000 mem_monitor
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5566   .bss.perf_monitor:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5570   .bss.perf_monitor:00000000 perf_monitor
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5573   .bss.px_num:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s:5577   .bss.px_num:00000000 px_num

UNDEFINED SYMBOLS
_lv_area_is_in
lv_obj_has_flag
_lv_obj_get_layer_type
lv_event_send
lv_obj_get_child_cnt
_lv_obj_get_ext_draw_size
lv_obj_get_coords
lv_area_increase
lv_obj_get_transformed_area
_lv_area_intersect
lv_draw_layer_adjust
_lv_area_is_on
_lv_area_join
lv_area_get_size
_lv_ll_is_empty
lv_disp_get_hor_res
memset
_lv_ll_ins_prev
_lv_ll_remove
lv_mem_free
_lv_ll_get_next
_lv_area_diff
_lv_ll_get_head
_lv_ll_clear
lv_disp_get_draw_buf
lv_mem_buf_get
lv_mem_buf_release
lv_obj_get_style_prop
lv_draw_layer_create
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cceLTvBX.s 			page 181


lv_draw_img_dsc_init
lv_draw_layer_blend
lv_draw_layer_destroy
lv_obj_get_parent
lv_disp_get_scr_act
lv_disp_get_ver_res
lv_area_set
lv_draw_rect_dsc_init
lv_img_decoder_get_info
lv_draw_img
lv_draw_rect
lv_disp_get_layer_top
lv_disp_get_layer_sys
lv_disp_is_invalidation_enabled
lv_disp_get_default
lv_timer_resume
lv_tick_get
lv_obj_update_layout
_lv_ll_ins_tail
lv_memset_00
lv_tick_elaps
lv_mem_buf_free_all
_lv_font_clean_up_fmt_txt
_lv_draw_mask_cleanup
lv_label_create
lv_obj_set_style_bg_opa
lv_obj_set_style_bg_color
lv_obj_set_style_text_color
lv_obj_set_style_pad_top
lv_obj_set_style_pad_bottom
lv_obj_set_style_pad_left
lv_obj_set_style_pad_right
lv_obj_set_style_text_align
lv_label_set_text
lv_obj_align
lv_timer_get_idle
lv_label_set_text_fmt
lv_anim_refr_now
lv_disp_get_next
