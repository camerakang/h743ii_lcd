ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_rect.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.lv_draw_rect_dsc_init,"ax",%progbits
  19              		.align	1
  20              		.global	lv_draw_rect_dsc_init
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_draw_rect_dsc_init:
  26              	.LVL0:
  27              	.LFB55:
  28              		.file 1 "lvgl/src/draw/lv_draw_rect.c"
   1:lvgl/src/draw/lv_draw_rect.c **** /**
   2:lvgl/src/draw/lv_draw_rect.c ****  * @file lv_draw_rect.c
   3:lvgl/src/draw/lv_draw_rect.c ****  *
   4:lvgl/src/draw/lv_draw_rect.c ****  */
   5:lvgl/src/draw/lv_draw_rect.c **** 
   6:lvgl/src/draw/lv_draw_rect.c **** /*********************
   7:lvgl/src/draw/lv_draw_rect.c ****  *      INCLUDES
   8:lvgl/src/draw/lv_draw_rect.c ****  *********************/
   9:lvgl/src/draw/lv_draw_rect.c **** #include "lv_draw.h"
  10:lvgl/src/draw/lv_draw_rect.c **** #include "lv_draw_rect.h"
  11:lvgl/src/draw/lv_draw_rect.c **** #include "../misc/lv_assert.h"
  12:lvgl/src/draw/lv_draw_rect.c **** 
  13:lvgl/src/draw/lv_draw_rect.c **** /*********************
  14:lvgl/src/draw/lv_draw_rect.c ****  *      DEFINES
  15:lvgl/src/draw/lv_draw_rect.c ****  *********************/
  16:lvgl/src/draw/lv_draw_rect.c **** 
  17:lvgl/src/draw/lv_draw_rect.c **** /**********************
  18:lvgl/src/draw/lv_draw_rect.c ****  *      TYPEDEFS
  19:lvgl/src/draw/lv_draw_rect.c ****  **********************/
  20:lvgl/src/draw/lv_draw_rect.c **** 
  21:lvgl/src/draw/lv_draw_rect.c **** /**********************
  22:lvgl/src/draw/lv_draw_rect.c ****  *  STATIC PROTOTYPES
  23:lvgl/src/draw/lv_draw_rect.c ****  **********************/
  24:lvgl/src/draw/lv_draw_rect.c **** 
  25:lvgl/src/draw/lv_draw_rect.c **** /**********************
  26:lvgl/src/draw/lv_draw_rect.c ****  *  STATIC VARIABLES
  27:lvgl/src/draw/lv_draw_rect.c ****  **********************/
  28:lvgl/src/draw/lv_draw_rect.c **** 
  29:lvgl/src/draw/lv_draw_rect.c **** /**********************
  30:lvgl/src/draw/lv_draw_rect.c ****  *      MACROS
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 2


  31:lvgl/src/draw/lv_draw_rect.c ****  **********************/
  32:lvgl/src/draw/lv_draw_rect.c **** 
  33:lvgl/src/draw/lv_draw_rect.c **** /**********************
  34:lvgl/src/draw/lv_draw_rect.c ****  *   GLOBAL FUNCTIONS
  35:lvgl/src/draw/lv_draw_rect.c ****  **********************/
  36:lvgl/src/draw/lv_draw_rect.c **** 
  37:lvgl/src/draw/lv_draw_rect.c **** void LV_ATTRIBUTE_FAST_MEM lv_draw_rect_dsc_init(lv_draw_rect_dsc_t * dsc)
  38:lvgl/src/draw/lv_draw_rect.c **** {
  29              		.loc 1 38 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 38 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 0446     		mov	r4, r0
  39:lvgl/src/draw/lv_draw_rect.c ****     lv_memset_00(dsc, sizeof(lv_draw_rect_dsc_t));
  39              		.loc 1 39 5 is_stmt 1 view .LVU2
  40 0004 5021     		movs	r1, #80
  41 0006 FFF7FEFF 		bl	lv_memset_00
  42              	.LVL1:
  40:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_color = lv_color_white();
  43              		.loc 1 40 5 view .LVU3
  44              	.LBB30:
  45              	.LBI30:
  46              		.file 2 "lvgl/src/draw/../misc/lv_color.h"
   1:lvgl/src/draw/../misc/lv_color.h **** /**
   2:lvgl/src/draw/../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/../misc/lv_color.h ****  *
   4:lvgl/src/draw/../misc/lv_color.h ****  */
   5:lvgl/src/draw/../misc/lv_color.h **** 
   6:lvgl/src/draw/../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/../misc/lv_color.h **** 
   9:lvgl/src/draw/../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/../misc/lv_color.h **** #endif
  12:lvgl/src/draw/../misc/lv_color.h **** 
  13:lvgl/src/draw/../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/../misc/lv_color.h **** 
  21:lvgl/src/draw/../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/../misc/lv_color.h **** #endif
  25:lvgl/src/draw/../misc/lv_color.h **** 
  26:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/../misc/lv_color.h **** #endif
  29:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 3


  30:lvgl/src/draw/../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/../misc/lv_color.h **** 
  32:lvgl/src/draw/../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/../misc/lv_color.h **** 
  38:lvgl/src/draw/../misc/lv_color.h **** /**
  39:lvgl/src/draw/../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/../misc/lv_color.h ****  */
  41:lvgl/src/draw/../misc/lv_color.h **** enum {
  42:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/../misc/lv_color.h **** };
  56:lvgl/src/draw/../misc/lv_color.h **** 
  57:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/../misc/lv_color.h **** 
  60:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/../misc/lv_color.h **** #else
  69:lvgl/src/draw/../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/../misc/lv_color.h **** #endif
  71:lvgl/src/draw/../misc/lv_color.h **** 
  72:lvgl/src/draw/../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/../misc/lv_color.h **** /**
  74:lvgl/src/draw/../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/../misc/lv_color.h **** */
  78:lvgl/src/draw/../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/../misc/lv_color.h **** #endif
  82:lvgl/src/draw/../misc/lv_color.h **** #else
  83:lvgl/src/draw/../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/../misc/lv_color.h **** #endif
  86:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 4


  87:lvgl/src/draw/../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/../misc/lv_color.h **** 
  89:lvgl/src/draw/../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/../misc/lv_color.h **** #endif
  92:lvgl/src/draw/../misc/lv_color.h **** 
  93:lvgl/src/draw/../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/../misc/lv_color.h **** #else
  97:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/../misc/lv_color.h **** #endif
  99:lvgl/src/draw/../misc/lv_color.h **** 
 100:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/../misc/lv_color.h **** 
 109:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/../misc/lv_color.h **** 
 114:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/../misc/lv_color.h **** 
 117:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/../misc/lv_color.h **** 
 122:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:lvgl/src/draw/../misc/lv_color.h **** 
 127:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/../misc/lv_color.h **** 
 130:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/../misc/lv_color.h **** #else
 134:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/../misc/lv_color.h **** #endif
 136:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/../misc/lv_color.h **** 
 139:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/../misc/lv_color.h **** #else
 143:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 5


 144:lvgl/src/draw/../misc/lv_color.h **** #endif
 145:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/../misc/lv_color.h **** 
 148:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/../misc/lv_color.h **** #else
 152:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/../misc/lv_color.h **** #endif
 155:lvgl/src/draw/../misc/lv_color.h **** 
 156:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/../misc/lv_color.h **** 
 161:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/../misc/lv_color.h **** 
 166:lvgl/src/draw/../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/../misc/lv_color.h **** 
 169:lvgl/src/draw/../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/../misc/lv_color.h **** 
 178:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/../misc/lv_color.h **** 
 183:lvgl/src/draw/../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/../misc/lv_color.h **** 
 186:lvgl/src/draw/../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/../misc/lv_color.h **** 
 190:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/../misc/lv_color.h ****     union {
 193:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/../misc/lv_color.h **** 
 199:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/../misc/lv_color.h ****     struct {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 6


 201:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/../misc/lv_color.h **** 
 208:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/../misc/lv_color.h **** #else
 215:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/../misc/lv_color.h **** #endif
 220:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/../misc/lv_color.h **** 
 224:lvgl/src/draw/../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/../misc/lv_color.h **** 
 234:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/../misc/lv_color.h **** 
 237:lvgl/src/draw/../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/../misc/lv_color.h ****     uint8_t s;
 240:lvgl/src/draw/../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/../misc/lv_color.h **** 
 243:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/../misc/lv_color.h **** 
 248:lvgl/src/draw/../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/../misc/lv_color.h **** 
 250:lvgl/src/draw/../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/../misc/lv_color.h **** 
 252:lvgl/src/draw/../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/../misc/lv_color.h **** 
 257:lvgl/src/draw/../misc/lv_color.h **** typedef enum {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 7


 258:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/../misc/lv_color.h **** 
 281:lvgl/src/draw/../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/../misc/lv_color.h **** 
 285:lvgl/src/draw/../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/../misc/lv_color.h ****  *
 292:lvgl/src/draw/../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:lvgl/src/draw/../misc/lv_color.h ****  */
 298:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/../misc/lv_color.h **** {
 300:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/../misc/lv_color.h ****     }
 306:lvgl/src/draw/../misc/lv_color.h ****     else {
 307:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/../misc/lv_color.h ****     }
 309:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/../misc/lv_color.h ****     }
 313:lvgl/src/draw/../misc/lv_color.h ****     else {
 314:lvgl/src/draw/../misc/lv_color.h ****         return 0;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 8


 315:lvgl/src/draw/../misc/lv_color.h ****     }
 316:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/../misc/lv_color.h ****     }
 320:lvgl/src/draw/../misc/lv_color.h ****     else {
 321:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/../misc/lv_color.h ****     }
 323:lvgl/src/draw/../misc/lv_color.h **** #endif
 324:lvgl/src/draw/../misc/lv_color.h **** }
 325:lvgl/src/draw/../misc/lv_color.h **** 
 326:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/../misc/lv_color.h **** {
 328:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/../misc/lv_color.h ****     else
 332:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/../misc/lv_color.h **** #endif
 348:lvgl/src/draw/../misc/lv_color.h **** }
 349:lvgl/src/draw/../misc/lv_color.h **** 
 350:lvgl/src/draw/../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/../misc/lv_color.h **** {
 352:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 354:lvgl/src/draw/../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/../misc/lv_color.h ****     else
 356:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/../misc/lv_color.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 9


 372:lvgl/src/draw/../misc/lv_color.h **** }
 373:lvgl/src/draw/../misc/lv_color.h **** 
 374:lvgl/src/draw/../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/../misc/lv_color.h **** {
 376:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/../misc/lv_color.h ****     else
 380:lvgl/src/draw/../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/../misc/lv_color.h ****     /**
 390:lvgl/src/draw/../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/../misc/lv_color.h ****      *
 396:lvgl/src/draw/../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/../misc/lv_color.h ****      *
 398:lvgl/src/draw/../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/../misc/lv_color.h ****      *
 407:lvgl/src/draw/../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/../misc/lv_color.h ****      *       1           8      6        3       255
 411:lvgl/src/draw/../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/../misc/lv_color.h ****      */
 417:lvgl/src/draw/../misc/lv_color.h **** 
 418:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/../misc/lv_color.h **** #endif
 427:lvgl/src/draw/../misc/lv_color.h **** }
 428:lvgl/src/draw/../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 10


 429:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/../misc/lv_color.h **** 
 431:lvgl/src/draw/../misc/lv_color.h **** /**
 432:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/../misc/lv_color.h ****  */
 438:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:lvgl/src/draw/../misc/lv_color.h **** {
 440:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 441:lvgl/src/draw/../misc/lv_color.h **** 
 442:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/../misc/lv_color.h **** #endif
 447:lvgl/src/draw/../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/draw/../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/../misc/lv_color.h **** #endif
 457:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:lvgl/src/draw/../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:lvgl/src/draw/../misc/lv_color.h **** #else
 467:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/../misc/lv_color.h **** #endif
 470:lvgl/src/draw/../misc/lv_color.h **** 
 471:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 472:lvgl/src/draw/../misc/lv_color.h **** }
 473:lvgl/src/draw/../misc/lv_color.h **** 
 474:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:lvgl/src/draw/../misc/lv_color.h **** {
 476:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:lvgl/src/draw/../misc/lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:lvgl/src/draw/../misc/lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:lvgl/src/draw/../misc/lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:lvgl/src/draw/../misc/lv_color.h **** #else
 481:lvgl/src/draw/../misc/lv_color.h ****     (void) mix;
 482:lvgl/src/draw/../misc/lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:lvgl/src/draw/../misc/lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:lvgl/src/draw/../misc/lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:lvgl/src/draw/../misc/lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 11


 486:lvgl/src/draw/../misc/lv_color.h **** #endif
 487:lvgl/src/draw/../misc/lv_color.h **** 
 488:lvgl/src/draw/../misc/lv_color.h **** }
 489:lvgl/src/draw/../misc/lv_color.h **** 
 490:lvgl/src/draw/../misc/lv_color.h **** /**
 491:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:lvgl/src/draw/../misc/lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:lvgl/src/draw/../misc/lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:lvgl/src/draw/../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:lvgl/src/draw/../misc/lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:lvgl/src/draw/../misc/lv_color.h ****  * @return the mixed color
 497:lvgl/src/draw/../misc/lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:lvgl/src/draw/../misc/lv_color.h ****  */
 499:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:lvgl/src/draw/../misc/lv_color.h **** {
 501:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t ret;
 502:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:lvgl/src/draw/../misc/lv_color.h **** #else
 509:lvgl/src/draw/../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:lvgl/src/draw/../misc/lv_color.h ****     /*Restore color1*/
 511:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t c1;
 512:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:lvgl/src/draw/../misc/lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:lvgl/src/draw/../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:lvgl/src/draw/../misc/lv_color.h **** #endif
 517:lvgl/src/draw/../misc/lv_color.h **** 
 518:lvgl/src/draw/../misc/lv_color.h ****     return ret;
 519:lvgl/src/draw/../misc/lv_color.h **** }
 520:lvgl/src/draw/../misc/lv_color.h **** 
 521:lvgl/src/draw/../misc/lv_color.h **** /**
 522:lvgl/src/draw/../misc/lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_color background color
 524:lvgl/src/draw/../misc/lv_color.h ****  * @param bg_opa alpha of the background color
 525:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_color foreground color
 526:lvgl/src/draw/../misc/lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:lvgl/src/draw/../misc/lv_color.h ****  * @param res_color the result color
 528:lvgl/src/draw/../misc/lv_color.h ****  * @param res_opa the result opacity
 529:lvgl/src/draw/../misc/lv_color.h ****  */
 530:lvgl/src/draw/../misc/lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:lvgl/src/draw/../misc/lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:lvgl/src/draw/../misc/lv_color.h **** {
 534:lvgl/src/draw/../misc/lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:lvgl/src/draw/../misc/lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = fg_color.full;
 537:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = fg_opa;
 538:lvgl/src/draw/../misc/lv_color.h ****     }
 539:lvgl/src/draw/../misc/lv_color.h ****     /*Transparent foreground: use the Background*/
 540:lvgl/src/draw/../misc/lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = bg_color.full;
 542:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = bg_opa;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 12


 543:lvgl/src/draw/../misc/lv_color.h ****     }
 544:lvgl/src/draw/../misc/lv_color.h ****     /*Opaque background: use simple mix*/
 545:lvgl/src/draw/../misc/lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:lvgl/src/draw/../misc/lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:lvgl/src/draw/../misc/lv_color.h ****     }
 549:lvgl/src/draw/../misc/lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:lvgl/src/draw/../misc/lv_color.h ****     else {
 551:lvgl/src/draw/../misc/lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:lvgl/src/draw/../misc/lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:lvgl/src/draw/../misc/lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:lvgl/src/draw/../misc/lv_color.h **** 
 559:lvgl/src/draw/../misc/lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:lvgl/src/draw/../misc/lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:lvgl/src/draw/../misc/lv_color.h ****             fg_opa_save        = fg_opa;
 562:lvgl/src/draw/../misc/lv_color.h ****             bg_opa_save        = bg_opa;
 563:lvgl/src/draw/../misc/lv_color.h ****             fg_color_save.full = fg_color.full;
 564:lvgl/src/draw/../misc/lv_color.h ****             bg_color_save.full = bg_color.full;
 565:lvgl/src/draw/../misc/lv_color.h ****             /*Info:
 566:lvgl/src/draw/../misc/lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:lvgl/src/draw/../misc/lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:lvgl/src/draw/../misc/lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:lvgl/src/draw/../misc/lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:lvgl/src/draw/../misc/lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:lvgl/src/draw/../misc/lv_color.h **** 
 572:lvgl/src/draw/../misc/lv_color.h ****         }
 573:lvgl/src/draw/../misc/lv_color.h **** 
 574:lvgl/src/draw/../misc/lv_color.h ****         res_color->full = res_color_saved.full;
 575:lvgl/src/draw/../misc/lv_color.h ****         *res_opa = res_opa_saved;
 576:lvgl/src/draw/../misc/lv_color.h ****     }
 577:lvgl/src/draw/../misc/lv_color.h **** }
 578:lvgl/src/draw/../misc/lv_color.h **** 
 579:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 580:lvgl/src/draw/../misc/lv_color.h **** 
 581:lvgl/src/draw/../misc/lv_color.h **** /**
 582:lvgl/src/draw/../misc/lv_color.h ****  * Get the brightness of a color
 583:lvgl/src/draw/../misc/lv_color.h ****  * @param color a color
 584:lvgl/src/draw/../misc/lv_color.h ****  * @return the brightness [0..255]
 585:lvgl/src/draw/../misc/lv_color.h ****  */
 586:lvgl/src/draw/../misc/lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 587:lvgl/src/draw/../misc/lv_color.h **** {
 588:lvgl/src/draw/../misc/lv_color.h ****     lv_color32_t c32;
 589:lvgl/src/draw/../misc/lv_color.h ****     c32.full        = lv_color_to32(color);
 590:lvgl/src/draw/../misc/lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 591:lvgl/src/draw/../misc/lv_color.h ****     return (uint8_t)(bright >> 3);
 592:lvgl/src/draw/../misc/lv_color.h **** }
 593:lvgl/src/draw/../misc/lv_color.h **** 
 594:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_make(uint8_t r, uint8_t g, uint8_t b)
 595:lvgl/src/draw/../misc/lv_color.h **** {
 596:lvgl/src/draw/../misc/lv_color.h ****     return _LV_COLOR_MAKE_TYPE_HELPER LV_COLOR_MAKE(r, g, b);
 597:lvgl/src/draw/../misc/lv_color.h **** }
 598:lvgl/src/draw/../misc/lv_color.h **** 
 599:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex(uint32_t c)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 13


 600:lvgl/src/draw/../misc/lv_color.h **** {
 601:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16
 602:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 603:lvgl/src/draw/../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 604:lvgl/src/draw/../misc/lv_color.h ****     /* Convert a 4 bytes per pixel in format ARGB32 to R5G6B5 format
 605:lvgl/src/draw/../misc/lv_color.h ****         naive way (by calling lv_color_make with components):
 606:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xFF0000) >> 19)
 607:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFF00) >> 10)
 608:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 609:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = (r << 11) | (g << 5) | b
 610:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 5 bitshift and 2 or operations
 611:lvgl/src/draw/../misc/lv_color.h **** 
 612:lvgl/src/draw/../misc/lv_color.h ****         A bit better:
 613:lvgl/src/draw/../misc/lv_color.h ****                     r = ((c & 0xF80000) >> 8)
 614:lvgl/src/draw/../misc/lv_color.h ****                     g = ((c & 0xFC00) >> 5)
 615:lvgl/src/draw/../misc/lv_color.h ****                     b = ((c & 0xFF) >> 3)
 616:lvgl/src/draw/../misc/lv_color.h ****                     rgb565 = r | g | b
 617:lvgl/src/draw/../misc/lv_color.h ****         That's 3 mask, 3 bitshifts and 2 or operations */
 618:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 8) | ((c & 0xFC00) >> 5) | ((c & 0xFF) >> 3));
 619:lvgl/src/draw/../misc/lv_color.h **** #else
 620:lvgl/src/draw/../misc/lv_color.h ****     /* We want: rrrr rrrr GGGg gggg bbbb bbbb => gggb bbbb rrrr rGGG */
 621:lvgl/src/draw/../misc/lv_color.h ****     r.full = (uint16_t)(((c & 0xF80000) >> 16) | ((c & 0xFC00) >> 13) | ((c & 0x1C00) << 3) | ((c &
 622:lvgl/src/draw/../misc/lv_color.h **** #endif
 623:lvgl/src/draw/../misc/lv_color.h ****     return r;
 624:lvgl/src/draw/../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 625:lvgl/src/draw/../misc/lv_color.h ****     lv_color_t r;
 626:lvgl/src/draw/../misc/lv_color.h ****     r.full = c | 0xFF000000;
 627:lvgl/src/draw/../misc/lv_color.h ****     return r;
 628:lvgl/src/draw/../misc/lv_color.h **** #else /*LV_COLOR_DEPTH == 8*/
 629:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)((c >> 16) & 0xFF), (uint8_t)((c >> 8) & 0xFF), (uint8_t)(c & 0xF
 630:lvgl/src/draw/../misc/lv_color.h **** #endif
 631:lvgl/src/draw/../misc/lv_color.h **** }
 632:lvgl/src/draw/../misc/lv_color.h **** 
 633:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_hex3(uint32_t c)
 634:lvgl/src/draw/../misc/lv_color.h **** {
 635:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make((uint8_t)(((c >> 4) & 0xF0) | ((c >> 8) & 0xF)), (uint8_t)((c & 0xF0) | ((
 636:lvgl/src/draw/../misc/lv_color.h ****                          (uint8_t)((c & 0xF) | ((c & 0xF) << 4)));
 637:lvgl/src/draw/../misc/lv_color.h **** }
 638:lvgl/src/draw/../misc/lv_color.h **** 
 639:lvgl/src/draw/../misc/lv_color.h **** static inline void lv_color_filter_dsc_init(lv_color_filter_dsc_t * dsc, lv_color_filter_cb_t cb)
 640:lvgl/src/draw/../misc/lv_color.h **** {
 641:lvgl/src/draw/../misc/lv_color.h ****     dsc->filter_cb = cb;
 642:lvgl/src/draw/../misc/lv_color.h **** }
 643:lvgl/src/draw/../misc/lv_color.h **** 
 644:lvgl/src/draw/../misc/lv_color.h **** //! @cond Doxygen_Suppress
 645:lvgl/src/draw/../misc/lv_color.h **** //!
 646:lvgl/src/draw/../misc/lv_color.h **** void /* LV_ATTRIBUTE_FAST_MEM */ lv_color_fill(lv_color_t * buf, lv_color_t color, uint32_t px_num)
 647:lvgl/src/draw/../misc/lv_color.h **** 
 648:lvgl/src/draw/../misc/lv_color.h **** //! @endcond
 649:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_lighten(lv_color_t c, lv_opa_t lvl);
 650:lvgl/src/draw/../misc/lv_color.h **** 
 651:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_darken(lv_color_t c, lv_opa_t lvl);
 652:lvgl/src/draw/../misc/lv_color.h **** 
 653:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_change_lightness(lv_color_t c, lv_opa_t lvl);
 654:lvgl/src/draw/../misc/lv_color.h **** 
 655:lvgl/src/draw/../misc/lv_color.h **** /**
 656:lvgl/src/draw/../misc/lv_color.h ****  * Convert a HSV color to RGB
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 14


 657:lvgl/src/draw/../misc/lv_color.h ****  * @param h hue [0..359]
 658:lvgl/src/draw/../misc/lv_color.h ****  * @param s saturation [0..100]
 659:lvgl/src/draw/../misc/lv_color.h ****  * @param v value [0..100]
 660:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in RGB (with LV_COLOR_DEPTH depth)
 661:lvgl/src/draw/../misc/lv_color.h ****  */
 662:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_color_hsv_to_rgb(uint16_t h, uint8_t s, uint8_t v);
 663:lvgl/src/draw/../misc/lv_color.h **** 
 664:lvgl/src/draw/../misc/lv_color.h **** /**
 665:lvgl/src/draw/../misc/lv_color.h ****  * Convert a 32-bit RGB color to HSV
 666:lvgl/src/draw/../misc/lv_color.h ****  * @param r8 8-bit red
 667:lvgl/src/draw/../misc/lv_color.h ****  * @param g8 8-bit green
 668:lvgl/src/draw/../misc/lv_color.h ****  * @param b8 8-bit blue
 669:lvgl/src/draw/../misc/lv_color.h ****  * @return the given RGB color in HSV
 670:lvgl/src/draw/../misc/lv_color.h ****  */
 671:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_rgb_to_hsv(uint8_t r8, uint8_t g8, uint8_t b8);
 672:lvgl/src/draw/../misc/lv_color.h **** 
 673:lvgl/src/draw/../misc/lv_color.h **** /**
 674:lvgl/src/draw/../misc/lv_color.h ****  * Convert a color to HSV
 675:lvgl/src/draw/../misc/lv_color.h ****  * @param color color
 676:lvgl/src/draw/../misc/lv_color.h ****  * @return the given color in HSV
 677:lvgl/src/draw/../misc/lv_color.h ****  */
 678:lvgl/src/draw/../misc/lv_color.h **** lv_color_hsv_t lv_color_to_hsv(lv_color_t color);
 679:lvgl/src/draw/../misc/lv_color.h **** 
 680:lvgl/src/draw/../misc/lv_color.h **** /**
 681:lvgl/src/draw/../misc/lv_color.h ****  * Just a wrapper around LV_COLOR_CHROMA_KEY because it might be more convenient to use a function 
 682:lvgl/src/draw/../misc/lv_color.h ****  * @return LV_COLOR_CHROMA_KEY
 683:lvgl/src/draw/../misc/lv_color.h ****  */
 684:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_chroma_key(void)
 685:lvgl/src/draw/../misc/lv_color.h **** {
 686:lvgl/src/draw/../misc/lv_color.h ****     return LV_COLOR_CHROMA_KEY;
 687:lvgl/src/draw/../misc/lv_color.h **** }
 688:lvgl/src/draw/../misc/lv_color.h **** 
 689:lvgl/src/draw/../misc/lv_color.h **** /**********************
 690:lvgl/src/draw/../misc/lv_color.h ****  *  PREDEFINED COLORS
 691:lvgl/src/draw/../misc/lv_color.h ****  **********************/
 692:lvgl/src/draw/../misc/lv_color.h **** /*Source: https://vuetifyjs.com/en/styles/colors/#material-colors*/
 693:lvgl/src/draw/../misc/lv_color.h **** 
 694:lvgl/src/draw/../misc/lv_color.h **** lv_color_t lv_palette_main(lv_palette_t p);
 695:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_white(void)
  47              		.loc 2 695 26 view .LVU4
  48              	.LBE30:
 696:lvgl/src/draw/../misc/lv_color.h **** {
 697:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0xff, 0xff, 0xff);
  49              		.loc 2 697 5 view .LVU5
  50              	.LBB33:
  51              	.LBB31:
  52              	.LBI31:
 594:lvgl/src/draw/../misc/lv_color.h **** {
  53              		.loc 2 594 26 view .LVU6
  54              	.LBB32:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  55              		.loc 2 596 5 view .LVU7
 596:lvgl/src/draw/../misc/lv_color.h **** }
  56              		.loc 2 596 12 is_stmt 0 view .LVU8
  57 000a 4FF0FF33 		mov	r3, #-1
  58              	.LVL2:
 596:lvgl/src/draw/../misc/lv_color.h **** }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 15


  59              		.loc 2 596 12 view .LVU9
  60              	.LBE32:
  61              	.LBE31:
  62              	.LBE33:
  63              		.loc 1 40 21 view .LVU10
  64 000e 6360     		str	r3, [r4, #4]
  41:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_grad.stops[0].color = lv_color_white();
  65              		.loc 1 41 5 is_stmt 1 view .LVU11
  66              	.LBB34:
  67              	.LBI34:
 695:lvgl/src/draw/../misc/lv_color.h **** {
  68              		.loc 2 695 26 view .LVU12
  69              	.LBE34:
  70              		.loc 2 697 5 view .LVU13
  71              	.LVL3:
  72              	.LBB37:
  73              	.LBB35:
  74              	.LBI35:
 594:lvgl/src/draw/../misc/lv_color.h **** {
  75              		.loc 2 594 26 view .LVU14
  76              	.LBB36:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  77              		.loc 2 596 5 view .LVU15
 596:lvgl/src/draw/../misc/lv_color.h **** }
  78              		.loc 2 596 5 is_stmt 0 view .LVU16
  79              	.LBE36:
  80              	.LBE35:
  81              	.LBE37:
  82              		.loc 1 41 35 view .LVU17
  83 0010 A360     		str	r3, [r4, #8]
  42:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_grad.stops[1].color = lv_color_black();
  84              		.loc 1 42 5 is_stmt 1 view .LVU18
  85              	.LBB38:
  86              	.LBI38:
 698:lvgl/src/draw/../misc/lv_color.h **** }
 699:lvgl/src/draw/../misc/lv_color.h **** static inline lv_color_t lv_color_black(void)
  87              		.loc 2 699 26 view .LVU19
  88              	.LBE38:
 700:lvgl/src/draw/../misc/lv_color.h **** {
 701:lvgl/src/draw/../misc/lv_color.h ****     return lv_color_make(0x00, 0x0, 0x00);
  89              		.loc 2 701 5 view .LVU20
  90              	.LVL4:
  91              	.LBB41:
  92              	.LBB39:
  93              	.LBI39:
 594:lvgl/src/draw/../misc/lv_color.h **** {
  94              		.loc 2 594 26 view .LVU21
  95              	.LBB40:
 596:lvgl/src/draw/../misc/lv_color.h **** }
  96              		.loc 2 596 5 view .LVU22
 596:lvgl/src/draw/../misc/lv_color.h **** }
  97              		.loc 2 596 12 is_stmt 0 view .LVU23
  98 0012 0023     		movs	r3, #0
  99 0014 6FF30703 		bfc	r3, #0, #8
 100 0018 6FF30F23 		bfc	r3, #8, #8
 101 001c 6FF31743 		bfc	r3, #16, #8
 102 0020 43F07F43 		orr	r3, r3, #-16777216
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 16


 103              	.LVL5:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 104              		.loc 2 596 12 view .LVU24
 105              	.LBE40:
 106              	.LBE39:
 107              	.LBE41:
 108              		.loc 1 42 35 view .LVU25
 109 0024 2361     		str	r3, [r4, #16]
  43:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_grad.stops[1].frac = 0xFF;
 110              		.loc 1 43 5 is_stmt 1 view .LVU26
 111              		.loc 1 43 32 is_stmt 0 view .LVU27
 112 0026 FF23     		movs	r3, #255
 113 0028 2375     		strb	r3, [r4, #20]
  44:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_grad.stops_count = 2;
 114              		.loc 1 44 5 is_stmt 1 view .LVU28
 115              		.loc 1 44 30 is_stmt 0 view .LVU29
 116 002a 0222     		movs	r2, #2
 117 002c 2276     		strb	r2, [r4, #24]
  45:lvgl/src/draw/lv_draw_rect.c ****     dsc->border_color = lv_color_black();
 118              		.loc 1 45 5 is_stmt 1 view .LVU30
 119              	.LBB42:
 120              	.LBI42:
 699:lvgl/src/draw/../misc/lv_color.h **** {
 121              		.loc 2 699 26 view .LVU31
 122              	.LBE42:
 123              		.loc 2 701 5 view .LVU32
 124              	.LVL6:
 125              	.LBB45:
 126              	.LBB43:
 127              	.LBI43:
 594:lvgl/src/draw/../misc/lv_color.h **** {
 128              		.loc 2 594 26 view .LVU33
 129              	.LBB44:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 130              		.loc 2 596 5 view .LVU34
 596:lvgl/src/draw/../misc/lv_color.h **** }
 131              		.loc 2 596 12 is_stmt 0 view .LVU35
 132 002e 0022     		movs	r2, #0
 133 0030 6FF30702 		bfc	r2, #0, #8
 134 0034 6FF30F22 		bfc	r2, #8, #8
 135 0038 6FF31742 		bfc	r2, #16, #8
 136 003c 42F07F42 		orr	r2, r2, #-16777216
 137              	.LVL7:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 138              		.loc 2 596 12 view .LVU36
 139              	.LBE44:
 140              	.LBE43:
 141              	.LBE45:
 142              		.loc 1 45 25 view .LVU37
 143 0040 E262     		str	r2, [r4, #44]
  46:lvgl/src/draw/lv_draw_rect.c ****     dsc->shadow_color = lv_color_black();
 144              		.loc 1 46 5 is_stmt 1 view .LVU38
 145              	.LBB46:
 146              	.LBI46:
 699:lvgl/src/draw/../misc/lv_color.h **** {
 147              		.loc 2 699 26 view .LVU39
 148              	.LBE46:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 17


 149              		.loc 2 701 5 view .LVU40
 150              	.LVL8:
 151              	.LBB49:
 152              	.LBB47:
 153              	.LBI47:
 594:lvgl/src/draw/../misc/lv_color.h **** {
 154              		.loc 2 594 26 view .LVU41
 155              	.LBB48:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 156              		.loc 2 596 5 view .LVU42
 596:lvgl/src/draw/../misc/lv_color.h **** }
 157              		.loc 2 596 12 is_stmt 0 view .LVU43
 158 0042 0022     		movs	r2, #0
 159 0044 6FF30702 		bfc	r2, #0, #8
 160 0048 6FF30F22 		bfc	r2, #8, #8
 161 004c 6FF31742 		bfc	r2, #16, #8
 162 0050 42F07F42 		orr	r2, r2, #-16777216
 163              	.LVL9:
 596:lvgl/src/draw/../misc/lv_color.h **** }
 164              		.loc 2 596 12 view .LVU44
 165              	.LBE48:
 166              	.LBE47:
 167              	.LBE49:
 168              		.loc 1 46 25 view .LVU45
 169 0054 2264     		str	r2, [r4, #64]
  47:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_img_symbol_font = LV_FONT_DEFAULT;
 170              		.loc 1 47 5 is_stmt 1 view .LVU46
 171              		.loc 1 47 29 is_stmt 0 view .LVU47
 172 0056 094A     		ldr	r2, .L3
 173 0058 2262     		str	r2, [r4, #32]
  48:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_opa = LV_OPA_COVER;
 174              		.loc 1 48 5 is_stmt 1 view .LVU48
 175              		.loc 1 48 17 is_stmt 0 view .LVU49
 176 005a E370     		strb	r3, [r4, #3]
  49:lvgl/src/draw/lv_draw_rect.c ****     dsc->bg_img_opa = LV_OPA_COVER;
 177              		.loc 1 49 5 is_stmt 1 view .LVU50
 178              		.loc 1 49 21 is_stmt 0 view .LVU51
 179 005c 84F82830 		strb	r3, [r4, #40]
  50:lvgl/src/draw/lv_draw_rect.c ****     dsc->outline_opa = LV_OPA_COVER;
 180              		.loc 1 50 5 is_stmt 1 view .LVU52
 181              		.loc 1 50 22 is_stmt 0 view .LVU53
 182 0060 84F83C30 		strb	r3, [r4, #60]
  51:lvgl/src/draw/lv_draw_rect.c ****     dsc->border_opa = LV_OPA_COVER;
 183              		.loc 1 51 5 is_stmt 1 view .LVU54
 184              		.loc 1 51 21 is_stmt 0 view .LVU55
 185 0064 84F83230 		strb	r3, [r4, #50]
  52:lvgl/src/draw/lv_draw_rect.c ****     dsc->shadow_opa = LV_OPA_COVER;
 186              		.loc 1 52 5 is_stmt 1 view .LVU56
 187              		.loc 1 52 21 is_stmt 0 view .LVU57
 188 0068 84F84C30 		strb	r3, [r4, #76]
  53:lvgl/src/draw/lv_draw_rect.c ****     dsc->border_side = LV_BORDER_SIDE_FULL;
 189              		.loc 1 53 5 is_stmt 1 view .LVU58
 190              		.loc 1 53 22 is_stmt 0 view .LVU59
 191 006c 94F83330 		ldrb	r3, [r4, #51]	@ zero_extendqisi2
 192 0070 0F22     		movs	r2, #15
 193 0072 62F34503 		bfi	r3, r2, #1, #5
 194 0076 84F83330 		strb	r3, [r4, #51]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 18


  54:lvgl/src/draw/lv_draw_rect.c **** }
 195              		.loc 1 54 1 view .LVU60
 196 007a 10BD     		pop	{r4, pc}
 197              	.LVL10:
 198              	.L4:
 199              		.loc 1 54 1 view .LVU61
 200              		.align	2
 201              	.L3:
 202 007c 00000000 		.word	lv_font_montserrat_14
 203              		.cfi_endproc
 204              	.LFE55:
 206              		.section	.text.lv_draw_rect,"ax",%progbits
 207              		.align	1
 208              		.global	lv_draw_rect
 209              		.syntax unified
 210              		.thumb
 211              		.thumb_func
 213              	lv_draw_rect:
 214              	.LVL11:
 215              	.LFB56:
  55:lvgl/src/draw/lv_draw_rect.c **** 
  56:lvgl/src/draw/lv_draw_rect.c **** /**
  57:lvgl/src/draw/lv_draw_rect.c ****  * Draw a rectangle
  58:lvgl/src/draw/lv_draw_rect.c ****  * @param coords the coordinates of the rectangle
  59:lvgl/src/draw/lv_draw_rect.c ****  * @param mask the rectangle will be drawn only in this mask
  60:lvgl/src/draw/lv_draw_rect.c ****  * @param dsc pointer to an initialized `lv_draw_rect_dsc_t` variable
  61:lvgl/src/draw/lv_draw_rect.c ****  */
  62:lvgl/src/draw/lv_draw_rect.c **** void lv_draw_rect(lv_draw_ctx_t * draw_ctx, const lv_draw_rect_dsc_t * dsc, const lv_area_t * coord
  63:lvgl/src/draw/lv_draw_rect.c **** {
 216              		.loc 1 63 1 is_stmt 1 view -0
 217              		.cfi_startproc
 218              		@ args = 0, pretend = 0, frame = 0
 219              		@ frame_needed = 0, uses_anonymous_args = 0
 220              		.loc 1 63 1 is_stmt 0 view .LVU63
 221 0000 08B5     		push	{r3, lr}
 222              		.cfi_def_cfa_offset 8
 223              		.cfi_offset 3, -8
 224              		.cfi_offset 14, -4
  64:lvgl/src/draw/lv_draw_rect.c ****     if(lv_area_get_height(coords) < 1 || lv_area_get_width(coords) < 1) return;
 225              		.loc 1 64 5 is_stmt 1 view .LVU64
 226              	.LVL12:
 227              	.LBB50:
 228              	.LBI50:
 229              		.file 3 "lvgl/src/draw/../misc/../font/../misc/lv_area.h"
   1:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
   2:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *
   4:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
   5:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
   6:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
   9:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #endif
  12:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  13:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /*********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 19


  14:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  20:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  24:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #else
  27:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** #endif
  29:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  30:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  34:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
  35:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
  37:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  42:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  50:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** enum {
  52:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  63:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
  70:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 20


  71:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** };
  76:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  78:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** enum {
  79:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** };
  88:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  89:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  91:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
  95:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
  96:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
 103:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
 105:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
 106:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
 110:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** {
 112:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 117:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
 118:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
 119:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
 123:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 124:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** {
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 126:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 127:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 21


 128:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** /**
 129:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****  */
 133:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 230              		.loc 3 133 26 view .LVU65
 231              	.LBB51:
 134:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** {
 135:lvgl/src/draw/../misc/../font/../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 232              		.loc 3 135 5 view .LVU66
 233              		.loc 3 135 31 is_stmt 0 view .LVU67
 234 0002 D388     		ldrh	r3, [r2, #6]
 235              		.loc 3 135 44 view .LVU68
 236 0004 B2F802C0 		ldrh	ip, [r2, #2]
 237              		.loc 3 135 36 view .LVU69
 238 0008 A3EB0C03 		sub	r3, r3, ip
 239 000c 9BB2     		uxth	r3, r3
 240              		.loc 3 135 49 view .LVU70
 241 000e 0133     		adds	r3, r3, #1
 242              		.loc 3 135 12 view .LVU71
 243 0010 1BB2     		sxth	r3, r3
 244              	.LVL13:
 245              		.loc 3 135 12 view .LVU72
 246              	.LBE51:
 247              	.LBE50:
 248              		.loc 1 64 7 view .LVU73
 249 0012 002B     		cmp	r3, #0
 250 0014 0BDD     		ble	.L5
 251              	.LVL14:
 252              	.LBB52:
 253              	.LBI52:
 123:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** {
 254              		.loc 3 123 26 is_stmt 1 view .LVU74
 255              	.LBB53:
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 256              		.loc 3 125 5 view .LVU75
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 257              		.loc 3 125 31 is_stmt 0 view .LVU76
 258 0016 9388     		ldrh	r3, [r2, #4]
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 259              		.loc 3 125 44 view .LVU77
 260 0018 B2F800C0 		ldrh	ip, [r2]
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 261              		.loc 3 125 36 view .LVU78
 262 001c A3EB0C03 		sub	r3, r3, ip
 263 0020 9BB2     		uxth	r3, r3
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 264              		.loc 3 125 49 view .LVU79
 265 0022 0133     		adds	r3, r3, #1
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 266              		.loc 3 125 12 view .LVU80
 267 0024 1BB2     		sxth	r3, r3
 268              	.LVL15:
 125:lvgl/src/draw/../misc/../font/../misc/lv_area.h **** }
 269              		.loc 3 125 12 view .LVU81
 270              	.LBE53:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 22


 271              	.LBE52:
 272              		.loc 1 64 39 view .LVU82
 273 0026 002B     		cmp	r3, #0
 274 0028 01DD     		ble	.L5
  65:lvgl/src/draw/lv_draw_rect.c **** 
  66:lvgl/src/draw/lv_draw_rect.c ****     draw_ctx->draw_rect(draw_ctx, dsc, coords);
 275              		.loc 1 66 5 is_stmt 1 view .LVU83
 276              		.loc 1 66 13 is_stmt 0 view .LVU84
 277 002a 0369     		ldr	r3, [r0, #16]
 278              		.loc 1 66 5 view .LVU85
 279 002c 9847     		blx	r3
 280              	.LVL16:
  67:lvgl/src/draw/lv_draw_rect.c **** 
  68:lvgl/src/draw/lv_draw_rect.c ****     LV_ASSERT_MEM_INTEGRITY();
 281              		.loc 1 68 30 is_stmt 1 view .LVU86
 282              	.L5:
  69:lvgl/src/draw/lv_draw_rect.c **** }
 283              		.loc 1 69 1 is_stmt 0 view .LVU87
 284 002e 08BD     		pop	{r3, pc}
 285              		.cfi_endproc
 286              	.LFE56:
 288              		.text
 289              	.Letext0:
 290              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 291              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 292              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 293              		.file 7 "lvgl/src/draw/../misc/../font/lv_font.h"
 294              		.file 8 "lvgl/src/draw/../misc/lv_types.h"
 295              		.file 9 "lvgl/src/draw/../misc/lv_txt.h"
 296              		.file 10 "lvgl/src/draw/../misc/lv_bidi.h"
 297              		.file 11 "lvgl/src/draw/../misc/lv_style.h"
 298              		.file 12 "lvgl/src/draw/lv_img_buf.h"
 299              		.file 13 "lvgl/src/draw/lv_draw_rect.h"
 300              		.file 14 "lvgl/src/draw/lv_draw_label.h"
 301              		.file 15 "lvgl/src/draw/lv_draw_img.h"
 302              		.file 16 "lvgl/src/draw/lv_draw_line.h"
 303              		.file 17 "lvgl/src/draw/lv_draw_arc.h"
 304              		.file 18 "lvgl/src/draw/lv_draw_layer.h"
 305              		.file 19 "lvgl/src/draw/lv_draw.h"
 306              		.file 20 "lvgl/src/draw/../misc/lv_mem.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s 			page 23


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_rect.c
C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s:19     .text.lv_draw_rect_dsc_init:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s:25     .text.lv_draw_rect_dsc_init:00000000 lv_draw_rect_dsc_init
C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s:202    .text.lv_draw_rect_dsc_init:0000007c $d
C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s:207    .text.lv_draw_rect:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccsN0mKb.s:213    .text.lv_draw_rect:00000000 lv_draw_rect

UNDEFINED SYMBOLS
lv_memset_00
lv_font_montserrat_14
