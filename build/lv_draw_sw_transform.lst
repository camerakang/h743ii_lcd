ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_draw_sw_transform.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.argb_no_aa,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	argb_no_aa:
  25              	.LVL0:
  26              	.LFB163:
  27              		.file 1 "lvgl/src/draw/sw/lv_draw_sw_transform.c"
   1:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**
   2:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @file lv_draw_sw_tranform.c
   3:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *
   4:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  */
   5:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
   6:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /*********************
   7:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *      INCLUDES
   8:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *********************/
   9:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #include "lv_draw_sw.h"
  10:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #include "../../misc/lv_assert.h"
  11:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #include "../../misc/lv_area.h"
  12:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #include "../../core/lv_refr.h"
  13:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  14:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_DRAW_COMPLEX
  15:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /*********************
  16:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *      DEFINES
  17:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *********************/
  18:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  19:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
  20:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *      TYPEDEFS
  21:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
  22:lvgl/src/draw/sw/lv_draw_sw_transform.c **** typedef struct {
  23:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t x_in;
  24:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t y_in;
  25:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t x_out;
  26:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t y_out;
  27:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t sinma;
  28:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t cosma;
  29:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t zoom;
  30:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle;
  31:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t pivot_x_256;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 2


  32:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t pivot_y_256;
  33:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_point_t pivot;
  34:lvgl/src/draw/sw/lv_draw_sw_transform.c **** } point_transform_dsc_t;
  35:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  36:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
  37:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *  STATIC PROTOTYPES
  38:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
  39:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**
  40:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * Transform a point with 1/256 precision (the output coordinates are upscaled by 256)
  41:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @param t         pointer to n initialized `point_transform_dsc_t` structure
  42:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @param xin       X coordinate to rotate
  43:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @param yin       Y coordinate to rotate
  44:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @param xout      upscaled, transformed X
  45:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  * @param yout      upscaled, transformed Y
  46:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  */
  47:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void transform_point_upscaled(point_transform_dsc_t * t, int32_t xin, int32_t yin, int32_t *
  48:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                                      int32_t * yout);
  49:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  50:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void argb_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_stri
  51:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
  52:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        int32_t x_end, lv_color_t * cbuf, uint8_t * abuf);
  53:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  54:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void rgb_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_strid
  55:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                       int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
  56:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                       int32_t x_end, lv_color_t * cbuf, uint8_t * abuf, lv_img_cf_t cf);
  57:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  58:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
  59:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void rgb565a8_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_
  60:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                            int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
  61:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                            int32_t x_end, lv_color_t * cbuf, uint8_t * abuf);
  62:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
  63:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  64:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void argb_and_rgb_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src
  65:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                             int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
  66:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                             int32_t x_end, lv_color_t * cbuf, uint8_t * abuf, lv_img_cf_t cf);
  67:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  68:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
  69:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *  STATIC VARIABLES
  70:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
  71:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  72:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
  73:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *      MACROS
  74:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
  75:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  76:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
  77:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *   GLOBAL FUNCTIONS
  78:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
  79:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  80:lvgl/src/draw/sw/lv_draw_sw_transform.c **** void lv_draw_sw_transform(lv_draw_ctx_t * draw_ctx, const lv_area_t * dest_area, const void * src_b
  81:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                           lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_stride,
  82:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                           const lv_draw_img_dsc_t * draw_dsc, lv_img_cf_t cf, lv_color_t * cbuf, lv
  83:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
  84:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     LV_UNUSED(draw_ctx);
  85:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  86:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     point_transform_dsc_t tr_dsc;
  87:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.angle = -draw_dsc->angle;
  88:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.zoom = (256 * 256) / draw_dsc->zoom;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 3


  89:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot = draw_dsc->pivot;
  90:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  91:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_low = tr_dsc.angle / 10;
  92:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_high = angle_low + 1;
  93:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_rem = tr_dsc.angle  - (angle_low * 10);
  94:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  95:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t s1 = lv_trigo_sin(angle_low);
  96:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t s2 = lv_trigo_sin(angle_high);
  97:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  98:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t c1 = lv_trigo_sin(angle_low + 90);
  99:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 100:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = (s1 * (10 - angle_rem) + s2 * angle_rem) / 10;
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 103:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 104:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = tr_dsc.cosma >> (LV_TRIGO_SHIFT - 10);
 105:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_x_256 = tr_dsc.pivot.x * 256;
 106:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_y_256 = tr_dsc.pivot.y * 256;
 107:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 108:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t dest_w = lv_area_get_width(dest_area);
 109:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t dest_h = lv_area_get_height(dest_area);
 110:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t y;
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(y = 0; y < dest_h; y++) {
 112:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 113:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 114:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         transform_point_upscaled(&tr_dsc, dest_area->x1, dest_area->y1 + y, &xs1_ups, &ys1_ups);
 115:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         transform_point_upscaled(&tr_dsc, dest_area->x2, dest_area->y1 + y, &xs2_ups, &ys2_ups);
 116:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 117:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_diff = xs2_ups - xs1_ups;
 118:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_diff = ys2_ups - ys1_ups;
 119:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_step_256 = 0;
 120:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_step_256 = 0;
 121:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(dest_w > 1) {
 122:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_step_256 = (256 * xs_diff) / (dest_w - 1);
 123:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_step_256 = (256 * ys_diff) / (dest_w - 1);
 124:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 125:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_ups = xs1_ups + 0x80;
 126:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_ups = ys1_ups + 0x80;
 127:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 128:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(draw_dsc->antialias == 0) {
 129:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 130:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     argb_no_aa(src_buf, src_w, src_h, src_stride, xs_ups, ys_ups, xs_step_256, ys_s
 132:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 133:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR:
 134:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     rgb_no_aa(src_buf, src_w, src_h, src_stride, xs_ups, ys_ups, xs_step_256, ys_st
 136:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 137:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 138:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
 139:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_RGB565A8:
 140:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     rgb565a8_no_aa(src_buf, src_w, src_h, src_stride, xs_ups, ys_ups, xs_step_256, 
 141:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 142:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 143:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 default:
 144:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 145:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 4


 146:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 147:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             argb_and_rgb_aa(src_buf, src_w, src_h, src_stride, xs_ups, ys_ups, xs_step_256, ys_step
 149:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 150:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 151:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         cbuf += dest_w;
 152:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         abuf += dest_w;
 153:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 154:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 155:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 156:lvgl/src/draw/sw/lv_draw_sw_transform.c **** /**********************
 157:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  *   STATIC FUNCTIONS
 158:lvgl/src/draw/sw/lv_draw_sw_transform.c ****  **********************/
 159:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 160:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void rgb_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_strid
 161:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                       int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
 162:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                       int32_t x_end, lv_color_t * cbuf, uint8_t * abuf, lv_img_cf_t cf)
 163:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
 164:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 165:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
 166:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_disp_t * d = _lv_refr_get_disp_refreshing();
 167:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_color_t ck = d->driver->color_chroma_key;
 168:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 169:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_memset_ff(abuf, x_end);
 170:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 171:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t x;
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
 173:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 174:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 175:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 176:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_int = xs_ups >> 8;
 177:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 179:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 180:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 181:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 182:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 183:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8
 184:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * src_tmp = src;
 185:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += ys_int * src_stride + xs_int;
 186:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = src_tmp[0];
 187:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 16
 188:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const lv_color_t * src_tmp = (const lv_color_t *)src;
 189:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += ys_int * src_stride + xs_int;
 190:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x] = *src_tmp;
 191:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 32
 192:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * src_tmp = src;
 193:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += (ys_int * src_stride * sizeof(lv_color_t)) + xs_int * sizeof(lv_color_t);
 194:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 195:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 196:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED && cbuf[x].full == ck.full) {
 198:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 199:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 200:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 201:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 202:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 5


 203:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void argb_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_stri
 204:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
 205:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        int32_t x_end, lv_color_t * cbuf, uint8_t * abuf)
 206:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
  28              		.loc 1 206 1 view -0
  29              		.cfi_startproc
  30              		@ args = 28, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 206 1 is_stmt 0 view .LVU1
  33 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
  34              		.cfi_def_cfa_offset 36
  35              		.cfi_offset 4, -36
  36              		.cfi_offset 5, -32
  37              		.cfi_offset 6, -28
  38              		.cfi_offset 7, -24
  39              		.cfi_offset 8, -20
  40              		.cfi_offset 9, -16
  41              		.cfi_offset 10, -12
  42              		.cfi_offset 11, -8
  43              		.cfi_offset 14, -4
  44 0004 8346     		mov	fp, r0
  45 0006 8846     		mov	r8, r1
  46 0008 9146     		mov	r9, r2
  47 000a 9A46     		mov	r10, r3
  48 000c 099A     		ldr	r2, [sp, #36]
  49              	.LVL1:
  50              		.loc 1 206 1 view .LVU2
  51 000e 0A9B     		ldr	r3, [sp, #40]
  52              	.LVL2:
  53              		.loc 1 206 1 view .LVU3
  54 0010 0B9F     		ldr	r7, [sp, #44]
  55 0012 0C9E     		ldr	r6, [sp, #48]
  56 0014 0D9D     		ldr	r5, [sp, #52]
  57 0016 0F99     		ldr	r1, [sp, #60]
  58              	.LVL3:
 207:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
  59              		.loc 1 207 5 is_stmt 1 view .LVU4
 208:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
  60              		.loc 1 208 5 view .LVU5
 209:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 210:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t x;
  61              		.loc 1 210 5 view .LVU6
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  62              		.loc 1 211 5 view .LVU7
  63              		.loc 1 211 11 is_stmt 0 view .LVU8
  64 0018 4FF0000C 		mov	ip, #0
  65              		.loc 1 211 5 view .LVU9
  66 001c 06E0     		b	.L2
  67              	.LVL4:
  68              	.L3:
  69              	.LBB7:
 212:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 213:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 214:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 215:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_int = xs_ups >> 8;
 216:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 6


 218:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
  70              		.loc 1 218 13 is_stmt 1 view .LVU10
  71              		.loc 1 218 21 is_stmt 0 view .LVU11
  72 001e 0024     		movs	r4, #0
  73              	.LVL5:
  74              		.loc 1 218 21 view .LVU12
  75 0020 01F80C40 		strb	r4, [r1, ip]
  76              	.LVL6:
  77              	.L5:
  78              		.loc 1 218 21 view .LVU13
  79              	.LBE7:
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  80              		.loc 1 211 27 is_stmt 1 discriminator 2 view .LVU14
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  81              		.loc 1 211 28 is_stmt 0 discriminator 2 view .LVU15
  82 0024 0CF1010C 		add	ip, ip, #1
  83              	.LVL7:
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  84              		.loc 1 211 28 discriminator 2 view .LVU16
  85 0028 0FFA8CFC 		sxth	ip, ip
  86              	.LVL8:
  87              	.L2:
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  88              		.loc 1 211 16 is_stmt 1 discriminator 1 view .LVU17
 211:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
  89              		.loc 1 211 5 is_stmt 0 discriminator 1 view .LVU18
  90 002c AC45     		cmp	ip, r5
  91 002e 1FDA     		bge	.L8
  92              	.LBB9:
 212:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
  93              		.loc 1 212 9 is_stmt 1 view .LVU19
 212:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
  94              		.loc 1 212 43 is_stmt 0 view .LVU20
  95 0030 07FB0CFE 		mul	lr, r7, ip
 212:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
  96              		.loc 1 212 16 view .LVU21
  97 0034 02EB2E2E 		add	lr, r2, lr, asr #8
  98              	.LVL9:
 213:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
  99              		.loc 1 213 9 is_stmt 1 view .LVU22
 213:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 100              		.loc 1 213 43 is_stmt 0 view .LVU23
 101 0038 06FB0CF4 		mul	r4, r6, ip
 213:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 102              		.loc 1 213 16 view .LVU24
 103 003c 03EB2424 		add	r4, r3, r4, asr #8
 104              	.LVL10:
 215:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 105              		.loc 1 215 9 is_stmt 1 view .LVU25
 216:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 106              		.loc 1 216 9 view .LVU26
 216:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 107              		.loc 1 216 17 is_stmt 0 view .LVU27
 108 0040 2412     		asrs	r4, r4, #8
 109              	.LVL11:
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 110              		.loc 1 217 9 is_stmt 1 view .LVU28
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 7


 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 111              		.loc 1 217 11 is_stmt 0 view .LVU29
 112 0042 5FEA2E2E 		asrs	lr, lr, #8
 113              	.LVL12:
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 114              		.loc 1 217 11 view .LVU30
 115 0046 EAD4     		bmi	.L3
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 116              		.loc 1 217 23 discriminator 1 view .LVU31
 117 0048 F045     		cmp	r8, lr
 118 004a E8DD     		ble	.L3
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 119              		.loc 1 217 42 discriminator 2 view .LVU32
 120 004c 002C     		cmp	r4, #0
 121 004e E6DB     		blt	.L3
 217:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 122              		.loc 1 217 56 discriminator 3 view .LVU33
 123 0050 A145     		cmp	r9, r4
 124 0052 E4DD     		ble	.L3
 125              	.LBB8:
 219:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 220:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 221:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * src_tmp = src;
 126              		.loc 1 221 13 is_stmt 1 view .LVU34
 127              	.LVL13:
 222:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += (ys_int * src_stride * LV_IMG_PX_SIZE_ALPHA_BYTE) + xs_int * LV_IMG_PX_SIZE_
 128              		.loc 1 222 13 view .LVU35
 129              		.loc 1 222 74 is_stmt 0 view .LVU36
 130 0054 04FB0AE4 		mla	r4, r4, r10, lr
 131              	.LVL14:
 132              		.loc 1 222 21 view .LVU37
 133 0058 0BEB840E 		add	lr, fp, r4, lsl #2
 134              	.LVL15:
 223:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 224:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8
 225:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = src_tmp[0];
 226:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 16
 227:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = src_tmp[0] + (src_tmp[1] << 8);
 228:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 32
 229:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 135              		.loc 1 229 13 is_stmt 1 view .LVU38
 136              		.loc 1 229 28 is_stmt 0 view .LVU39
 137 005c 5BF82440 		ldr	r4, [fp, r4, lsl #2]
 138              		.loc 1 229 26 view .LVU40
 139 0060 0E98     		ldr	r0, [sp, #56]
 140 0062 40F82C40 		str	r4, [r0, ip, lsl #2]
 230:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 231:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = src_tmp[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 141              		.loc 1 231 13 is_stmt 1 view .LVU41
 142              		.loc 1 231 21 is_stmt 0 view .LVU42
 143 0066 9EF80340 		ldrb	r4, [lr, #3]	@ zero_extendqisi2
 144 006a 01F80C40 		strb	r4, [r1, ip]
 145 006e D9E7     		b	.L5
 146              	.LVL16:
 147              	.L8:
 148              		.loc 1 231 21 view .LVU43
 149              	.LBE8:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 8


 150              	.LBE9:
 232:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 233:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 234:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 151              		.loc 1 234 1 view .LVU44
 152 0070 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 153              		.loc 1 234 1 view .LVU45
 154              		.cfi_endproc
 155              	.LFE163:
 157              		.section	.text.transform_point_upscaled,"ax",%progbits
 158              		.align	1
 159              		.syntax unified
 160              		.thumb
 161              		.thumb_func
 163              	transform_point_upscaled:
 164              	.LVL17:
 165              	.LFB165:
 235:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 236:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
 237:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void rgb565a8_no_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src_
 238:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                            int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
 239:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                            int32_t x_end, lv_color_t * cbuf, uint8_t * abuf)
 240:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
 241:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 242:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
 243:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 244:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t x;
 245:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
 246:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 247:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 248:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 249:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_int = xs_ups >> 8;
 250:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 251:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 252:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0;
 253:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 254:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 255:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const lv_color_t * src_tmp = (const lv_color_t *)src;
 256:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += ys_int * src_stride + xs_int;
 257:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x] = *src_tmp;
 258:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 259:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const lv_opa_t * a_tmp = src + src_stride * src_h * sizeof(lv_color_t);
 260:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             a_tmp += ys_int * src_stride + xs_int;
 261:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = *a_tmp;
 262:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 263:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 264:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 265:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 266:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 267:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void argb_and_rgb_aa(const uint8_t * src, lv_coord_t src_w, lv_coord_t src_h, lv_coord_t src
 268:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                             int32_t xs_ups, int32_t ys_ups, int32_t xs_step, int32_t ys_step,
 269:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                             int32_t x_end, lv_color_t * cbuf, uint8_t * abuf, lv_img_cf_t cf)
 270:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
 271:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 272:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
 273:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     bool has_alpha;
 274:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t px_size;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 9


 275:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_color_t ck = _LV_COLOR_ZERO_INITIALIZER;
 276:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     switch(cf) {
 277:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR:
 278:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             has_alpha = false;
 279:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             px_size = sizeof(lv_color_t);
 280:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             break;
 281:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR_ALPHA:
 282:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             has_alpha = true;
 283:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE;
 284:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             break;
 285:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED: {
 286:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 has_alpha = true;
 287:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 px_size = sizeof(lv_color_t);
 288:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_disp_t * d = _lv_refr_get_disp_refreshing();
 289:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 ck = d->driver->color_chroma_key;
 290:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 break;
 291:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 292:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
 293:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_RGB565A8:
 294:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             has_alpha = true;
 295:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             px_size = sizeof(lv_color_t);
 296:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             break;
 297:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 298:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         default:
 299:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             return;
 300:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 301:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 302:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t x;
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
 304:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 305:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 306:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 307:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_int = xs_ups >> 8;
 308:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 309:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 310:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         /*Fully out of the image*/
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 312:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 313:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             continue;
 314:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 315:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 316:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         /*Get the direction the hor and ver neighbor
 317:lvgl/src/draw/sw/lv_draw_sw_transform.c ****          *`fract` will be in range of 0x00..0xFF and `next` (+/-1) indicates the direction*/
 318:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_fract = xs_ups & 0xFF;
 319:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_fract = ys_ups & 0xFF;
 320:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 321:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t x_next;
 322:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t y_next;
 323:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_fract < 0x80) {
 324:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             x_next = -1;
 325:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (0x7F - xs_fract) * 2;
 326:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 327:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 328:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             x_next = 1;
 329:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (xs_fract - 0x80) * 2;
 330:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 331:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(ys_fract < 0x80) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 10


 332:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             y_next = -1;
 333:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (0x7F - ys_fract) * 2;
 334:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 335:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 336:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             y_next = 1;
 337:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (ys_fract - 0x80) * 2;
 338:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 339:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 340:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         const uint8_t * src_tmp = src;
 341:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         src_tmp += (ys_int * src_stride * px_size) + xs_int * px_size;
 342:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 343:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int + x_next >= 0 &&
 344:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            xs_int + x_next <= src_w - 1 &&
 345:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            ys_int + y_next >= 0 &&
 346:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            ys_int + y_next <= src_h - 1) {
 347:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 348:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_base = src_tmp;
 349:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_hor = src_tmp + x_next * px_size;
 350:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_ver = src_tmp + y_next * src_stride * px_size;
 351:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_base;
 352:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_ver;
 353:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_hor;
 354:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 355:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             if(has_alpha) {
 356:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_base;
 357:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_ver;
 358:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_hor;
 359:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 360:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_base = px_base[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 361:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = px_ver[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 362:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = px_hor[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 363:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 364:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
 365:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 else if(cf == LV_IMG_CF_RGB565A8) {
 366:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     const lv_opa_t * a_tmp = src + src_stride * src_h * sizeof(lv_color_t);
 367:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_base = *(a_tmp + (ys_int * src_stride) + xs_int);
 368:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = *(a_tmp + (ys_int * src_stride) + xs_int + x_next);
 369:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = *(a_tmp + ((ys_int + y_next) * src_stride) + xs_int);
 370:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 371:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 372:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 else if(cf == LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED) {
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     if(((lv_color_t *)px_base)->full == ck.full ||
 374:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 375:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_hor)->full == ck.full) {
 376:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         abuf[x] = 0x00;
 377:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         continue;
 378:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     }
 379:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     else {
 380:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_base = 0xff;
 381:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_ver = 0xff;
 382:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_hor = 0xff;
 383:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     }
 384:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 385:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 else {
 386:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_base = 0xff;
 387:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = 0xff;
 388:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = 0xff;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 11


 389:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 390:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_ver != a_base) a_ver = ((a_ver * ys_fract) + (a_base * (0x100 - ys_fract))) >>
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 393:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 394:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 395:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(abuf[x] == 0x00) continue;
 396:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 397:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8
 398:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_base.full = px_base[0];
 399:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver.full = px_ver[0];
 400:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor.full = px_hor[0];
 401:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 16
 402:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_base.full = px_base[0] + (px_base[1] << 8);
 403:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver.full = px_ver[0] + (px_ver[1] << 8);
 404:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor.full = px_hor[0] + (px_hor[1] << 8);
 405:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 32
 406:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_base.full = *((uint32_t *)px_base);
 407:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver.full = *((uint32_t *)px_ver);
 408:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor.full = *((uint32_t *)px_hor);
 409:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 410:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 411:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             /*No alpha channel -> RGB*/
 412:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             else {
 413:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_base = *((const lv_color_t *) px_base);
 414:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = *((const lv_color_t *) px_hor);
 415:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver = *((const lv_color_t *) px_ver);
 416:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = 0xff;
 417:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 418:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 419:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             if(c_base.full == c_ver.full && c_base.full == c_hor.full) {
 420:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = c_base;
 421:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 422:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             else {
 423:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver = lv_color_mix(c_ver, c_base, ys_fract);
 424:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = lv_color_mix(c_hor, c_base, xs_fract);
 425:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = lv_color_mix(c_hor, c_ver, LV_OPA_50);
 426:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 427:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 428:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         /*Partially out of the image*/
 429:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         else {
 430:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 1 || LV_COLOR_DEPTH == 8
 431:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = src_tmp[0];
 432:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 16
 433:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = src_tmp[0] + (src_tmp[1] << 8);
 434:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #elif LV_COLOR_DEPTH == 32
 435:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 436:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 437:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_opa_t a;
 438:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 439:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 440:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a = src_tmp[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 441:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 442:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a = cbuf[x].full == ck.full ? 0x00 : 0xff;
 444:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 445:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #if LV_COLOR_DEPTH == 16
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 12


 446:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_RGB565A8:
 447:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a = *(src + src_stride * src_h * sizeof(lv_color_t) + (ys_int * src_stride) + x
 448:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 449:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 450:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 default:
 451:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a = 0xff;
 452:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 453:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             if((xs_int == 0 && x_next < 0) || (xs_int == src_w - 1 && x_next > 0))  {
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 456:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             else if((ys_int == 0 && y_next < 0) || (ys_int == src_h - 1 && y_next > 0))  {
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 459:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 460:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             else {
 461:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = 0x00;
 462:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 463:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 464:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 465:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 466:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 467:lvgl/src/draw/sw/lv_draw_sw_transform.c **** static void transform_point_upscaled(point_transform_dsc_t * t, int32_t xin, int32_t yin, int32_t *
 468:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                                      int32_t * yout)
 469:lvgl/src/draw/sw/lv_draw_sw_transform.c **** {
 166              		.loc 1 469 1 is_stmt 1 view -0
 167              		.cfi_startproc
 168              		@ args = 4, pretend = 0, frame = 0
 169              		@ frame_needed = 0, uses_anonymous_args = 0
 170              		@ link register save eliminated.
 171              		.loc 1 469 1 is_stmt 0 view .LVU47
 172 0000 30B4     		push	{r4, r5}
 173              		.cfi_def_cfa_offset 8
 174              		.cfi_offset 4, -8
 175              		.cfi_offset 5, -4
 470:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     if(t->angle == 0 && t->zoom == LV_IMG_ZOOM_NONE) {
 176              		.loc 1 470 5 is_stmt 1 view .LVU48
 177              		.loc 1 470 9 is_stmt 0 view .LVU49
 178 0002 C469     		ldr	r4, [r0, #28]
 179              		.loc 1 470 7 view .LVU50
 180 0004 1CB9     		cbnz	r4, .L10
 181              		.loc 1 470 22 discriminator 1 view .LVU51
 182 0006 8569     		ldr	r5, [r0, #24]
 183 0008 B5F5807F 		cmp	r5, #256
 184 000c 15D0     		beq	.L15
 185              	.L10:
 471:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = xin * 256;
 472:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = yin * 256;
 473:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         return;
 474:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 475:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 476:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     xin -= t->pivot.x;
 186              		.loc 1 476 5 is_stmt 1 view .LVU52
 187              		.loc 1 476 20 is_stmt 0 view .LVU53
 188 000e B0F928C0 		ldrsh	ip, [r0, #40]
 189              		.loc 1 476 9 view .LVU54
 190 0012 A1EB0C01 		sub	r1, r1, ip
 191              	.LVL18:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 13


 477:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     yin -= t->pivot.y;
 192              		.loc 1 477 5 is_stmt 1 view .LVU55
 193              		.loc 1 477 20 is_stmt 0 view .LVU56
 194 0016 B0F92AC0 		ldrsh	ip, [r0, #42]
 195              		.loc 1 477 9 view .LVU57
 196 001a A2EB0C02 		sub	r2, r2, ip
 197              	.LVL19:
 478:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 479:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     if(t->angle == 0) {
 198              		.loc 1 479 5 is_stmt 1 view .LVU58
 199              		.loc 1 479 7 is_stmt 0 view .LVU59
 200 001e 94B9     		cbnz	r4, .L12
 480:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = ((int32_t)(xin * t->zoom)) + (t->pivot_x_256);
 201              		.loc 1 480 9 is_stmt 1 view .LVU60
 202              		.loc 1 480 48 is_stmt 0 view .LVU61
 203 0020 046A     		ldr	r4, [r0, #32]
 204              		.loc 1 480 44 view .LVU62
 205 0022 8569     		ldr	r5, [r0, #24]
 206 0024 01FB0541 		mla	r1, r1, r5, r4
 207              	.LVL20:
 208              		.loc 1 480 15 view .LVU63
 209 0028 1960     		str	r1, [r3]
 210              	.LVL21:
 481:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((int32_t)(yin * t->zoom)) + (t->pivot_y_256);
 211              		.loc 1 481 9 is_stmt 1 view .LVU64
 212              		.loc 1 481 35 is_stmt 0 view .LVU65
 213 002a 8169     		ldr	r1, [r0, #24]
 214              		.loc 1 481 48 view .LVU66
 215 002c 436A     		ldr	r3, [r0, #36]
 216              	.LVL22:
 217              		.loc 1 481 44 view .LVU67
 218 002e 02FB0132 		mla	r2, r2, r1, r3
 219              	.LVL23:
 220              		.loc 1 481 15 view .LVU68
 221 0032 029B     		ldr	r3, [sp, #8]
 222 0034 1A60     		str	r2, [r3]
 223              	.LVL24:
 224              	.L9:
 482:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 483:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     else if(t->zoom == LV_IMG_ZOOM_NONE) {
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = ((t->cosma * xin - t->sinma * yin) >> 2) + (t->pivot_x_256);
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 486:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 487:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     else {
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = (((t->cosma * xin - t->sinma * yin) * t->zoom) >> 10) + (t->pivot_x_256);
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 490:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 491:lvgl/src/draw/sw/lv_draw_sw_transform.c **** }
 225              		.loc 1 491 1 view .LVU69
 226 0036 30BC     		pop	{r4, r5}
 227              		.cfi_remember_state
 228              		.cfi_restore 5
 229              		.cfi_restore 4
 230              		.cfi_def_cfa_offset 0
 231              	.LVL25:
 232              		.loc 1 491 1 view .LVU70
 233 0038 7047     		bx	lr
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 14


 234              	.LVL26:
 235              	.L15:
 236              		.cfi_restore_state
 471:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = yin * 256;
 237              		.loc 1 471 9 is_stmt 1 view .LVU71
 471:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = yin * 256;
 238              		.loc 1 471 21 is_stmt 0 view .LVU72
 239 003a 0902     		lsls	r1, r1, #8
 240              	.LVL27:
 471:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = yin * 256;
 241              		.loc 1 471 15 view .LVU73
 242 003c 1960     		str	r1, [r3]
 472:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         return;
 243              		.loc 1 472 9 is_stmt 1 view .LVU74
 472:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         return;
 244              		.loc 1 472 21 is_stmt 0 view .LVU75
 245 003e 1202     		lsls	r2, r2, #8
 246              	.LVL28:
 472:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         return;
 247              		.loc 1 472 15 view .LVU76
 248 0040 029B     		ldr	r3, [sp, #8]
 249              	.LVL29:
 472:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         return;
 250              		.loc 1 472 15 view .LVU77
 251 0042 1A60     		str	r2, [r3]
 473:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 252              		.loc 1 473 9 is_stmt 1 view .LVU78
 253 0044 F7E7     		b	.L9
 254              	.LVL30:
 255              	.L12:
 483:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = ((t->cosma * xin - t->sinma * yin) >> 2) + (t->pivot_x_256);
 256              		.loc 1 483 10 view .LVU79
 483:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = ((t->cosma * xin - t->sinma * yin) >> 2) + (t->pivot_x_256);
 257              		.loc 1 483 14 is_stmt 0 view .LVU80
 258 0046 8469     		ldr	r4, [r0, #24]
 483:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *xout = ((t->cosma * xin - t->sinma * yin) >> 2) + (t->pivot_x_256);
 259              		.loc 1 483 12 view .LVU81
 260 0048 B4F5807F 		cmp	r4, #256
 261 004c 1AD0     		beq	.L16
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 262              		.loc 1 488 9 is_stmt 1 view .LVU82
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 263              		.loc 1 488 29 is_stmt 0 view .LVU83
 264 004e 4569     		ldr	r5, [r0, #20]
 265 0050 01FB05FC 		mul	ip, r1, r5
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 266              		.loc 1 488 35 view .LVU84
 267 0054 0569     		ldr	r5, [r0, #16]
 268 0056 02FB15CC 		mls	ip, r2, r5, ip
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 269              		.loc 1 488 53 view .LVU85
 270 005a 0CFB04F4 		mul	r4, ip, r4
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
 271              		.loc 1 488 71 view .LVU86
 272 005e 056A     		ldr	r5, [r0, #32]
 273 0060 05EBA424 		add	r4, r5, r4, asr #10
 488:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = (((t->sinma * xin + t->cosma * yin) * t->zoom) >> 10) + (t->pivot_y_256);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 15


 274              		.loc 1 488 15 view .LVU87
 275 0064 1C60     		str	r4, [r3]
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 276              		.loc 1 489 9 is_stmt 1 view .LVU88
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 277              		.loc 1 489 21 is_stmt 0 view .LVU89
 278 0066 0469     		ldr	r4, [r0, #16]
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 279              		.loc 1 489 38 view .LVU90
 280 0068 4369     		ldr	r3, [r0, #20]
 281              	.LVL31:
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 282              		.loc 1 489 46 view .LVU91
 283 006a 03FB02F2 		mul	r2, r3, r2
 284              	.LVL32:
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 285              		.loc 1 489 35 view .LVU92
 286 006e 01FB0421 		mla	r1, r1, r4, r2
 287              	.LVL33:
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 288              		.loc 1 489 56 view .LVU93
 289 0072 8369     		ldr	r3, [r0, #24]
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 290              		.loc 1 489 53 view .LVU94
 291 0074 03FB01F1 		mul	r1, r3, r1
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 292              		.loc 1 489 75 view .LVU95
 293 0078 436A     		ldr	r3, [r0, #36]
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 294              		.loc 1 489 71 view .LVU96
 295 007a 03EBA121 		add	r1, r3, r1, asr #10
 489:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 296              		.loc 1 489 15 view .LVU97
 297 007e 029B     		ldr	r3, [sp, #8]
 298 0080 1960     		str	r1, [r3]
 299 0082 D8E7     		b	.L9
 300              	.LVL34:
 301              	.L16:
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 302              		.loc 1 484 9 is_stmt 1 view .LVU98
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 303              		.loc 1 484 20 is_stmt 0 view .LVU99
 304 0084 4469     		ldr	r4, [r0, #20]
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 305              		.loc 1 484 28 view .LVU100
 306 0086 01FB04F4 		mul	r4, r1, r4
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 307              		.loc 1 484 34 view .LVU101
 308 008a 0569     		ldr	r5, [r0, #16]
 309 008c 02FB1544 		mls	r4, r2, r5, r4
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 310              		.loc 1 484 58 view .LVU102
 311 0090 056A     		ldr	r5, [r0, #32]
 312 0092 05EBA404 		add	r4, r5, r4, asr #2
 484:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         *yout = ((t->sinma * xin + t->cosma * yin) >> 2) + (t->pivot_y_256);
 313              		.loc 1 484 15 view .LVU103
 314 0096 1C60     		str	r4, [r3]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 16


 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 315              		.loc 1 485 9 is_stmt 1 view .LVU104
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 316              		.loc 1 485 20 is_stmt 0 view .LVU105
 317 0098 0469     		ldr	r4, [r0, #16]
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 318              		.loc 1 485 37 view .LVU106
 319 009a 4369     		ldr	r3, [r0, #20]
 320              	.LVL35:
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 321              		.loc 1 485 45 view .LVU107
 322 009c 03FB02F2 		mul	r2, r3, r2
 323              	.LVL36:
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 324              		.loc 1 485 34 view .LVU108
 325 00a0 01FB0421 		mla	r1, r1, r4, r2
 326              	.LVL37:
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 327              		.loc 1 485 62 view .LVU109
 328 00a4 436A     		ldr	r3, [r0, #36]
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 329              		.loc 1 485 58 view .LVU110
 330 00a6 03EBA101 		add	r1, r3, r1, asr #2
 485:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 331              		.loc 1 485 15 view .LVU111
 332 00aa 029B     		ldr	r3, [sp, #8]
 333 00ac 1960     		str	r1, [r3]
 334 00ae C2E7     		b	.L9
 335              		.cfi_endproc
 336              	.LFE165:
 338              		.section	.text.rgb_no_aa,"ax",%progbits
 339              		.align	1
 340              		.syntax unified
 341              		.thumb
 342              		.thumb_func
 344              	rgb_no_aa:
 345              	.LVL38:
 346              	.LFB162:
 163:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 347              		.loc 1 163 1 is_stmt 1 view -0
 348              		.cfi_startproc
 349              		@ args = 32, pretend = 0, frame = 24
 350              		@ frame_needed = 0, uses_anonymous_args = 0
 163:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 351              		.loc 1 163 1 is_stmt 0 view .LVU113
 352 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 353              		.cfi_def_cfa_offset 36
 354              		.cfi_offset 4, -36
 355              		.cfi_offset 5, -32
 356              		.cfi_offset 6, -28
 357              		.cfi_offset 7, -24
 358              		.cfi_offset 8, -20
 359              		.cfi_offset 9, -16
 360              		.cfi_offset 10, -12
 361              		.cfi_offset 11, -8
 362              		.cfi_offset 14, -4
 363 0004 87B0     		sub	sp, sp, #28
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 17


 364              		.cfi_def_cfa_offset 64
 365 0006 0490     		str	r0, [sp, #16]
 366 0008 0291     		str	r1, [sp, #8]
 367 000a 0392     		str	r2, [sp, #12]
 368 000c 0593     		str	r3, [sp, #20]
 369 000e DDF840A0 		ldr	r10, [sp, #64]
 370 0012 DDF84490 		ldr	r9, [sp, #68]
 371 0016 DDF84880 		ldr	r8, [sp, #72]
 372 001a 139F     		ldr	r7, [sp, #76]
 373 001c 149C     		ldr	r4, [sp, #80]
 374 001e DDF854B0 		ldr	fp, [sp, #84]
 375 0022 169D     		ldr	r5, [sp, #88]
 376 0024 9DF85C60 		ldrb	r6, [sp, #92]	@ zero_extendqisi2
 164:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
 377              		.loc 1 164 5 is_stmt 1 view .LVU114
 378              	.LVL39:
 165:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_disp_t * d = _lv_refr_get_disp_refreshing();
 379              		.loc 1 165 5 view .LVU115
 166:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_color_t ck = d->driver->color_chroma_key;
 380              		.loc 1 166 5 view .LVU116
 166:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_color_t ck = d->driver->color_chroma_key;
 381              		.loc 1 166 21 is_stmt 0 view .LVU117
 382 0028 FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 383              	.LVL40:
 167:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 384              		.loc 1 167 5 is_stmt 1 view .LVU118
 167:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 385              		.loc 1 167 22 is_stmt 0 view .LVU119
 386 002c 0368     		ldr	r3, [r0]
 167:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 387              		.loc 1 167 16 view .LVU120
 388 002e 9B6B     		ldr	r3, [r3, #56]
 389              	.LVL41:
 167:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 390              		.loc 1 167 16 view .LVU121
 391 0030 0193     		str	r3, [sp, #4]
 169:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 392              		.loc 1 169 5 is_stmt 1 view .LVU122
 393 0032 2146     		mov	r1, r4
 394 0034 2846     		mov	r0, r5
 395              	.LVL42:
 169:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 396              		.loc 1 169 5 is_stmt 0 view .LVU123
 397 0036 FFF7FEFF 		bl	lv_memset_ff
 398              	.LVL43:
 171:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
 399              		.loc 1 171 5 is_stmt 1 view .LVU124
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 400              		.loc 1 172 5 view .LVU125
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 401              		.loc 1 172 11 is_stmt 0 view .LVU126
 402 003a 0023     		movs	r3, #0
 403 003c 0299     		ldr	r1, [sp, #8]
 404 003e DDF80CC0 		ldr	ip, [sp, #12]
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 405              		.loc 1 172 5 view .LVU127
 406 0042 05E0     		b	.L18
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 18


 407              	.LVL44:
 408              	.L19:
 409              	.LBB10:
 179:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 410              		.loc 1 179 13 is_stmt 1 view .LVU128
 179:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 411              		.loc 1 179 21 is_stmt 0 view .LVU129
 412 0044 0022     		movs	r2, #0
 413              	.LVL45:
 179:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 414              		.loc 1 179 21 view .LVU130
 415 0046 EA54     		strb	r2, [r5, r3]
 416              	.L21:
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 417              		.loc 1 197 9 is_stmt 1 view .LVU131
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 418              		.loc 1 197 11 is_stmt 0 view .LVU132
 419 0048 062E     		cmp	r6, #6
 420 004a 1FD0     		beq	.L25
 421              	.L22:
 422              	.LBE10:
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 423              		.loc 1 172 27 is_stmt 1 discriminator 2 view .LVU133
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 424              		.loc 1 172 28 is_stmt 0 discriminator 2 view .LVU134
 425 004c 0133     		adds	r3, r3, #1
 426              	.LVL46:
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 427              		.loc 1 172 28 discriminator 2 view .LVU135
 428 004e 1BB2     		sxth	r3, r3
 429              	.LVL47:
 430              	.L18:
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 431              		.loc 1 172 16 is_stmt 1 discriminator 1 view .LVU136
 172:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 432              		.loc 1 172 5 is_stmt 0 discriminator 1 view .LVU137
 433 0050 A342     		cmp	r3, r4
 434 0052 23DA     		bge	.L26
 435              	.LBB12:
 173:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 436              		.loc 1 173 9 is_stmt 1 view .LVU138
 173:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 437              		.loc 1 173 43 is_stmt 0 view .LVU139
 438 0054 08FB03F2 		mul	r2, r8, r3
 173:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 439              		.loc 1 173 16 view .LVU140
 440 0058 0AEB2222 		add	r2, r10, r2, asr #8
 441              	.LVL48:
 174:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 442              		.loc 1 174 9 is_stmt 1 view .LVU141
 174:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 443              		.loc 1 174 43 is_stmt 0 view .LVU142
 444 005c 07FB03FE 		mul	lr, r7, r3
 174:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 445              		.loc 1 174 16 view .LVU143
 446 0060 09EB2E2E 		add	lr, r9, lr, asr #8
 447              	.LVL49:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 19


 176:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 448              		.loc 1 176 9 is_stmt 1 view .LVU144
 177:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 449              		.loc 1 177 9 view .LVU145
 177:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_int < 0 || xs_int >= src_w || ys_int < 0 || ys_int >= src_h) {
 450              		.loc 1 177 17 is_stmt 0 view .LVU146
 451 0064 4FEA2E2E 		asr	lr, lr, #8
 452              	.LVL50:
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 453              		.loc 1 178 9 is_stmt 1 view .LVU147
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 454              		.loc 1 178 11 is_stmt 0 view .LVU148
 455 0068 1212     		asrs	r2, r2, #8
 456              	.LVL51:
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 457              		.loc 1 178 11 view .LVU149
 458 006a EBD4     		bmi	.L19
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 459              		.loc 1 178 23 discriminator 1 view .LVU150
 460 006c 9142     		cmp	r1, r2
 461 006e E9DD     		ble	.L19
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 462              		.loc 1 178 42 discriminator 2 view .LVU151
 463 0070 BEF1000F 		cmp	lr, #0
 464 0074 E6DB     		blt	.L19
 178:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 465              		.loc 1 178 56 discriminator 3 view .LVU152
 466 0076 F445     		cmp	ip, lr
 467 0078 E4DD     		ble	.L19
 468              	.LBB11:
 192:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             src_tmp += (ys_int * src_stride * sizeof(lv_color_t)) + xs_int * sizeof(lv_color_t);
 469              		.loc 1 192 13 is_stmt 1 view .LVU153
 470              	.LVL52:
 193:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 471              		.loc 1 193 13 view .LVU154
 193:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 472              		.loc 1 193 67 is_stmt 0 view .LVU155
 473 007a 0598     		ldr	r0, [sp, #20]
 474              	.LVL53:
 193:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             cbuf[x].full = *((uint32_t *)src_tmp);
 475              		.loc 1 193 67 view .LVU156
 476 007c 0EFB0022 		mla	r2, lr, r0, r2
 477              	.LVL54:
 194:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 478              		.loc 1 194 13 is_stmt 1 view .LVU157
 194:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 479              		.loc 1 194 28 is_stmt 0 view .LVU158
 480 0080 0498     		ldr	r0, [sp, #16]
 481 0082 50F82220 		ldr	r2, [r0, r2, lsl #2]
 482              	.LVL55:
 194:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 483              		.loc 1 194 26 view .LVU159
 484 0086 4BF82320 		str	r2, [fp, r3, lsl #2]
 485 008a DDE7     		b	.L21
 486              	.LVL56:
 487              	.L25:
 194:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 20


 488              		.loc 1 194 26 view .LVU160
 489              	.LBE11:
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 490              		.loc 1 197 62 discriminator 1 view .LVU161
 491 008c 5BF82320 		ldr	r2, [fp, r3, lsl #2]
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 492              		.loc 1 197 52 discriminator 1 view .LVU162
 493 0090 0198     		ldr	r0, [sp, #4]
 494              	.LVL57:
 197:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 495              		.loc 1 197 52 discriminator 1 view .LVU163
 496 0092 8242     		cmp	r2, r0
 497 0094 DAD1     		bne	.L22
 198:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 498              		.loc 1 198 13 is_stmt 1 view .LVU164
 198:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 499              		.loc 1 198 21 is_stmt 0 view .LVU165
 500 0096 0022     		movs	r2, #0
 501 0098 EA54     		strb	r2, [r5, r3]
 502 009a D7E7     		b	.L22
 503              	.LVL58:
 504              	.L26:
 198:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 505              		.loc 1 198 21 view .LVU166
 506              	.LBE12:
 201:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 507              		.loc 1 201 1 view .LVU167
 508 009c 07B0     		add	sp, sp, #28
 509              		.cfi_def_cfa_offset 36
 510              		@ sp needed
 511 009e BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 201:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 512              		.loc 1 201 1 view .LVU168
 513              		.cfi_endproc
 514              	.LFE162:
 516              		.section	.text.argb_and_rgb_aa,"ax",%progbits
 517              		.align	1
 518              		.syntax unified
 519              		.thumb
 520              		.thumb_func
 522              	argb_and_rgb_aa:
 523              	.LVL59:
 524              	.LFB164:
 270:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 525              		.loc 1 270 1 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 32, pretend = 0, frame = 56
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 270:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t xs_ups_start = xs_ups;
 529              		.loc 1 270 1 is_stmt 0 view .LVU170
 530 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 531              		.cfi_def_cfa_offset 36
 532              		.cfi_offset 4, -36
 533              		.cfi_offset 5, -32
 534              		.cfi_offset 6, -28
 535              		.cfi_offset 7, -24
 536              		.cfi_offset 8, -20
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 21


 537              		.cfi_offset 9, -16
 538              		.cfi_offset 10, -12
 539              		.cfi_offset 11, -8
 540              		.cfi_offset 14, -4
 541 0004 8FB0     		sub	sp, sp, #60
 542              		.cfi_def_cfa_offset 96
 543 0006 0190     		str	r0, [sp, #4]
 544 0008 0C46     		mov	r4, r1
 545 000a 0292     		str	r2, [sp, #8]
 546 000c 0593     		str	r3, [sp, #20]
 547 000e DDF860B0 		ldr	fp, [sp, #96]
 548 0012 1C9D     		ldr	r5, [sp, #112]
 549 0014 9DF87C60 		ldrb	r6, [sp, #124]	@ zero_extendqisi2
 271:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t ys_ups_start = ys_ups;
 550              		.loc 1 271 5 is_stmt 1 view .LVU171
 551              	.LVL60:
 272:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     bool has_alpha;
 552              		.loc 1 272 5 view .LVU172
 273:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t px_size;
 553              		.loc 1 273 5 view .LVU173
 274:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_color_t ck = _LV_COLOR_ZERO_INITIALIZER;
 554              		.loc 1 274 5 view .LVU174
 275:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     switch(cf) {
 555              		.loc 1 275 5 view .LVU175
 275:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     switch(cf) {
 556              		.loc 1 275 16 is_stmt 0 view .LVU176
 557 0018 0023     		movs	r3, #0
 558              	.LVL61:
 275:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     switch(cf) {
 559              		.loc 1 275 16 view .LVU177
 560 001a 0993     		str	r3, [sp, #36]
 276:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR:
 561              		.loc 1 276 5 is_stmt 1 view .LVU178
 562 001c 052E     		cmp	r6, #5
 563 001e 0ED0     		beq	.L59
 564 0020 062E     		cmp	r6, #6
 565 0022 04D0     		beq	.L29
 566 0024 042E     		cmp	r6, #4
 567 0026 0DD0     		beq	.L65
 568              	.LVL62:
 569              	.L27:
 465:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 570              		.loc 1 465 1 is_stmt 0 view .LVU179
 571 0028 0FB0     		add	sp, sp, #60
 572              		.cfi_remember_state
 573              		.cfi_def_cfa_offset 36
 574              		@ sp needed
 575 002a BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 576              	.LVL63:
 577              	.L29:
 578              		.cfi_restore_state
 579              	.LBB24:
 286:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 px_size = sizeof(lv_color_t);
 580              		.loc 1 286 17 is_stmt 1 view .LVU180
 287:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_disp_t * d = _lv_refr_get_disp_refreshing();
 581              		.loc 1 287 17 view .LVU181
 288:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 ck = d->driver->color_chroma_key;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 22


 582              		.loc 1 288 17 view .LVU182
 288:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 ck = d->driver->color_chroma_key;
 583              		.loc 1 288 33 is_stmt 0 view .LVU183
 584 002e FFF7FEFF 		bl	_lv_refr_get_disp_refreshing
 585              	.LVL64:
 289:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 break;
 586              		.loc 1 289 17 is_stmt 1 view .LVU184
 289:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 break;
 587              		.loc 1 289 23 is_stmt 0 view .LVU185
 588 0032 0368     		ldr	r3, [r0]
 289:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 break;
 589              		.loc 1 289 20 view .LVU186
 590 0034 9B6B     		ldr	r3, [r3, #56]
 591              	.LVL65:
 289:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 break;
 592              		.loc 1 289 20 view .LVU187
 593 0036 0993     		str	r3, [sp, #36]
 290:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 594              		.loc 1 290 17 is_stmt 1 view .LVU188
 286:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 px_size = sizeof(lv_color_t);
 595              		.loc 1 286 27 is_stmt 0 view .LVU189
 596 0038 0123     		movs	r3, #1
 597              	.LVL66:
 286:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 px_size = sizeof(lv_color_t);
 598              		.loc 1 286 27 view .LVU190
 599 003a 0A93     		str	r3, [sp, #40]
 290:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 600              		.loc 1 290 17 view .LVU191
 601 003c 04E0     		b	.L28
 602              	.LVL67:
 603              	.L59:
 290:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 604              		.loc 1 290 17 view .LVU192
 605              	.LBE24:
 282:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE;
 606              		.loc 1 282 23 view .LVU193
 607 003e 0123     		movs	r3, #1
 608              	.LVL68:
 282:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             px_size = LV_IMG_PX_SIZE_ALPHA_BYTE;
 609              		.loc 1 282 23 view .LVU194
 610 0040 0A93     		str	r3, [sp, #40]
 611 0042 01E0     		b	.L28
 612              	.LVL69:
 613              	.L65:
 276:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR:
 614              		.loc 1 276 5 view .LVU195
 615 0044 0023     		movs	r3, #0
 616              	.LVL70:
 276:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         case LV_IMG_CF_TRUE_COLOR:
 617              		.loc 1 276 5 view .LVU196
 618 0046 0A93     		str	r3, [sp, #40]
 619              	.LVL71:
 620              	.L28:
 302:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(x = 0; x < x_end; x++) {
 621              		.loc 1 302 5 is_stmt 1 view .LVU197
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 622              		.loc 1 303 5 view .LVU198
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 23


 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 623              		.loc 1 303 11 is_stmt 0 view .LVU199
 624 0048 0023     		movs	r3, #0
 625 004a 1B9F     		ldr	r7, [sp, #108]
 626 004c DDF878A0 		ldr	r10, [sp, #120]
 627 0050 0796     		str	r6, [sp, #28]
 628 0052 1A9E     		ldr	r6, [sp, #104]
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 629              		.loc 1 303 5 view .LVU200
 630 0054 04E0     		b	.L31
 631              	.LVL72:
 632              	.L32:
 633              	.LBB25:
 312:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             continue;
 634              		.loc 1 312 13 is_stmt 1 view .LVU201
 312:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             continue;
 635              		.loc 1 312 21 is_stmt 0 view .LVU202
 636 0056 0022     		movs	r2, #0
 637              	.LVL73:
 312:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             continue;
 638              		.loc 1 312 21 view .LVU203
 639 0058 0AF80320 		strb	r2, [r10, r3]
 313:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 640              		.loc 1 313 13 is_stmt 1 view .LVU204
 641              	.LVL74:
 642              	.L34:
 313:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 643              		.loc 1 313 13 is_stmt 0 view .LVU205
 644              	.LBE25:
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 645              		.loc 1 303 27 is_stmt 1 discriminator 2 view .LVU206
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 646              		.loc 1 303 28 is_stmt 0 discriminator 2 view .LVU207
 647 005c 0133     		adds	r3, r3, #1
 648              	.LVL75:
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 649              		.loc 1 303 28 discriminator 2 view .LVU208
 650 005e 1BB2     		sxth	r3, r3
 651              	.LVL76:
 652              	.L31:
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 653              		.loc 1 303 16 is_stmt 1 discriminator 1 view .LVU209
 303:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         xs_ups = xs_ups_start + ((xs_step * x) >> 8);
 654              		.loc 1 303 5 is_stmt 0 discriminator 1 view .LVU210
 655 0060 AB42     		cmp	r3, r5
 656 0062 E1DA     		bge	.L27
 657              	.LBB38:
 304:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 658              		.loc 1 304 9 is_stmt 1 view .LVU211
 304:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 659              		.loc 1 304 43 is_stmt 0 view .LVU212
 660 0064 06FB03FC 		mul	ip, r6, r3
 304:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         ys_ups = ys_ups_start + ((ys_step * x) >> 8);
 661              		.loc 1 304 16 view .LVU213
 662 0068 0BEB2C2C 		add	ip, fp, ip, asr #8
 663              	.LVL77:
 305:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 24


 664              		.loc 1 305 9 is_stmt 1 view .LVU214
 305:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 665              		.loc 1 305 43 is_stmt 0 view .LVU215
 666 006c 07FB03FE 		mul	lr, r7, r3
 305:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 667              		.loc 1 305 16 view .LVU216
 668 0070 199A     		ldr	r2, [sp, #100]
 669              	.LVL78:
 305:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 670              		.loc 1 305 16 view .LVU217
 671 0072 02EB2E2E 		add	lr, r2, lr, asr #8
 672              	.LVL79:
 307:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_int = ys_ups >> 8;
 673              		.loc 1 307 9 is_stmt 1 view .LVU218
 308:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 674              		.loc 1 308 9 view .LVU219
 308:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 675              		.loc 1 308 17 is_stmt 0 view .LVU220
 676 0076 4FEA2E21 		asr	r1, lr, #8
 677              	.LVL80:
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 678              		.loc 1 311 9 is_stmt 1 view .LVU221
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 679              		.loc 1 311 11 is_stmt 0 view .LVU222
 680 007a 5FEA2C22 		asrs	r2, ip, #8
 681              	.LVL81:
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 682              		.loc 1 311 11 view .LVU223
 683 007e EAD4     		bmi	.L32
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 684              		.loc 1 311 23 discriminator 1 view .LVU224
 685 0080 9442     		cmp	r4, r2
 686 0082 E8DD     		ble	.L32
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 687              		.loc 1 311 42 discriminator 2 view .LVU225
 688 0084 0029     		cmp	r1, #0
 689 0086 E6DB     		blt	.L32
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 690              		.loc 1 311 56 discriminator 3 view .LVU226
 691 0088 0298     		ldr	r0, [sp, #8]
 692              	.LVL82:
 311:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             abuf[x] = 0x00;
 693              		.loc 1 311 56 discriminator 3 view .LVU227
 694 008a 8842     		cmp	r0, r1
 695 008c E3DD     		ble	.L32
 318:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_fract = ys_ups & 0xFF;
 696              		.loc 1 318 9 is_stmt 1 view .LVU228
 318:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_fract = ys_ups & 0xFF;
 697              		.loc 1 318 17 is_stmt 0 view .LVU229
 698 008e 5FFA8CF8 		uxtb	r8, ip
 699              	.LVL83:
 319:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 700              		.loc 1 319 9 is_stmt 1 view .LVU230
 319:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 701              		.loc 1 319 17 is_stmt 0 view .LVU231
 702 0092 5FFA8EF9 		uxtb	r9, lr
 703              	.LVL84:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 25


 321:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t y_next;
 704              		.loc 1 321 9 is_stmt 1 view .LVU232
 322:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(xs_fract < 0x80) {
 705              		.loc 1 322 9 view .LVU233
 323:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             x_next = -1;
 706              		.loc 1 323 9 view .LVU234
 323:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             x_next = -1;
 707              		.loc 1 323 11 is_stmt 0 view .LVU235
 708 0096 1CF0800F 		tst	ip, #128
 709 009a 68D1     		bne	.L35
 324:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (0x7F - xs_fract) * 2;
 710              		.loc 1 324 13 is_stmt 1 view .LVU236
 711              	.LVL85:
 325:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 712              		.loc 1 325 13 view .LVU237
 325:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 713              		.loc 1 325 30 is_stmt 0 view .LVU238
 714 009c C8F17F08 		rsb	r8, r8, #127
 715              	.LVL86:
 325:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 716              		.loc 1 325 22 view .LVU239
 717 00a0 4FEA4800 		lsl	r0, r8, #1
 718 00a4 0690     		str	r0, [sp, #24]
 719              	.LVL87:
 324:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (0x7F - xs_fract) * 2;
 720              		.loc 1 324 20 view .LVU240
 721 00a6 4FF0FF38 		mov	r8, #-1
 722              	.LVL88:
 723              	.L36:
 331:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             y_next = -1;
 724              		.loc 1 331 9 is_stmt 1 view .LVU241
 331:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             y_next = -1;
 725              		.loc 1 331 11 is_stmt 0 view .LVU242
 726 00aa 1EF0800F 		tst	lr, #128
 727 00ae 66D1     		bne	.L37
 332:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (0x7F - ys_fract) * 2;
 728              		.loc 1 332 13 is_stmt 1 view .LVU243
 729              	.LVL89:
 333:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 730              		.loc 1 333 13 view .LVU244
 333:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 731              		.loc 1 333 30 is_stmt 0 view .LVU245
 732 00b0 C9F17F09 		rsb	r9, r9, #127
 733              	.LVL90:
 333:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 734              		.loc 1 333 22 view .LVU246
 735 00b4 4FEA4900 		lsl	r0, r9, #1
 736 00b8 0890     		str	r0, [sp, #32]
 737              	.LVL91:
 332:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (0x7F - ys_fract) * 2;
 738              		.loc 1 332 20 view .LVU247
 739 00ba 4FF0FF30 		mov	r0, #-1
 740              	.LVL92:
 332:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (0x7F - ys_fract) * 2;
 741              		.loc 1 332 20 view .LVU248
 742 00be 0490     		str	r0, [sp, #16]
 743              	.LVL93:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 26


 744              	.L38:
 340:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         src_tmp += (ys_int * src_stride * px_size) + xs_int * px_size;
 745              		.loc 1 340 9 is_stmt 1 view .LVU249
 341:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 746              		.loc 1 341 9 view .LVU250
 341:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 747              		.loc 1 341 52 is_stmt 0 view .LVU251
 748 00c0 0598     		ldr	r0, [sp, #20]
 749 00c2 01FB002C 		mla	ip, r1, r0, r2
 750              	.LVL94:
 341:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 751              		.loc 1 341 17 view .LVU252
 752 00c6 0198     		ldr	r0, [sp, #4]
 753 00c8 00EB8C0E 		add	lr, r0, ip, lsl #2
 754              	.LVL95:
 343:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            xs_int + x_next <= src_w - 1 &&
 755              		.loc 1 343 9 is_stmt 1 view .LVU253
 343:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            xs_int + x_next <= src_w - 1 &&
 756              		.loc 1 343 11 is_stmt 0 view .LVU254
 757 00cc 18EB0209 		adds	r9, r8, r2
 758 00d0 00F13F81 		bmi	.L39
 343:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            xs_int + x_next <= src_w - 1 &&
 759              		.loc 1 343 33 discriminator 1 view .LVU255
 760 00d4 4C45     		cmp	r4, r9
 761 00d6 40F33C81 		ble	.L39
 344:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            ys_int + y_next >= 0 &&
 762              		.loc 1 344 41 view .LVU256
 763 00da 0498     		ldr	r0, [sp, #16]
 764 00dc 10EB0109 		adds	r9, r0, r1
 765 00e0 00F13781 		bmi	.L39
 345:lvgl/src/draw/sw/lv_draw_sw_transform.c ****            ys_int + y_next <= src_h - 1) {
 766              		.loc 1 345 33 view .LVU257
 767 00e4 0298     		ldr	r0, [sp, #8]
 768 00e6 4845     		cmp	r0, r9
 769 00e8 40F33381 		ble	.L39
 770              	.LBB26:
 348:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_hor = src_tmp + x_next * px_size;
 771              		.loc 1 348 13 is_stmt 1 view .LVU258
 772              	.LVL96:
 349:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_ver = src_tmp + y_next * src_stride * px_size;
 773              		.loc 1 349 13 view .LVU259
 349:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_ver = src_tmp + y_next * src_stride * px_size;
 774              		.loc 1 349 55 is_stmt 0 view .LVU260
 775 00ec 4FEA8802 		lsl	r2, r8, #2
 776              	.LVL97:
 349:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_ver = src_tmp + y_next * src_stride * px_size;
 777              		.loc 1 349 55 view .LVU261
 778 00f0 0392     		str	r2, [sp, #12]
 349:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             const uint8_t * px_ver = src_tmp + y_next * src_stride * px_size;
 779              		.loc 1 349 29 view .LVU262
 780 00f2 0EEB8801 		add	r1, lr, r8, lsl #2
 781              	.LVL98:
 350:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_base;
 782              		.loc 1 350 13 is_stmt 1 view .LVU263
 350:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_base;
 783              		.loc 1 350 55 is_stmt 0 view .LVU264
 784 00f6 049A     		ldr	r2, [sp, #16]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 27


 785 00f8 0598     		ldr	r0, [sp, #20]
 786 00fa 00FB02F2 		mul	r2, r0, r2
 787 00fe 0492     		str	r2, [sp, #16]
 788              	.LVL99:
 350:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_base;
 789              		.loc 1 350 29 view .LVU265
 790 0100 0EEB8202 		add	r2, lr, r2, lsl #2
 791              	.LVL100:
 351:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_ver;
 792              		.loc 1 351 13 is_stmt 1 view .LVU266
 352:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             lv_color_t c_hor;
 793              		.loc 1 352 13 view .LVU267
 353:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 794              		.loc 1 353 13 view .LVU268
 355:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_base;
 795              		.loc 1 355 13 view .LVU269
 355:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_base;
 796              		.loc 1 355 15 is_stmt 0 view .LVU270
 797 0104 0A98     		ldr	r0, [sp, #40]
 798 0106 0028     		cmp	r0, #0
 799 0108 5FD0     		beq	.L40
 800              	.LBB27:
 356:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_ver;
 801              		.loc 1 356 17 is_stmt 1 view .LVU271
 357:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 lv_opa_t a_hor;
 802              		.loc 1 357 17 view .LVU272
 358:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(cf == LV_IMG_CF_TRUE_COLOR_ALPHA) {
 803              		.loc 1 358 17 view .LVU273
 359:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_base = px_base[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 804              		.loc 1 359 17 view .LVU274
 359:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_base = px_base[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 805              		.loc 1 359 19 is_stmt 0 view .LVU275
 806 010a 0798     		ldr	r0, [sp, #28]
 807 010c 0528     		cmp	r0, #5
 808 010e 3ED0     		beq	.L66
 372:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     if(((lv_color_t *)px_base)->full == ck.full ||
 809              		.loc 1 372 22 is_stmt 1 view .LVU276
 372:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     if(((lv_color_t *)px_base)->full == ck.full ||
 810              		.loc 1 372 24 is_stmt 0 view .LVU277
 811 0110 079A     		ldr	r2, [sp, #28]
 812              	.LVL101:
 372:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     if(((lv_color_t *)px_base)->full == ck.full ||
 813              		.loc 1 372 24 view .LVU278
 814 0112 062A     		cmp	r2, #6
 815 0114 41D0     		beq	.L67
 388:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 816              		.loc 1 388 27 view .LVU279
 817 0116 FF21     		movs	r1, #255
 818              	.LVL102:
 387:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = 0xff;
 819              		.loc 1 387 27 view .LVU280
 820 0118 8946     		mov	r9, r1
 386:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = 0xff;
 821              		.loc 1 386 28 view .LVU281
 822 011a 8846     		mov	r8, r1
 823              	.LVL103:
 824              	.L42:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 28


 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 825              		.loc 1 391 17 is_stmt 1 view .LVU282
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 826              		.loc 1 391 19 is_stmt 0 view .LVU283
 827 011c C845     		cmp	r8, r9
 828 011e 08D0     		beq	.L45
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 829              		.loc 1 391 37 is_stmt 1 discriminator 1 view .LVU284
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 830              		.loc 1 391 84 is_stmt 0 discriminator 1 view .LVU285
 831 0120 0898     		ldr	r0, [sp, #32]
 832 0122 C0F58072 		rsb	r2, r0, #256
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 833              		.loc 1 391 75 discriminator 1 view .LVU286
 834 0126 02FB08F2 		mul	r2, r2, r8
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 835              		.loc 1 391 65 discriminator 1 view .LVU287
 836 012a 00FB0922 		mla	r2, r0, r9, r2
 391:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 if(a_hor != a_base) a_hor = ((a_hor * xs_fract) + (a_base * (0x100 - xs_fract))) >>
 837              		.loc 1 391 43 discriminator 1 view .LVU288
 838 012e C2F30729 		ubfx	r9, r2, #8, #8
 839              	.LVL104:
 840              	.L45:
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 841              		.loc 1 392 17 is_stmt 1 view .LVU289
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 842              		.loc 1 392 19 is_stmt 0 view .LVU290
 843 0132 8845     		cmp	r8, r1
 844 0134 08D0     		beq	.L46
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 845              		.loc 1 392 37 is_stmt 1 discriminator 1 view .LVU291
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 846              		.loc 1 392 84 is_stmt 0 discriminator 1 view .LVU292
 847 0136 0698     		ldr	r0, [sp, #24]
 848 0138 C0F58072 		rsb	r2, r0, #256
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 849              		.loc 1 392 75 discriminator 1 view .LVU293
 850 013c 02FB08F2 		mul	r2, r2, r8
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 851              		.loc 1 392 65 discriminator 1 view .LVU294
 852 0140 00FB0122 		mla	r2, r0, r1, r2
 392:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a_ver + a_hor) >> 1;
 853              		.loc 1 392 43 discriminator 1 view .LVU295
 854 0144 C2F30721 		ubfx	r1, r2, #8, #8
 855              	.LVL105:
 856              	.L46:
 393:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 857              		.loc 1 393 17 is_stmt 1 view .LVU296
 393:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 858              		.loc 1 393 34 is_stmt 0 view .LVU297
 859 0148 09EB0102 		add	r2, r9, r1
 393:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 860              		.loc 1 393 25 view .LVU298
 861 014c C2F34702 		ubfx	r2, r2, #1, #8
 862 0150 0AF80320 		strb	r2, [r10, r3]
 395:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 863              		.loc 1 395 17 is_stmt 1 view .LVU299
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 29


 395:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 864              		.loc 1 395 19 is_stmt 0 view .LVU300
 865 0154 002A     		cmp	r2, #0
 866 0156 81D0     		beq	.L34
 406:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver.full = *((uint32_t *)px_ver);
 867              		.loc 1 406 17 is_stmt 1 view .LVU301
 406:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver.full = *((uint32_t *)px_ver);
 868              		.loc 1 406 31 is_stmt 0 view .LVU302
 869 0158 019A     		ldr	r2, [sp, #4]
 870 015a 52F82C90 		ldr	r9, [r2, ip, lsl #2]
 871              	.LVL106:
 407:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor.full = *((uint32_t *)px_hor);
 872              		.loc 1 407 17 is_stmt 1 view .LVU303
 407:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor.full = *((uint32_t *)px_hor);
 873              		.loc 1 407 30 is_stmt 0 view .LVU304
 874 015e 049A     		ldr	r2, [sp, #16]
 875 0160 5EF82280 		ldr	r8, [lr, r2, lsl #2]
 876              	.LVL107:
 408:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 877              		.loc 1 408 17 is_stmt 1 view .LVU305
 408:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 878              		.loc 1 408 30 is_stmt 0 view .LVU306
 879 0164 039A     		ldr	r2, [sp, #12]
 880 0166 5EF80220 		ldr	r2, [lr, r2]
 881              	.LVL108:
 408:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 882              		.loc 1 408 30 view .LVU307
 883 016a 0392     		str	r2, [sp, #12]
 884              	.LBE27:
 885 016c 39E0     		b	.L47
 886              	.LVL109:
 887              	.L35:
 408:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 888              		.loc 1 408 30 view .LVU308
 889              	.LBE26:
 328:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (xs_fract - 0x80) * 2;
 890              		.loc 1 328 13 is_stmt 1 view .LVU309
 329:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 891              		.loc 1 329 13 view .LVU310
 329:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 892              		.loc 1 329 34 is_stmt 0 view .LVU311
 893 016e A8F18008 		sub	r8, r8, #128
 894              	.LVL110:
 329:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 895              		.loc 1 329 22 view .LVU312
 896 0172 4FEA4800 		lsl	r0, r8, #1
 897 0176 0690     		str	r0, [sp, #24]
 898              	.LVL111:
 328:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_fract = (xs_fract - 0x80) * 2;
 899              		.loc 1 328 20 view .LVU313
 900 0178 4FF00108 		mov	r8, #1
 901 017c 95E7     		b	.L36
 902              	.LVL112:
 903              	.L37:
 336:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (ys_fract - 0x80) * 2;
 904              		.loc 1 336 13 is_stmt 1 view .LVU314
 337:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 30


 905              		.loc 1 337 13 view .LVU315
 337:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 906              		.loc 1 337 34 is_stmt 0 view .LVU316
 907 017e A9F18009 		sub	r9, r9, #128
 908              	.LVL113:
 337:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 909              		.loc 1 337 22 view .LVU317
 910 0182 4FEA4900 		lsl	r0, r9, #1
 911 0186 0890     		str	r0, [sp, #32]
 912              	.LVL114:
 336:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (ys_fract - 0x80) * 2;
 913              		.loc 1 336 20 view .LVU318
 914 0188 0120     		movs	r0, #1
 915              	.LVL115:
 336:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_fract = (ys_fract - 0x80) * 2;
 916              		.loc 1 336 20 view .LVU319
 917 018a 0490     		str	r0, [sp, #16]
 918 018c 98E7     		b	.L38
 919              	.LVL116:
 920              	.L66:
 921              	.LBB35:
 922              	.LBB28:
 360:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = px_ver[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 923              		.loc 1 360 21 is_stmt 1 view .LVU320
 360:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_ver = px_ver[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 924              		.loc 1 360 28 is_stmt 0 view .LVU321
 925 018e 9EF80380 		ldrb	r8, [lr, #3]	@ zero_extendqisi2
 926              	.LVL117:
 361:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = px_hor[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 927              		.loc 1 361 21 is_stmt 1 view .LVU322
 361:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     a_hor = px_hor[LV_IMG_PX_SIZE_ALPHA_BYTE - 1];
 928              		.loc 1 361 27 is_stmt 0 view .LVU323
 929 0192 92F80390 		ldrb	r9, [r2, #3]	@ zero_extendqisi2
 930              	.LVL118:
 362:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 931              		.loc 1 362 21 is_stmt 1 view .LVU324
 362:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 932              		.loc 1 362 27 is_stmt 0 view .LVU325
 933 0196 C978     		ldrb	r1, [r1, #3]	@ zero_extendqisi2
 934              	.LVL119:
 362:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 }
 935              		.loc 1 362 27 view .LVU326
 936 0198 C0E7     		b	.L42
 937              	.LVL120:
 938              	.L67:
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 939              		.loc 1 373 21 is_stmt 1 view .LVU327
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 940              		.loc 1 373 47 is_stmt 0 view .LVU328
 941 019a 019A     		ldr	r2, [sp, #4]
 942 019c 52F82C20 		ldr	r2, [r2, ip, lsl #2]
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 943              		.loc 1 373 59 view .LVU329
 944 01a0 0998     		ldr	r0, [sp, #36]
 945              	.LVL121:
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 946              		.loc 1 373 23 view .LVU330
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 31


 947 01a2 8242     		cmp	r2, r0
 948 01a4 0DD0     		beq	.L43
 374:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_hor)->full == ck.full) {
 949              		.loc 1 374 46 discriminator 1 view .LVU331
 950 01a6 049A     		ldr	r2, [sp, #16]
 951 01a8 5EF82220 		ldr	r2, [lr, r2, lsl #2]
 373:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_ver)->full == ck.full ||
 952              		.loc 1 373 65 discriminator 1 view .LVU332
 953 01ac 9042     		cmp	r0, r2
 954 01ae 08D0     		beq	.L43
 375:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         abuf[x] = 0x00;
 955              		.loc 1 375 46 view .LVU333
 956 01b0 039A     		ldr	r2, [sp, #12]
 957 01b2 5EF80220 		ldr	r2, [lr, r2]
 374:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_hor)->full == ck.full) {
 958              		.loc 1 374 64 view .LVU334
 959 01b6 9042     		cmp	r0, r2
 960              	.LVL122:
 374:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                        ((lv_color_t *)px_hor)->full == ck.full) {
 961              		.loc 1 374 64 view .LVU335
 962 01b8 03D0     		beq	.L43
 382:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     }
 963              		.loc 1 382 31 view .LVU336
 964 01ba FF21     		movs	r1, #255
 965              	.LVL123:
 381:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_hor = 0xff;
 966              		.loc 1 381 31 view .LVU337
 967 01bc 8946     		mov	r9, r1
 380:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_ver = 0xff;
 968              		.loc 1 380 32 view .LVU338
 969 01be 8846     		mov	r8, r1
 970              	.LVL124:
 380:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         a_ver = 0xff;
 971              		.loc 1 380 32 view .LVU339
 972 01c0 ACE7     		b	.L42
 973              	.LVL125:
 974              	.L43:
 376:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         continue;
 975              		.loc 1 376 25 is_stmt 1 view .LVU340
 376:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                         continue;
 976              		.loc 1 376 33 is_stmt 0 view .LVU341
 977 01c2 0022     		movs	r2, #0
 978 01c4 0AF80320 		strb	r2, [r10, r3]
 377:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     }
 979              		.loc 1 377 25 is_stmt 1 view .LVU342
 980 01c8 48E7     		b	.L34
 981              	.LVL126:
 982              	.L40:
 377:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     }
 983              		.loc 1 377 25 is_stmt 0 view .LVU343
 984              	.LBE28:
 413:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = *((const lv_color_t *) px_hor);
 985              		.loc 1 413 17 is_stmt 1 view .LVU344
 413:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = *((const lv_color_t *) px_hor);
 986              		.loc 1 413 24 is_stmt 0 view .LVU345
 987 01ca 019A     		ldr	r2, [sp, #4]
 988              	.LVL127:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 32


 413:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = *((const lv_color_t *) px_hor);
 989              		.loc 1 413 24 view .LVU346
 990 01cc 52F82C90 		ldr	r9, [r2, ip, lsl #2]
 414:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver = *((const lv_color_t *) px_ver);
 991              		.loc 1 414 17 is_stmt 1 view .LVU347
 414:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver = *((const lv_color_t *) px_ver);
 992              		.loc 1 414 23 is_stmt 0 view .LVU348
 993 01d0 5EF82820 		ldr	r2, [lr, r8, lsl #2]
 994              	.LVL128:
 414:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_ver = *((const lv_color_t *) px_ver);
 995              		.loc 1 414 23 view .LVU349
 996 01d4 0392     		str	r2, [sp, #12]
 415:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = 0xff;
 997              		.loc 1 415 17 is_stmt 1 view .LVU350
 415:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = 0xff;
 998              		.loc 1 415 23 is_stmt 0 view .LVU351
 999 01d6 049A     		ldr	r2, [sp, #16]
 1000              	.LVL129:
 415:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = 0xff;
 1001              		.loc 1 415 23 view .LVU352
 1002 01d8 5EF82280 		ldr	r8, [lr, r2, lsl #2]
 1003              	.LVL130:
 416:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1004              		.loc 1 416 17 is_stmt 1 view .LVU353
 416:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1005              		.loc 1 416 25 is_stmt 0 view .LVU354
 1006 01dc FF22     		movs	r2, #255
 1007 01de 0AF80320 		strb	r2, [r10, r3]
 1008              	.LVL131:
 1009              	.L47:
 419:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = c_base;
 1010              		.loc 1 419 13 is_stmt 1 view .LVU355
 419:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = c_base;
 1011              		.loc 1 419 15 is_stmt 0 view .LVU356
 1012 01e2 C145     		cmp	r9, r8
 1013 01e4 00F0AD80 		beq	.L68
 1014              	.L48:
 423:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = lv_color_mix(c_hor, c_base, xs_fract);
 1015              		.loc 1 423 17 is_stmt 1 view .LVU357
 423:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 c_hor = lv_color_mix(c_hor, c_base, xs_fract);
 1016              		.loc 1 423 25 is_stmt 0 view .LVU358
 1017 01e8 9DF820C0 		ldrb	ip, [sp, #32]	@ zero_extendqisi2
 1018              	.LVL132:
 1019              	.LBB29:
 1020              	.LBI29:
 1021              		.file 2 "lvgl/src/draw/sw/../../misc/lv_color.h"
   1:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @file lv_color.h
   3:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef LV_COLOR_H
   7:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_H
   8:lvgl/src/draw/sw/../../misc/lv_color.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_color.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 33


  12:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  13:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_assert.h"
  18:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_math.h"
  19:lvgl/src/draw/sw/../../misc/lv_color.h **** #include "lv_types.h"
  20:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  21:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Error checking*/
  22:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  25:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  26:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_color.h **** #include <stdint.h>
  31:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  32:lvgl/src/draw/sw/../../misc/lv_color.h **** /*********************
  33:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      DEFINES
  34:lvgl/src/draw/sw/../../misc/lv_color.h ****  *********************/
  35:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:lvgl/src/draw/sw/../../misc/lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  38:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  39:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Opacity percentages.
  40:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
  41:lvgl/src/draw/sw/../../misc/lv_color.h **** enum {
  42:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_TRANSP = 0,
  43:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_0      = 0,
  44:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_10     = 25,
  45:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_20     = 51,
  46:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_30     = 76,
  47:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_40     = 102,
  48:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_50     = 127,
  49:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_60     = 153,
  50:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_70     = 178,
  51:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_80     = 204,
  52:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_90     = 229,
  53:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_100    = 255,
  54:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_OPA_COVER  = 255,
  55:lvgl/src/draw/sw/../../misc/lv_color.h **** };
  56:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  57:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  60:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  62:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 8
  64:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 16
  66:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SIZE 32
  68:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 34


  69:lvgl/src/draw/sw/../../misc/lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  71:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  72:lvgl/src/draw/sw/../../misc/lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
  74:lvgl/src/draw/sw/../../misc/lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:lvgl/src/draw/sw/../../misc/lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:lvgl/src/draw/sw/../../misc/lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:lvgl/src/draw/sw/../../misc/lv_color.h **** */
  78:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifdef _MSC_VER
  79:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  82:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  83:lvgl/src/draw/sw/../../misc/lv_color.h **** #if __cplusplus >= 201103L
  84:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  86:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  87:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif /*__cplusplus*/
  88:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  92:lvgl/src/draw/sw/../../misc/lv_color.h **** 
  93:lvgl/src/draw/sw/../../misc/lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:lvgl/src/draw/sw/../../misc/lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
  97:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
  99:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 100:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 101:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for all existing color depths
 102:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 103:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 104:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 109:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 114:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 117:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 122:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 35


 126:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 127:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 130:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 134:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 136:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 139:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 143:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 145:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 148:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 152:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 155:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 156:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 161:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 166:lvgl/src/draw/sw/../../misc/lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:lvgl/src/draw/sw/../../misc/lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 169:lvgl/src/draw/sw/../../misc/lv_color.h **** /*---------------------------------------
 170:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Macros for the current color depth
 171:lvgl/src/draw/sw/../../misc/lv_color.h ****  * to set/get values of the color channels
 172:lvgl/src/draw/sw/../../misc/lv_color.h ****  *------------------------------------------*/
 173:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 178:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:lvgl/src/draw/sw/../../misc/lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 36


 183:lvgl/src/draw/sw/../../misc/lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:lvgl/src/draw/sw/../../misc/lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 186:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 187:lvgl/src/draw/sw/../../misc/lv_color.h ****  *      TYPEDEFS
 188:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 189:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 190:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 191:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:lvgl/src/draw/sw/../../misc/lv_color.h ****     union {
 193:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 1;
 194:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 1;
 195:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 1;
 196:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 197:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color1_t;
 198:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 199:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 200:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 201:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue : 2;
 202:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green : 3;
 203:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red : 3;
 204:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 205:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t full;
 206:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color8_t;
 207:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 208:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 209:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 210:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 212:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green : 6;
 213:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 214:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 215:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_h : 3;
 216:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t red : 5;
 217:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t blue : 5;
 218:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint16_t green_l : 3;
 219:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 220:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 221:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t full;
 222:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color16_t;
 223:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 224:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef union {
 225:lvgl/src/draw/sw/../../misc/lv_color.h ****     struct {
 226:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t blue;
 227:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t green;
 228:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t red;
 229:lvgl/src/draw/sw/../../misc/lv_color.h ****         uint8_t alpha;
 230:lvgl/src/draw/sw/../../misc/lv_color.h ****     } ch;
 231:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t full;
 232:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color32_t;
 233:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 234:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 237:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct {
 238:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint16_t h;
 239:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t s;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 37


 240:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint8_t v;
 241:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_hsv_t;
 242:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 243:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 244:lvgl/src/draw/sw/../../misc/lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef uint8_t lv_opa_t;
 246:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @endcond
 247:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 248:lvgl/src/draw/sw/../../misc/lv_color.h **** struct _lv_color_filter_dsc_t;
 249:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 250:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 252:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:lvgl/src/draw/sw/../../misc/lv_color.h ****     void * user_data;
 255:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_color_filter_dsc_t;
 256:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 257:lvgl/src/draw/sw/../../misc/lv_color.h **** typedef enum {
 258:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_RED,
 259:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PINK,
 260:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_PURPLE,
 261:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_INDIGO,
 263:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE,
 264:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_CYAN,
 266:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_TEAL,
 267:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREEN,
 268:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_LIME,
 270:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_YELLOW,
 271:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_AMBER,
 272:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_ORANGE,
 273:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BROWN,
 275:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_GREY,
 277:lvgl/src/draw/sw/../../misc/lv_color.h ****     _LV_PALETTE_LAST,
 278:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:lvgl/src/draw/sw/../../misc/lv_color.h **** } lv_palette_t;
 280:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 281:lvgl/src/draw/sw/../../misc/lv_color.h **** /**********************
 282:lvgl/src/draw/sw/../../misc/lv_color.h ****  * GLOBAL PROTOTYPES
 283:lvgl/src/draw/sw/../../misc/lv_color.h ****  **********************/
 284:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 285:lvgl/src/draw/sw/../../misc/lv_color.h **** /*In color conversations:
 286:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         8 bit Red has 3 bits
 289:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 290:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:lvgl/src/draw/sw/../../misc/lv_color.h ****  *
 292:lvgl/src/draw/sw/../../misc/lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:lvgl/src/draw/sw/../../misc/lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        16 bit Red has 5 bits
 295:lvgl/src/draw/sw/../../misc/lv_color.h ****  *        ----------------------
 296:lvgl/src/draw/sw/../../misc/lv_color.h ****  *         Shift right with 5 - 3 = 2
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 38


 297:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 298:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 300:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 302:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 305:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 306:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 307:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 308:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 309:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 312:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 313:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 314:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 315:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 316:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:lvgl/src/draw/sw/../../misc/lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 1;
 319:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 320:lvgl/src/draw/sw/../../misc/lv_color.h ****     else {
 321:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 322:lvgl/src/draw/sw/../../misc/lv_color.h ****     }
 323:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 324:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 325:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 326:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 328:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 330:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 331:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 332:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF;
 333:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 335:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 337:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 341:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color8_t ret;
 343:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 347:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 348:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 349:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 350:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 352:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 39


 354:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0;
 355:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 356:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFF;
 357:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 359:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 363:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 365:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color16_t ret;
 367:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 371:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 372:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 373:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 374:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 376:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:lvgl/src/draw/sw/../../misc/lv_color.h ****     if(color.full == 0)
 378:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFF000000;
 379:lvgl/src/draw/sw/../../misc/lv_color.h ****     else
 380:lvgl/src/draw/sw/../../misc/lv_color.h ****         return 0xFFFFFFFF;
 381:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 383:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 388:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:lvgl/src/draw/sw/../../misc/lv_color.h ****     /**
 390:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The floating point math for conversion is:
 391:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:lvgl/src/draw/sw/../../misc/lv_color.h ****      * The faster integer math for conversion is:
 393:lvgl/src/draw/sw/../../misc/lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:lvgl/src/draw/sw/../../misc/lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 396:lvgl/src/draw/sw/../../misc/lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 398:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           8      7        7       255
 401:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1          16     14        7       255
 402:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          32     28        7       255
 403:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          65     25        3       255
 404:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4         131     19        1       255
 405:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         263      7        0       255
 406:lvgl/src/draw/sw/../../misc/lv_color.h ****      *
 407:lvgl/src/draw/sw/../../misc/lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:lvgl/src/draw/sw/../../misc/lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       0           4      3        3       255
 410:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       1           8      6        3       255
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 40


 411:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       2          16     12        3       255
 412:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       3          32     24        3       255
 413:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       4          64     48        3       255
 414:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       5         129     33        1       255
 415:lvgl/src/draw/sw/../../misc/lv_color.h ****      *       6         259      3        0       255
 416:lvgl/src/draw/sw/../../misc/lv_color.h ****      */
 417:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 418:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color32_t ret;
 419:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret.full;
 424:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:lvgl/src/draw/sw/../../misc/lv_color.h ****     return color.full;
 426:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 427:lvgl/src/draw/sw/../../misc/lv_color.h **** }
 428:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 429:lvgl/src/draw/sw/../../misc/lv_color.h **** //! @cond Doxygen_Suppress
 430:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 431:lvgl/src/draw/sw/../../misc/lv_color.h **** /**
 432:lvgl/src/draw/sw/../../misc/lv_color.h ****  * Mix two colors with a given ratio.
 433:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:lvgl/src/draw/sw/../../misc/lv_color.h ****  * @return the mixed color
 437:lvgl/src/draw/sw/../../misc/lv_color.h ****  */
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 1022              		.loc 2 438 48 is_stmt 1 view .LVU359
 1023              	.LBB30:
 439:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 440:lvgl/src/draw/sw/../../misc/lv_color.h ****     lv_color_t ret;
 1024              		.loc 2 440 5 view .LVU360
 441:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 442:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:lvgl/src/draw/sw/../../misc/lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:lvgl/src/draw/sw/../../misc/lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 447:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:lvgl/src/draw/sw/../../misc/lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:lvgl/src/draw/sw/../../misc/lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:lvgl/src/draw/sw/../../misc/lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:lvgl/src/draw/sw/../../misc/lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 457:lvgl/src/draw/sw/../../misc/lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 1025              		.loc 2 459 5 view .LVU361
 1026 01ec C8F3074E 		ubfx	lr, r8, #16, #8
 1027              	.LVL133:
 1028              		.loc 2 459 5 is_stmt 0 view .LVU362
 1029 01f0 C9F30741 		ubfx	r1, r9, #16, #8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 41


 1030 01f4 CCF1FF02 		rsb	r2, ip, #255
 1031              	.LVL134:
 1032              		.loc 2 459 5 view .LVU363
 1033 01f8 02FB01F1 		mul	r1, r2, r1
 1034 01fc 0CFB0E11 		mla	r1, ip, lr, r1
 1035 0200 01EB012E 		add	lr, r1, r1, lsl #8
 1036 0204 01EBCE11 		add	r1, r1, lr, lsl #7
 1037 0208 C1F3C751 		ubfx	r1, r1, #23, #8
 1038 020c 0D98     		ldr	r0, [sp, #52]
 1039              		.loc 2 459 5 view .LVU364
 1040 020e 61F31740 		bfi	r0, r1, #16, #8
 1041              	.LVL135:
 460:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 1042              		.loc 2 461 5 is_stmt 1 view .LVU365
 1043 0212 C8F3072E 		ubfx	lr, r8, #8, #8
 1044 0216 C9F30721 		ubfx	r1, r9, #8, #8
 1045 021a 02FB01F1 		mul	r1, r2, r1
 1046 021e 0EFB0C11 		mla	r1, lr, ip, r1
 1047 0222 01EB012E 		add	lr, r1, r1, lsl #8
 1048 0226 01EBCE11 		add	r1, r1, lr, lsl #7
 1049 022a C1F3C751 		ubfx	r1, r1, #23, #8
 1050 022e 61F30F20 		bfi	r0, r1, #8, #8
 462:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 1051              		.loc 2 463 5 view .LVU366
 1052 0232 5FFA88F1 		uxtb	r1, r8
 1053 0236 5FFA89F8 		uxtb	r8, r9
 1054              	.LVL136:
 1055              		.loc 2 463 5 is_stmt 0 view .LVU367
 1056 023a 08FB02F2 		mul	r2, r8, r2
 1057 023e 01FB0C22 		mla	r2, r1, ip, r2
 1058 0242 02EB0221 		add	r1, r2, r2, lsl #8
 1059 0246 02EBC112 		add	r2, r2, r1, lsl #7
 1060 024a C2F3C752 		ubfx	r2, r2, #23, #8
 1061 024e 62F30700 		bfi	r0, r2, #0, #8
 464:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:lvgl/src/draw/sw/../../misc/lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 1062              		.loc 2 465 5 is_stmt 1 view .LVU368
 1063 0252 40F07F40 		orr	r0, r0, #-16777216
 1064              	.LVL137:
 1065              		.loc 2 465 5 is_stmt 0 view .LVU369
 1066 0256 0D90     		str	r0, [sp, #52]
 466:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 467:lvgl/src/draw/sw/../../misc/lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:lvgl/src/draw/sw/../../misc/lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:lvgl/src/draw/sw/../../misc/lv_color.h **** #endif
 470:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 471:lvgl/src/draw/sw/../../misc/lv_color.h ****     return ret;
 1067              		.loc 2 471 5 is_stmt 1 view .LVU370
 1068              	.LVL138:
 1069              		.loc 2 471 5 is_stmt 0 view .LVU371
 1070              	.LBE30:
 1071              	.LBE29:
 424:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = lv_color_mix(c_hor, c_ver, LV_OPA_50);
 1072              		.loc 1 424 17 is_stmt 1 view .LVU372
 424:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = lv_color_mix(c_hor, c_ver, LV_OPA_50);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 42


 1073              		.loc 1 424 25 is_stmt 0 view .LVU373
 1074 0258 9DF818C0 		ldrb	ip, [sp, #24]	@ zero_extendqisi2
 1075              	.LVL139:
 1076              	.LBB31:
 1077              	.LBI31:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1078              		.loc 2 438 48 is_stmt 1 view .LVU374
 1079              	.LBB32:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1080              		.loc 2 440 5 view .LVU375
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1081              		.loc 2 459 5 view .LVU376
 1082 025c 039A     		ldr	r2, [sp, #12]
 1083              	.LVL140:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1084              		.loc 2 459 5 is_stmt 0 view .LVU377
 1085 025e C2F3074E 		ubfx	lr, r2, #16, #8
 1086 0262 C9F30741 		ubfx	r1, r9, #16, #8
 1087 0266 CCF1FF02 		rsb	r2, ip, #255
 1088              	.LVL141:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1089              		.loc 2 459 5 view .LVU378
 1090 026a 02FB01F1 		mul	r1, r2, r1
 1091 026e 0CFB0E11 		mla	r1, ip, lr, r1
 1092 0272 01EB012E 		add	lr, r1, r1, lsl #8
 1093 0276 01EBCE11 		add	r1, r1, lr, lsl #7
 1094 027a C1F3C751 		ubfx	r1, r1, #23, #8
 1095 027e 0C98     		ldr	r0, [sp, #48]
 1096              	.LVL142:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1097              		.loc 2 459 5 view .LVU379
 1098 0280 61F31740 		bfi	r0, r1, #16, #8
 1099              	.LVL143:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1100              		.loc 2 461 5 is_stmt 1 view .LVU380
 1101 0284 0399     		ldr	r1, [sp, #12]
 1102              	.LVL144:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1103              		.loc 2 461 5 is_stmt 0 view .LVU381
 1104 0286 C1F30721 		ubfx	r1, r1, #8, #8
 1105              	.LVL145:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1106              		.loc 2 461 5 view .LVU382
 1107 028a C9F3072E 		ubfx	lr, r9, #8, #8
 1108 028e 0EFB02FE 		mul	lr, lr, r2
 1109 0292 01FB0CE1 		mla	r1, r1, ip, lr
 1110 0296 01EB012E 		add	lr, r1, r1, lsl #8
 1111 029a 01EBCE11 		add	r1, r1, lr, lsl #7
 1112 029e C1F3C751 		ubfx	r1, r1, #23, #8
 1113 02a2 61F30F20 		bfi	r0, r1, #8, #8
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1114              		.loc 2 463 5 is_stmt 1 view .LVU383
 1115 02a6 9DF80C10 		ldrb	r1, [sp, #12]	@ zero_extendqisi2
 1116 02aa 08FB02F2 		mul	r2, r8, r2
 1117 02ae 01FB0C22 		mla	r2, r1, ip, r2
 1118 02b2 02EB0221 		add	r1, r2, r2, lsl #8
 1119 02b6 02EBC112 		add	r2, r2, r1, lsl #7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 43


 1120 02ba C2F3C752 		ubfx	r2, r2, #23, #8
 1121 02be 62F30700 		bfi	r0, r2, #0, #8
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1122              		.loc 2 465 5 view .LVU384
 1123 02c2 40F07F42 		orr	r2, r0, #-16777216
 1124              	.LVL146:
 1125              		.loc 2 471 5 view .LVU385
 1126              		.loc 2 471 5 is_stmt 0 view .LVU386
 1127              	.LBE32:
 1128              	.LBE31:
 425:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1129              		.loc 1 425 17 is_stmt 1 view .LVU387
 1130              	.LBB33:
 1131              	.LBI33:
 438:lvgl/src/draw/sw/../../misc/lv_color.h **** {
 1132              		.loc 2 438 48 view .LVU388
 1133              	.LBB34:
 440:lvgl/src/draw/sw/../../misc/lv_color.h **** 
 1134              		.loc 2 440 5 view .LVU389
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1135              		.loc 2 459 5 view .LVU390
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1136              		.loc 2 459 5 is_stmt 0 view .LVU391
 1137 02c6 0C92     		str	r2, [sp, #48]
 1138 02c8 C2F30742 		ubfx	r2, r2, #16, #8
 1139              	.LVL147:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1140              		.loc 2 459 5 view .LVU392
 1141 02cc C2EBC212 		rsb	r2, r2, r2, lsl #7
 1142 02d0 0D98     		ldr	r0, [sp, #52]
 1143              	.LVL148:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1144              		.loc 2 459 5 view .LVU393
 1145 02d2 C0F30741 		ubfx	r1, r0, #16, #8
 1146 02d6 02EBC112 		add	r2, r2, r1, lsl #7
 1147 02da 02EB0221 		add	r1, r2, r2, lsl #8
 1148 02de 02EBC112 		add	r2, r2, r1, lsl #7
 1149 02e2 C2F3C752 		ubfx	r2, r2, #23, #8
 1150 02e6 0B99     		ldr	r1, [sp, #44]
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1151              		.loc 2 459 5 view .LVU394
 1152 02e8 62F31741 		bfi	r1, r2, #16, #8
 1153              	.LVL149:
 459:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1154              		.loc 2 459 5 view .LVU395
 1155 02ec 0B91     		str	r1, [sp, #44]
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1156              		.loc 2 461 5 is_stmt 1 view .LVU396
 1157 02ee 0C9A     		ldr	r2, [sp, #48]
 1158              	.LVL150:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1159              		.loc 2 461 5 is_stmt 0 view .LVU397
 1160 02f0 C2F30722 		ubfx	r2, r2, #8, #8
 1161              	.LVL151:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1162              		.loc 2 461 5 view .LVU398
 1163 02f4 C2EBC212 		rsb	r2, r2, r2, lsl #7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 44


 1164 02f8 C0F30721 		ubfx	r1, r0, #8, #8
 1165              	.LVL152:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1166              		.loc 2 461 5 view .LVU399
 1167 02fc 02EBC112 		add	r2, r2, r1, lsl #7
 1168 0300 02EB0221 		add	r1, r2, r2, lsl #8
 1169 0304 02EBC112 		add	r2, r2, r1, lsl #7
 1170 0308 C2F3C752 		ubfx	r2, r2, #23, #8
 1171 030c 0B99     		ldr	r1, [sp, #44]
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1172              		.loc 2 461 5 view .LVU400
 1173 030e 62F30F21 		bfi	r1, r2, #8, #8
 1174              	.LVL153:
 461:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1175              		.loc 2 461 5 view .LVU401
 1176 0312 0B91     		str	r1, [sp, #44]
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1177              		.loc 2 463 5 is_stmt 1 view .LVU402
 1178 0314 9DF83020 		ldrb	r2, [sp, #48]	@ zero_extendqisi2
 1179 0318 C2EBC212 		rsb	r2, r2, r2, lsl #7
 1180 031c C1B2     		uxtb	r1, r0
 1181              	.LVL154:
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1182              		.loc 2 463 5 is_stmt 0 view .LVU403
 1183 031e 02EBC112 		add	r2, r2, r1, lsl #7
 1184 0322 02EB0221 		add	r1, r2, r2, lsl #8
 1185 0326 02EBC112 		add	r2, r2, r1, lsl #7
 1186 032a C2F3C752 		ubfx	r2, r2, #23, #8
 1187 032e 0B99     		ldr	r1, [sp, #44]
 463:lvgl/src/draw/sw/../../misc/lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 1188              		.loc 2 463 5 view .LVU404
 1189 0330 62F30701 		bfi	r1, r2, #0, #8
 1190              	.LVL155:
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1191              		.loc 2 465 5 is_stmt 1 view .LVU405
 1192 0334 41F07F42 		orr	r2, r1, #-16777216
 1193              	.LVL156:
 465:lvgl/src/draw/sw/../../misc/lv_color.h **** #else
 1194              		.loc 2 465 5 is_stmt 0 view .LVU406
 1195 0338 0B92     		str	r2, [sp, #44]
 1196              		.loc 2 471 5 is_stmt 1 view .LVU407
 1197              	.LVL157:
 1198              		.loc 2 471 5 is_stmt 0 view .LVU408
 1199              	.LBE34:
 1200              	.LBE33:
 425:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1201              		.loc 1 425 27 view .LVU409
 1202 033a 1D99     		ldr	r1, [sp, #116]
 1203 033c 41F82320 		str	r2, [r1, r3, lsl #2]
 1204              	.LBE35:
 346:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1205              		.loc 1 346 42 view .LVU410
 1206 0340 8CE6     		b	.L34
 1207              	.LVL158:
 1208              	.L68:
 1209              	.LBB36:
 419:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = c_base;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 45


 1210              		.loc 1 419 42 discriminator 1 view .LVU411
 1211 0342 039A     		ldr	r2, [sp, #12]
 1212              	.LVL159:
 419:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 cbuf[x] = c_base;
 1213              		.loc 1 419 42 discriminator 1 view .LVU412
 1214 0344 9145     		cmp	r9, r2
 1215 0346 7FF44FAF 		bne	.L48
 420:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1216              		.loc 1 420 17 is_stmt 1 view .LVU413
 420:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1217              		.loc 1 420 25 is_stmt 0 view .LVU414
 1218 034a 1D9A     		ldr	r2, [sp, #116]
 1219              	.LVL160:
 420:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1220              		.loc 1 420 25 view .LVU415
 1221 034c 42F82390 		str	r9, [r2, r3, lsl #2]
 1222 0350 84E6     		b	.L34
 1223              	.LVL161:
 1224              	.L39:
 420:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1225              		.loc 1 420 25 view .LVU416
 1226              	.LBE36:
 1227              	.LBB37:
 435:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 1228              		.loc 1 435 13 is_stmt 1 view .LVU417
 435:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 1229              		.loc 1 435 17 is_stmt 0 view .LVU418
 1230 0352 0393     		str	r3, [sp, #12]
 435:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 1231              		.loc 1 435 28 view .LVU419
 1232 0354 0198     		ldr	r0, [sp, #4]
 1233 0356 50F82CC0 		ldr	ip, [r0, ip, lsl #2]
 435:lvgl/src/draw/sw/lv_draw_sw_transform.c **** #endif
 1234              		.loc 1 435 26 view .LVU420
 1235 035a 1D98     		ldr	r0, [sp, #116]
 1236 035c 40F823C0 		str	ip, [r0, r3, lsl #2]
 437:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 1237              		.loc 1 437 13 is_stmt 1 view .LVU421
 438:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1238              		.loc 1 438 13 view .LVU422
 1239 0360 0798     		ldr	r0, [sp, #28]
 1240 0362 0528     		cmp	r0, #5
 1241 0364 23D0     		beq	.L50
 438:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1242              		.loc 1 438 13 is_stmt 0 view .LVU423
 1243 0366 0628     		cmp	r0, #6
 1244 0368 24D0     		beq	.L51
 1245 036a 4FF0FF0E 		mov	lr, #255
 1246              	.LVL162:
 1247              	.L52:
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1248              		.loc 1 454 13 is_stmt 1 view .LVU424
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1249              		.loc 1 454 39 is_stmt 0 view .LVU425
 1250 036e 4FEAD87C 		lsr	ip, r8, #31
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1251              		.loc 1 454 29 view .LVU426
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 46


 1252 0372 002A     		cmp	r2, #0
 1253 0374 14BF     		ite	ne
 1254 0376 4FF0000C 		movne	ip, #0
 1255 037a 0CF0010C 		andeq	ip, ip, #1
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1256              		.loc 1 454 15 view .LVU427
 1257 037e BCF1000F 		cmp	ip, #0
 1258 0382 23D1     		bne	.L53
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1259              		.loc 1 454 64 discriminator 1 view .LVU428
 1260 0384 04F1FF3C 		add	ip, r4, #-1
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1261              		.loc 1 454 44 discriminator 1 view .LVU429
 1262 0388 9445     		cmp	ip, r2
 1263 038a 1CD0     		beq	.L69
 1264              	.L54:
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1265              		.loc 1 457 18 is_stmt 1 view .LVU430
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1266              		.loc 1 457 44 is_stmt 0 view .LVU431
 1267 038c 049A     		ldr	r2, [sp, #16]
 1268              	.LVL163:
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1269              		.loc 1 457 44 view .LVU432
 1270 038e D20F     		lsrs	r2, r2, #31
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1271              		.loc 1 457 34 view .LVU433
 1272 0390 0029     		cmp	r1, #0
 1273 0392 14BF     		ite	ne
 1274 0394 0022     		movne	r2, #0
 1275 0396 02F00102 		andeq	r2, r2, #1
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1276              		.loc 1 457 20 view .LVU434
 1277 039a 2ABB     		cbnz	r2, .L55
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1278              		.loc 1 457 69 discriminator 1 view .LVU435
 1279 039c 029A     		ldr	r2, [sp, #8]
 1280 039e 013A     		subs	r2, r2, #1
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1281              		.loc 1 457 49 discriminator 1 view .LVU436
 1282 03a0 8A42     		cmp	r2, r1
 1283 03a2 1ED0     		beq	.L70
 1284              	.L56:
 461:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1285              		.loc 1 461 17 is_stmt 1 view .LVU437
 461:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1286              		.loc 1 461 25 is_stmt 0 view .LVU438
 1287 03a4 0022     		movs	r2, #0
 1288 03a6 0399     		ldr	r1, [sp, #12]
 1289              	.LVL164:
 461:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1290              		.loc 1 461 25 view .LVU439
 1291 03a8 0AF80120 		strb	r2, [r10, r1]
 1292 03ac 56E6     		b	.L34
 1293              	.LVL165:
 1294              	.L50:
 440:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 47


 1295              		.loc 1 440 21 is_stmt 1 view .LVU440
 440:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1296              		.loc 1 440 23 is_stmt 0 view .LVU441
 1297 03ae 9EF803E0 		ldrb	lr, [lr, #3]	@ zero_extendqisi2
 1298              	.LVL166:
 441:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_CHROMA_KEYED:
 1299              		.loc 1 441 21 is_stmt 1 view .LVU442
 1300 03b2 DCE7     		b	.L52
 1301              	.LVL167:
 1302              	.L51:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1303              		.loc 1 443 21 view .LVU443
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1304              		.loc 1 443 23 is_stmt 0 view .LVU444
 1305 03b4 0998     		ldr	r0, [sp, #36]
 1306              	.LVL168:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1307              		.loc 1 443 23 view .LVU445
 1308 03b6 8445     		cmp	ip, r0
 1309 03b8 02D0     		beq	.L71
 1310 03ba 4FF0FF0E 		mov	lr, #255
 1311              	.LVL169:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1312              		.loc 1 443 23 view .LVU446
 1313 03be D6E7     		b	.L52
 1314              	.LVL170:
 1315              	.L71:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1316              		.loc 1 443 23 view .LVU447
 1317 03c0 4FF0000E 		mov	lr, #0
 1318              	.LVL171:
 443:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1319              		.loc 1 443 23 view .LVU448
 1320 03c4 D3E7     		b	.L52
 1321              	.LVL172:
 1322              	.L69:
 454:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - xs_fract)) >> 8;
 1323              		.loc 1 454 68 discriminator 2 view .LVU449
 1324 03c6 B8F1000F 		cmp	r8, #0
 1325 03ca DFDD     		ble	.L54
 1326              	.L53:
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1327              		.loc 1 455 17 is_stmt 1 view .LVU450
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1328              		.loc 1 455 38 is_stmt 0 view .LVU451
 1329 03cc 069A     		ldr	r2, [sp, #24]
 1330              	.LVL173:
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1331              		.loc 1 455 38 view .LVU452
 1332 03ce C2F1FF08 		rsb	r8, r2, #255
 1333              	.LVL174:
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1334              		.loc 1 455 30 view .LVU453
 1335 03d2 08FB0EFE 		mul	lr, r8, lr
 1336              	.LVL175:
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1337              		.loc 1 455 51 view .LVU454
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 48


 1338 03d6 4FEA2E2E 		asr	lr, lr, #8
 455:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1339              		.loc 1 455 25 view .LVU455
 1340 03da 039A     		ldr	r2, [sp, #12]
 1341 03dc 0AF802E0 		strb	lr, [r10, r2]
 1342 03e0 3CE6     		b	.L34
 1343              	.LVL176:
 1344              	.L70:
 457:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 abuf[x] = (a * (0xFF - ys_fract)) >> 8;
 1345              		.loc 1 457 73 discriminator 2 view .LVU456
 1346 03e2 049A     		ldr	r2, [sp, #16]
 1347 03e4 002A     		cmp	r2, #0
 1348 03e6 DDDD     		ble	.L56
 1349              	.L55:
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1350              		.loc 1 458 17 is_stmt 1 view .LVU457
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1351              		.loc 1 458 38 is_stmt 0 view .LVU458
 1352 03e8 089A     		ldr	r2, [sp, #32]
 1353 03ea C2F1FF09 		rsb	r9, r2, #255
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1354              		.loc 1 458 30 view .LVU459
 1355 03ee 09FB0EFE 		mul	lr, r9, lr
 1356              	.LVL177:
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1357              		.loc 1 458 51 view .LVU460
 1358 03f2 4FEA2E2E 		asr	lr, lr, #8
 458:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             }
 1359              		.loc 1 458 25 view .LVU461
 1360 03f6 039A     		ldr	r2, [sp, #12]
 1361 03f8 0AF802E0 		strb	lr, [r10, r2]
 1362 03fc 2EE6     		b	.L34
 1363              	.LBE37:
 1364              	.LBE38:
 1365              		.cfi_endproc
 1366              	.LFE164:
 1368              		.section	.text.lv_draw_sw_transform,"ax",%progbits
 1369              		.align	1
 1370              		.global	lv_draw_sw_transform
 1371              		.syntax unified
 1372              		.thumb
 1373              		.thumb_func
 1375              	lv_draw_sw_transform:
 1376              	.LVL178:
 1377              	.LFB161:
  83:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     LV_UNUSED(draw_ctx);
 1378              		.loc 1 83 1 is_stmt 1 view -0
 1379              		.cfi_startproc
 1380              		@ args = 24, pretend = 0, frame = 96
 1381              		@ frame_needed = 0, uses_anonymous_args = 0
  83:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     LV_UNUSED(draw_ctx);
 1382              		.loc 1 83 1 is_stmt 0 view .LVU463
 1383 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 1384              		.cfi_def_cfa_offset 36
 1385              		.cfi_offset 4, -36
 1386              		.cfi_offset 5, -32
 1387              		.cfi_offset 6, -28
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 49


 1388              		.cfi_offset 7, -24
 1389              		.cfi_offset 8, -20
 1390              		.cfi_offset 9, -16
 1391              		.cfi_offset 10, -12
 1392              		.cfi_offset 11, -8
 1393              		.cfi_offset 14, -4
 1394 0004 A1B0     		sub	sp, sp, #132
 1395              		.cfi_def_cfa_offset 168
 1396 0006 0C46     		mov	r4, r1
 1397 0008 0992     		str	r2, [sp, #36]
 1398 000a 0A93     		str	r3, [sp, #40]
 1399 000c BDF9A830 		ldrsh	r3, [sp, #168]
 1400              	.LVL179:
  83:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     LV_UNUSED(draw_ctx);
 1401              		.loc 1 83 1 view .LVU464
 1402 0010 0B93     		str	r3, [sp, #44]
 1403 0012 BDF9AC30 		ldrsh	r3, [sp, #172]
 1404 0016 0C93     		str	r3, [sp, #48]
 1405 0018 DDF8B0B0 		ldr	fp, [sp, #176]
 1406 001c 9DF8B480 		ldrb	r8, [sp, #180]	@ zero_extendqisi2
 1407 0020 2E9E     		ldr	r6, [sp, #184]
 1408 0022 2F9D     		ldr	r5, [sp, #188]
  84:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1409              		.loc 1 84 5 is_stmt 1 view .LVU465
  86:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.angle = -draw_dsc->angle;
 1410              		.loc 1 86 5 view .LVU466
  87:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.zoom = (256 * 256) / draw_dsc->zoom;
 1411              		.loc 1 87 5 view .LVU467
  87:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.zoom = (256 * 256) / draw_dsc->zoom;
 1412              		.loc 1 87 29 is_stmt 0 view .LVU468
 1413 0024 BBF90070 		ldrsh	r7, [fp]
  87:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.zoom = (256 * 256) / draw_dsc->zoom;
 1414              		.loc 1 87 20 view .LVU469
 1415 0028 7F42     		rsbs	r7, r7, #0
  87:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.zoom = (256 * 256) / draw_dsc->zoom;
 1416              		.loc 1 87 18 view .LVU470
 1417 002a 1C97     		str	r7, [sp, #112]
  88:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot = draw_dsc->pivot;
 1418              		.loc 1 88 5 is_stmt 1 view .LVU471
  88:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot = draw_dsc->pivot;
 1419              		.loc 1 88 41 is_stmt 0 view .LVU472
 1420 002c BBF80220 		ldrh	r2, [fp, #2]
 1421              	.LVL180:
  88:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot = draw_dsc->pivot;
 1422              		.loc 1 88 31 view .LVU473
 1423 0030 4FF48033 		mov	r3, #65536
 1424 0034 93FBF2F3 		sdiv	r3, r3, r2
  88:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot = draw_dsc->pivot;
 1425              		.loc 1 88 17 view .LVU474
 1426 0038 1B93     		str	r3, [sp, #108]
  89:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1427              		.loc 1 89 5 is_stmt 1 view .LVU475
  89:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1428              		.loc 1 89 18 is_stmt 0 view .LVU476
 1429 003a DBF80430 		ldr	r3, [fp, #4]
 1430 003e 1F93     		str	r3, [sp, #124]
  91:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_high = angle_low + 1;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 50


 1431              		.loc 1 91 5 is_stmt 1 view .LVU477
  91:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_high = angle_low + 1;
 1432              		.loc 1 91 13 is_stmt 0 view .LVU478
 1433 0040 DFF8A8A1 		ldr	r10, .L84
 1434 0044 8AFB0730 		smull	r3, r0, r10, r7
 1435              	.LVL181:
  91:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_high = angle_low + 1;
 1436              		.loc 1 91 13 view .LVU479
 1437 0048 4FEAE779 		asr	r9, r7, #31
 1438 004c C9EBA009 		rsb	r9, r9, r0, asr #2
 1439              	.LVL182:
  92:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_rem = tr_dsc.angle  - (angle_low * 10);
 1440              		.loc 1 92 5 is_stmt 1 view .LVU480
  92:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t angle_rem = tr_dsc.angle  - (angle_low * 10);
 1441              		.loc 1 92 13 is_stmt 0 view .LVU481
 1442 0050 09F10103 		add	r3, r9, #1
 1443 0054 0D93     		str	r3, [sp, #52]
 1444              	.LVL183:
  93:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1445              		.loc 1 93 5 is_stmt 1 view .LVU482
  93:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1446              		.loc 1 93 13 is_stmt 0 view .LVU483
 1447 0056 6FF00903 		mvn	r3, #9
 1448              	.LVL184:
  93:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1449              		.loc 1 93 13 view .LVU484
 1450 005a 03FB0977 		mla	r7, r3, r9, r7
 1451              	.LVL185:
  95:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 1452              		.loc 1 95 5 is_stmt 1 view .LVU485
  95:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 1453              		.loc 1 95 18 is_stmt 0 view .LVU486
 1454 005e 0FFA89F0 		sxth	r0, r9
 1455 0062 FFF7FEFF 		bl	lv_trigo_sin
 1456              	.LVL186:
  95:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t s2 = lv_trigo_sin(angle_high);
 1457              		.loc 1 95 18 view .LVU487
 1458 0066 0E90     		str	r0, [sp, #56]
 1459              	.LVL187:
  96:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1460              		.loc 1 96 5 is_stmt 1 view .LVU488
  96:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1461              		.loc 1 96 18 is_stmt 0 view .LVU489
 1462 0068 BDF93400 		ldrsh	r0, [sp, #52]
 1463              	.LVL188:
  96:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1464              		.loc 1 96 18 view .LVU490
 1465 006c FFF7FEFF 		bl	lv_trigo_sin
 1466              	.LVL189:
 1467 0070 0F90     		str	r0, [sp, #60]
 1468              	.LVL190:
  98:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 1469              		.loc 1 98 5 is_stmt 1 view .LVU491
  98:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 1470              		.loc 1 98 41 is_stmt 0 view .LVU492
 1471 0072 09F15A00 		add	r0, r9, #90
 1472              	.LVL191:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 51


  98:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     int32_t c2 = lv_trigo_sin(angle_high + 90);
 1473              		.loc 1 98 18 view .LVU493
 1474 0076 00B2     		sxth	r0, r0
 1475 0078 FFF7FEFF 		bl	lv_trigo_sin
 1476              	.LVL192:
 1477 007c 8146     		mov	r9, r0
 1478              	.LVL193:
  99:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1479              		.loc 1 99 5 is_stmt 1 view .LVU494
  99:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1480              		.loc 1 99 42 is_stmt 0 view .LVU495
 1481 007e 0D9B     		ldr	r3, [sp, #52]
 1482 0080 03F15A00 		add	r0, r3, #90
 1483              	.LVL194:
  99:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1484              		.loc 1 99 18 view .LVU496
 1485 0084 00B2     		sxth	r0, r0
 1486 0086 FFF7FEFF 		bl	lv_trigo_sin
 1487              	.LVL195:
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1488              		.loc 1 101 5 is_stmt 1 view .LVU497
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1489              		.loc 1 101 30 is_stmt 0 view .LVU498
 1490 008a C7F10A03 		rsb	r3, r7, #10
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1491              		.loc 1 101 48 view .LVU499
 1492 008e 0F9A     		ldr	r2, [sp, #60]
 1493 0090 07FB02F2 		mul	r2, r7, r2
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1494              		.loc 1 101 43 view .LVU500
 1495 0094 0E99     		ldr	r1, [sp, #56]
 1496 0096 01FB0322 		mla	r2, r1, r3, r2
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1497              		.loc 1 101 61 view .LVU501
 1498 009a 8AFB02C1 		smull	ip, r1, r10, r2
 1499 009e D217     		asrs	r2, r2, #31
 1500 00a0 C2EBA102 		rsb	r2, r2, r1, asr #2
 101:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = (c1 * (10 - angle_rem) + c2 * angle_rem) / 10;
 1501              		.loc 1 101 18 view .LVU502
 1502 00a4 1992     		str	r2, [sp, #100]
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 1503              		.loc 1 102 5 is_stmt 1 view .LVU503
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 1504              		.loc 1 102 48 is_stmt 0 view .LVU504
 1505 00a6 00FB07F7 		mul	r7, r0, r7
 1506              	.LVL196:
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 1507              		.loc 1 102 43 view .LVU505
 1508 00aa 09FB0379 		mla	r9, r9, r3, r7
 1509              	.LVL197:
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 1510              		.loc 1 102 61 view .LVU506
 1511 00ae 8AFB093A 		smull	r3, r10, r10, r9
 1512 00b2 4FEAE979 		asr	r9, r9, #31
 1513 00b6 C9EBAA03 		rsb	r3, r9, r10, asr #2
 102:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.sinma = tr_dsc.sinma >> (LV_TRIGO_SHIFT - 10);
 1514              		.loc 1 102 18 view .LVU507
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 52


 1515 00ba 1A93     		str	r3, [sp, #104]
 103:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = tr_dsc.cosma >> (LV_TRIGO_SHIFT - 10);
 1516              		.loc 1 103 5 is_stmt 1 view .LVU508
 103:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = tr_dsc.cosma >> (LV_TRIGO_SHIFT - 10);
 1517              		.loc 1 103 33 is_stmt 0 view .LVU509
 1518 00bc 5211     		asrs	r2, r2, #5
 103:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.cosma = tr_dsc.cosma >> (LV_TRIGO_SHIFT - 10);
 1519              		.loc 1 103 18 view .LVU510
 1520 00be 1992     		str	r2, [sp, #100]
 104:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_x_256 = tr_dsc.pivot.x * 256;
 1521              		.loc 1 104 5 is_stmt 1 view .LVU511
 104:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_x_256 = tr_dsc.pivot.x * 256;
 1522              		.loc 1 104 33 is_stmt 0 view .LVU512
 1523 00c0 5B11     		asrs	r3, r3, #5
 104:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_x_256 = tr_dsc.pivot.x * 256;
 1524              		.loc 1 104 18 view .LVU513
 1525 00c2 1A93     		str	r3, [sp, #104]
 105:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_y_256 = tr_dsc.pivot.y * 256;
 1526              		.loc 1 105 5 is_stmt 1 view .LVU514
 105:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_y_256 = tr_dsc.pivot.y * 256;
 1527              		.loc 1 105 38 is_stmt 0 view .LVU515
 1528 00c4 BDF97C30 		ldrsh	r3, [sp, #124]
 105:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_y_256 = tr_dsc.pivot.y * 256;
 1529              		.loc 1 105 41 view .LVU516
 1530 00c8 1B02     		lsls	r3, r3, #8
 105:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     tr_dsc.pivot_y_256 = tr_dsc.pivot.y * 256;
 1531              		.loc 1 105 24 view .LVU517
 1532 00ca 1D93     		str	r3, [sp, #116]
 106:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1533              		.loc 1 106 5 is_stmt 1 view .LVU518
 106:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1534              		.loc 1 106 38 is_stmt 0 view .LVU519
 1535 00cc BDF97E30 		ldrsh	r3, [sp, #126]
 106:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1536              		.loc 1 106 41 view .LVU520
 1537 00d0 1B02     		lsls	r3, r3, #8
 106:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1538              		.loc 1 106 24 view .LVU521
 1539 00d2 1E93     		str	r3, [sp, #120]
 108:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t dest_h = lv_area_get_height(dest_area);
 1540              		.loc 1 108 5 is_stmt 1 view .LVU522
 1541              	.LVL198:
 1542              	.LBB39:
 1543              	.LBI39:
 1544              		.file 3 "lvgl/src/draw/sw/../../misc/lv_area.h"
   1:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
   2:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @file lv_area.h
   3:lvgl/src/draw/sw/../../misc/lv_area.h ****  *
   4:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
   5:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   6:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifndef LV_AREA_H
   7:lvgl/src/draw/sw/../../misc/lv_area.h **** #define LV_AREA_H
   8:lvgl/src/draw/sw/../../misc/lv_area.h **** 
   9:lvgl/src/draw/sw/../../misc/lv_area.h **** #ifdef __cplusplus
  10:lvgl/src/draw/sw/../../misc/lv_area.h **** extern "C" {
  11:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  12:lvgl/src/draw/sw/../../misc/lv_area.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 53


  13:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  14:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      INCLUDES
  15:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  16:lvgl/src/draw/sw/../../misc/lv_area.h **** #include "../lv_conf_internal.h"
  17:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdbool.h>
  18:lvgl/src/draw/sw/../../misc/lv_area.h **** #include <stdint.h>
  19:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  20:lvgl/src/draw/sw/../../misc/lv_area.h **** /*********************
  21:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      DEFINES
  22:lvgl/src/draw/sw/../../misc/lv_area.h ****  *********************/
  23:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  24:lvgl/src/draw/sw/../../misc/lv_area.h **** #if LV_USE_LARGE_COORD
  25:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int32_t lv_coord_t;
  26:lvgl/src/draw/sw/../../misc/lv_area.h **** #else
  27:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef int16_t lv_coord_t;
  28:lvgl/src/draw/sw/../../misc/lv_area.h **** #endif
  29:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  30:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  31:lvgl/src/draw/sw/../../misc/lv_area.h ****  *      TYPEDEFS
  32:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  33:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  34:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  35:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Represents a point on the screen.
  36:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
  37:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  38:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x;
  39:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y;
  40:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_point_t;
  41:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  42:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Represents an area of the screen.*/
  43:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef struct {
  44:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x1;
  45:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y1;
  46:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t x2;
  47:lvgl/src/draw/sw/../../misc/lv_area.h ****     lv_coord_t y2;
  48:lvgl/src/draw/sw/../../misc/lv_area.h **** } lv_area_t;
  49:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  50:lvgl/src/draw/sw/../../misc/lv_area.h **** /** Alignments*/
  51:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  52:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_DEFAULT = 0,
  53:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_LEFT,
  54:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_MID,
  55:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_TOP_RIGHT,
  56:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_LEFT,
  57:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_MID,
  58:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_BOTTOM_RIGHT,
  59:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_LEFT_MID,
  60:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_RIGHT_MID,
  61:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_CENTER,
  62:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  63:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_LEFT,
  64:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_MID,
  65:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_TOP_RIGHT,
  66:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_LEFT,
  67:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_MID,
  68:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_BOTTOM_RIGHT,
  69:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_TOP,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 54


  70:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_MID,
  71:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_LEFT_BOTTOM,
  72:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_TOP,
  73:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_MID,
  74:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_ALIGN_OUT_RIGHT_BOTTOM,
  75:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  76:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_align_t;
  77:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  78:lvgl/src/draw/sw/../../misc/lv_area.h **** enum {
  79:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_NONE     = 0x00,
  80:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_LEFT     = (1 << 0),
  81:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_RIGHT    = (1 << 1),
  82:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_TOP      = (1 << 2),
  83:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_BOTTOM   = (1 << 3),
  84:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_HOR      = LV_DIR_LEFT | LV_DIR_RIGHT,
  85:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_VER      = LV_DIR_TOP | LV_DIR_BOTTOM,
  86:lvgl/src/draw/sw/../../misc/lv_area.h ****     LV_DIR_ALL      = LV_DIR_HOR | LV_DIR_VER,
  87:lvgl/src/draw/sw/../../misc/lv_area.h **** };
  88:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  89:lvgl/src/draw/sw/../../misc/lv_area.h **** typedef uint8_t lv_dir_t;
  90:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  91:lvgl/src/draw/sw/../../misc/lv_area.h **** /**********************
  92:lvgl/src/draw/sw/../../misc/lv_area.h ****  * GLOBAL PROTOTYPES
  93:lvgl/src/draw/sw/../../misc/lv_area.h ****  **********************/
  94:lvgl/src/draw/sw/../../misc/lv_area.h **** 
  95:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
  96:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Initialize an area
  97:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
  98:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x1 left coordinate of the area
  99:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y1 top coordinate of the area
 100:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param x2 right coordinate of the area
 101:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param y2 bottom coordinate of the area
 102:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 103:lvgl/src/draw/sw/../../misc/lv_area.h **** void lv_area_set(lv_area_t * area_p, lv_coord_t x1, lv_coord_t y1, lv_coord_t x2, lv_coord_t y2);
 104:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 105:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 106:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Copy an area
 107:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param dest pointer to the destination area
 108:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param src pointer to the source area
 109:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 110:lvgl/src/draw/sw/../../misc/lv_area.h **** inline static void lv_area_copy(lv_area_t * dest, const lv_area_t * src)
 111:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 112:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x1 = src->x1;
 113:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y1 = src->y1;
 114:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->x2 = src->x2;
 115:lvgl/src/draw/sw/../../misc/lv_area.h ****     dest->y2 = src->y2;
 116:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 117:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 118:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 119:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the width of an area
 120:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 121:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the width of the area (if x1 == x2 -> width = 1)
 122:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 123:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_width(const lv_area_t * area_p)
 1545              		.loc 3 123 26 view .LVU523
 1546              	.LBB40:
 124:lvgl/src/draw/sw/../../misc/lv_area.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 55


 125:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->x2 - area_p->x1 + 1);
 1547              		.loc 3 125 5 view .LVU524
 1548              		.loc 3 125 31 is_stmt 0 view .LVU525
 1549 00d4 B4F80490 		ldrh	r9, [r4, #4]
 1550              		.loc 3 125 44 view .LVU526
 1551 00d8 2388     		ldrh	r3, [r4]
 1552              		.loc 3 125 36 view .LVU527
 1553 00da A9EB0309 		sub	r9, r9, r3
 1554 00de 1FFA89F9 		uxth	r9, r9
 1555              		.loc 3 125 49 view .LVU528
 1556 00e2 09F10109 		add	r9, r9, #1
 1557              		.loc 3 125 12 view .LVU529
 1558 00e6 0FFA89F9 		sxth	r9, r9
 1559              	.LVL199:
 1560              		.loc 3 125 12 view .LVU530
 1561              	.LBE40:
 1562              	.LBE39:
 109:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     lv_coord_t y;
 1563              		.loc 1 109 5 is_stmt 1 view .LVU531
 1564              	.LBB41:
 1565              	.LBI41:
 126:lvgl/src/draw/sw/../../misc/lv_area.h **** }
 127:lvgl/src/draw/sw/../../misc/lv_area.h **** 
 128:lvgl/src/draw/sw/../../misc/lv_area.h **** /**
 129:lvgl/src/draw/sw/../../misc/lv_area.h ****  * Get the height of an area
 130:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @param area_p pointer to an area
 131:lvgl/src/draw/sw/../../misc/lv_area.h ****  * @return the height of the area (if y1 == y2 -> height = 1)
 132:lvgl/src/draw/sw/../../misc/lv_area.h ****  */
 133:lvgl/src/draw/sw/../../misc/lv_area.h **** static inline lv_coord_t lv_area_get_height(const lv_area_t * area_p)
 1566              		.loc 3 133 26 view .LVU532
 1567              	.LBB42:
 134:lvgl/src/draw/sw/../../misc/lv_area.h **** {
 135:lvgl/src/draw/sw/../../misc/lv_area.h ****     return (lv_coord_t)(area_p->y2 - area_p->y1 + 1);
 1568              		.loc 3 135 5 view .LVU533
 1569              		.loc 3 135 31 is_stmt 0 view .LVU534
 1570 00ea B4F806A0 		ldrh	r10, [r4, #6]
 1571              		.loc 3 135 44 view .LVU535
 1572 00ee 6388     		ldrh	r3, [r4, #2]
 1573              		.loc 3 135 36 view .LVU536
 1574 00f0 AAEB030A 		sub	r10, r10, r3
 1575 00f4 1FFA8AFA 		uxth	r10, r10
 1576              		.loc 3 135 49 view .LVU537
 1577 00f8 0AF1010A 		add	r10, r10, #1
 1578              		.loc 3 135 12 view .LVU538
 1579 00fc 0FFA8AFA 		sxth	r10, r10
 1580              	.LVL200:
 1581              		.loc 3 135 12 view .LVU539
 1582              	.LBE42:
 1583              	.LBE41:
 110:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     for(y = 0; y < dest_h; y++) {
 1584              		.loc 1 110 5 is_stmt 1 view .LVU540
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1585              		.loc 1 111 5 view .LVU541
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1586              		.loc 1 111 11 is_stmt 0 view .LVU542
 1587 0100 0027     		movs	r7, #0
 1588 0102 2346     		mov	r3, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 56


 1589 0104 4C46     		mov	r4, r9
 1590              	.LVL201:
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1591              		.loc 1 111 11 view .LVU543
 1592 0106 9946     		mov	r9, r3
 1593              	.LVL202:
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1594              		.loc 1 111 5 view .LVU544
 1595 0108 0DE0     		b	.L73
 1596              	.LVL203:
 1597              	.L80:
 1598              	.LBB43:
 120:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(dest_w > 1) {
 1599              		.loc 1 120 17 view .LVU545
 1600 010a 0023     		movs	r3, #0
 1601              	.LVL204:
 119:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_step_256 = 0;
 1602              		.loc 1 119 17 view .LVU546
 1603 010c 1A46     		mov	r2, r3
 1604              	.LVL205:
 119:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_step_256 = 0;
 1605              		.loc 1 119 17 view .LVU547
 1606 010e 32E0     		b	.L74
 1607              	.LVL206:
 1608              	.L83:
 129:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1609              		.loc 1 129 13 view .LVU548
 1610 0110 B8F1060F 		cmp	r8, #6
 1611 0114 47D0     		beq	.L77
 1612 0116 B8F1040F 		cmp	r8, #4
 1613 011a 44D0     		beq	.L77
 1614              	.LVL207:
 1615              	.L78:
 151:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         abuf += dest_w;
 1616              		.loc 1 151 9 is_stmt 1 discriminator 2 view .LVU549
 151:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         abuf += dest_w;
 1617              		.loc 1 151 14 is_stmt 0 discriminator 2 view .LVU550
 1618 011c 06EB8406 		add	r6, r6, r4, lsl #2
 1619              	.LVL208:
 152:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 1620              		.loc 1 152 9 is_stmt 1 discriminator 2 view .LVU551
 152:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 1621              		.loc 1 152 14 is_stmt 0 discriminator 2 view .LVU552
 1622 0120 2544     		add	r5, r5, r4
 1623              	.LVL209:
 152:lvgl/src/draw/sw/lv_draw_sw_transform.c ****     }
 1624              		.loc 1 152 14 discriminator 2 view .LVU553
 1625              	.LBE43:
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1626              		.loc 1 111 28 is_stmt 1 discriminator 2 view .LVU554
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1627              		.loc 1 111 29 is_stmt 0 discriminator 2 view .LVU555
 1628 0122 0137     		adds	r7, r7, #1
 1629              	.LVL210:
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1630              		.loc 1 111 29 discriminator 2 view .LVU556
 1631 0124 3FB2     		sxth	r7, r7
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 57


 1632              	.LVL211:
 1633              	.L73:
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1634              		.loc 1 111 16 is_stmt 1 discriminator 1 view .LVU557
 111:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs1_ups, ys1_ups, xs2_ups, ys2_ups;
 1635              		.loc 1 111 5 is_stmt 0 discriminator 1 view .LVU558
 1636 0126 5745     		cmp	r7, r10
 1637 0128 5DDA     		bge	.L82
 1638              	.LBB44:
 112:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1639              		.loc 1 112 9 is_stmt 1 view .LVU559
 114:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         transform_point_upscaled(&tr_dsc, dest_area->x2, dest_area->y1 + y, &xs2_ups, &ys2_ups);
 1640              		.loc 1 114 9 view .LVU560
 114:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         transform_point_upscaled(&tr_dsc, dest_area->x2, dest_area->y1 + y, &xs2_ups, &ys2_ups);
 1641              		.loc 1 114 67 is_stmt 0 view .LVU561
 1642 012a B9F90220 		ldrsh	r2, [r9, #2]
 114:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         transform_point_upscaled(&tr_dsc, dest_area->x2, dest_area->y1 + y, &xs2_ups, &ys2_ups);
 1643              		.loc 1 114 9 view .LVU562
 1644 012e 12AB     		add	r3, sp, #72
 1645 0130 0093     		str	r3, [sp]
 1646 0132 11AB     		add	r3, sp, #68
 1647 0134 3A44     		add	r2, r2, r7
 1648 0136 B9F90010 		ldrsh	r1, [r9]
 1649 013a 15A8     		add	r0, sp, #84
 1650 013c FFF7FEFF 		bl	transform_point_upscaled
 1651              	.LVL212:
 115:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1652              		.loc 1 115 9 is_stmt 1 view .LVU563
 115:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1653              		.loc 1 115 67 is_stmt 0 view .LVU564
 1654 0140 B9F90220 		ldrsh	r2, [r9, #2]
 115:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1655              		.loc 1 115 9 view .LVU565
 1656 0144 14AB     		add	r3, sp, #80
 1657 0146 0093     		str	r3, [sp]
 1658 0148 13AB     		add	r3, sp, #76
 1659 014a 3A44     		add	r2, r2, r7
 1660 014c B9F90410 		ldrsh	r1, [r9, #4]
 1661 0150 15A8     		add	r0, sp, #84
 1662 0152 FFF7FEFF 		bl	transform_point_upscaled
 1663              	.LVL213:
 117:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_diff = ys2_ups - ys1_ups;
 1664              		.loc 1 117 9 is_stmt 1 view .LVU566
 117:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_diff = ys2_ups - ys1_ups;
 1665              		.loc 1 117 35 is_stmt 0 view .LVU567
 1666 0156 1199     		ldr	r1, [sp, #68]
 117:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_diff = ys2_ups - ys1_ups;
 1667              		.loc 1 117 17 view .LVU568
 1668 0158 139A     		ldr	r2, [sp, #76]
 1669 015a 521A     		subs	r2, r2, r1
 1670              	.LVL214:
 118:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_step_256 = 0;
 1671              		.loc 1 118 9 is_stmt 1 view .LVU569
 118:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_step_256 = 0;
 1672              		.loc 1 118 35 is_stmt 0 view .LVU570
 1673 015c 1298     		ldr	r0, [sp, #72]
 118:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t xs_step_256 = 0;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 58


 1674              		.loc 1 118 17 view .LVU571
 1675 015e 149B     		ldr	r3, [sp, #80]
 1676 0160 1B1A     		subs	r3, r3, r0
 1677              	.LVL215:
 119:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_step_256 = 0;
 1678              		.loc 1 119 9 is_stmt 1 view .LVU572
 120:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         if(dest_w > 1) {
 1679              		.loc 1 120 9 view .LVU573
 121:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_step_256 = (256 * xs_diff) / (dest_w - 1);
 1680              		.loc 1 121 9 view .LVU574
 121:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             xs_step_256 = (256 * xs_diff) / (dest_w - 1);
 1681              		.loc 1 121 11 is_stmt 0 view .LVU575
 1682 0162 012C     		cmp	r4, #1
 1683 0164 D1DD     		ble	.L80
 122:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_step_256 = (256 * ys_diff) / (dest_w - 1);
 1684              		.loc 1 122 13 is_stmt 1 view .LVU576
 122:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_step_256 = (256 * ys_diff) / (dest_w - 1);
 1685              		.loc 1 122 32 is_stmt 0 view .LVU577
 1686 0166 1202     		lsls	r2, r2, #8
 1687              	.LVL216:
 122:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_step_256 = (256 * ys_diff) / (dest_w - 1);
 1688              		.loc 1 122 53 view .LVU578
 1689 0168 04F1FF3C 		add	ip, r4, #-1
 122:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             ys_step_256 = (256 * ys_diff) / (dest_w - 1);
 1690              		.loc 1 122 25 view .LVU579
 1691 016c 92FBFCF2 		sdiv	r2, r2, ip
 1692              	.LVL217:
 123:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1693              		.loc 1 123 13 is_stmt 1 view .LVU580
 123:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1694              		.loc 1 123 32 is_stmt 0 view .LVU581
 1695 0170 1B02     		lsls	r3, r3, #8
 1696              	.LVL218:
 123:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1697              		.loc 1 123 25 view .LVU582
 1698 0172 93FBFCF3 		sdiv	r3, r3, ip
 1699              	.LVL219:
 1700              	.L74:
 125:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_ups = ys1_ups + 0x80;
 1701              		.loc 1 125 9 is_stmt 1 view .LVU583
 125:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         int32_t ys_ups = ys1_ups + 0x80;
 1702              		.loc 1 125 17 is_stmt 0 view .LVU584
 1703 0176 8031     		adds	r1, r1, #128
 1704              	.LVL220:
 126:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1705              		.loc 1 126 9 is_stmt 1 view .LVU585
 126:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1706              		.loc 1 126 17 is_stmt 0 view .LVU586
 1707 0178 8030     		adds	r0, r0, #128
 1708              	.LVL221:
 128:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 1709              		.loc 1 128 9 is_stmt 1 view .LVU587
 128:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 1710              		.loc 1 128 32 is_stmt 0 view .LVU588
 1711 017a 9BF814C0 		ldrb	ip, [fp, #20]	@ zero_extendqisi2
 128:lvgl/src/draw/sw/lv_draw_sw_transform.c ****             switch(cf) {
 1712              		.loc 1 128 11 view .LVU589
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 59


 1713 017e 1CF0010F 		tst	ip, #1
 1714 0182 20D1     		bne	.L75
 129:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR_ALPHA:
 1715              		.loc 1 129 13 is_stmt 1 view .LVU590
 1716 0184 B8F1050F 		cmp	r8, #5
 1717 0188 C2D1     		bne	.L83
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1718              		.loc 1 131 21 view .LVU591
 1719 018a 0695     		str	r5, [sp, #24]
 1720 018c 0596     		str	r6, [sp, #20]
 1721 018e 0494     		str	r4, [sp, #16]
 1722 0190 0393     		str	r3, [sp, #12]
 1723 0192 0292     		str	r2, [sp, #8]
 1724 0194 0190     		str	r0, [sp, #4]
 1725 0196 0091     		str	r1, [sp]
 1726 0198 0C9B     		ldr	r3, [sp, #48]
 1727              	.LVL222:
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1728              		.loc 1 131 21 is_stmt 0 view .LVU592
 1729 019a 0B9A     		ldr	r2, [sp, #44]
 1730              	.LVL223:
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1731              		.loc 1 131 21 view .LVU593
 1732 019c 0A99     		ldr	r1, [sp, #40]
 1733              	.LVL224:
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1734              		.loc 1 131 21 view .LVU594
 1735 019e 0998     		ldr	r0, [sp, #36]
 1736              	.LVL225:
 131:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1737              		.loc 1 131 21 view .LVU595
 1738 01a0 FFF7FEFF 		bl	argb_no_aa
 1739              	.LVL226:
 132:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                 case LV_IMG_CF_TRUE_COLOR:
 1740              		.loc 1 132 21 is_stmt 1 view .LVU596
 1741 01a4 BAE7     		b	.L78
 1742              	.LVL227:
 1743              	.L77:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1744              		.loc 1 135 21 view .LVU597
 1745 01a6 CDF81C80 		str	r8, [sp, #28]
 1746 01aa 0695     		str	r5, [sp, #24]
 1747 01ac 0596     		str	r6, [sp, #20]
 1748 01ae 0494     		str	r4, [sp, #16]
 1749 01b0 0393     		str	r3, [sp, #12]
 1750 01b2 0292     		str	r2, [sp, #8]
 1751 01b4 0190     		str	r0, [sp, #4]
 1752 01b6 0091     		str	r1, [sp]
 1753 01b8 0C9B     		ldr	r3, [sp, #48]
 1754              	.LVL228:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1755              		.loc 1 135 21 is_stmt 0 view .LVU598
 1756 01ba 0B9A     		ldr	r2, [sp, #44]
 1757              	.LVL229:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1758              		.loc 1 135 21 view .LVU599
 1759 01bc 0A99     		ldr	r1, [sp, #40]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 60


 1760              	.LVL230:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1761              		.loc 1 135 21 view .LVU600
 1762 01be 0998     		ldr	r0, [sp, #36]
 1763              	.LVL231:
 135:lvgl/src/draw/sw/lv_draw_sw_transform.c ****                     break;
 1764              		.loc 1 135 21 view .LVU601
 1765 01c0 FFF7FEFF 		bl	rgb_no_aa
 1766              	.LVL232:
 136:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1767              		.loc 1 136 21 is_stmt 1 view .LVU602
 1768 01c4 AAE7     		b	.L78
 1769              	.LVL233:
 1770              	.L75:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1771              		.loc 1 148 13 view .LVU603
 1772 01c6 CDF81C80 		str	r8, [sp, #28]
 1773 01ca 0695     		str	r5, [sp, #24]
 1774 01cc 0596     		str	r6, [sp, #20]
 1775 01ce 0494     		str	r4, [sp, #16]
 1776 01d0 0393     		str	r3, [sp, #12]
 1777 01d2 0292     		str	r2, [sp, #8]
 1778 01d4 0190     		str	r0, [sp, #4]
 1779 01d6 0091     		str	r1, [sp]
 1780 01d8 0C9B     		ldr	r3, [sp, #48]
 1781              	.LVL234:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1782              		.loc 1 148 13 is_stmt 0 view .LVU604
 1783 01da 0B9A     		ldr	r2, [sp, #44]
 1784              	.LVL235:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1785              		.loc 1 148 13 view .LVU605
 1786 01dc 0A99     		ldr	r1, [sp, #40]
 1787              	.LVL236:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1788              		.loc 1 148 13 view .LVU606
 1789 01de 0998     		ldr	r0, [sp, #36]
 1790              	.LVL237:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1791              		.loc 1 148 13 view .LVU607
 1792 01e0 FFF7FEFF 		bl	argb_and_rgb_aa
 1793              	.LVL238:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1794              		.loc 1 148 13 view .LVU608
 1795 01e4 9AE7     		b	.L78
 1796              	.L82:
 148:lvgl/src/draw/sw/lv_draw_sw_transform.c ****         }
 1797              		.loc 1 148 13 view .LVU609
 1798              	.LBE44:
 154:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1799              		.loc 1 154 1 view .LVU610
 1800 01e6 21B0     		add	sp, sp, #132
 1801              		.cfi_def_cfa_offset 36
 1802              		@ sp needed
 1803 01e8 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1804              	.LVL239:
 1805              	.L85:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 61


 154:lvgl/src/draw/sw/lv_draw_sw_transform.c **** 
 1806              		.loc 1 154 1 view .LVU611
 1807              		.align	2
 1808              	.L84:
 1809 01ec 67666666 		.word	1717986919
 1810              		.cfi_endproc
 1811              	.LFE161:
 1813              		.text
 1814              	.Letext0:
 1815              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 1816              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 1817              		.file 6 "lvgl/src/draw/sw/../../misc/lv_types.h"
 1818              		.file 7 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 1819              		.file 8 "lvgl/src/draw/sw/../../misc/../font/lv_font.h"
 1820              		.file 9 "lvgl/src/draw/sw/../../misc/lv_txt.h"
 1821              		.file 10 "lvgl/src/draw/sw/../../misc/lv_bidi.h"
 1822              		.file 11 "lvgl/src/draw/sw/../../misc/lv_style.h"
 1823              		.file 12 "lvgl/src/draw/sw/../lv_img_buf.h"
 1824              		.file 13 "lvgl/src/draw/sw/../../core/lv_obj.h"
 1825              		.file 14 "lvgl/src/draw/sw/../lv_draw_rect.h"
 1826              		.file 15 "lvgl/src/draw/sw/../lv_draw_label.h"
 1827              		.file 16 "lvgl/src/draw/sw/../lv_draw_img.h"
 1828              		.file 17 "lvgl/src/draw/sw/../lv_draw_line.h"
 1829              		.file 18 "lvgl/src/draw/sw/../lv_draw_arc.h"
 1830              		.file 19 "lvgl/src/draw/sw/../lv_draw_layer.h"
 1831              		.file 20 "lvgl/src/draw/sw/../lv_draw.h"
 1832              		.file 21 "lvgl/src/draw/sw/../../hal/../misc/lv_timer.h"
 1833              		.file 22 "lvgl/src/draw/sw/../../hal/lv_hal_disp.h"
 1834              		.file 23 "lvgl/src/draw/sw/../../core/lv_group.h"
 1835              		.file 24 "lvgl/src/draw/sw/../../hal/../misc/lv_ll.h"
 1836              		.file 25 "lvgl/src/draw/sw/../../core/lv_obj_scroll.h"
 1837              		.file 26 "lvgl/src/draw/sw/../../core/lv_obj_style.h"
 1838              		.file 27 "lvgl/src/draw/sw/../../core/lv_obj_class.h"
 1839              		.file 28 "lvgl/src/draw/sw/../../core/lv_event.h"
 1840              		.file 29 "lvgl/src/draw/sw/../../core/lv_refr.h"
 1841              		.file 30 "lvgl/src/draw/sw/../../misc/lv_mem.h"
 1842              		.file 31 "lvgl/src/draw/sw/../../misc/lv_math.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 lv_draw_sw_transform.c
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:19     .text.argb_no_aa:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:24     .text.argb_no_aa:00000000 argb_no_aa
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:158    .text.transform_point_upscaled:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:163    .text.transform_point_upscaled:00000000 transform_point_upscaled
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:339    .text.rgb_no_aa:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:344    .text.rgb_no_aa:00000000 rgb_no_aa
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:517    .text.argb_and_rgb_aa:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:522    .text.argb_and_rgb_aa:00000000 argb_and_rgb_aa
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:1369   .text.lv_draw_sw_transform:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:1375   .text.lv_draw_sw_transform:00000000 lv_draw_sw_transform
C:\Users\OSD\AppData\Local\Temp\ccoZrcWl.s:1809   .text.lv_draw_sw_transform:000001ec $d

UNDEFINED SYMBOLS
_lv_refr_get_disp_refreshing
lv_memset_ff
lv_trigo_sin
