ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_label_1.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.rodata.lv_example_label_1.str1.4,"aMS",%progbits,1
  19              		.align	2
  20              	.LC0:
  21 0000 23303030 		.ascii	"#0000ff Re-color# #ff00ff words# #ff0000 of a# labe"
  21      30666620 
  21      52652D63 
  21      6F6C6F72 
  21      23202366 
  22 0033 6C2C2061 		.ascii	"l, align the lines to the center and wrap long text"
  22      6C69676E 
  22      20746865 
  22      206C696E 
  22      65732074 
  23 0066 20617574 		.ascii	" automatically.\000"
  23      6F6D6174 
  23      6963616C 
  23      6C792E00 
  24 0076 0000     		.align	2
  25              	.LC1:
  26 0078 49742069 		.ascii	"It is a circularly scrolling text. \000"
  26      73206120 
  26      63697263 
  26      756C6172 
  26      6C792073 
  27              		.section	.text.lv_example_label_1,"ax",%progbits
  28              		.align	1
  29              		.global	lv_example_label_1
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	lv_example_label_1:
  35              	.LFB204:
  36              		.file 1 "lvgl/examples/widgets/label/lv_example_label_1.c"
   1:lvgl/examples/widgets/label/lv_example_label_1.c **** #include "../../lv_examples.h"
   2:lvgl/examples/widgets/label/lv_example_label_1.c **** #if LV_USE_LABEL && LV_BUILD_EXAMPLES
   3:lvgl/examples/widgets/label/lv_example_label_1.c **** 
   4:lvgl/examples/widgets/label/lv_example_label_1.c **** /**
   5:lvgl/examples/widgets/label/lv_example_label_1.c ****  * Show line wrap, re-color, line align and text scrolling.
   6:lvgl/examples/widgets/label/lv_example_label_1.c ****  */
   7:lvgl/examples/widgets/label/lv_example_label_1.c **** void lv_example_label_1(void)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 2


   8:lvgl/examples/widgets/label/lv_example_label_1.c **** {
  37              		.loc 1 8 1 view -0
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 0
  40              		@ frame_needed = 0, uses_anonymous_args = 0
  41 0000 10B5     		push	{r4, lr}
  42              		.cfi_def_cfa_offset 8
  43              		.cfi_offset 4, -8
  44              		.cfi_offset 14, -4
   9:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_t * label1 = lv_label_create(lv_scr_act());
  45              		.loc 1 9 5 view .LVU1
  46              	.LBB6:
  47              	.LBI6:
  48              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 3


  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 4


 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 5


 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  49              		.loc 2 182 26 view .LVU2
  50              	.LBB7:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  51              		.loc 2 184 5 view .LVU3
  52              		.loc 2 184 12 is_stmt 0 view .LVU4
  53 0002 FFF7FEFF 		bl	lv_disp_get_default
  54              	.LVL0:
  55 0006 FFF7FEFF 		bl	lv_disp_get_scr_act
  56              	.LVL1:
  57              	.LBE7:
  58              	.LBE6:
  59              		.loc 1 9 25 view .LVU5
  60 000a FFF7FEFF 		bl	lv_label_create
  61              	.LVL2:
  62 000e 0446     		mov	r4, r0
  63              	.LVL3:
  10:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_label_set_long_mode(label1, LV_LABEL_LONG_WRAP);     /*Break the long lines*/
  64              		.loc 1 10 5 is_stmt 1 view .LVU6
  65 0010 0021     		movs	r1, #0
  66 0012 FFF7FEFF 		bl	lv_label_set_long_mode
  67              	.LVL4:
  11:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_label_set_recolor(label1, true);                      /*Enable re-coloring by commands in th
  68              		.loc 1 11 5 view .LVU7
  69 0016 0121     		movs	r1, #1
  70 0018 2046     		mov	r0, r4
  71 001a FFF7FEFF 		bl	lv_label_set_recolor
  72              	.LVL5:
  12:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_label_set_text(label1, "#0000ff Re-color# #ff00ff words# #ff0000 of a# label, align the line
  73              		.loc 1 12 5 view .LVU8
  74 001e 1649     		ldr	r1, .L3
  75 0020 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 6


  76 0022 FFF7FEFF 		bl	lv_label_set_text
  77              	.LVL6:
  13:lvgl/examples/widgets/label/lv_example_label_1.c ****                       "and wrap long text automatically.");
  14:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_set_width(label1, 150);  /*Set smaller width to make the lines wrap*/
  78              		.loc 1 14 5 view .LVU9
  79 0026 9621     		movs	r1, #150
  80 0028 2046     		mov	r0, r4
  81 002a FFF7FEFF 		bl	lv_obj_set_width
  82              	.LVL7:
  15:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_set_style_text_align(label1, LV_TEXT_ALIGN_CENTER, 0);
  83              		.loc 1 15 5 view .LVU10
  84 002e 0022     		movs	r2, #0
  85 0030 0221     		movs	r1, #2
  86 0032 2046     		mov	r0, r4
  87 0034 FFF7FEFF 		bl	lv_obj_set_style_text_align
  88              	.LVL8:
  16:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_align(label1, LV_ALIGN_CENTER, 0, -40);
  89              		.loc 1 16 5 view .LVU11
  90 0038 6FF02703 		mvn	r3, #39
  91 003c 0022     		movs	r2, #0
  92 003e 0921     		movs	r1, #9
  93 0040 2046     		mov	r0, r4
  94 0042 FFF7FEFF 		bl	lv_obj_align
  95              	.LVL9:
  17:lvgl/examples/widgets/label/lv_example_label_1.c **** 
  18:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_t * label2 = lv_label_create(lv_scr_act());
  96              		.loc 1 18 5 view .LVU12
  97              	.LBB8:
  98              	.LBI8:
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
  99              		.loc 2 182 26 view .LVU13
 100              	.LBB9:
 101              		.loc 2 184 5 view .LVU14
 102              		.loc 2 184 12 is_stmt 0 view .LVU15
 103 0046 FFF7FEFF 		bl	lv_disp_get_default
 104              	.LVL10:
 105 004a FFF7FEFF 		bl	lv_disp_get_scr_act
 106              	.LVL11:
 107              	.LBE9:
 108              	.LBE8:
 109              		.loc 1 18 25 view .LVU16
 110 004e FFF7FEFF 		bl	lv_label_create
 111              	.LVL12:
 112 0052 0446     		mov	r4, r0
 113              	.LVL13:
  19:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_label_set_long_mode(label2, LV_LABEL_LONG_SCROLL_CIRCULAR);     /*Circular scroll*/
 114              		.loc 1 19 5 is_stmt 1 view .LVU17
 115 0054 0321     		movs	r1, #3
 116 0056 FFF7FEFF 		bl	lv_label_set_long_mode
 117              	.LVL14:
  20:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_set_width(label2, 150);
 118              		.loc 1 20 5 view .LVU18
 119 005a 9621     		movs	r1, #150
 120 005c 2046     		mov	r0, r4
 121 005e FFF7FEFF 		bl	lv_obj_set_width
 122              	.LVL15:
  21:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_label_set_text(label2, "It is a circularly scrolling text. ");
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 7


 123              		.loc 1 21 5 view .LVU19
 124 0062 0649     		ldr	r1, .L3+4
 125 0064 2046     		mov	r0, r4
 126 0066 FFF7FEFF 		bl	lv_label_set_text
 127              	.LVL16:
  22:lvgl/examples/widgets/label/lv_example_label_1.c ****     lv_obj_align(label2, LV_ALIGN_CENTER, 0, 40);
 128              		.loc 1 22 5 view .LVU20
 129 006a 2823     		movs	r3, #40
 130 006c 0022     		movs	r2, #0
 131 006e 0921     		movs	r1, #9
 132 0070 2046     		mov	r0, r4
 133 0072 FFF7FEFF 		bl	lv_obj_align
 134              	.LVL17:
  23:lvgl/examples/widgets/label/lv_example_label_1.c **** }
 135              		.loc 1 23 1 is_stmt 0 view .LVU21
 136 0076 10BD     		pop	{r4, pc}
 137              	.LVL18:
 138              	.L4:
 139              		.loc 1 23 1 view .LVU22
 140              		.align	2
 141              	.L3:
 142 0078 00000000 		.word	.LC0
 143 007c 78000000 		.word	.LC1
 144              		.cfi_endproc
 145              	.LFE204:
 147              		.text
 148              	.Letext0:
 149              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 150              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 151              		.file 5 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 152              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 153              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_txt.h"
 154              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 155              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 156              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 157              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 158              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 159              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 160              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 161              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 162              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_label.h"
 163              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 164              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
 165              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style_gen.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s 			page 8


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_label_1.c
C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s:19     .rodata.lv_example_label_1.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s:28     .text.lv_example_label_1:00000000 $t
C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s:34     .text.lv_example_label_1:00000000 lv_example_label_1
C:\Users\OSD\AppData\Local\Temp\cchKrV3b.s:142    .text.lv_example_label_1:00000078 $d

UNDEFINED SYMBOLS
lv_disp_get_default
lv_disp_get_scr_act
lv_label_create
lv_label_set_long_mode
lv_label_set_recolor
lv_label_set_text
lv_obj_set_width
lv_obj_set_style_text_align
lv_obj_align
