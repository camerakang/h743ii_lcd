ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"main.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text._write,"ax",%progbits
  19              		.align	1
  20              		.global	_write
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	_write:
  26              	.LVL0:
  27              	.LFB149:
  28              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****  ******************************************************************************
   4:Core/Src/main.c ****  * @file           : main.c
   5:Core/Src/main.c ****  * @brief          : Main program body
   6:Core/Src/main.c ****  ******************************************************************************
   7:Core/Src/main.c ****  * @attention
   8:Core/Src/main.c ****  *
   9:Core/Src/main.c ****  * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****  * All rights reserved.
  11:Core/Src/main.c ****  *
  12:Core/Src/main.c ****  * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****  * in the root directory of this software component.
  14:Core/Src/main.c ****  * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****  *
  16:Core/Src/main.c ****  ******************************************************************************
  17:Core/Src/main.c ****  */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "usart.h"
  22:Core/Src/main.c **** #include "gpio.h"
  23:Core/Src/main.c **** 
  24:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/main.c **** #include "KD024VGFPD094.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 2


  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE BEGIN PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* USER CODE END PV */
  49:Core/Src/main.c **** 
  50:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  51:Core/Src/main.c **** void SystemClock_Config(void);
  52:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  53:Core/Src/main.c **** void delay_us(uint32_t us);
  54:Core/Src/main.c **** /* USER CODE END PFP */
  55:Core/Src/main.c **** 
  56:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  57:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  58:Core/Src/main.c **** unsigned char command = 0xA1;
  59:Core/Src/main.c **** unsigned char receivedData = 0;
  60:Core/Src/main.c **** /* USER CODE END 0 */
  61:Core/Src/main.c **** 
  62:Core/Src/main.c **** /**
  63:Core/Src/main.c ****  * @brief  The application entry point.
  64:Core/Src/main.c ****  * @retval int
  65:Core/Src/main.c ****  */
  66:Core/Src/main.c **** int main(void)
  67:Core/Src/main.c **** {
  68:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   /* USER CODE END 1 */
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  75:Core/Src/main.c ****   HAL_Init();
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  78:Core/Src/main.c **** 
  79:Core/Src/main.c ****   /* USER CODE END Init */
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* Configure the system clock */
  82:Core/Src/main.c ****   SystemClock_Config();
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  85:Core/Src/main.c **** 
  86:Core/Src/main.c ****   /* USER CODE END SysInit */
  87:Core/Src/main.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 3


  88:Core/Src/main.c ****   /* Initialize all configured peripherals */
  89:Core/Src/main.c ****   MX_GPIO_Init();
  90:Core/Src/main.c ****   MX_USART1_UART_Init();
  91:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  92:Core/Src/main.c ****   HAL_GPIO_WritePin(CSB_GPIO_Port, CSB_Pin, SET);
  93:Core/Src/main.c ****   KD024VGFPD094_init();
  94:Core/Src/main.c ****   HAL_Delay(100);
  95:Core/Src/main.c ****   write_command(0xff);
  96:Core/Src/main.c ****   write_data(0x77);
  97:Core/Src/main.c ****   write_data(0x01);
  98:Core/Src/main.c ****   write_data(0x00);
  99:Core/Src/main.c ****   write_data(0x00);
 100:Core/Src/main.c ****   write_data(0x12);
 101:Core/Src/main.c ****   write_command(0xD1);
 102:Core/Src/main.c ****   write_data(0x81);
 103:Core/Src/main.c ****   write_command(0xD2);
 104:Core/Src/main.c ****   write_data(0x08);
 105:Core/Src/main.c ****   printf("LCD init done\n");
 106:Core/Src/main.c ****   // SSD_SEND(6, 0XFF, 0X77, 0X01, 0X00, 0X00, 0X12); // Â®â„Ñ¶Ââ∞ÈîõÊ∞±ÓÉáÔøΩ?????Ê∂ìÓÅÑÂº¨ÈèÅÊãåÔ
 107:Core/Src/main.c ****   // SSD_SEND(2, 0xD1, 0x81);                         // BIST EN
 108:Core/Src/main.c ****   // SSD_SEND(2, 0xD2, 0x01);                         // Èê¢Â©öÔøΩ????00-0B Ê∂ìÂ∂ÖÊÇìÈê¢Â©öÊΩ∞ÊùûÓÑ
 109:Core/Src/main.c ****   // SSD_SEND(0XFF, 0X77, 0X01, 0X00, 0X00, 0X12);
 110:Core/Src/main.c ****   // SSD_SEND(0xD1, 0x81);
 111:Core/Src/main.c ****   // SSD_SEND(0xD2, 0x06); // ÁîªÈù¢00-0B ‰∏çÂêåÁîªÈù¢ËΩ¨Êç¢
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END 2 */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Infinite loop */
 116:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 117:Core/Src/main.c ****   while (1)
 118:Core/Src/main.c ****   {
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****     // ÁîüÊàêÊó∂Èíü‰ø°Âè∑ÁöÑÈ´òÁîµÂπ≥
 121:Core/Src/main.c ****     HAL_GPIO_WritePin(LCD_PCLK_GPIO_Port, LCD_PCLK_Pin,GPIO_PIN_SET);
 122:Core/Src/main.c ****     delay_us(42); // 42 usÔºàÊ†πÊçÆÈúÄË¶ÅËøõË°åË∞ÉÊï¥Ôºâ
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****     // ÁîüÊàêÊó∂Èíü‰ø°Âè∑ÁöÑ‰ΩéÁîµÂπ≥
 125:Core/Src/main.c ****     HAL_GPIO_WritePin(LCD_PCLK_GPIO_Port, LCD_PCLK_Pin,GPIO_PIN_RESET);
 126:Core/Src/main.c ****     delay_us(42); // 42 usÔºàÊ†πÊçÆÈúÄË¶ÅËøõË°åË∞ÉÊï¥Ôºâ
 127:Core/Src/main.c ****     /* USER CODE END WHILE */
 128:Core/Src/main.c **** 
 129:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 130:Core/Src/main.c ****   }
 131:Core/Src/main.c ****   /* USER CODE END 3 */
 132:Core/Src/main.c **** }
 133:Core/Src/main.c **** 
 134:Core/Src/main.c **** /**
 135:Core/Src/main.c ****  * @brief System Clock Configuration
 136:Core/Src/main.c ****  * @retval None
 137:Core/Src/main.c ****  */
 138:Core/Src/main.c **** void SystemClock_Config(void)
 139:Core/Src/main.c **** {
 140:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 141:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 142:Core/Src/main.c **** 
 143:Core/Src/main.c ****   /** Supply configuration update enable
 144:Core/Src/main.c ****    */
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 4


 145:Core/Src/main.c ****   HAL_PWREx_ConfigSupply(PWR_LDO_SUPPLY);
 146:Core/Src/main.c **** 
 147:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 148:Core/Src/main.c ****    */
 149:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 150:Core/Src/main.c **** 
 151:Core/Src/main.c ****   while (!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY))
 152:Core/Src/main.c ****   {
 153:Core/Src/main.c ****   }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   __HAL_RCC_SYSCFG_CLK_ENABLE();
 156:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 157:Core/Src/main.c **** 
 158:Core/Src/main.c ****   while (!__HAL_PWR_GET_FLAG(PWR_FLAG_VOSRDY))
 159:Core/Src/main.c ****   {
 160:Core/Src/main.c ****   }
 161:Core/Src/main.c **** 
 162:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 163:Core/Src/main.c ****    * in the RCC_OscInitTypeDef structure.
 164:Core/Src/main.c ****    */
 165:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 166:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 176:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 177:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 178:Core/Src/main.c ****   {
 179:Core/Src/main.c ****     Error_Handler();
 180:Core/Src/main.c ****   }
 181:Core/Src/main.c **** 
 182:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 183:Core/Src/main.c ****    */
 184:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK1 | R
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 191:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_4) != HAL_OK)
 194:Core/Src/main.c ****   {
 195:Core/Src/main.c ****     Error_Handler();
 196:Core/Src/main.c ****   }
 197:Core/Src/main.c **** }
 198:Core/Src/main.c **** 
 199:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 200:Core/Src/main.c **** int _write(int fd, char *ptr, int len)
 201:Core/Src/main.c **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 5


  29              		.loc 1 201 1 view -0
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 0
  32              		@ frame_needed = 0, uses_anonymous_args = 0
  33              		.loc 1 201 1 is_stmt 0 view .LVU1
  34 0000 10B5     		push	{r4, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 4, -8
  37              		.cfi_offset 14, -4
  38 0002 1446     		mov	r4, r2
 202:Core/Src/main.c ****   HAL_UART_Transmit(&huart1, (uint8_t *)ptr, len, 0xFFFF);
  39              		.loc 1 202 3 is_stmt 1 view .LVU2
  40 0004 4FF6FF73 		movw	r3, #65535
  41 0008 92B2     		uxth	r2, r2
  42              	.LVL1:
  43              		.loc 1 202 3 is_stmt 0 view .LVU3
  44 000a 0248     		ldr	r0, .L3
  45              	.LVL2:
  46              		.loc 1 202 3 view .LVU4
  47 000c FFF7FEFF 		bl	HAL_UART_Transmit
  48              	.LVL3:
 203:Core/Src/main.c ****   return len;
  49              		.loc 1 203 3 is_stmt 1 view .LVU5
 204:Core/Src/main.c **** }
  50              		.loc 1 204 1 is_stmt 0 view .LVU6
  51 0010 2046     		mov	r0, r4
  52 0012 10BD     		pop	{r4, pc}
  53              	.LVL4:
  54              	.L4:
  55              		.loc 1 204 1 view .LVU7
  56              		.align	2
  57              	.L3:
  58 0014 00000000 		.word	huart1
  59              		.cfi_endproc
  60              	.LFE149:
  62              		.section	.text.delay_us,"ax",%progbits
  63              		.align	1
  64              		.global	delay_us
  65              		.syntax unified
  66              		.thumb
  67              		.thumb_func
  69              	delay_us:
  70              	.LVL5:
  71              	.LFB150:
 205:Core/Src/main.c **** 
 206:Core/Src/main.c **** void delay_us(uint32_t us)
 207:Core/Src/main.c **** {
  72              		.loc 1 207 1 is_stmt 1 view -0
  73              		.cfi_startproc
  74              		@ args = 0, pretend = 0, frame = 0
  75              		@ frame_needed = 0, uses_anonymous_args = 0
  76              		@ link register save eliminated.
 208:Core/Src/main.c ****   us *= (SystemCoreClock / 1000000) / 5;
  77              		.loc 1 208 3 view .LVU9
  78              		.loc 1 208 37 is_stmt 0 view .LVU10
  79 0000 074B     		ldr	r3, .L8
  80 0002 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 6


  81 0004 074A     		ldr	r2, .L8+4
  82 0006 A2FB0323 		umull	r2, r3, r2, r3
  83 000a 5B0D     		lsrs	r3, r3, #21
  84              		.loc 1 208 6 view .LVU11
  85 000c 03FB00F0 		mul	r0, r3, r0
  86              	.LVL6:
 209:Core/Src/main.c ****   while (us--)
  87              		.loc 1 209 3 is_stmt 1 view .LVU12
  88              		.loc 1 209 9 is_stmt 0 view .LVU13
  89 0010 01E0     		b	.L6
  90              	.LVL7:
  91              	.L7:
 210:Core/Src/main.c ****   {
 211:Core/Src/main.c ****     __NOP();
  92              		.loc 1 211 5 is_stmt 1 view .LVU14
  93              		.syntax unified
  94              	@ 211 "Core/Src/main.c" 1
  95 0012 00BF     		nop
  96              	@ 0 "" 2
 209:Core/Src/main.c ****   while (us--)
  97              		.loc 1 209 12 is_stmt 0 view .LVU15
  98              		.thumb
  99              		.syntax unified
 100 0014 1846     		mov	r0, r3
 101              	.LVL8:
 102              	.L6:
 209:Core/Src/main.c ****   while (us--)
 103              		.loc 1 209 9 is_stmt 1 view .LVU16
 209:Core/Src/main.c ****   while (us--)
 104              		.loc 1 209 12 is_stmt 0 view .LVU17
 105 0016 431E     		subs	r3, r0, #1
 106              	.LVL9:
 209:Core/Src/main.c ****   while (us--)
 107              		.loc 1 209 9 view .LVU18
 108 0018 0028     		cmp	r0, #0
 109 001a FAD1     		bne	.L7
 212:Core/Src/main.c ****   }
 213:Core/Src/main.c **** }
 110              		.loc 1 213 1 view .LVU19
 111 001c 7047     		bx	lr
 112              	.L9:
 113 001e 00BF     		.align	2
 114              	.L8:
 115 0020 00000000 		.word	SystemCoreClock
 116 0024 6BCA5F6B 		.word	1801439851
 117              		.cfi_endproc
 118              	.LFE150:
 120              		.section	.text.Error_Handler,"ax",%progbits
 121              		.align	1
 122              		.global	Error_Handler
 123              		.syntax unified
 124              		.thumb
 125              		.thumb_func
 127              	Error_Handler:
 128              	.LFB151:
 214:Core/Src/main.c **** /* USER CODE END 4 */
 215:Core/Src/main.c **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 7


 216:Core/Src/main.c **** /**
 217:Core/Src/main.c ****  * @brief  This function is executed in case of error occurrence.
 218:Core/Src/main.c ****  * @retval None
 219:Core/Src/main.c ****  */
 220:Core/Src/main.c **** void Error_Handler(void)
 221:Core/Src/main.c **** {
 129              		.loc 1 221 1 is_stmt 1 view -0
 130              		.cfi_startproc
 131              		@ Volatile: function does not return.
 132              		@ args = 0, pretend = 0, frame = 0
 133              		@ frame_needed = 0, uses_anonymous_args = 0
 134              		@ link register save eliminated.
 222:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 223:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 224:Core/Src/main.c ****   __disable_irq();
 135              		.loc 1 224 3 view .LVU21
 136              	.LBB4:
 137              	.LBI4:
 138              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.2.0
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     08. May 2019
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2019 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 8


  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 9


  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __COMPILER_BARRIER
 117:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __COMPILER_BARRIER()                   __ASM volatile("":::"memory")
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 120:Drivers/CMSIS/Include/cmsis_gcc.h **** /* #########################  Startup and Lowlevel Init  ######################## */
 121:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 122:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __PROGRAM_START
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Initializes data and bss sections
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details This default implementations initialized all data and additional bss
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            sections relying on .copy.table and .zero.table specified properly
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****            in the used linker script.
 129:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 130:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 131:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE __NO_RETURN void __cmsis_start(void)
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 133:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern void _start(void) __NO_RETURN;
 134:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 135:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t const* src;
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __copy_table_t;
 140:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 141:Drivers/CMSIS/Include/cmsis_gcc.h ****   typedef struct {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t* dest;
 143:Drivers/CMSIS/Include/cmsis_gcc.h ****     uint32_t  wlen;
 144:Drivers/CMSIS/Include/cmsis_gcc.h ****   } __zero_table_t;
 145:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 146:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_start__;
 147:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __copy_table_t __copy_table_end__;
 148:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_start__;
 149:Drivers/CMSIS/Include/cmsis_gcc.h ****   extern const __zero_table_t __zero_table_end__;
 150:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 151:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__copy_table_t const* pTable = &__copy_table_start__; pTable < &__copy_table_end__; ++pTable
 152:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 10


 153:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = pTable->src[i];
 154:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 155:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 156:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 157:Drivers/CMSIS/Include/cmsis_gcc.h ****   for (__zero_table_t const* pTable = &__zero_table_start__; pTable < &__zero_table_end__; ++pTable
 158:Drivers/CMSIS/Include/cmsis_gcc.h ****     for(uint32_t i=0u; i<pTable->wlen; ++i) {
 159:Drivers/CMSIS/Include/cmsis_gcc.h ****       pTable->dest[i] = 0u;
 160:Drivers/CMSIS/Include/cmsis_gcc.h ****     }
 161:Drivers/CMSIS/Include/cmsis_gcc.h ****   }
 162:Drivers/CMSIS/Include/cmsis_gcc.h ****  
 163:Drivers/CMSIS/Include/cmsis_gcc.h ****   _start();
 164:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 165:Drivers/CMSIS/Include/cmsis_gcc.h ****   
 166:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __PROGRAM_START           __cmsis_start
 167:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 168:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 169:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __INITIAL_SP
 170:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __INITIAL_SP              __StackTop
 171:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 172:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 173:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __STACK_LIMIT
 174:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __STACK_LIMIT             __StackLimit
 175:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 176:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE
 178:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE            __Vectors
 179:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 180:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __VECTOR_TABLE_ATTRIBUTE
 182:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __VECTOR_TABLE_ATTRIBUTE  __attribute((used, section(".vectors")))
 183:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 184:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 185:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 186:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 187:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 188:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 189:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 190:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 191:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 192:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 193:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 194:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 195:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 196:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 197:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 198:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 199:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 200:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 201:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 202:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 203:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 204:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 205:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 206:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 207:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 139              		.loc 2 207 27 view .LVU22
 140              	.LBB5:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 11


 208:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 209:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 141              		.loc 2 209 3 view .LVU23
 142              		.syntax unified
 143              	@ 209 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 144 0000 72B6     		cpsid i
 145              	@ 0 "" 2
 146              		.thumb
 147              		.syntax unified
 148              	.L11:
 149              	.LBE5:
 150              	.LBE4:
 225:Core/Src/main.c ****   while (1)
 151              		.loc 1 225 3 discriminator 1 view .LVU24
 226:Core/Src/main.c ****   {
 227:Core/Src/main.c ****   }
 152              		.loc 1 227 3 discriminator 1 view .LVU25
 225:Core/Src/main.c ****   while (1)
 153              		.loc 1 225 9 discriminator 1 view .LVU26
 154 0002 FEE7     		b	.L11
 155              		.cfi_endproc
 156              	.LFE151:
 158              		.section	.text.SystemClock_Config,"ax",%progbits
 159              		.align	1
 160              		.global	SystemClock_Config
 161              		.syntax unified
 162              		.thumb
 163              		.thumb_func
 165              	SystemClock_Config:
 166              	.LFB148:
 139:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 167              		.loc 1 139 1 view -0
 168              		.cfi_startproc
 169              		@ args = 0, pretend = 0, frame = 120
 170              		@ frame_needed = 0, uses_anonymous_args = 0
 171 0000 00B5     		push	{lr}
 172              		.cfi_def_cfa_offset 4
 173              		.cfi_offset 14, -4
 174 0002 9FB0     		sub	sp, sp, #124
 175              		.cfi_def_cfa_offset 128
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 176              		.loc 1 140 3 view .LVU28
 140:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 177              		.loc 1 140 22 is_stmt 0 view .LVU29
 178 0004 4C22     		movs	r2, #76
 179 0006 0021     		movs	r1, #0
 180 0008 0BA8     		add	r0, sp, #44
 181 000a FFF7FEFF 		bl	memset
 182              	.LVL10:
 141:Core/Src/main.c **** 
 183              		.loc 1 141 3 is_stmt 1 view .LVU30
 141:Core/Src/main.c **** 
 184              		.loc 1 141 22 is_stmt 0 view .LVU31
 185 000e 2022     		movs	r2, #32
 186 0010 0021     		movs	r1, #0
 187 0012 03A8     		add	r0, sp, #12
 188 0014 FFF7FEFF 		bl	memset
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 12


 189              	.LVL11:
 145:Core/Src/main.c **** 
 190              		.loc 1 145 3 is_stmt 1 view .LVU32
 191 0018 0220     		movs	r0, #2
 192 001a FFF7FEFF 		bl	HAL_PWREx_ConfigSupply
 193              	.LVL12:
 149:Core/Src/main.c **** 
 194              		.loc 1 149 3 view .LVU33
 195              	.LBB6:
 149:Core/Src/main.c **** 
 196              		.loc 1 149 3 view .LVU34
 197 001e 0023     		movs	r3, #0
 198 0020 0093     		str	r3, [sp]
 149:Core/Src/main.c **** 
 199              		.loc 1 149 3 view .LVU35
 149:Core/Src/main.c **** 
 200              		.loc 1 149 3 view .LVU36
 201 0022 394B     		ldr	r3, .L20
 202 0024 DA6A     		ldr	r2, [r3, #44]
 203 0026 22F00102 		bic	r2, r2, #1
 204 002a DA62     		str	r2, [r3, #44]
 149:Core/Src/main.c **** 
 205              		.loc 1 149 3 view .LVU37
 206 002c DB6A     		ldr	r3, [r3, #44]
 207 002e 03F00103 		and	r3, r3, #1
 208 0032 0093     		str	r3, [sp]
 149:Core/Src/main.c **** 
 209              		.loc 1 149 3 view .LVU38
 210 0034 354B     		ldr	r3, .L20+4
 211 0036 9A69     		ldr	r2, [r3, #24]
 212 0038 42F44042 		orr	r2, r2, #49152
 213 003c 9A61     		str	r2, [r3, #24]
 149:Core/Src/main.c **** 
 214              		.loc 1 149 3 view .LVU39
 215 003e 9B69     		ldr	r3, [r3, #24]
 216 0040 03F44043 		and	r3, r3, #49152
 217 0044 0093     		str	r3, [sp]
 149:Core/Src/main.c **** 
 218              		.loc 1 149 3 view .LVU40
 219 0046 009B     		ldr	r3, [sp]
 220              	.LBE6:
 149:Core/Src/main.c **** 
 221              		.loc 1 149 3 view .LVU41
 151:Core/Src/main.c ****   {
 222              		.loc 1 151 3 view .LVU42
 223              	.L13:
 153:Core/Src/main.c **** 
 224              		.loc 1 153 3 discriminator 1 view .LVU43
 151:Core/Src/main.c ****   {
 225              		.loc 1 151 9 discriminator 1 view .LVU44
 151:Core/Src/main.c ****   {
 226              		.loc 1 151 11 is_stmt 0 discriminator 1 view .LVU45
 227 0048 304B     		ldr	r3, .L20+4
 228 004a 9B69     		ldr	r3, [r3, #24]
 151:Core/Src/main.c ****   {
 229              		.loc 1 151 9 discriminator 1 view .LVU46
 230 004c 13F4005F 		tst	r3, #8192
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 13


 231 0050 FAD0     		beq	.L13
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 232              		.loc 1 155 3 is_stmt 1 view .LVU47
 233              	.LBB7:
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 234              		.loc 1 155 3 view .LVU48
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 235              		.loc 1 155 3 view .LVU49
 236 0052 2F4B     		ldr	r3, .L20+8
 237 0054 D3F8F420 		ldr	r2, [r3, #244]
 238 0058 42F00202 		orr	r2, r2, #2
 239 005c C3F8F420 		str	r2, [r3, #244]
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 240              		.loc 1 155 3 view .LVU50
 241 0060 D3F8F430 		ldr	r3, [r3, #244]
 242 0064 03F00203 		and	r3, r3, #2
 243 0068 0193     		str	r3, [sp, #4]
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 244              		.loc 1 155 3 view .LVU51
 245 006a 019B     		ldr	r3, [sp, #4]
 246              	.LBE7:
 155:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE0);
 247              		.loc 1 155 3 view .LVU52
 156:Core/Src/main.c **** 
 248              		.loc 1 156 3 view .LVU53
 249              	.LBB8:
 156:Core/Src/main.c **** 
 250              		.loc 1 156 3 view .LVU54
 251 006c 0023     		movs	r3, #0
 252 006e 0293     		str	r3, [sp, #8]
 156:Core/Src/main.c **** 
 253              		.loc 1 156 3 view .LVU55
 156:Core/Src/main.c **** 
 254              		.loc 1 156 3 view .LVU56
 255 0070 264B     		ldr	r3, .L20+4
 256 0072 9A69     		ldr	r2, [r3, #24]
 257 0074 42F44042 		orr	r2, r2, #49152
 258 0078 9A61     		str	r2, [r3, #24]
 156:Core/Src/main.c **** 
 259              		.loc 1 156 3 view .LVU57
 260 007a 9B69     		ldr	r3, [r3, #24]
 261 007c 03F44043 		and	r3, r3, #49152
 262 0080 0293     		str	r3, [sp, #8]
 156:Core/Src/main.c **** 
 263              		.loc 1 156 3 view .LVU58
 264 0082 214B     		ldr	r3, .L20
 265 0084 DA6A     		ldr	r2, [r3, #44]
 266 0086 42F00102 		orr	r2, r2, #1
 267 008a DA62     		str	r2, [r3, #44]
 156:Core/Src/main.c **** 
 268              		.loc 1 156 3 view .LVU59
 269 008c DB6A     		ldr	r3, [r3, #44]
 270 008e 03F00103 		and	r3, r3, #1
 271 0092 0293     		str	r3, [sp, #8]
 156:Core/Src/main.c **** 
 272              		.loc 1 156 3 view .LVU60
 273 0094 029B     		ldr	r3, [sp, #8]
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 14


 274              	.LBE8:
 156:Core/Src/main.c **** 
 275              		.loc 1 156 3 view .LVU61
 158:Core/Src/main.c ****   {
 276              		.loc 1 158 3 view .LVU62
 277              	.L14:
 160:Core/Src/main.c **** 
 278              		.loc 1 160 3 discriminator 1 view .LVU63
 158:Core/Src/main.c ****   {
 279              		.loc 1 158 9 discriminator 1 view .LVU64
 158:Core/Src/main.c ****   {
 280              		.loc 1 158 11 is_stmt 0 discriminator 1 view .LVU65
 281 0096 1D4B     		ldr	r3, .L20+4
 282 0098 9B69     		ldr	r3, [r3, #24]
 158:Core/Src/main.c ****   {
 283              		.loc 1 158 9 discriminator 1 view .LVU66
 284 009a 13F4005F 		tst	r3, #8192
 285 009e FAD0     		beq	.L14
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 286              		.loc 1 165 3 is_stmt 1 view .LVU67
 165:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 287              		.loc 1 165 36 is_stmt 0 view .LVU68
 288 00a0 0123     		movs	r3, #1
 289 00a2 0B93     		str	r3, [sp, #44]
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 290              		.loc 1 166 3 is_stmt 1 view .LVU69
 166:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 291              		.loc 1 166 30 is_stmt 0 view .LVU70
 292 00a4 4FF48033 		mov	r3, #65536
 293 00a8 0C93     		str	r3, [sp, #48]
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 294              		.loc 1 167 3 is_stmt 1 view .LVU71
 167:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 295              		.loc 1 167 34 is_stmt 0 view .LVU72
 296 00aa 0223     		movs	r3, #2
 297 00ac 1493     		str	r3, [sp, #80]
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 298              		.loc 1 168 3 is_stmt 1 view .LVU73
 168:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 5;
 299              		.loc 1 168 35 is_stmt 0 view .LVU74
 300 00ae 1593     		str	r3, [sp, #84]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 301              		.loc 1 169 3 is_stmt 1 view .LVU75
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 302              		.loc 1 169 30 is_stmt 0 view .LVU76
 303 00b0 0522     		movs	r2, #5
 304 00b2 1692     		str	r2, [sp, #88]
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 305              		.loc 1 170 3 is_stmt 1 view .LVU77
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = 2;
 306              		.loc 1 170 30 is_stmt 0 view .LVU78
 307 00b4 C021     		movs	r1, #192
 308 00b6 1791     		str	r1, [sp, #92]
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 309              		.loc 1 171 3 is_stmt 1 view .LVU79
 171:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 5;
 310              		.loc 1 171 30 is_stmt 0 view .LVU80
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 15


 311 00b8 1893     		str	r3, [sp, #96]
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 312              		.loc 1 172 3 is_stmt 1 view .LVU81
 172:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLR = 2;
 313              		.loc 1 172 30 is_stmt 0 view .LVU82
 314 00ba 1992     		str	r2, [sp, #100]
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 315              		.loc 1 173 3 is_stmt 1 view .LVU83
 173:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLRGE = RCC_PLL1VCIRANGE_2;
 316              		.loc 1 173 30 is_stmt 0 view .LVU84
 317 00bc 1A93     		str	r3, [sp, #104]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 318              		.loc 1 174 3 is_stmt 1 view .LVU85
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLVCOSEL = RCC_PLL1VCOWIDE;
 319              		.loc 1 174 32 is_stmt 0 view .LVU86
 320 00be 0823     		movs	r3, #8
 321 00c0 1B93     		str	r3, [sp, #108]
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 322              		.loc 1 175 3 is_stmt 1 view .LVU87
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLFRACN = 0;
 323              		.loc 1 175 35 is_stmt 0 view .LVU88
 324 00c2 0023     		movs	r3, #0
 325 00c4 1C93     		str	r3, [sp, #112]
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 326              		.loc 1 176 3 is_stmt 1 view .LVU89
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 327              		.loc 1 176 34 is_stmt 0 view .LVU90
 328 00c6 1D93     		str	r3, [sp, #116]
 177:Core/Src/main.c ****   {
 329              		.loc 1 177 3 is_stmt 1 view .LVU91
 177:Core/Src/main.c ****   {
 330              		.loc 1 177 7 is_stmt 0 view .LVU92
 331 00c8 0BA8     		add	r0, sp, #44
 332 00ca FFF7FEFF 		bl	HAL_RCC_OscConfig
 333              	.LVL13:
 177:Core/Src/main.c ****   {
 334              		.loc 1 177 6 view .LVU93
 335 00ce B0B9     		cbnz	r0, .L18
 184:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 336              		.loc 1 184 3 is_stmt 1 view .LVU94
 184:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 337              		.loc 1 184 31 is_stmt 0 view .LVU95
 338 00d0 3F23     		movs	r3, #63
 339 00d2 0393     		str	r3, [sp, #12]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 340              		.loc 1 185 3 is_stmt 1 view .LVU96
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKDivider = RCC_SYSCLK_DIV1;
 341              		.loc 1 185 34 is_stmt 0 view .LVU97
 342 00d4 0323     		movs	r3, #3
 343 00d6 0493     		str	r3, [sp, #16]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 344              		.loc 1 186 3 is_stmt 1 view .LVU98
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_HCLK_DIV2;
 345              		.loc 1 186 35 is_stmt 0 view .LVU99
 346 00d8 0023     		movs	r3, #0
 347 00da 0593     		str	r3, [sp, #20]
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 16


 348              		.loc 1 187 3 is_stmt 1 view .LVU100
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB3CLKDivider = RCC_APB3_DIV2;
 349              		.loc 1 187 35 is_stmt 0 view .LVU101
 350 00dc 0823     		movs	r3, #8
 351 00de 0693     		str	r3, [sp, #24]
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 352              		.loc 1 188 3 is_stmt 1 view .LVU102
 188:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_APB1_DIV2;
 353              		.loc 1 188 36 is_stmt 0 view .LVU103
 354 00e0 4023     		movs	r3, #64
 355 00e2 0793     		str	r3, [sp, #28]
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 356              		.loc 1 189 3 is_stmt 1 view .LVU104
 189:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_APB2_DIV2;
 357              		.loc 1 189 36 is_stmt 0 view .LVU105
 358 00e4 0893     		str	r3, [sp, #32]
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 359              		.loc 1 190 3 is_stmt 1 view .LVU106
 190:Core/Src/main.c ****   RCC_ClkInitStruct.APB4CLKDivider = RCC_APB4_DIV2;
 360              		.loc 1 190 36 is_stmt 0 view .LVU107
 361 00e6 4FF48062 		mov	r2, #1024
 362 00ea 0992     		str	r2, [sp, #36]
 191:Core/Src/main.c **** 
 363              		.loc 1 191 3 is_stmt 1 view .LVU108
 191:Core/Src/main.c **** 
 364              		.loc 1 191 36 is_stmt 0 view .LVU109
 365 00ec 0A93     		str	r3, [sp, #40]
 193:Core/Src/main.c ****   {
 366              		.loc 1 193 3 is_stmt 1 view .LVU110
 193:Core/Src/main.c ****   {
 367              		.loc 1 193 7 is_stmt 0 view .LVU111
 368 00ee 0421     		movs	r1, #4
 369 00f0 03A8     		add	r0, sp, #12
 370 00f2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 371              	.LVL14:
 193:Core/Src/main.c ****   {
 372              		.loc 1 193 6 view .LVU112
 373 00f6 20B9     		cbnz	r0, .L19
 197:Core/Src/main.c **** 
 374              		.loc 1 197 1 view .LVU113
 375 00f8 1FB0     		add	sp, sp, #124
 376              		.cfi_remember_state
 377              		.cfi_def_cfa_offset 4
 378              		@ sp needed
 379 00fa 5DF804FB 		ldr	pc, [sp], #4
 380              	.L18:
 381              		.cfi_restore_state
 179:Core/Src/main.c ****   }
 382              		.loc 1 179 5 is_stmt 1 view .LVU114
 383 00fe FFF7FEFF 		bl	Error_Handler
 384              	.LVL15:
 385              	.L19:
 195:Core/Src/main.c ****   }
 386              		.loc 1 195 5 view .LVU115
 387 0102 FFF7FEFF 		bl	Error_Handler
 388              	.LVL16:
 389              	.L21:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 17


 390 0106 00BF     		.align	2
 391              	.L20:
 392 0108 00040058 		.word	1476396032
 393 010c 00480258 		.word	1476544512
 394 0110 00440258 		.word	1476543488
 395              		.cfi_endproc
 396              	.LFE148:
 398              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 399              		.align	2
 400              	.LC0:
 401 0000 4C434420 		.ascii	"LCD init done\000"
 401      696E6974 
 401      20646F6E 
 401      6500
 402              		.section	.text.main,"ax",%progbits
 403              		.align	1
 404              		.global	main
 405              		.syntax unified
 406              		.thumb
 407              		.thumb_func
 409              	main:
 410              	.LFB147:
  67:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 411              		.loc 1 67 1 view -0
 412              		.cfi_startproc
 413              		@ Volatile: function does not return.
 414              		@ args = 0, pretend = 0, frame = 0
 415              		@ frame_needed = 0, uses_anonymous_args = 0
 416 0000 08B5     		push	{r3, lr}
 417              		.cfi_def_cfa_offset 8
 418              		.cfi_offset 3, -8
 419              		.cfi_offset 14, -4
  75:Core/Src/main.c **** 
 420              		.loc 1 75 3 view .LVU117
 421 0002 FFF7FEFF 		bl	HAL_Init
 422              	.LVL17:
  82:Core/Src/main.c **** 
 423              		.loc 1 82 3 view .LVU118
 424 0006 FFF7FEFF 		bl	SystemClock_Config
 425              	.LVL18:
  89:Core/Src/main.c ****   MX_USART1_UART_Init();
 426              		.loc 1 89 3 view .LVU119
 427 000a FFF7FEFF 		bl	MX_GPIO_Init
 428              	.LVL19:
  90:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 429              		.loc 1 90 3 view .LVU120
 430 000e FFF7FEFF 		bl	MX_USART1_UART_Init
 431              	.LVL20:
  92:Core/Src/main.c ****   KD024VGFPD094_init();
 432              		.loc 1 92 3 view .LVU121
 433 0012 0122     		movs	r2, #1
 434 0014 1021     		movs	r1, #16
 435 0016 1D48     		ldr	r0, .L25
 436 0018 FFF7FEFF 		bl	HAL_GPIO_WritePin
 437              	.LVL21:
  93:Core/Src/main.c ****   HAL_Delay(100);
 438              		.loc 1 93 3 view .LVU122
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 18


 439 001c FFF7FEFF 		bl	KD024VGFPD094_init
 440              	.LVL22:
  94:Core/Src/main.c ****   write_command(0xff);
 441              		.loc 1 94 3 view .LVU123
 442 0020 6420     		movs	r0, #100
 443 0022 FFF7FEFF 		bl	HAL_Delay
 444              	.LVL23:
  95:Core/Src/main.c ****   write_data(0x77);
 445              		.loc 1 95 3 view .LVU124
 446 0026 FF20     		movs	r0, #255
 447 0028 FFF7FEFF 		bl	write_command
 448              	.LVL24:
  96:Core/Src/main.c ****   write_data(0x01);
 449              		.loc 1 96 3 view .LVU125
 450 002c 7720     		movs	r0, #119
 451 002e FFF7FEFF 		bl	write_data
 452              	.LVL25:
  97:Core/Src/main.c ****   write_data(0x00);
 453              		.loc 1 97 3 view .LVU126
 454 0032 0120     		movs	r0, #1
 455 0034 FFF7FEFF 		bl	write_data
 456              	.LVL26:
  98:Core/Src/main.c ****   write_data(0x00);
 457              		.loc 1 98 3 view .LVU127
 458 0038 0020     		movs	r0, #0
 459 003a FFF7FEFF 		bl	write_data
 460              	.LVL27:
  99:Core/Src/main.c ****   write_data(0x12);
 461              		.loc 1 99 3 view .LVU128
 462 003e 0020     		movs	r0, #0
 463 0040 FFF7FEFF 		bl	write_data
 464              	.LVL28:
 100:Core/Src/main.c ****   write_command(0xD1);
 465              		.loc 1 100 3 view .LVU129
 466 0044 1220     		movs	r0, #18
 467 0046 FFF7FEFF 		bl	write_data
 468              	.LVL29:
 101:Core/Src/main.c ****   write_data(0x81);
 469              		.loc 1 101 3 view .LVU130
 470 004a D120     		movs	r0, #209
 471 004c FFF7FEFF 		bl	write_command
 472              	.LVL30:
 102:Core/Src/main.c ****   write_command(0xD2);
 473              		.loc 1 102 3 view .LVU131
 474 0050 8120     		movs	r0, #129
 475 0052 FFF7FEFF 		bl	write_data
 476              	.LVL31:
 103:Core/Src/main.c ****   write_data(0x08);
 477              		.loc 1 103 3 view .LVU132
 478 0056 D220     		movs	r0, #210
 479 0058 FFF7FEFF 		bl	write_command
 480              	.LVL32:
 104:Core/Src/main.c ****   printf("LCD init done\n");
 481              		.loc 1 104 3 view .LVU133
 482 005c 0820     		movs	r0, #8
 483 005e FFF7FEFF 		bl	write_data
 484              	.LVL33:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 19


 105:Core/Src/main.c ****   // SSD_SEND(6, 0XFF, 0X77, 0X01, 0X00, 0X00, 0X12); // Â®â„Ñ¶Ââ∞ÈîõÊ∞±ÓÉáÔøΩ?????Ê∂ìÓÅÑÂº¨ÈèÅÊãåÔ
 485              		.loc 1 105 3 view .LVU134
 486 0062 0B48     		ldr	r0, .L25+4
 487 0064 FFF7FEFF 		bl	puts
 488              	.LVL34:
 489              	.L23:
 117:Core/Src/main.c ****   {
 490              		.loc 1 117 3 discriminator 1 view .LVU135
 121:Core/Src/main.c ****     delay_us(42); // 42 usÔºàÊ†πÊçÆÈúÄË¶ÅËøõË°åË∞ÉÊï¥Ôºâ
 491              		.loc 1 121 5 discriminator 1 view .LVU136
 492 0068 0A4C     		ldr	r4, .L25+8
 493 006a 0122     		movs	r2, #1
 494 006c 8021     		movs	r1, #128
 495 006e 2046     		mov	r0, r4
 496 0070 FFF7FEFF 		bl	HAL_GPIO_WritePin
 497              	.LVL35:
 122:Core/Src/main.c **** 
 498              		.loc 1 122 5 discriminator 1 view .LVU137
 499 0074 2A20     		movs	r0, #42
 500 0076 FFF7FEFF 		bl	delay_us
 501              	.LVL36:
 125:Core/Src/main.c ****     delay_us(42); // 42 usÔºàÊ†πÊçÆÈúÄË¶ÅËøõË°åË∞ÉÊï¥Ôºâ
 502              		.loc 1 125 5 discriminator 1 view .LVU138
 503 007a 0022     		movs	r2, #0
 504 007c 8021     		movs	r1, #128
 505 007e 2046     		mov	r0, r4
 506 0080 FFF7FEFF 		bl	HAL_GPIO_WritePin
 507              	.LVL37:
 126:Core/Src/main.c ****     /* USER CODE END WHILE */
 508              		.loc 1 126 5 discriminator 1 view .LVU139
 509 0084 2A20     		movs	r0, #42
 510 0086 FFF7FEFF 		bl	delay_us
 511              	.LVL38:
 117:Core/Src/main.c ****   {
 512              		.loc 1 117 9 discriminator 1 view .LVU140
 513 008a EDE7     		b	.L23
 514              	.L26:
 515              		.align	2
 516              	.L25:
 517 008c 00000258 		.word	1476526080
 518 0090 00000000 		.word	.LC0
 519 0094 00180258 		.word	1476532224
 520              		.cfi_endproc
 521              	.LFE147:
 523              		.global	receivedData
 524              		.global	command
 525              		.section	.bss.receivedData,"aw",%nobits
 528              	receivedData:
 529 0000 00       		.space	1
 530              		.section	.data.command,"aw"
 533              	command:
 534 0000 A1       		.byte	-95
 535              		.text
 536              	.Letext0:
 537              		.file 3 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 538              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 539              		.file 5 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h743xx.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 20


 540              		.file 6 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/stm32h7xx.h"
 541              		.file 7 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_def.h"
 542              		.file 8 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_rcc.h"
 543              		.file 9 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_gpio.h"
 544              		.file 10 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_dma.h"
 545              		.file 11 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_uart.h"
 546              		.file 12 "Drivers/CMSIS/Device/ST/STM32H7xx/Include/system_stm32h7xx.h"
 547              		.file 13 "Core/Inc/usart.h"
 548              		.file 14 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal_pwr_ex.h"
 549              		.file 15 "Drivers/STM32H7xx_HAL_Driver/Inc/stm32h7xx_hal.h"
 550              		.file 16 "Core/Inc/gpio.h"
 551              		.file 17 "Core/Inc/KD024VGFPD094.h"
 552              		.file 18 "<built-in>"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s 			page 21


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:19     .text._write:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:25     .text._write:00000000 _write
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:58     .text._write:00000014 $d
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:63     .text.delay_us:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:69     .text.delay_us:00000000 delay_us
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:115    .text.delay_us:00000020 $d
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:121    .text.Error_Handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:127    .text.Error_Handler:00000000 Error_Handler
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:159    .text.SystemClock_Config:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:165    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:392    .text.SystemClock_Config:00000108 $d
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:399    .rodata.main.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:403    .text.main:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:409    .text.main:00000000 main
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:517    .text.main:0000008c $d
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:528    .bss.receivedData:00000000 receivedData
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:533    .data.command:00000000 command
C:\Users\OSD\AppData\Local\Temp\ccFLGzPp.s:529    .bss.receivedData:00000000 $d

UNDEFINED SYMBOLS
HAL_UART_Transmit
huart1
SystemCoreClock
memset
HAL_PWREx_ConfigSupply
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
MX_GPIO_Init
MX_USART1_UART_Init
HAL_GPIO_WritePin
KD024VGFPD094_init
HAL_Delay
write_command
write_data
puts
