ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_menu_5.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.switch_handler,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	switch_handler:
  25              	.LVL0:
  26              	.LFB206:
  27              		.file 1 "lvgl/examples/widgets/menu/lv_example_menu_5.c"
   1:lvgl/examples/widgets/menu/lv_example_menu_5.c **** #include "../../lv_examples.h"
   2:lvgl/examples/widgets/menu/lv_example_menu_5.c **** #if LV_USE_MENU && LV_USE_MSGBOX && LV_BUILD_EXAMPLES
   3:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
   4:lvgl/examples/widgets/menu/lv_example_menu_5.c **** enum {
   5:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     LV_MENU_ITEM_BUILDER_VARIANT_1,
   6:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     LV_MENU_ITEM_BUILDER_VARIANT_2
   7:lvgl/examples/widgets/menu/lv_example_menu_5.c **** };
   8:lvgl/examples/widgets/menu/lv_example_menu_5.c **** typedef uint8_t lv_menu_builder_variant_t;
   9:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  10:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static void back_event_handler(lv_event_t * e);
  11:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static void switch_handler(lv_event_t * e);
  12:lvgl/examples/widgets/menu/lv_example_menu_5.c **** lv_obj_t * root_page;
  13:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_text(lv_obj_t * parent, const char * icon, const char * txt,
  14:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                               lv_menu_builder_variant_t builder_variant);
  15:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_slider(lv_obj_t * parent,
  16:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                                 const char * icon, const char * txt, int32_t min, int32_t max, int3
  17:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_switch(lv_obj_t * parent,
  18:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                                 const char * icon, const char * txt, bool chk);
  19:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  20:lvgl/examples/widgets/menu/lv_example_menu_5.c **** void lv_example_menu_5(void)
  21:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
  22:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_menu_create(lv_scr_act());
  23:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  24:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_color_t bg_color = lv_obj_get_style_bg_color(menu, 0);
  25:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(lv_color_brightness(bg_color) > 127) {
  26:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_set_style_bg_color(menu, lv_color_darken(lv_obj_get_style_bg_color(menu, 0), 10), 0)
  27:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
  28:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     else {
  29:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_set_style_bg_color(menu, lv_color_darken(lv_obj_get_style_bg_color(menu, 0), 50), 0)
  30:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
  31:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_mode_root_back_btn(menu, LV_MENU_ROOT_BACK_BTN_ENABLED);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 2


  32:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_event_cb(menu, back_event_handler, LV_EVENT_CLICKED, menu);
  33:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_size(menu, lv_disp_get_hor_res(NULL), lv_disp_get_ver_res(NULL));
  34:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_center(menu);
  35:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  36:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * cont;
  37:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * section;
  38:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  39:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     /*Create sub pages*/
  40:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_mechanics_page = lv_menu_page_create(menu, NULL);
  41:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_mechanics_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
  42:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_mechanics_page);
  43:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_mechanics_page);
  44:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Velocity", 0, 150, 120);
  45:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Acceleration", 0, 150, 50);
  46:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Weight limit", 0, 150, 80);
  47:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  48:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_sound_page = lv_menu_page_create(menu, NULL);
  49:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_sound_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
  50:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_sound_page);
  51:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_sound_page);
  52:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_switch(section, LV_SYMBOL_AUDIO, "Sound", false);
  53:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  54:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_display_page = lv_menu_page_create(menu, NULL);
  55:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_display_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(me
  56:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_display_page);
  57:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_display_page);
  58:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Brightness", 0, 150, 100);
  59:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  60:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_software_info_page = lv_menu_page_create(menu, NULL);
  61:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_software_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_hea
  62:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_software_info_page);
  63:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_text(section, NULL, "Version 1.0", LV_MENU_ITEM_BUILDER_VARIANT_1);
  64:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  65:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_legal_info_page = lv_menu_page_create(menu, NULL);
  66:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_legal_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_header
  67:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_legal_info_page);
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     for(uint32_t i = 0; i < 15; i++) {
  69:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
  70:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                     "This is a long long long long long long long long long text, if it is long eno
  71:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                     LV_MENU_ITEM_BUILDER_VARIANT_1);
  72:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
  73:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  74:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_about_page = lv_menu_page_create(menu, NULL);
  75:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_about_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
  76:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_about_page);
  77:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_about_page);
  78:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Software information", LV_MENU_ITEM_BUILDER_VARIANT_1);
  79:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_software_info_page);
  80:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Legal information", LV_MENU_ITEM_BUILDER_VARIANT_1);
  81:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_legal_info_page);
  82:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  83:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sub_menu_mode_page = lv_menu_page_create(menu, NULL);
  84:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_menu_mode_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
  85:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_menu_mode_page);
  86:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_menu_mode_page);
  87:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_switch(section, LV_SYMBOL_AUDIO, "Sidebar enable", true);
  88:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_event_cb(lv_obj_get_child(cont, 2), switch_handler, LV_EVENT_VALUE_CHANGED, menu);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 3


  89:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
  90:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     /*Create a root page*/
  91:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     root_page = lv_menu_page_create(menu, "Settings");
  92:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(root_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu), 0)
  93:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(root_page);
  94:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Mechanics", LV_MENU_ITEM_BUILDER_VARIANT_1);
  95:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_mechanics_page);
  96:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_AUDIO, "Sound", LV_MENU_ITEM_BUILDER_VARIANT_1);
  97:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_sound_page);
  98:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Display", LV_MENU_ITEM_BUILDER_VARIANT_1);
  99:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_display_page);
 100:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 101:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_text(root_page, NULL, "Others", LV_MENU_ITEM_BUILDER_VARIANT_1);
 102:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(root_page);
 103:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "About", LV_MENU_ITEM_BUILDER_VARIANT_1);
 104:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_about_page);
 105:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Menu mode", LV_MENU_ITEM_BUILDER_VARIANT_1);
 106:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_menu_mode_page);
 107:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 108:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_sidebar_page(menu, root_page);
 109:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 110:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_event_send(lv_obj_get_child(lv_obj_get_child(lv_menu_get_cur_sidebar_page(menu), 0), 0), LV_
 111:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 112:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 113:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static void back_event_handler(lv_event_t * e)
 114:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
 115:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = lv_event_get_target(e);
 116:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_event_get_user_data(e);
 117:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 118:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(lv_menu_back_btn_is_root(menu, obj)) {
 119:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_t * mbox1 = lv_msgbox_create(NULL, "Hello", "Root back btn click.", NULL, true);
 120:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_center(mbox1);
 121:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 122:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 123:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 124:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static void switch_handler(lv_event_t * e)
 125:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
  28              		.loc 1 125 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 125 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  39 0002 0446     		mov	r4, r0
 126:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_event_code_t code = lv_event_get_code(e);
  40              		.loc 1 126 5 is_stmt 1 view .LVU2
  41              		.loc 1 126 28 is_stmt 0 view .LVU3
  42 0004 FFF7FEFF 		bl	lv_event_get_code
  43              	.LVL1:
  44              		.loc 1 126 28 view .LVU4
  45 0008 0546     		mov	r5, r0
  46              	.LVL2:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 4


 127:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_event_get_user_data(e);
  47              		.loc 1 127 5 is_stmt 1 view .LVU5
  48              		.loc 1 127 23 is_stmt 0 view .LVU6
  49 000a 2046     		mov	r0, r4
  50 000c FFF7FEFF 		bl	lv_event_get_user_data
  51              	.LVL3:
  52 0010 0646     		mov	r6, r0
  53              	.LVL4:
 128:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = lv_event_get_target(e);
  54              		.loc 1 128 5 is_stmt 1 view .LVU7
  55              		.loc 1 128 22 is_stmt 0 view .LVU8
  56 0012 2046     		mov	r0, r4
  57              	.LVL5:
  58              		.loc 1 128 22 view .LVU9
  59 0014 FFF7FEFF 		bl	lv_event_get_target
  60              	.LVL6:
 129:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(code == LV_EVENT_VALUE_CHANGED) {
  61              		.loc 1 129 5 is_stmt 1 view .LVU10
  62              		.loc 1 129 7 is_stmt 0 view .LVU11
  63 0018 1C2D     		cmp	r5, #28
  64 001a 00D0     		beq	.L5
  65              	.LVL7:
  66              	.L1:
 130:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         if(lv_obj_has_state(obj, LV_STATE_CHECKED)) {
 131:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_page(menu, NULL);
 132:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_sidebar_page(menu, root_page);
 133:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_event_send(lv_obj_get_child(lv_obj_get_child(lv_menu_get_cur_sidebar_page(menu), 0),
 134:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
 135:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         else {
 136:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_sidebar_page(menu, NULL);
 137:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_clear_history(menu); /* Clear history because we will be showing the root page 
 138:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_page(menu, root_page);
 139:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
 140:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 141:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
  67              		.loc 1 141 1 view .LVU12
  68 001c 70BD     		pop	{r4, r5, r6, pc}
  69              	.LVL8:
  70              	.L5:
 130:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         if(lv_obj_has_state(obj, LV_STATE_CHECKED)) {
  71              		.loc 1 130 9 is_stmt 1 view .LVU13
 130:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         if(lv_obj_has_state(obj, LV_STATE_CHECKED)) {
  72              		.loc 1 130 12 is_stmt 0 view .LVU14
  73 001e 0121     		movs	r1, #1
  74 0020 FFF7FEFF 		bl	lv_obj_has_state
  75              	.LVL9:
 130:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         if(lv_obj_has_state(obj, LV_STATE_CHECKED)) {
  76              		.loc 1 130 11 view .LVU15
  77 0024 B0B1     		cbz	r0, .L3
 131:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_sidebar_page(menu, root_page);
  78              		.loc 1 131 13 is_stmt 1 view .LVU16
  79 0026 0021     		movs	r1, #0
  80 0028 3046     		mov	r0, r6
  81 002a FFF7FEFF 		bl	lv_menu_set_page
  82              	.LVL10:
 132:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_event_send(lv_obj_get_child(lv_obj_get_child(lv_menu_get_cur_sidebar_page(menu), 0),
  83              		.loc 1 132 13 view .LVU17
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 5


  84 002e 104B     		ldr	r3, .L6
  85 0030 1968     		ldr	r1, [r3]
  86 0032 3046     		mov	r0, r6
  87 0034 FFF7FEFF 		bl	lv_menu_set_sidebar_page
  88              	.LVL11:
 133:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
  89              		.loc 1 133 13 view .LVU18
 133:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
  90              		.loc 1 133 61 is_stmt 0 view .LVU19
  91 0038 3046     		mov	r0, r6
  92 003a FFF7FEFF 		bl	lv_menu_get_cur_sidebar_page
  93              	.LVL12:
 133:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
  94              		.loc 1 133 44 view .LVU20
  95 003e 0021     		movs	r1, #0
  96 0040 FFF7FEFF 		bl	lv_obj_get_child
  97              	.LVL13:
 133:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
  98              		.loc 1 133 13 view .LVU21
  99 0044 0021     		movs	r1, #0
 100 0046 FFF7FEFF 		bl	lv_obj_get_child
 101              	.LVL14:
 102 004a 0022     		movs	r2, #0
 103 004c 0721     		movs	r1, #7
 104 004e FFF7FEFF 		bl	lv_event_send
 105              	.LVL15:
 106 0052 E3E7     		b	.L1
 107              	.L3:
 136:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_clear_history(menu); /* Clear history because we will be showing the root page 
 108              		.loc 1 136 13 is_stmt 1 view .LVU22
 109 0054 0021     		movs	r1, #0
 110 0056 3046     		mov	r0, r6
 111 0058 FFF7FEFF 		bl	lv_menu_set_sidebar_page
 112              	.LVL16:
 137:lvgl/examples/widgets/menu/lv_example_menu_5.c ****             lv_menu_set_page(menu, root_page);
 113              		.loc 1 137 13 view .LVU23
 114 005c 3046     		mov	r0, r6
 115 005e FFF7FEFF 		bl	lv_menu_clear_history
 116              	.LVL17:
 138:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         }
 117              		.loc 1 138 13 view .LVU24
 118 0062 034B     		ldr	r3, .L6
 119 0064 1968     		ldr	r1, [r3]
 120 0066 3046     		mov	r0, r6
 121 0068 FFF7FEFF 		bl	lv_menu_set_page
 122              	.LVL18:
 123              		.loc 1 141 1 is_stmt 0 view .LVU25
 124 006c D6E7     		b	.L1
 125              	.L7:
 126 006e 00BF     		.align	2
 127              	.L6:
 128 0070 00000000 		.word	.LANCHOR0
 129              		.cfi_endproc
 130              	.LFE206:
 132              		.section	.rodata.back_event_handler.str1.4,"aMS",%progbits,1
 133              		.align	2
 134              	.LC0:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 6


 135 0000 526F6F74 		.ascii	"Root back btn click.\000"
 135      20626163 
 135      6B206274 
 135      6E20636C 
 135      69636B2E 
 136 0015 000000   		.align	2
 137              	.LC1:
 138 0018 48656C6C 		.ascii	"Hello\000"
 138      6F00
 139              		.section	.text.back_event_handler,"ax",%progbits
 140              		.align	1
 141              		.syntax unified
 142              		.thumb
 143              		.thumb_func
 145              	back_event_handler:
 146              	.LVL19:
 147              	.LFB205:
 114:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = lv_event_get_target(e);
 148              		.loc 1 114 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 114:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = lv_event_get_target(e);
 152              		.loc 1 114 1 is_stmt 0 view .LVU27
 153 0000 30B5     		push	{r4, r5, lr}
 154              		.cfi_def_cfa_offset 12
 155              		.cfi_offset 4, -12
 156              		.cfi_offset 5, -8
 157              		.cfi_offset 14, -4
 158 0002 83B0     		sub	sp, sp, #12
 159              		.cfi_def_cfa_offset 24
 160 0004 0546     		mov	r5, r0
 115:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_event_get_user_data(e);
 161              		.loc 1 115 5 is_stmt 1 view .LVU28
 115:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_event_get_user_data(e);
 162              		.loc 1 115 22 is_stmt 0 view .LVU29
 163 0006 FFF7FEFF 		bl	lv_event_get_target
 164              	.LVL20:
 115:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_event_get_user_data(e);
 165              		.loc 1 115 22 view .LVU30
 166 000a 0446     		mov	r4, r0
 167              	.LVL21:
 116:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 168              		.loc 1 116 5 is_stmt 1 view .LVU31
 116:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 169              		.loc 1 116 23 is_stmt 0 view .LVU32
 170 000c 2846     		mov	r0, r5
 171              	.LVL22:
 116:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 172              		.loc 1 116 23 view .LVU33
 173 000e FFF7FEFF 		bl	lv_event_get_user_data
 174              	.LVL23:
 118:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_t * mbox1 = lv_msgbox_create(NULL, "Hello", "Root back btn click.", NULL, true);
 175              		.loc 1 118 5 is_stmt 1 view .LVU34
 118:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_t * mbox1 = lv_msgbox_create(NULL, "Hello", "Root back btn click.", NULL, true);
 176              		.loc 1 118 8 is_stmt 0 view .LVU35
 177 0012 2146     		mov	r1, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 7


 178 0014 FFF7FEFF 		bl	lv_menu_back_btn_is_root
 179              	.LVL24:
 118:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_t * mbox1 = lv_msgbox_create(NULL, "Hello", "Root back btn click.", NULL, true);
 180              		.loc 1 118 7 view .LVU36
 181 0018 08B9     		cbnz	r0, .L11
 182              	.L8:
 122:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 183              		.loc 1 122 1 view .LVU37
 184 001a 03B0     		add	sp, sp, #12
 185              		.cfi_remember_state
 186              		.cfi_def_cfa_offset 12
 187              		@ sp needed
 188 001c 30BD     		pop	{r4, r5, pc}
 189              	.LVL25:
 190              	.L11:
 191              		.cfi_restore_state
 192              	.LBB40:
 119:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_center(mbox1);
 193              		.loc 1 119 9 is_stmt 1 view .LVU38
 119:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_center(mbox1);
 194              		.loc 1 119 28 is_stmt 0 view .LVU39
 195 001e 0123     		movs	r3, #1
 196 0020 0093     		str	r3, [sp]
 197 0022 0023     		movs	r3, #0
 198 0024 054A     		ldr	r2, .L12
 199 0026 0649     		ldr	r1, .L12+4
 200 0028 1846     		mov	r0, r3
 201 002a FFF7FEFF 		bl	lv_msgbox_create
 202              	.LVL26:
 120:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 203              		.loc 1 120 9 is_stmt 1 view .LVU40
 204              	.LBB41:
 205              	.LBI41:
 206              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      TYPEDEFS
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 8


  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 9


  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 10


 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param cb        the layout update callback
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 11


 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 207              		.loc 2 199 20 view .LVU41
 208              	.LBB42:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 209              		.loc 2 201 5 view .LVU42
 210 002e 0023     		movs	r3, #0
 211 0030 1A46     		mov	r2, r3
 212 0032 0921     		movs	r1, #9
 213 0034 FFF7FEFF 		bl	lv_obj_align
 214              	.LVL27:
 215              		.loc 2 201 5 is_stmt 0 view .LVU43
 216              	.LBE42:
 217              	.LBE41:
 218              	.LBE40:
 122:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 219              		.loc 1 122 1 view .LVU44
 220 0038 EFE7     		b	.L8
 221              	.L13:
 222 003a 00BF     		.align	2
 223              	.L12:
 224 003c 00000000 		.word	.LC0
 225 0040 18000000 		.word	.LC1
 226              		.cfi_endproc
 227              	.LFE205:
 229              		.section	.text.create_text,"ax",%progbits
 230              		.align	1
 231              		.syntax unified
 232              		.thumb
 233              		.thumb_func
 235              	create_text:
 236              	.LVL28:
 237              	.LFB207:
 142:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 143:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_text(lv_obj_t * parent, const char * icon, const char * txt,
 144:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                               lv_menu_builder_variant_t builder_variant)
 145:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
 238              		.loc 1 145 1 is_stmt 1 view -0
 239              		.cfi_startproc
 240              		@ args = 0, pretend = 0, frame = 0
 241              		@ frame_needed = 0, uses_anonymous_args = 0
 242              		.loc 1 145 1 is_stmt 0 view .LVU46
 243 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 244              		.cfi_def_cfa_offset 32
 245              		.cfi_offset 3, -32
 246              		.cfi_offset 4, -28
 247              		.cfi_offset 5, -24
 248              		.cfi_offset 6, -20
 249              		.cfi_offset 7, -16
 250              		.cfi_offset 8, -12
 251              		.cfi_offset 9, -8
 252              		.cfi_offset 14, -4
 253 0004 0D46     		mov	r5, r1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 12


 254 0006 1646     		mov	r6, r2
 255 0008 1C46     		mov	r4, r3
 146:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = lv_menu_cont_create(parent);
 256              		.loc 1 146 5 is_stmt 1 view .LVU47
 257              		.loc 1 146 22 is_stmt 0 view .LVU48
 258 000a FFF7FEFF 		bl	lv_menu_cont_create
 259              	.LVL29:
 260              		.loc 1 146 22 view .LVU49
 261 000e 0746     		mov	r7, r0
 262              	.LVL30:
 147:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 148:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * img = NULL;
 263              		.loc 1 148 5 is_stmt 1 view .LVU50
 149:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * label = NULL;
 264              		.loc 1 149 5 view .LVU51
 150:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 151:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(icon) {
 265              		.loc 1 151 5 view .LVU52
 266              		.loc 1 151 7 is_stmt 0 view .LVU53
 267 0010 55B3     		cbz	r5, .L18
 152:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         img = lv_img_create(obj);
 268              		.loc 1 152 9 is_stmt 1 view .LVU54
 269              		.loc 1 152 15 is_stmt 0 view .LVU55
 270 0012 FFF7FEFF 		bl	lv_img_create
 271              	.LVL31:
 272              		.loc 1 152 15 view .LVU56
 273 0016 8146     		mov	r9, r0
 274              	.LVL32:
 153:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_img_set_src(img, icon);
 275              		.loc 1 153 9 is_stmt 1 view .LVU57
 276 0018 2946     		mov	r1, r5
 277 001a FFF7FEFF 		bl	lv_img_set_src
 278              	.LVL33:
 279              	.L15:
 154:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 155:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 156:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(txt) {
 280              		.loc 1 156 5 view .LVU58
 281              		.loc 1 156 7 is_stmt 0 view .LVU59
 282 001e 2EB3     		cbz	r6, .L19
 157:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         label = lv_label_create(obj);
 283              		.loc 1 157 9 is_stmt 1 view .LVU60
 284              		.loc 1 157 17 is_stmt 0 view .LVU61
 285 0020 3846     		mov	r0, r7
 286 0022 FFF7FEFF 		bl	lv_label_create
 287              	.LVL34:
 288 0026 8046     		mov	r8, r0
 289              	.LVL35:
 158:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_label_set_text(label, txt);
 290              		.loc 1 158 9 is_stmt 1 view .LVU62
 291 0028 3146     		mov	r1, r6
 292 002a FFF7FEFF 		bl	lv_label_set_text
 293              	.LVL36:
 159:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_label_set_long_mode(label, LV_LABEL_LONG_SCROLL_CIRCULAR);
 294              		.loc 1 159 9 view .LVU63
 295 002e 0321     		movs	r1, #3
 296 0030 4046     		mov	r0, r8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 13


 297 0032 FFF7FEFF 		bl	lv_label_set_long_mode
 298              	.LVL37:
 160:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_set_flex_grow(label, 1);
 299              		.loc 1 160 9 view .LVU64
 300 0036 0121     		movs	r1, #1
 301 0038 4046     		mov	r0, r8
 302 003a FFF7FEFF 		bl	lv_obj_set_flex_grow
 303              	.LVL38:
 304              	.L16:
 161:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 162:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 163:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(builder_variant == LV_MENU_ITEM_BUILDER_VARIANT_2 && icon && txt) {
 305              		.loc 1 163 5 view .LVU65
 306              		.loc 1 163 58 is_stmt 0 view .LVU66
 307 003e 012C     		cmp	r4, #1
 308 0040 14BF     		ite	ne
 309 0042 0024     		movne	r4, #0
 310 0044 0124     		moveq	r4, #1
 311 0046 002D     		cmp	r5, #0
 312 0048 08BF     		it	eq
 313 004a 0024     		moveq	r4, #0
 314              		.loc 1 163 7 view .LVU67
 315 004c 4CB1     		cbz	r4, .L14
 316              		.loc 1 163 66 discriminator 1 view .LVU68
 317 004e 46B1     		cbz	r6, .L14
 164:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_add_flag(img, LV_OBJ_FLAG_FLEX_IN_NEW_TRACK);
 318              		.loc 1 164 9 is_stmt 1 view .LVU69
 319 0050 4FF40001 		mov	r1, #8388608
 320 0054 4846     		mov	r0, r9
 321 0056 FFF7FEFF 		bl	lv_obj_add_flag
 322              	.LVL39:
 165:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_swap(img, label);
 323              		.loc 1 165 9 view .LVU70
 324 005a 4146     		mov	r1, r8
 325 005c 4846     		mov	r0, r9
 326 005e FFF7FEFF 		bl	lv_obj_swap
 327              	.LVL40:
 166:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 167:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 168:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     return obj;
 328              		.loc 1 168 5 view .LVU71
 329              	.L14:
 169:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 330              		.loc 1 169 1 is_stmt 0 view .LVU72
 331 0062 3846     		mov	r0, r7
 332 0064 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 333              	.LVL41:
 334              	.L18:
 148:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * label = NULL;
 335              		.loc 1 148 16 view .LVU73
 336 0068 A946     		mov	r9, r5
 337 006a D8E7     		b	.L15
 338              	.LVL42:
 339              	.L19:
 149:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 340              		.loc 1 149 16 view .LVU74
 341 006c B046     		mov	r8, r6
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 14


 342 006e E6E7     		b	.L16
 343              		.cfi_endproc
 344              	.LFE207:
 346              		.section	.text.create_slider,"ax",%progbits
 347              		.align	1
 348              		.syntax unified
 349              		.thumb
 350              		.thumb_func
 352              	create_slider:
 353              	.LVL43:
 354              	.LFB208:
 170:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 171:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_slider(lv_obj_t * parent, const char * icon, const char * txt, int32_t min
 172:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                                 int32_t val)
 173:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
 355              		.loc 1 173 1 is_stmt 1 view -0
 356              		.cfi_startproc
 357              		@ args = 8, pretend = 0, frame = 0
 358              		@ frame_needed = 0, uses_anonymous_args = 0
 359              		.loc 1 173 1 is_stmt 0 view .LVU76
 360 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 361              		.cfi_def_cfa_offset 24
 362              		.cfi_offset 3, -24
 363              		.cfi_offset 4, -20
 364              		.cfi_offset 5, -16
 365              		.cfi_offset 6, -12
 366              		.cfi_offset 7, -8
 367              		.cfi_offset 14, -4
 368 0002 0E46     		mov	r6, r1
 369 0004 1F46     		mov	r7, r3
 174:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = create_text(parent, icon, txt, LV_MENU_ITEM_BUILDER_VARIANT_2);
 370              		.loc 1 174 5 is_stmt 1 view .LVU77
 371              		.loc 1 174 22 is_stmt 0 view .LVU78
 372 0006 0123     		movs	r3, #1
 373              	.LVL44:
 374              		.loc 1 174 22 view .LVU79
 375 0008 FFF7FEFF 		bl	create_text
 376              	.LVL45:
 377              		.loc 1 174 22 view .LVU80
 378 000c 0546     		mov	r5, r0
 379              	.LVL46:
 175:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 176:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * slider = lv_slider_create(obj);
 380              		.loc 1 176 5 is_stmt 1 view .LVU81
 381              		.loc 1 176 25 is_stmt 0 view .LVU82
 382 000e FFF7FEFF 		bl	lv_slider_create
 383              	.LVL47:
 384              		.loc 1 176 25 view .LVU83
 385 0012 0446     		mov	r4, r0
 386              	.LVL48:
 177:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_flex_grow(slider, 1);
 387              		.loc 1 177 5 is_stmt 1 view .LVU84
 388 0014 0121     		movs	r1, #1
 389 0016 FFF7FEFF 		bl	lv_obj_set_flex_grow
 390              	.LVL49:
 178:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_slider_set_range(slider, min, max);
 391              		.loc 1 178 5 view .LVU85
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 15


 392              	.LBB43:
 393              	.LBI43:
 394              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_slider.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @file lv_slider.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #ifndef LV_SLIDER_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #define LV_SLIDER_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #if LV_USE_SLIDER != 0
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /*Testing of dependencies*/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #if LV_USE_BAR == 0
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #endif
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #include "../core/lv_obj.h"
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** #include "lv_bar.h"
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /*********************
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *      DEFINES
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *********************/
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**********************
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *      TYPEDEFS
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  **********************/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** enum {
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** };
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** typedef struct {
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_area_t left_knob_area;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_area_t right_knob_area;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** } lv_slider_t;
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 16


  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** typedef enum {
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** } lv_slider_draw_part_type_t;
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**********************
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * GLOBAL PROTOTYPES
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  **********************/
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Create a slider object
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @return          pointer to the created slider
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /*=====================
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Setter functions
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  *====================*/
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Set a new value on the slider
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param value     the new value
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** {
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_value(obj, value, anim);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** }
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Set a new value for the left knob of a slider
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to a slider object
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param value     new value
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_left_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** {
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_start_value(obj, value, anim);
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** }
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** 
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** /**
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * Set minimum and the maximum values of a bar
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param obj       pointer to the slider object
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param min       minimum value
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  * @param max       maximum value
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** static inline void lv_slider_set_range(lv_obj_t * obj, int32_t min, int32_t max)
 395              		.loc 3 106 20 view .LVU86
 396              	.LBB44:
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** {
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h ****     lv_bar_set_range(obj, min, max);
 397              		.loc 3 108 5 view .LVU87
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 17


 398 001a 069A     		ldr	r2, [sp, #24]
 399 001c 3946     		mov	r1, r7
 400 001e 2046     		mov	r0, r4
 401 0020 FFF7FEFF 		bl	lv_bar_set_range
 402              	.LVL50:
 403              		.loc 3 108 5 is_stmt 0 view .LVU88
 404              	.LBE44:
 405              	.LBE43:
 179:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_slider_set_value(slider, val, LV_ANIM_OFF);
 406              		.loc 1 179 5 is_stmt 1 view .LVU89
 407              	.LBB45:
 408              	.LBI45:
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** {
 409              		.loc 3 84 20 view .LVU90
 410              	.LBB46:
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** }
 411              		.loc 3 86 5 view .LVU91
 412 0024 0022     		movs	r2, #0
 413 0026 0799     		ldr	r1, [sp, #28]
 414 0028 2046     		mov	r0, r4
 415 002a FFF7FEFF 		bl	lv_bar_set_value
 416              	.LVL51:
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/widgets\lv_slider.h **** }
 417              		.loc 3 86 5 is_stmt 0 view .LVU92
 418              	.LBE46:
 419              	.LBE45:
 180:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 181:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(icon == NULL) {
 420              		.loc 1 181 5 is_stmt 1 view .LVU93
 421              		.loc 1 181 7 is_stmt 0 view .LVU94
 422 002e 0EB1     		cbz	r6, .L24
 423              	.L21:
 182:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_add_flag(slider, LV_OBJ_FLAG_FLEX_IN_NEW_TRACK);
 183:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 184:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 185:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     return obj;
 186:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 424              		.loc 1 186 1 view .LVU95
 425 0030 2846     		mov	r0, r5
 426 0032 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 427              	.LVL52:
 428              	.L24:
 182:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_add_flag(slider, LV_OBJ_FLAG_FLEX_IN_NEW_TRACK);
 429              		.loc 1 182 9 is_stmt 1 view .LVU96
 430 0034 4FF40001 		mov	r1, #8388608
 431 0038 2046     		mov	r0, r4
 432 003a FFF7FEFF 		bl	lv_obj_add_flag
 433              	.LVL53:
 185:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 434              		.loc 1 185 5 view .LVU97
 185:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 435              		.loc 1 185 12 is_stmt 0 view .LVU98
 436 003e F7E7     		b	.L21
 437              		.cfi_endproc
 438              	.LFE208:
 440              		.section	.text.create_switch,"ax",%progbits
 441              		.align	1
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 18


 442              		.syntax unified
 443              		.thumb
 444              		.thumb_func
 446              	create_switch:
 447              	.LVL54:
 448              	.LFB209:
 187:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 188:lvgl/examples/widgets/menu/lv_example_menu_5.c **** static lv_obj_t * create_switch(lv_obj_t * parent, const char * icon, const char * txt, bool chk)
 189:lvgl/examples/widgets/menu/lv_example_menu_5.c **** {
 449              		.loc 1 189 1 is_stmt 1 view -0
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 0
 452              		@ frame_needed = 0, uses_anonymous_args = 0
 453              		.loc 1 189 1 is_stmt 0 view .LVU100
 454 0000 38B5     		push	{r3, r4, r5, lr}
 455              		.cfi_def_cfa_offset 16
 456              		.cfi_offset 3, -16
 457              		.cfi_offset 4, -12
 458              		.cfi_offset 5, -8
 459              		.cfi_offset 14, -4
 460 0002 1D46     		mov	r5, r3
 190:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * obj = create_text(parent, icon, txt, LV_MENU_ITEM_BUILDER_VARIANT_1);
 461              		.loc 1 190 5 is_stmt 1 view .LVU101
 462              		.loc 1 190 22 is_stmt 0 view .LVU102
 463 0004 0023     		movs	r3, #0
 464              	.LVL55:
 465              		.loc 1 190 22 view .LVU103
 466 0006 FFF7FEFF 		bl	create_text
 467              	.LVL56:
 468              		.loc 1 190 22 view .LVU104
 469 000a 0446     		mov	r4, r0
 470              	.LVL57:
 191:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 192:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * sw = lv_switch_create(obj);
 471              		.loc 1 192 5 is_stmt 1 view .LVU105
 472              		.loc 1 192 21 is_stmt 0 view .LVU106
 473 000c FFF7FEFF 		bl	lv_switch_create
 474              	.LVL58:
 193:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_state(sw, chk ? LV_STATE_CHECKED : 0);
 475              		.loc 1 193 5 is_stmt 1 view .LVU107
 476 0010 2946     		mov	r1, r5
 477 0012 FFF7FEFF 		bl	lv_obj_add_state
 478              	.LVL59:
 194:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 195:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     return obj;
 479              		.loc 1 195 5 view .LVU108
 196:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 480              		.loc 1 196 1 is_stmt 0 view .LVU109
 481 0016 2046     		mov	r0, r4
 482 0018 38BD     		pop	{r3, r4, r5, pc}
 483              		.loc 1 196 1 view .LVU110
 484              		.cfi_endproc
 485              	.LFE209:
 487              		.section	.rodata.lv_example_menu_5.str1.4,"aMS",%progbits,1
 488              		.align	2
 489              	.LC2:
 490 0000 56656C6F 		.ascii	"Velocity\000"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 19


 490      63697479 
 490      00
 491 0009 000000   		.align	2
 492              	.LC3:
 493 000c EF809300 		.ascii	"\357\200\223\000"
 494              		.align	2
 495              	.LC4:
 496 0010 41636365 		.ascii	"Acceleration\000"
 496      6C657261 
 496      74696F6E 
 496      00
 497 001d 000000   		.align	2
 498              	.LC5:
 499 0020 57656967 		.ascii	"Weight limit\000"
 499      6874206C 
 499      696D6974 
 499      00
 500 002d 000000   		.align	2
 501              	.LC6:
 502 0030 536F756E 		.ascii	"Sound\000"
 502      6400
 503 0036 0000     		.align	2
 504              	.LC7:
 505 0038 EF808100 		.ascii	"\357\200\201\000"
 506              		.align	2
 507              	.LC8:
 508 003c 42726967 		.ascii	"Brightness\000"
 508      68746E65 
 508      737300
 509 0047 00       		.align	2
 510              	.LC9:
 511 0048 56657273 		.ascii	"Version 1.0\000"
 511      696F6E20 
 511      312E3000 
 512              		.align	2
 513              	.LC10:
 514 0054 54686973 		.ascii	"This is a long long long long long long long long l"
 514      20697320 
 514      61206C6F 
 514      6E67206C 
 514      6F6E6720 
 515 0087 6F6E6720 		.ascii	"ong text, if it is long enough it may scroll.\000"
 515      74657874 
 515      2C206966 
 515      20697420 
 515      6973206C 
 516 00b5 000000   		.align	2
 517              	.LC11:
 518 00b8 536F6674 		.ascii	"Software information\000"
 518      77617265 
 518      20696E66 
 518      6F726D61 
 518      74696F6E 
 519 00cd 000000   		.align	2
 520              	.LC12:
 521 00d0 4C656761 		.ascii	"Legal information\000"
 521      6C20696E 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 20


 521      666F726D 
 521      6174696F 
 521      6E00
 522 00e2 0000     		.align	2
 523              	.LC13:
 524 00e4 53696465 		.ascii	"Sidebar enable\000"
 524      62617220 
 524      656E6162 
 524      6C6500
 525 00f3 00       		.align	2
 526              	.LC14:
 527 00f4 53657474 		.ascii	"Settings\000"
 527      696E6773 
 527      00
 528 00fd 000000   		.align	2
 529              	.LC15:
 530 0100 4D656368 		.ascii	"Mechanics\000"
 530      616E6963 
 530      7300
 531 010a 0000     		.align	2
 532              	.LC16:
 533 010c 44697370 		.ascii	"Display\000"
 533      6C617900 
 534              		.align	2
 535              	.LC17:
 536 0114 4F746865 		.ascii	"Others\000"
 536      727300
 537 011b 00       		.align	2
 538              	.LC18:
 539 011c 41626F75 		.ascii	"About\000"
 539      7400
 540 0122 0000     		.align	2
 541              	.LC19:
 542 0124 4D656E75 		.ascii	"Menu mode\000"
 542      206D6F64 
 542      6500
 543              		.section	.text.lv_example_menu_5,"ax",%progbits
 544              		.align	1
 545              		.global	lv_example_menu_5
 546              		.syntax unified
 547              		.thumb
 548              		.thumb_func
 550              	lv_example_menu_5:
 551              	.LFB204:
  21:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * menu = lv_menu_create(lv_scr_act());
 552              		.loc 1 21 1 is_stmt 1 view -0
 553              		.cfi_startproc
 554              		@ args = 0, pretend = 0, frame = 8
 555              		@ frame_needed = 0, uses_anonymous_args = 0
 556 0000 2DE9F04F 		push	{r4, r5, r6, r7, r8, r9, r10, fp, lr}
 557              		.cfi_def_cfa_offset 36
 558              		.cfi_offset 4, -36
 559              		.cfi_offset 5, -32
 560              		.cfi_offset 6, -28
 561              		.cfi_offset 7, -24
 562              		.cfi_offset 8, -20
 563              		.cfi_offset 9, -16
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 21


 564              		.cfi_offset 10, -12
 565              		.cfi_offset 11, -8
 566              		.cfi_offset 14, -4
 567 0004 85B0     		sub	sp, sp, #20
 568              		.cfi_def_cfa_offset 56
  22:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 569              		.loc 1 22 5 view .LVU112
 570              	.LBB94:
 571              	.LBI94:
 572              		.file 4 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**********************
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 22


  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Make a screen active
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param color color of the background
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 23


 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return return true if invalidation is enabled
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 24


 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
 573              		.loc 4 182 26 view .LVU113
 574              	.LBB95:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 575              		.loc 4 184 5 view .LVU114
 576              		.loc 4 184 12 is_stmt 0 view .LVU115
 577 0006 FFF7FEFF 		bl	lv_disp_get_default
 578              	.LVL60:
 579 000a FFF7FEFF 		bl	lv_disp_get_scr_act
 580              	.LVL61:
 581              	.LBE95:
 582              	.LBE94:
  22:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 583              		.loc 1 22 23 view .LVU116
 584 000e FFF7FEFF 		bl	lv_menu_create
 585              	.LVL62:
 586 0012 0446     		mov	r4, r0
 587              	.LVL63:
  24:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     if(lv_color_brightness(bg_color) > 127) {
 588              		.loc 1 24 5 is_stmt 1 view .LVU117
 589              	.LBB96:
 590              	.LBI96:
 591              		.file 5 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style_gen.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_width(const struct _lv_obj_t * obj, uint32_t part)
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_WIDTH);
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_width(const struct _lv_obj_t * obj, uint32_t part)
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_WIDTH);
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_width(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 25


  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_WIDTH);
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_height(const struct _lv_obj_t * obj, uint32_t part)
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_HEIGHT);
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_min_height(const struct _lv_obj_t * obj, uint32_t part)
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MIN_HEIGHT);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_max_height(const struct _lv_obj_t * obj, uint32_t part)
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_MAX_HEIGHT);
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_x(const struct _lv_obj_t * obj, uint32_t part)
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_X);
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_y(const struct _lv_obj_t * obj, uint32_t part)
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_Y);
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_align_t lv_obj_get_style_align(const struct _lv_obj_t * obj, uint32_t part)
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_ALIGN);
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_align_t)v.num;
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_width(const struct _lv_obj_t * obj, uint32_t pa
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_WIDTH);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_height(const struct _lv_obj_t * obj, uint32_t p
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_HEIGHT);
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_x(const struct _lv_obj_t * obj, uint32_t part)
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_X);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 26


  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_translate_y(const struct _lv_obj_t * obj, uint32_t part)
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSLATE_Y);
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_zoom(const struct _lv_obj_t * obj, uint32_t par
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ZOOM);
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_angle(const struct _lv_obj_t * obj, uint32_t pa
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_ANGLE);
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_x(const struct _lv_obj_t * obj, uint32_t 
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_X);
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_transform_pivot_y(const struct _lv_obj_t * obj, uint32_t 
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_TRANSFORM_PIVOT_Y);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_top(const struct _lv_obj_t * obj, uint32_t part)
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_TOP);
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_bottom(const struct _lv_obj_t * obj, uint32_t part)
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_BOTTOM);
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_left(const struct _lv_obj_t * obj, uint32_t part)
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_LEFT);
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_right(const struct _lv_obj_t * obj, uint32_t part)
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_RIGHT);
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_row(const struct _lv_obj_t * obj, uint32_t part)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 27


 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_ROW);
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_coord_t lv_obj_get_style_pad_column(const struct _lv_obj_t * obj, uint32_t part)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_PAD_COLUMN);
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** static inline lv_color_t lv_obj_get_style_bg_color(const struct _lv_obj_t * obj, uint32_t part)
 592              		.loc 5 139 26 view .LVU118
 593              	.LBB97:
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     lv_style_value_t v = lv_obj_get_style_prop(obj, part, LV_STYLE_BG_COLOR);
 594              		.loc 5 141 5 view .LVU119
 595              		.loc 5 141 26 is_stmt 0 view .LVU120
 596 0014 2022     		movs	r2, #32
 597 0016 0021     		movs	r1, #0
 598 0018 FFF7FEFF 		bl	lv_obj_get_style_prop
 599              	.LVL64:
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return v.color;
 600              		.loc 5 142 5 is_stmt 1 view .LVU121
 601              		.loc 5 142 5 is_stmt 0 view .LVU122
 602              	.LBE97:
 603              	.LBE96:
  25:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_set_style_bg_color(menu, lv_color_darken(lv_obj_get_style_bg_color(menu, 0), 10), 0)
 604              		.loc 1 25 5 is_stmt 1 view .LVU123
 605              	.LBB98:
 606              	.LBI98:
 607              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_assert.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*Error checking*/
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 28


  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*********************
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      DEFINES
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *********************/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** enum {
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** };
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 29


  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 30


 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**********************
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  **********************/
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     union {
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 31


 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t full;
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint16_t full;
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green;
 228:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red;
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t full;
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 234:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef struct {
 238:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint16_t h;
 239:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t s;
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t v;
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @endcond
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 32


 254:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     void * user_data;
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color_filter_dsc_t;
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef enum {
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 264:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 270:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 271:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 272:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 273:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 275:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 277:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 278:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_palette_t;
 280:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 281:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**********************
 282:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 283:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  **********************/
 284:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 285:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*In color conversations:
 286:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 289:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        ----------------------
 290:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
 291:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *
 292:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 295:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        ----------------------
 296:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 298:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 300:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 302:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 305:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 306:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 307:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 308:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 309:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 33


 311:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 312:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 313:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 314:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 315:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 316:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 319:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 320:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 321:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 322:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 323:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 324:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 325:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 326:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 328:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 330:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 331:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 332:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFF;
 333:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 335:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 337:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 341:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 343:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 347:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 348:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 349:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 350:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 352:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 354:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 355:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 356:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 357:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 359:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 363:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 365:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 367:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 34


 368:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 371:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 372:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 373:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 374:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 376:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 378:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 379:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 380:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 381:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 383:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 388:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /**
 390:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 391:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 393:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 396:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 398:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 401:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 402:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 403:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 404:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
 405:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 406:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 407:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 410:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 411:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 412:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 413:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 414:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 415:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 416:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      */
 417:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 418:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 419:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 424:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 35


 425:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 426:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 427:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 428:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 429:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 430:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 431:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
 432:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 433:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 437:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 438:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 439:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 440:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 441:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 442:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 447:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 457:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
 459:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 460:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 462:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 464:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 466:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 467:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 470:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 471:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret;
 472:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 473:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 474:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_premult(lv_color_t c, uint8_t mix, uint16_t * out
 475:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 476:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 477:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[0] = (uint16_t)LV_COLOR_GET_R(c) * mix;
 478:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[1] = (uint16_t)LV_COLOR_GET_G(c) * mix;
 479:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[2] = (uint16_t)LV_COLOR_GET_B(c) * mix;
 480:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 481:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     (void) mix;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 36


 482:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Pre-multiplication can't be used with 1 bpp*/
 483:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[0] = LV_COLOR_GET_R(c);
 484:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[1] = LV_COLOR_GET_G(c);
 485:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     out[2] = LV_COLOR_GET_B(c);
 486:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 487:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 488:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 489:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 490:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
 491:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio. It runs faster then `lv_color_mix` but requires some pre comp
 492:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param premult_c1 The first color. Should be preprocessed with `lv_color_premult(c1)`
 493:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param c2 The second color. As it is no pre computation required on it
 494:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c1`, 255: full `c2`, 127: half `c1` and half `c2`.
 495:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *            Should be modified like mix = `255 - mix`
 496:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 497:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @note 255 won't give clearly `c1`.
 498:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 499:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix_premult(uint16_t * premult_c1, lv_color
 500:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 501:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 502:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 1
 503:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8 or 32*/
 504:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255(premult_c1[0] + LV_COLOR_GET_R(c2) * mix + LV_COLOR_MIX_ROUND_OF
 505:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255(premult_c1[1] + LV_COLOR_GET_G(c2) * mix + LV_COLOR_MIX_ROUND_OF
 506:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255(premult_c1[2] + LV_COLOR_GET_B(c2) * mix + LV_COLOR_MIX_ROUND_OF
 507:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 508:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 509:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 510:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Restore color1*/
 511:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_t c1;
 512:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(c1, premult_c1[0]);
 513:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(c1, premult_c1[1]);
 514:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(c1, premult_c1[2]);
 515:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c2.full : c1.full;
 516:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 517:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 518:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret;
 519:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 520:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 521:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
 522:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Mix two colors. Both color can have alpha value.
 523:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param bg_color background color
 524:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param bg_opa alpha of the background color
 525:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param fg_color foreground color
 526:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param fg_opa alpha of the foreground color
 527:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param res_color the result color
 528:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param res_opa the result opacity
 529:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 530:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline void LV_ATTRIBUTE_FAST_MEM lv_color_mix_with_alpha(lv_color_t bg_color, lv_opa_t bg_o
 531:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t fg_color, lv_opa_t fg_o
 532:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                                                  lv_color_t * res_color, lv_opa_t *
 533:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 534:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Pick the foreground if it's fully opaque or the Background is fully transparent*/
 535:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(fg_opa >= LV_OPA_MAX || bg_opa <= LV_OPA_MIN) {
 536:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         res_color->full = fg_color.full;
 537:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         *res_opa = fg_opa;
 538:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 37


 539:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Transparent foreground: use the Background*/
 540:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else if(fg_opa <= LV_OPA_MIN) {
 541:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         res_color->full = bg_color.full;
 542:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         *res_opa = bg_opa;
 543:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 544:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Opaque background: use simple mix*/
 545:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else if(bg_opa >= LV_OPA_MAX) {
 546:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         *res_color = lv_color_mix(fg_color, bg_color, fg_opa);
 547:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         *res_opa = LV_OPA_COVER;
 548:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 549:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Both colors have alpha. Expensive calculation need to be applied*/
 550:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 551:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         /*Save the parameters and the result. If they will be asked again don't compute again*/
 552:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_opa_t fg_opa_save     = 0;
 553:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_opa_t bg_opa_save     = 0;
 554:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_color_t fg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 555:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_color_t bg_color_save = _LV_COLOR_ZERO_INITIALIZER;
 556:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_color_t res_color_saved = _LV_COLOR_ZERO_INITIALIZER;
 557:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         static lv_opa_t res_opa_saved = 0;
 558:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 559:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         if(fg_opa != fg_opa_save || bg_opa != bg_opa_save || fg_color.full != fg_color_save.full ||
 560:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****            bg_color.full != bg_color_save.full) {
 561:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             fg_opa_save        = fg_opa;
 562:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             bg_opa_save        = bg_opa;
 563:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             fg_color_save.full = fg_color.full;
 564:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             bg_color_save.full = bg_color.full;
 565:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             /*Info:
 566:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****              * https://en.wikipedia.org/wiki/Alpha_compositing#Analytical_derivation_of_the_over_op
 567:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             res_opa_saved = 255 - ((uint16_t)((uint16_t)(255 - fg_opa) * (255 - bg_opa)) >> 8);
 568:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             LV_ASSERT(res_opa_saved != 0);
 569:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             lv_opa_t ratio = (uint16_t)((uint16_t)fg_opa * 255) / res_opa_saved;
 570:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****             res_color_saved = lv_color_mix(fg_color, bg_color, ratio);
 571:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 572:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         }
 573:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 574:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         res_color->full = res_color_saved.full;
 575:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         *res_opa = res_opa_saved;
 576:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 577:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 578:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 579:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @endcond
 580:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 581:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
 582:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Get the brightness of a color
 583:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param color a color
 584:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @return the brightness [0..255]
 585:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 586:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_brightness(lv_color_t color)
 608              		.loc 6 586 23 view .LVU124
 609              	.LBB99:
 587:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 588:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color32_t c32;
 610              		.loc 6 588 5 view .LVU125
 589:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     c32.full        = lv_color_to32(color);
 611              		.loc 6 589 5 view .LVU126
 612              	.LBB100:
 613              	.LBI100:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 38


 374:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 614              		.loc 6 374 24 view .LVU127
 615              	.LBB101:
 425:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 616              		.loc 6 425 5 view .LVU128
 617              	.LBE101:
 618              	.LBE100:
 590:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint16_t bright = (uint16_t)(3u * LV_COLOR_GET_R32(c32) + LV_COLOR_GET_B32(c32) + 4u * LV_COLOR
 619              		.loc 6 590 5 view .LVU129
 620              		.loc 6 590 39 is_stmt 0 view .LVU130
 621 001c C0F30743 		ubfx	r3, r0, #16, #8
 622              		.loc 6 590 37 view .LVU131
 623 0020 03EB4303 		add	r3, r3, r3, lsl #1
 624              		.loc 6 590 92 view .LVU132
 625 0024 C0F30722 		ubfx	r2, r0, #8, #8
 626              		.loc 6 590 85 view .LVU133
 627 0028 03EB8203 		add	r3, r3, r2, lsl #2
 628              		.loc 6 590 63 view .LVU134
 629 002c C0B2     		uxtb	r0, r0
 630              	.LVL65:
 631              		.loc 6 590 14 view .LVU135
 632 002e 10FA83F3 		uxtah	r3, r0, r3
 633              	.LVL66:
 591:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return (uint8_t)(bright >> 3);
 634              		.loc 6 591 5 is_stmt 1 view .LVU136
 635              		.loc 6 591 5 is_stmt 0 view .LVU137
 636              	.LBE99:
 637              	.LBE98:
  25:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         lv_obj_set_style_bg_color(menu, lv_color_darken(lv_obj_get_style_bg_color(menu, 0), 10), 0)
 638              		.loc 1 25 7 view .LVU138
 639 0032 13F4806F 		tst	r3, #1024
 640 0036 40F0EC80 		bne	.L33
  29:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 641              		.loc 1 29 9 is_stmt 1 view .LVU139
 642              	.LVL67:
 643              	.LBB102:
 644              	.LBI102:
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 645              		.loc 5 139 26 view .LVU140
 646              	.LBB103:
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return v.color;
 647              		.loc 5 141 5 view .LVU141
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return v.color;
 648              		.loc 5 141 26 is_stmt 0 view .LVU142
 649 003a 2022     		movs	r2, #32
 650 003c 0021     		movs	r1, #0
 651 003e 2046     		mov	r0, r4
 652 0040 FFF7FEFF 		bl	lv_obj_get_style_prop
 653              	.LVL68:
 654              		.loc 5 142 5 is_stmt 1 view .LVU143
 655              		.loc 5 142 5 is_stmt 0 view .LVU144
 656              	.LBE103:
 657              	.LBE102:
  29:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 658              		.loc 1 29 9 view .LVU145
 659 0044 3221     		movs	r1, #50
 660 0046 FFF7FEFF 		bl	lv_color_darken
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 39


 661              	.LVL69:
 662 004a 0146     		mov	r1, r0
 663 004c 0022     		movs	r2, #0
 664 004e 2046     		mov	r0, r4
 665 0050 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 666              	.LVL70:
 667              	.L29:
  31:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_event_cb(menu, back_event_handler, LV_EVENT_CLICKED, menu);
 668              		.loc 1 31 5 is_stmt 1 view .LVU146
 669 0054 0121     		movs	r1, #1
 670 0056 2046     		mov	r0, r4
 671 0058 FFF7FEFF 		bl	lv_menu_set_mode_root_back_btn
 672              	.LVL71:
  32:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_size(menu, lv_disp_get_hor_res(NULL), lv_disp_get_ver_res(NULL));
 673              		.loc 1 32 5 view .LVU147
 674 005c 2346     		mov	r3, r4
 675 005e 0722     		movs	r2, #7
 676 0060 E449     		ldr	r1, .L34
 677 0062 2046     		mov	r0, r4
 678 0064 FFF7FEFF 		bl	lv_obj_add_event_cb
 679              	.LVL72:
  33:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_center(menu);
 680              		.loc 1 33 5 view .LVU148
 681 0068 0020     		movs	r0, #0
 682 006a FFF7FEFF 		bl	lv_disp_get_hor_res
 683              	.LVL73:
 684 006e 0546     		mov	r5, r0
 685 0070 0020     		movs	r0, #0
 686 0072 FFF7FEFF 		bl	lv_disp_get_ver_res
 687              	.LVL74:
 688 0076 0246     		mov	r2, r0
 689 0078 2946     		mov	r1, r5
 690 007a 2046     		mov	r0, r4
 691 007c FFF7FEFF 		bl	lv_obj_set_size
 692              	.LVL75:
  34:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 693              		.loc 1 34 5 view .LVU149
 694              	.LBB104:
 695              	.LBI104:
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 696              		.loc 2 199 20 view .LVU150
 697              	.LBB105:
 698              		.loc 2 201 5 view .LVU151
 699 0080 0023     		movs	r3, #0
 700 0082 1A46     		mov	r2, r3
 701 0084 0921     		movs	r1, #9
 702 0086 2046     		mov	r0, r4
 703 0088 FFF7FEFF 		bl	lv_obj_align
 704              	.LVL76:
 705              		.loc 2 201 5 is_stmt 0 view .LVU152
 706              	.LBE105:
 707              	.LBE104:
  36:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_t * section;
 708              		.loc 1 36 5 is_stmt 1 view .LVU153
  37:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 709              		.loc 1 37 5 view .LVU154
  40:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_mechanics_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 40


 710              		.loc 1 40 5 view .LVU155
  40:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_mechanics_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
 711              		.loc 1 40 37 is_stmt 0 view .LVU156
 712 008c 0021     		movs	r1, #0
 713 008e 2046     		mov	r0, r4
 714 0090 FFF7FEFF 		bl	lv_menu_page_create
 715              	.LVL77:
 716 0094 8046     		mov	r8, r0
 717              	.LVL78:
  41:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_mechanics_page);
 718              		.loc 1 41 5 is_stmt 1 view .LVU157
  41:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_mechanics_page);
 719              		.loc 1 41 76 is_stmt 0 view .LVU158
 720 0096 2046     		mov	r0, r4
 721              	.LVL79:
  41:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_mechanics_page);
 722              		.loc 1 41 76 view .LVU159
 723 0098 FFF7FEFF 		bl	lv_menu_get_main_header
 724              	.LVL80:
 725              	.LBB106:
 726              	.LBI106:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 727              		.loc 5 115 26 is_stmt 1 view .LVU160
 728              	.LBB107:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 729              		.loc 5 117 5 view .LVU161
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 730              		.loc 5 117 26 is_stmt 0 view .LVU162
 731 009c 1222     		movs	r2, #18
 732 009e 0021     		movs	r1, #0
 733 00a0 FFF7FEFF 		bl	lv_obj_get_style_prop
 734              	.LVL81:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 735              		.loc 5 118 5 is_stmt 1 view .LVU163
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 736              		.loc 5 118 12 is_stmt 0 view .LVU164
 737 00a4 05B2     		sxth	r5, r0
 738              	.LVL82:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 739              		.loc 5 118 12 view .LVU165
 740              	.LBE107:
 741              	.LBE106:
 742              	.LBB108:
 743              	.LBI108:
 744              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @file lv_obj_style.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #ifndef LV_OBJ_STYLE_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #define LV_OBJ_STYLE_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 41


  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #include <stdint.h>
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #include <stdbool.h>
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #include "../misc/lv_bidi.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /*Can't include lv_obj.h because it includes this header file*/
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** struct _lv_obj_t;
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** typedef enum {
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_SAME,           /*The style properties in the 2 states are identical*/
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_REDRAW,    /*The differences can be shown with a simple redraw*/
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_DRAW_PAD,  /*The differences can be shown with a simple redraw*/
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     _LV_STYLE_STATE_CMP_DIFF_LAYOUT,    /*The differences can be shown with a simple redraw*/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** } _lv_style_state_cmp_t;
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** typedef uint32_t lv_style_selector_t;
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** typedef struct {
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_style_t * style;
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     uint32_t selector : 24;
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     uint32_t is_local : 1;
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     uint32_t is_trans : 1;
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** } _lv_obj_style_t;
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** typedef struct {
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     uint16_t time;
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     uint16_t delay;
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_style_selector_t selector;
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_style_prop_t prop;
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_anim_path_cb_t path_cb;
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #if LV_USE_USER_DATA
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     void * user_data;
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #endif
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** } _lv_obj_style_transition_dsc_t;
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**********************
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * GLOBAL PROTOTYPES
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  **********************/
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Initialize the object related style manager module.
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Called by LVGL in `lv_init()`
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void _lv_obj_style_init(void);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Add a style to an object.
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 42


  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param style     pointer to a style to add
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param selector  OR-ed value of parts and state to which the style should be added
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &style_btn, 0); //Default button style
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @example         lv_obj_add_style(btn, &btn_red, LV_STATE_PRESSED); //Overwrite only some colors
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_add_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Add a style to an object.
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param style     pointer to a style to remove. Can be NULL to check only the selector
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param selector  OR-ed values of states and a part to remove only styles with matching selectors
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, &style, LV_PART_ANY | LV_STATE_ANY); //Remove a specific style
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_MAIN | LV_STATE_ANY); //Remove all styles from t
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @example lv_obj_remove_style(obj, NULL, LV_PART_ANY | LV_STATE_ANY); //Remove all styles
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_remove_style(struct _lv_obj_t * obj, lv_style_t * style, lv_style_selector_t selector);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Remove all styles from an object
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** static inline void lv_obj_remove_style_all(struct _lv_obj_t * obj)
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_remove_style(obj, NULL, (lv_style_selector_t)LV_PART_ANY | (lv_style_selector_t)LV_STATE
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** }
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Notify all object if a style is modified
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param style     pointer to a style. Only the objects with this style will be notified
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *                  (NULL to notify all objects)
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_report_style_change(lv_style_t * style);
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Notify an object and its children about its style is modified.
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param part      the part whose style was changed. E.g. `LV_PART_ANY`, `LV_PART_MAIN`
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param prop      `LV_STYLE_PROP_ANY` or an `LV_STYLE_...` property.
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *                  It is used to optimize what needs to be refreshed.
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *                  `LV_STYLE_PROP_INV` to perform only a style cache update
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_refresh_style(struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_t prop);
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Enable or disable automatic style refreshing when a new style is added/removed to/from an object
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * or any other style change happens.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param en        true: enable refreshing; false: disable refreshing
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_enable_style_refresh(bool en);
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Get the value of a style property. The current state of the object will be considered.
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Inherited properties will be inherited.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * If a property is not set a default value will be returned.
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param part      a part from which the property should be get
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 43


 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param prop      the property to get
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @return          the value of the property.
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  *                  Should be read from the correct field of the `lv_style_value_t` according to th
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** lv_style_value_t lv_obj_get_style_prop(const struct _lv_obj_t * obj, lv_part_t part, lv_style_prop_
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Set local style property on an object's part and state.
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param prop      the property
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param value     value of the property. The correct element should be set according to the type 
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param selector  OR-ed value of parts and state for which the style should be set
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_set_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_value_t val
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****                                  lv_style_selector_t selector);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_set_local_style_prop_meta(struct _lv_obj_t * obj, lv_style_prop_t prop, uint16_t meta,
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****                                       lv_style_selector_t selector);
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** lv_style_res_t lv_obj_get_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_v
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****                                            lv_style_selector_t selector);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Remove a local style property from a part of an object with a given state.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       pointer to an object
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param prop      a style property to remove.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param selector  OR-ed value of parts and state for which the style should be removed
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @return true     the property was found and removed; false: the property was not found
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** bool lv_obj_remove_local_style_prop(struct _lv_obj_t * obj, lv_style_prop_t prop, lv_style_selector
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Used internally for color filtering
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** lv_style_value_t _lv_obj_style_apply_color_filter(const struct _lv_obj_t * obj, uint32_t part, lv_s
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Used internally to create a style transition
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param part
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param prev_state
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param new_state
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param tr
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void _lv_obj_style_create_transition(struct _lv_obj_t * obj, lv_part_t part, lv_state_t prev_state,
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****                                      lv_state_t new_state, const _lv_obj_style_transition_dsc_t * t
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Used internally to compare the appearance of an object in 2 states
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param state1
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param state2
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @return
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** _lv_style_state_cmp_t _lv_obj_style_state_compare(struct _lv_obj_t * obj, lv_state_t state1, lv_sta
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 44


 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Fade in an an object and all its children.
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       the object to fade in
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param time      time of fade
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param delay     delay to start the animation
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_fade_in(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** /**
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * Fade out an an object and all its children.
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param obj       the object to fade out
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param time      time of fade
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  * @param delay     delay to start the animation
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****  */
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** void lv_obj_fade_out(struct _lv_obj_t * obj, uint32_t time, uint32_t delay);
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** lv_state_t lv_obj_style_get_selector_state(lv_style_selector_t selector);
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** lv_part_t lv_obj_style_get_selector_part(lv_style_selector_t selector);
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** #include "lv_obj_style_gen.h"
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** static inline void lv_obj_set_style_pad_all(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_top(obj, value, selector);
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_bottom(obj, value, selector);
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** }
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** 
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** static inline void lv_obj_set_style_pad_hor(struct _lv_obj_t * obj, lv_coord_t value, lv_style_sele
 745              		.loc 7 213 20 is_stmt 1 view .LVU166
 746              	.LBB109:
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_left(obj, value, selector);
 747              		.loc 7 215 5 view .LVU167
 748 00a6 0022     		movs	r2, #0
 749 00a8 2946     		mov	r1, r5
 750 00aa 4046     		mov	r0, r8
 751 00ac FFF7FEFF 		bl	lv_obj_set_style_pad_left
 752              	.LVL83:
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 753              		.loc 7 216 5 view .LVU168
 754 00b0 0022     		movs	r2, #0
 755 00b2 2946     		mov	r1, r5
 756 00b4 4046     		mov	r0, r8
 757 00b6 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 758              	.LVL84:
 759              		.loc 7 216 5 is_stmt 0 view .LVU169
 760              	.LBE109:
 761              	.LBE108:
  42:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_mechanics_page);
 762              		.loc 1 42 5 is_stmt 1 view .LVU170
 763 00ba 4046     		mov	r0, r8
 764 00bc FFF7FEFF 		bl	lv_menu_separator_create
 765              	.LVL85:
  43:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Velocity", 0, 150, 120);
 766              		.loc 1 43 5 view .LVU171
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 45


  43:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Velocity", 0, 150, 120);
 767              		.loc 1 43 15 is_stmt 0 view .LVU172
 768 00c0 4046     		mov	r0, r8
 769 00c2 FFF7FEFF 		bl	lv_menu_section_create
 770              	.LVL86:
 771 00c6 0646     		mov	r6, r0
 772              	.LVL87:
  44:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Acceleration", 0, 150, 50);
 773              		.loc 1 44 5 is_stmt 1 view .LVU173
 774 00c8 CB4D     		ldr	r5, .L34+4
 775 00ca 7823     		movs	r3, #120
 776 00cc 0193     		str	r3, [sp, #4]
 777 00ce 4FF09609 		mov	r9, #150
 778 00d2 CDF80090 		str	r9, [sp]
 779 00d6 0023     		movs	r3, #0
 780 00d8 C84A     		ldr	r2, .L34+8
 781 00da 2946     		mov	r1, r5
 782 00dc FFF7FEFF 		bl	create_slider
 783              	.LVL88:
  45:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Weight limit", 0, 150, 80);
 784              		.loc 1 45 5 view .LVU174
 785 00e0 3223     		movs	r3, #50
 786 00e2 0193     		str	r3, [sp, #4]
 787 00e4 CDF80090 		str	r9, [sp]
 788 00e8 0023     		movs	r3, #0
 789 00ea C54A     		ldr	r2, .L34+12
 790 00ec 2946     		mov	r1, r5
 791 00ee 3046     		mov	r0, r6
 792 00f0 FFF7FEFF 		bl	create_slider
 793              	.LVL89:
  46:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 794              		.loc 1 46 5 view .LVU175
 795 00f4 5023     		movs	r3, #80
 796 00f6 0193     		str	r3, [sp, #4]
 797 00f8 CDF80090 		str	r9, [sp]
 798 00fc 0023     		movs	r3, #0
 799 00fe C14A     		ldr	r2, .L34+16
 800 0100 2946     		mov	r1, r5
 801 0102 3046     		mov	r0, r6
 802 0104 FFF7FEFF 		bl	create_slider
 803              	.LVL90:
  48:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_sound_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
 804              		.loc 1 48 5 view .LVU176
  48:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_sound_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
 805              		.loc 1 48 33 is_stmt 0 view .LVU177
 806 0108 0021     		movs	r1, #0
 807 010a 2046     		mov	r0, r4
 808 010c FFF7FEFF 		bl	lv_menu_page_create
 809              	.LVL91:
 810 0110 0746     		mov	r7, r0
 811              	.LVL92:
  49:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_sound_page);
 812              		.loc 1 49 5 is_stmt 1 view .LVU178
  49:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_sound_page);
 813              		.loc 1 49 72 is_stmt 0 view .LVU179
 814 0112 2046     		mov	r0, r4
 815              	.LVL93:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 46


  49:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_sound_page);
 816              		.loc 1 49 72 view .LVU180
 817 0114 FFF7FEFF 		bl	lv_menu_get_main_header
 818              	.LVL94:
 819              	.LBB110:
 820              	.LBI110:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 821              		.loc 5 115 26 is_stmt 1 view .LVU181
 822              	.LBB111:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 823              		.loc 5 117 5 view .LVU182
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 824              		.loc 5 117 26 is_stmt 0 view .LVU183
 825 0118 1222     		movs	r2, #18
 826 011a 0021     		movs	r1, #0
 827 011c FFF7FEFF 		bl	lv_obj_get_style_prop
 828              	.LVL95:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 829              		.loc 5 118 5 is_stmt 1 view .LVU184
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 830              		.loc 5 118 12 is_stmt 0 view .LVU185
 831 0120 06B2     		sxth	r6, r0
 832              	.LVL96:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 833              		.loc 5 118 12 view .LVU186
 834              	.LBE111:
 835              	.LBE110:
 836              	.LBB112:
 837              	.LBI112:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 838              		.loc 7 213 20 is_stmt 1 view .LVU187
 839              	.LBB113:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 840              		.loc 7 215 5 view .LVU188
 841 0122 0022     		movs	r2, #0
 842 0124 3146     		mov	r1, r6
 843 0126 3846     		mov	r0, r7
 844 0128 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 845              	.LVL97:
 846              		.loc 7 216 5 view .LVU189
 847 012c 0022     		movs	r2, #0
 848 012e 3146     		mov	r1, r6
 849 0130 3846     		mov	r0, r7
 850 0132 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 851              	.LVL98:
 852              		.loc 7 216 5 is_stmt 0 view .LVU190
 853              	.LBE113:
 854              	.LBE112:
  50:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_sound_page);
 855              		.loc 1 50 5 is_stmt 1 view .LVU191
 856 0136 3846     		mov	r0, r7
 857 0138 FFF7FEFF 		bl	lv_menu_separator_create
 858              	.LVL99:
  51:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_switch(section, LV_SYMBOL_AUDIO, "Sound", false);
 859              		.loc 1 51 5 view .LVU192
  51:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_switch(section, LV_SYMBOL_AUDIO, "Sound", false);
 860              		.loc 1 51 15 is_stmt 0 view .LVU193
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 47


 861 013c 3846     		mov	r0, r7
 862 013e FFF7FEFF 		bl	lv_menu_section_create
 863              	.LVL100:
  52:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 864              		.loc 1 52 5 is_stmt 1 view .LVU194
 865 0142 0023     		movs	r3, #0
 866 0144 B04A     		ldr	r2, .L34+20
 867 0146 B149     		ldr	r1, .L34+24
 868 0148 FFF7FEFF 		bl	create_switch
 869              	.LVL101:
  54:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_display_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(me
 870              		.loc 1 54 5 view .LVU195
  54:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_display_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(me
 871              		.loc 1 54 35 is_stmt 0 view .LVU196
 872 014c 0021     		movs	r1, #0
 873 014e 2046     		mov	r0, r4
 874 0150 FFF7FEFF 		bl	lv_menu_page_create
 875              	.LVL102:
 876 0154 0646     		mov	r6, r0
 877              	.LVL103:
  55:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_display_page);
 878              		.loc 1 55 5 is_stmt 1 view .LVU197
  55:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_display_page);
 879              		.loc 1 55 74 is_stmt 0 view .LVU198
 880 0156 2046     		mov	r0, r4
 881              	.LVL104:
  55:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_display_page);
 882              		.loc 1 55 74 view .LVU199
 883 0158 FFF7FEFF 		bl	lv_menu_get_main_header
 884              	.LVL105:
 885              	.LBB114:
 886              	.LBI114:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 887              		.loc 5 115 26 is_stmt 1 view .LVU200
 888              	.LBB115:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 889              		.loc 5 117 5 view .LVU201
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 890              		.loc 5 117 26 is_stmt 0 view .LVU202
 891 015c 1222     		movs	r2, #18
 892 015e 0021     		movs	r1, #0
 893 0160 FFF7FEFF 		bl	lv_obj_get_style_prop
 894              	.LVL106:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 895              		.loc 5 118 5 is_stmt 1 view .LVU203
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 896              		.loc 5 118 12 is_stmt 0 view .LVU204
 897 0164 0FFA80FA 		sxth	r10, r0
 898              	.LVL107:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 899              		.loc 5 118 12 view .LVU205
 900              	.LBE115:
 901              	.LBE114:
 902              	.LBB116:
 903              	.LBI116:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 904              		.loc 7 213 20 is_stmt 1 view .LVU206
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 48


 905              	.LBB117:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 906              		.loc 7 215 5 view .LVU207
 907 0168 0022     		movs	r2, #0
 908 016a 5146     		mov	r1, r10
 909 016c 3046     		mov	r0, r6
 910 016e FFF7FEFF 		bl	lv_obj_set_style_pad_left
 911              	.LVL108:
 912              		.loc 7 216 5 view .LVU208
 913 0172 0022     		movs	r2, #0
 914 0174 5146     		mov	r1, r10
 915 0176 3046     		mov	r0, r6
 916 0178 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 917              	.LVL109:
 918              		.loc 7 216 5 is_stmt 0 view .LVU209
 919              	.LBE117:
 920              	.LBE116:
  56:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_display_page);
 921              		.loc 1 56 5 is_stmt 1 view .LVU210
 922 017c 3046     		mov	r0, r6
 923 017e FFF7FEFF 		bl	lv_menu_separator_create
 924              	.LVL110:
  57:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Brightness", 0, 150, 100);
 925              		.loc 1 57 5 view .LVU211
  57:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_slider(section, LV_SYMBOL_SETTINGS, "Brightness", 0, 150, 100);
 926              		.loc 1 57 15 is_stmt 0 view .LVU212
 927 0182 3046     		mov	r0, r6
 928 0184 FFF7FEFF 		bl	lv_menu_section_create
 929              	.LVL111:
  58:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 930              		.loc 1 58 5 is_stmt 1 view .LVU213
 931 0188 6423     		movs	r3, #100
 932 018a 0193     		str	r3, [sp, #4]
 933 018c CDF80090 		str	r9, [sp]
 934 0190 0023     		movs	r3, #0
 935 0192 9F4A     		ldr	r2, .L34+28
 936 0194 2946     		mov	r1, r5
 937 0196 FFF7FEFF 		bl	create_slider
 938              	.LVL112:
  60:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_software_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_hea
 939              		.loc 1 60 5 view .LVU214
  60:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_software_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_hea
 940              		.loc 1 60 41 is_stmt 0 view .LVU215
 941 019a 0021     		movs	r1, #0
 942 019c 2046     		mov	r0, r4
 943 019e FFF7FEFF 		bl	lv_menu_page_create
 944              	.LVL113:
 945 01a2 8246     		mov	r10, r0
 946              	.LVL114:
  61:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_software_info_page);
 947              		.loc 1 61 5 is_stmt 1 view .LVU216
  61:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_software_info_page);
 948              		.loc 1 61 80 is_stmt 0 view .LVU217
 949 01a4 2046     		mov	r0, r4
 950              	.LVL115:
  61:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_software_info_page);
 951              		.loc 1 61 80 view .LVU218
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 49


 952 01a6 FFF7FEFF 		bl	lv_menu_get_main_header
 953              	.LVL116:
 954              	.LBB118:
 955              	.LBI118:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 956              		.loc 5 115 26 is_stmt 1 view .LVU219
 957              	.LBB119:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 958              		.loc 5 117 5 view .LVU220
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 959              		.loc 5 117 26 is_stmt 0 view .LVU221
 960 01aa 1222     		movs	r2, #18
 961 01ac 0021     		movs	r1, #0
 962 01ae FFF7FEFF 		bl	lv_obj_get_style_prop
 963              	.LVL117:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 964              		.loc 5 118 5 is_stmt 1 view .LVU222
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 965              		.loc 5 118 12 is_stmt 0 view .LVU223
 966 01b2 05B2     		sxth	r5, r0
 967              	.LVL118:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 968              		.loc 5 118 12 view .LVU224
 969              	.LBE119:
 970              	.LBE118:
 971              	.LBB120:
 972              	.LBI120:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 973              		.loc 7 213 20 is_stmt 1 view .LVU225
 974              	.LBB121:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 975              		.loc 7 215 5 view .LVU226
 976 01b4 0022     		movs	r2, #0
 977 01b6 2946     		mov	r1, r5
 978 01b8 5046     		mov	r0, r10
 979 01ba FFF7FEFF 		bl	lv_obj_set_style_pad_left
 980              	.LVL119:
 981              		.loc 7 216 5 view .LVU227
 982 01be 0022     		movs	r2, #0
 983 01c0 2946     		mov	r1, r5
 984 01c2 5046     		mov	r0, r10
 985 01c4 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 986              	.LVL120:
 987              		.loc 7 216 5 is_stmt 0 view .LVU228
 988              	.LBE121:
 989              	.LBE120:
  62:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_text(section, NULL, "Version 1.0", LV_MENU_ITEM_BUILDER_VARIANT_1);
 990              		.loc 1 62 5 is_stmt 1 view .LVU229
  62:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     create_text(section, NULL, "Version 1.0", LV_MENU_ITEM_BUILDER_VARIANT_1);
 991              		.loc 1 62 15 is_stmt 0 view .LVU230
 992 01c8 5046     		mov	r0, r10
 993 01ca FFF7FEFF 		bl	lv_menu_section_create
 994              	.LVL121:
  63:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 995              		.loc 1 63 5 is_stmt 1 view .LVU231
 996 01ce 0023     		movs	r3, #0
 997 01d0 904A     		ldr	r2, .L34+32
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 50


 998 01d2 1946     		mov	r1, r3
 999 01d4 FFF7FEFF 		bl	create_text
 1000              	.LVL122:
  65:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_legal_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_header
 1001              		.loc 1 65 5 view .LVU232
  65:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_legal_info_page, lv_obj_get_style_pad_left(lv_menu_get_main_header
 1002              		.loc 1 65 38 is_stmt 0 view .LVU233
 1003 01d8 0021     		movs	r1, #0
 1004 01da 2046     		mov	r0, r4
 1005 01dc FFF7FEFF 		bl	lv_menu_page_create
 1006              	.LVL123:
 1007 01e0 8146     		mov	r9, r0
 1008              	.LVL124:
  66:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_legal_info_page);
 1009              		.loc 1 66 5 is_stmt 1 view .LVU234
  66:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_legal_info_page);
 1010              		.loc 1 66 77 is_stmt 0 view .LVU235
 1011 01e2 2046     		mov	r0, r4
 1012              	.LVL125:
  66:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_legal_info_page);
 1013              		.loc 1 66 77 view .LVU236
 1014 01e4 FFF7FEFF 		bl	lv_menu_get_main_header
 1015              	.LVL126:
 1016              	.LBB122:
 1017              	.LBI122:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 1018              		.loc 5 115 26 is_stmt 1 view .LVU237
 1019              	.LBB123:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1020              		.loc 5 117 5 view .LVU238
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1021              		.loc 5 117 26 is_stmt 0 view .LVU239
 1022 01e8 1222     		movs	r2, #18
 1023 01ea 0021     		movs	r1, #0
 1024 01ec FFF7FEFF 		bl	lv_obj_get_style_prop
 1025              	.LVL127:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1026              		.loc 5 118 5 is_stmt 1 view .LVU240
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1027              		.loc 5 118 12 is_stmt 0 view .LVU241
 1028 01f0 05B2     		sxth	r5, r0
 1029              	.LVL128:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1030              		.loc 5 118 12 view .LVU242
 1031              	.LBE123:
 1032              	.LBE122:
 1033              	.LBB124:
 1034              	.LBI124:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 1035              		.loc 7 213 20 is_stmt 1 view .LVU243
 1036              	.LBB125:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 1037              		.loc 7 215 5 view .LVU244
 1038 01f2 0022     		movs	r2, #0
 1039 01f4 2946     		mov	r1, r5
 1040 01f6 4846     		mov	r0, r9
 1041 01f8 FFF7FEFF 		bl	lv_obj_set_style_pad_left
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 51


 1042              	.LVL129:
 1043              		.loc 7 216 5 view .LVU245
 1044 01fc 0022     		movs	r2, #0
 1045 01fe 2946     		mov	r1, r5
 1046 0200 4846     		mov	r0, r9
 1047 0202 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 1048              	.LVL130:
 1049              		.loc 7 216 5 is_stmt 0 view .LVU246
 1050              	.LBE125:
 1051              	.LBE124:
  67:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     for(uint32_t i = 0; i < 15; i++) {
 1052              		.loc 1 67 5 is_stmt 1 view .LVU247
  67:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     for(uint32_t i = 0; i < 15; i++) {
 1053              		.loc 1 67 15 is_stmt 0 view .LVU248
 1054 0206 4846     		mov	r0, r9
 1055 0208 FFF7FEFF 		bl	lv_menu_section_create
 1056              	.LVL131:
 1057 020c 8346     		mov	fp, r0
 1058              	.LVL132:
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1059              		.loc 1 68 5 is_stmt 1 view .LVU249
 1060              	.LBB126:
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1061              		.loc 1 68 9 view .LVU250
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1062              		.loc 1 68 18 is_stmt 0 view .LVU251
 1063 020e 0025     		movs	r5, #0
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1064              		.loc 1 68 5 view .LVU252
 1065 0210 14E0     		b	.L30
 1066              	.LVL133:
 1067              	.L33:
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1068              		.loc 1 68 5 view .LVU253
 1069              	.LBE126:
  26:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 1070              		.loc 1 26 9 is_stmt 1 view .LVU254
 1071              	.LBB127:
 1072              	.LBI127:
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 1073              		.loc 5 139 26 view .LVU255
 1074              	.LBB128:
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return v.color;
 1075              		.loc 5 141 5 view .LVU256
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return v.color;
 1076              		.loc 5 141 26 is_stmt 0 view .LVU257
 1077 0212 2022     		movs	r2, #32
 1078 0214 0021     		movs	r1, #0
 1079 0216 2046     		mov	r0, r4
 1080 0218 FFF7FEFF 		bl	lv_obj_get_style_prop
 1081              	.LVL134:
 1082              		.loc 5 142 5 is_stmt 1 view .LVU258
 1083              		.loc 5 142 5 is_stmt 0 view .LVU259
 1084              	.LBE128:
 1085              	.LBE127:
  26:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     }
 1086              		.loc 1 26 9 view .LVU260
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 52


 1087 021c 0A21     		movs	r1, #10
 1088 021e FFF7FEFF 		bl	lv_color_darken
 1089              	.LVL135:
 1090 0222 0146     		mov	r1, r0
 1091 0224 0022     		movs	r2, #0
 1092 0226 2046     		mov	r0, r4
 1093 0228 FFF7FEFF 		bl	lv_obj_set_style_bg_color
 1094              	.LVL136:
 1095 022c 12E7     		b	.L29
 1096              	.LVL137:
 1097              	.L31:
 1098              	.LBB129:
  69:lvgl/examples/widgets/menu/lv_example_menu_5.c ****                     "This is a long long long long long long long long long text, if it is long eno
 1099              		.loc 1 69 9 is_stmt 1 discriminator 3 view .LVU261
 1100 022e 0023     		movs	r3, #0
 1101 0230 794A     		ldr	r2, .L34+36
 1102 0232 1946     		mov	r1, r3
 1103 0234 5846     		mov	r0, fp
 1104 0236 FFF7FEFF 		bl	create_text
 1105              	.LVL138:
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1106              		.loc 1 68 33 discriminator 3 view .LVU262
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1107              		.loc 1 68 34 is_stmt 0 discriminator 3 view .LVU263
 1108 023a 0135     		adds	r5, r5, #1
 1109              	.LVL139:
 1110              	.L30:
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1111              		.loc 1 68 25 is_stmt 1 discriminator 1 view .LVU264
  68:lvgl/examples/widgets/menu/lv_example_menu_5.c ****         create_text(section, NULL,
 1112              		.loc 1 68 5 is_stmt 0 discriminator 1 view .LVU265
 1113 023c 0E2D     		cmp	r5, #14
 1114 023e F6D9     		bls	.L31
 1115              	.LBE129:
  74:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_about_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
 1116              		.loc 1 74 5 is_stmt 1 view .LVU266
  74:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_about_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu
 1117              		.loc 1 74 33 is_stmt 0 view .LVU267
 1118 0240 0021     		movs	r1, #0
 1119 0242 2046     		mov	r0, r4
 1120 0244 FFF7FEFF 		bl	lv_menu_page_create
 1121              	.LVL140:
 1122 0248 0546     		mov	r5, r0
 1123              	.LVL141:
  75:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_about_page);
 1124              		.loc 1 75 5 is_stmt 1 view .LVU268
  75:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_about_page);
 1125              		.loc 1 75 72 is_stmt 0 view .LVU269
 1126 024a 2046     		mov	r0, r4
 1127              	.LVL142:
  75:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_about_page);
 1128              		.loc 1 75 72 view .LVU270
 1129 024c FFF7FEFF 		bl	lv_menu_get_main_header
 1130              	.LVL143:
 1131              	.LBB130:
 1132              	.LBI130:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 53


 1133              		.loc 5 115 26 is_stmt 1 view .LVU271
 1134              	.LBB131:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1135              		.loc 5 117 5 view .LVU272
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1136              		.loc 5 117 26 is_stmt 0 view .LVU273
 1137 0250 1222     		movs	r2, #18
 1138 0252 0021     		movs	r1, #0
 1139 0254 FFF7FEFF 		bl	lv_obj_get_style_prop
 1140              	.LVL144:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1141              		.loc 5 118 5 is_stmt 1 view .LVU274
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1142              		.loc 5 118 12 is_stmt 0 view .LVU275
 1143 0258 0FFA80FB 		sxth	fp, r0
 1144              	.LVL145:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1145              		.loc 5 118 12 view .LVU276
 1146              	.LBE131:
 1147              	.LBE130:
 1148              	.LBB132:
 1149              	.LBI132:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 1150              		.loc 7 213 20 is_stmt 1 view .LVU277
 1151              	.LBB133:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 1152              		.loc 7 215 5 view .LVU278
 1153 025c 0022     		movs	r2, #0
 1154 025e 5946     		mov	r1, fp
 1155 0260 2846     		mov	r0, r5
 1156 0262 FFF7FEFF 		bl	lv_obj_set_style_pad_left
 1157              	.LVL146:
 1158              		.loc 7 216 5 view .LVU279
 1159 0266 0022     		movs	r2, #0
 1160 0268 5946     		mov	r1, fp
 1161 026a 2846     		mov	r0, r5
 1162 026c FFF7FEFF 		bl	lv_obj_set_style_pad_right
 1163              	.LVL147:
 1164              		.loc 7 216 5 is_stmt 0 view .LVU280
 1165              	.LBE133:
 1166              	.LBE132:
  76:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_about_page);
 1167              		.loc 1 76 5 is_stmt 1 view .LVU281
 1168 0270 2846     		mov	r0, r5
 1169 0272 FFF7FEFF 		bl	lv_menu_separator_create
 1170              	.LVL148:
  77:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Software information", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1171              		.loc 1 77 5 view .LVU282
  77:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Software information", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1172              		.loc 1 77 15 is_stmt 0 view .LVU283
 1173 0276 2846     		mov	r0, r5
 1174 0278 FFF7FEFF 		bl	lv_menu_section_create
 1175              	.LVL149:
 1176 027c 8346     		mov	fp, r0
 1177              	.LVL150:
  78:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_software_info_page);
 1178              		.loc 1 78 5 is_stmt 1 view .LVU284
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 54


  78:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_software_info_page);
 1179              		.loc 1 78 12 is_stmt 0 view .LVU285
 1180 027e 0023     		movs	r3, #0
 1181 0280 664A     		ldr	r2, .L34+40
 1182 0282 1946     		mov	r1, r3
 1183 0284 FFF7FEFF 		bl	create_text
 1184              	.LVL151:
  78:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_software_info_page);
 1185              		.loc 1 78 12 view .LVU286
 1186 0288 0146     		mov	r1, r0
 1187              	.LVL152:
  79:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Legal information", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1188              		.loc 1 79 5 is_stmt 1 view .LVU287
 1189 028a 5246     		mov	r2, r10
 1190 028c 2046     		mov	r0, r4
 1191              	.LVL153:
  79:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "Legal information", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1192              		.loc 1 79 5 is_stmt 0 view .LVU288
 1193 028e FFF7FEFF 		bl	lv_menu_set_load_page_event
 1194              	.LVL154:
  80:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_legal_info_page);
 1195              		.loc 1 80 5 is_stmt 1 view .LVU289
  80:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_legal_info_page);
 1196              		.loc 1 80 12 is_stmt 0 view .LVU290
 1197 0292 0023     		movs	r3, #0
 1198 0294 624A     		ldr	r2, .L34+44
 1199 0296 1946     		mov	r1, r3
 1200 0298 5846     		mov	r0, fp
 1201 029a FFF7FEFF 		bl	create_text
 1202              	.LVL155:
 1203 029e 0146     		mov	r1, r0
 1204              	.LVL156:
  81:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1205              		.loc 1 81 5 is_stmt 1 view .LVU291
 1206 02a0 4A46     		mov	r2, r9
 1207 02a2 2046     		mov	r0, r4
 1208              	.LVL157:
  81:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1209              		.loc 1 81 5 is_stmt 0 view .LVU292
 1210 02a4 FFF7FEFF 		bl	lv_menu_set_load_page_event
 1211              	.LVL158:
  83:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_menu_mode_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
 1212              		.loc 1 83 5 is_stmt 1 view .LVU293
  83:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(sub_menu_mode_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(
 1213              		.loc 1 83 37 is_stmt 0 view .LVU294
 1214 02a8 0021     		movs	r1, #0
 1215 02aa 2046     		mov	r0, r4
 1216 02ac FFF7FEFF 		bl	lv_menu_page_create
 1217              	.LVL159:
 1218 02b0 8246     		mov	r10, r0
 1219              	.LVL160:
  84:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_menu_mode_page);
 1220              		.loc 1 84 5 is_stmt 1 view .LVU295
  84:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_menu_mode_page);
 1221              		.loc 1 84 76 is_stmt 0 view .LVU296
 1222 02b2 2046     		mov	r0, r4
 1223              	.LVL161:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 55


  84:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_separator_create(sub_menu_mode_page);
 1224              		.loc 1 84 76 view .LVU297
 1225 02b4 FFF7FEFF 		bl	lv_menu_get_main_header
 1226              	.LVL162:
 1227              	.LBB134:
 1228              	.LBI134:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 1229              		.loc 5 115 26 is_stmt 1 view .LVU298
 1230              	.LBB135:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1231              		.loc 5 117 5 view .LVU299
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1232              		.loc 5 117 26 is_stmt 0 view .LVU300
 1233 02b8 1222     		movs	r2, #18
 1234 02ba 0021     		movs	r1, #0
 1235 02bc FFF7FEFF 		bl	lv_obj_get_style_prop
 1236              	.LVL163:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1237              		.loc 5 118 5 is_stmt 1 view .LVU301
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1238              		.loc 5 118 12 is_stmt 0 view .LVU302
 1239 02c0 0FFA80F9 		sxth	r9, r0
 1240              	.LVL164:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1241              		.loc 5 118 12 view .LVU303
 1242              	.LBE135:
 1243              	.LBE134:
 1244              	.LBB136:
 1245              	.LBI136:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 1246              		.loc 7 213 20 is_stmt 1 view .LVU304
 1247              	.LBB137:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 1248              		.loc 7 215 5 view .LVU305
 1249 02c4 0022     		movs	r2, #0
 1250 02c6 4946     		mov	r1, r9
 1251 02c8 5046     		mov	r0, r10
 1252 02ca FFF7FEFF 		bl	lv_obj_set_style_pad_left
 1253              	.LVL165:
 1254              		.loc 7 216 5 view .LVU306
 1255 02ce 0022     		movs	r2, #0
 1256 02d0 4946     		mov	r1, r9
 1257 02d2 5046     		mov	r0, r10
 1258 02d4 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 1259              	.LVL166:
 1260              		.loc 7 216 5 is_stmt 0 view .LVU307
 1261              	.LBE137:
 1262              	.LBE136:
  85:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(sub_menu_mode_page);
 1263              		.loc 1 85 5 is_stmt 1 view .LVU308
 1264 02d8 5046     		mov	r0, r10
 1265 02da FFF7FEFF 		bl	lv_menu_separator_create
 1266              	.LVL167:
  86:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_switch(section, LV_SYMBOL_AUDIO, "Sidebar enable", true);
 1267              		.loc 1 86 5 view .LVU309
  86:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_switch(section, LV_SYMBOL_AUDIO, "Sidebar enable", true);
 1268              		.loc 1 86 15 is_stmt 0 view .LVU310
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 56


 1269 02de CDF80CA0 		str	r10, [sp, #12]
 1270 02e2 5046     		mov	r0, r10
 1271 02e4 FFF7FEFF 		bl	lv_menu_section_create
 1272              	.LVL168:
  87:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_event_cb(lv_obj_get_child(cont, 2), switch_handler, LV_EVENT_VALUE_CHANGED, menu);
 1273              		.loc 1 87 5 is_stmt 1 view .LVU311
  87:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_add_event_cb(lv_obj_get_child(cont, 2), switch_handler, LV_EVENT_VALUE_CHANGED, menu);
 1274              		.loc 1 87 12 is_stmt 0 view .LVU312
 1275 02e8 0123     		movs	r3, #1
 1276 02ea 4E4A     		ldr	r2, .L34+48
 1277 02ec 4749     		ldr	r1, .L34+24
 1278 02ee FFF7FEFF 		bl	create_switch
 1279              	.LVL169:
  88:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1280              		.loc 1 88 5 is_stmt 1 view .LVU313
 1281 02f2 0221     		movs	r1, #2
 1282 02f4 FFF7FEFF 		bl	lv_obj_get_child
 1283              	.LVL170:
  88:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1284              		.loc 1 88 5 is_stmt 0 view .LVU314
 1285 02f8 2346     		mov	r3, r4
 1286 02fa 1C22     		movs	r2, #28
 1287 02fc 4A49     		ldr	r1, .L34+52
 1288 02fe FFF7FEFF 		bl	lv_obj_add_event_cb
 1289              	.LVL171:
  91:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(root_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu), 0)
 1290              		.loc 1 91 5 is_stmt 1 view .LVU315
  91:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(root_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu), 0)
 1291              		.loc 1 91 17 is_stmt 0 view .LVU316
 1292 0302 4A49     		ldr	r1, .L34+56
 1293 0304 2046     		mov	r0, r4
 1294 0306 FFF7FEFF 		bl	lv_menu_page_create
 1295              	.LVL172:
 1296 030a 8246     		mov	r10, r0
 1297              	.LVL173:
  91:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_obj_set_style_pad_hor(root_page, lv_obj_get_style_pad_left(lv_menu_get_main_header(menu), 0)
 1298              		.loc 1 91 15 view .LVU317
 1299 030c DFF83491 		ldr	r9, .L34+80
 1300 0310 C9F80000 		str	r0, [r9]
  92:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(root_page);
 1301              		.loc 1 92 5 is_stmt 1 view .LVU318
  92:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(root_page);
 1302              		.loc 1 92 67 is_stmt 0 view .LVU319
 1303 0314 2046     		mov	r0, r4
 1304 0316 FFF7FEFF 		bl	lv_menu_get_main_header
 1305              	.LVL174:
 1306              	.LBB138:
 1307              	.LBI138:
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** {
 1308              		.loc 5 115 26 is_stmt 1 view .LVU320
 1309              	.LBB139:
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1310              		.loc 5 117 5 view .LVU321
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h ****     return (lv_coord_t)v.num;
 1311              		.loc 5 117 26 is_stmt 0 view .LVU322
 1312 031a 1222     		movs	r2, #18
 1313 031c 0021     		movs	r1, #0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 57


 1314 031e FFF7FEFF 		bl	lv_obj_get_style_prop
 1315              	.LVL175:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1316              		.loc 5 118 5 is_stmt 1 view .LVU323
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1317              		.loc 5 118 12 is_stmt 0 view .LVU324
 1318 0322 0FFA80FB 		sxth	fp, r0
 1319              	.LVL176:
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style_gen.h **** }
 1320              		.loc 5 118 12 view .LVU325
 1321              	.LBE139:
 1322              	.LBE138:
 1323              	.LBB140:
 1324              	.LBI140:
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h **** {
 1325              		.loc 7 213 20 is_stmt 1 view .LVU326
 1326              	.LBB141:
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_style.h ****     lv_obj_set_style_pad_right(obj, value, selector);
 1327              		.loc 7 215 5 view .LVU327
 1328 0326 0022     		movs	r2, #0
 1329 0328 5946     		mov	r1, fp
 1330 032a 5046     		mov	r0, r10
 1331 032c FFF7FEFF 		bl	lv_obj_set_style_pad_left
 1332              	.LVL177:
 1333              		.loc 7 216 5 view .LVU328
 1334 0330 0022     		movs	r2, #0
 1335 0332 5946     		mov	r1, fp
 1336 0334 5046     		mov	r0, r10
 1337 0336 FFF7FEFF 		bl	lv_obj_set_style_pad_right
 1338              	.LVL178:
 1339              		.loc 7 216 5 is_stmt 0 view .LVU329
 1340              	.LBE141:
 1341              	.LBE140:
  93:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Mechanics", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1342              		.loc 1 93 5 is_stmt 1 view .LVU330
  93:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Mechanics", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1343              		.loc 1 93 15 is_stmt 0 view .LVU331
 1344 033a D9F80000 		ldr	r0, [r9]
 1345 033e FFF7FEFF 		bl	lv_menu_section_create
 1346              	.LVL179:
 1347 0342 8346     		mov	fp, r0
 1348              	.LVL180:
  94:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_mechanics_page);
 1349              		.loc 1 94 5 is_stmt 1 view .LVU332
  94:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_mechanics_page);
 1350              		.loc 1 94 12 is_stmt 0 view .LVU333
 1351 0344 DFF8B0A0 		ldr	r10, .L34+4
 1352 0348 0023     		movs	r3, #0
 1353 034a 394A     		ldr	r2, .L34+60
 1354 034c 5146     		mov	r1, r10
 1355 034e FFF7FEFF 		bl	create_text
 1356              	.LVL181:
  94:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_mechanics_page);
 1357              		.loc 1 94 12 view .LVU334
 1358 0352 0146     		mov	r1, r0
 1359              	.LVL182:
  95:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_AUDIO, "Sound", LV_MENU_ITEM_BUILDER_VARIANT_1);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 58


 1360              		.loc 1 95 5 is_stmt 1 view .LVU335
 1361 0354 4246     		mov	r2, r8
 1362 0356 2046     		mov	r0, r4
 1363              	.LVL183:
  95:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_AUDIO, "Sound", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1364              		.loc 1 95 5 is_stmt 0 view .LVU336
 1365 0358 FFF7FEFF 		bl	lv_menu_set_load_page_event
 1366              	.LVL184:
  96:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_sound_page);
 1367              		.loc 1 96 5 is_stmt 1 view .LVU337
  96:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_sound_page);
 1368              		.loc 1 96 12 is_stmt 0 view .LVU338
 1369 035c 0023     		movs	r3, #0
 1370 035e 2A4A     		ldr	r2, .L34+20
 1371 0360 2A49     		ldr	r1, .L34+24
 1372 0362 5846     		mov	r0, fp
 1373 0364 FFF7FEFF 		bl	create_text
 1374              	.LVL185:
 1375 0368 0146     		mov	r1, r0
 1376              	.LVL186:
  97:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Display", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1377              		.loc 1 97 5 is_stmt 1 view .LVU339
 1378 036a 3A46     		mov	r2, r7
 1379 036c 2046     		mov	r0, r4
 1380              	.LVL187:
  97:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Display", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1381              		.loc 1 97 5 is_stmt 0 view .LVU340
 1382 036e FFF7FEFF 		bl	lv_menu_set_load_page_event
 1383              	.LVL188:
  98:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_display_page);
 1384              		.loc 1 98 5 is_stmt 1 view .LVU341
  98:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_display_page);
 1385              		.loc 1 98 12 is_stmt 0 view .LVU342
 1386 0372 0023     		movs	r3, #0
 1387 0374 2F4A     		ldr	r2, .L34+64
 1388 0376 5146     		mov	r1, r10
 1389 0378 5846     		mov	r0, fp
 1390 037a FFF7FEFF 		bl	create_text
 1391              	.LVL189:
 1392 037e 0146     		mov	r1, r0
 1393              	.LVL190:
  99:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1394              		.loc 1 99 5 is_stmt 1 view .LVU343
 1395 0380 3246     		mov	r2, r6
 1396 0382 2046     		mov	r0, r4
 1397              	.LVL191:
  99:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1398              		.loc 1 99 5 is_stmt 0 view .LVU344
 1399 0384 FFF7FEFF 		bl	lv_menu_set_load_page_event
 1400              	.LVL192:
 101:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     section = lv_menu_section_create(root_page);
 1401              		.loc 1 101 5 is_stmt 1 view .LVU345
 1402 0388 0023     		movs	r3, #0
 1403 038a 2B4A     		ldr	r2, .L34+68
 1404 038c 1946     		mov	r1, r3
 1405 038e D9F80000 		ldr	r0, [r9]
 1406 0392 FFF7FEFF 		bl	create_text
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 59


 1407              	.LVL193:
 102:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "About", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1408              		.loc 1 102 5 view .LVU346
 102:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, NULL, "About", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1409              		.loc 1 102 15 is_stmt 0 view .LVU347
 1410 0396 D9F80000 		ldr	r0, [r9]
 1411 039a FFF7FEFF 		bl	lv_menu_section_create
 1412              	.LVL194:
 1413 039e 0646     		mov	r6, r0
 1414              	.LVL195:
 103:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_about_page);
 1415              		.loc 1 103 5 is_stmt 1 view .LVU348
 103:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_about_page);
 1416              		.loc 1 103 12 is_stmt 0 view .LVU349
 1417 03a0 0023     		movs	r3, #0
 1418 03a2 264A     		ldr	r2, .L34+72
 1419 03a4 1946     		mov	r1, r3
 1420 03a6 FFF7FEFF 		bl	create_text
 1421              	.LVL196:
 103:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_about_page);
 1422              		.loc 1 103 12 view .LVU350
 1423 03aa 0146     		mov	r1, r0
 1424              	.LVL197:
 104:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Menu mode", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1425              		.loc 1 104 5 is_stmt 1 view .LVU351
 1426 03ac 2A46     		mov	r2, r5
 1427 03ae 2046     		mov	r0, r4
 1428              	.LVL198:
 104:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     cont = create_text(section, LV_SYMBOL_SETTINGS, "Menu mode", LV_MENU_ITEM_BUILDER_VARIANT_1);
 1429              		.loc 1 104 5 is_stmt 0 view .LVU352
 1430 03b0 FFF7FEFF 		bl	lv_menu_set_load_page_event
 1431              	.LVL199:
 105:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_menu_mode_page);
 1432              		.loc 1 105 5 is_stmt 1 view .LVU353
 105:lvgl/examples/widgets/menu/lv_example_menu_5.c ****     lv_menu_set_load_page_event(menu, cont, sub_menu_mode_page);
 1433              		.loc 1 105 12 is_stmt 0 view .LVU354
 1434 03b4 0023     		movs	r3, #0
 1435 03b6 224A     		ldr	r2, .L34+76
 1436 03b8 5146     		mov	r1, r10
 1437 03ba 3046     		mov	r0, r6
 1438 03bc FFF7FEFF 		bl	create_text
 1439              	.LVL200:
 1440 03c0 0146     		mov	r1, r0
 1441              	.LVL201:
 106:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1442              		.loc 1 106 5 is_stmt 1 view .LVU355
 1443 03c2 039A     		ldr	r2, [sp, #12]
 1444 03c4 2046     		mov	r0, r4
 1445              	.LVL202:
 106:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1446              		.loc 1 106 5 is_stmt 0 view .LVU356
 1447 03c6 FFF7FEFF 		bl	lv_menu_set_load_page_event
 1448              	.LVL203:
 108:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1449              		.loc 1 108 5 is_stmt 1 view .LVU357
 1450 03ca D9F80010 		ldr	r1, [r9]
 1451 03ce 2046     		mov	r0, r4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 60


 1452 03d0 FFF7FEFF 		bl	lv_menu_set_sidebar_page
 1453              	.LVL204:
 110:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 1454              		.loc 1 110 5 view .LVU358
 110:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 1455              		.loc 1 110 53 is_stmt 0 view .LVU359
 1456 03d4 2046     		mov	r0, r4
 1457 03d6 FFF7FEFF 		bl	lv_menu_get_cur_sidebar_page
 1458              	.LVL205:
 110:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 1459              		.loc 1 110 36 view .LVU360
 1460 03da 0021     		movs	r1, #0
 1461 03dc FFF7FEFF 		bl	lv_obj_get_child
 1462              	.LVL206:
 110:lvgl/examples/widgets/menu/lv_example_menu_5.c **** }
 1463              		.loc 1 110 5 view .LVU361
 1464 03e0 0021     		movs	r1, #0
 1465 03e2 FFF7FEFF 		bl	lv_obj_get_child
 1466              	.LVL207:
 1467 03e6 0022     		movs	r2, #0
 1468 03e8 0721     		movs	r1, #7
 1469 03ea FFF7FEFF 		bl	lv_event_send
 1470              	.LVL208:
 111:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1471              		.loc 1 111 1 view .LVU362
 1472 03ee 05B0     		add	sp, sp, #20
 1473              		.cfi_def_cfa_offset 36
 1474              		@ sp needed
 1475 03f0 BDE8F08F 		pop	{r4, r5, r6, r7, r8, r9, r10, fp, pc}
 1476              	.LVL209:
 1477              	.L35:
 111:lvgl/examples/widgets/menu/lv_example_menu_5.c **** 
 1478              		.loc 1 111 1 view .LVU363
 1479              		.align	2
 1480              	.L34:
 1481 03f4 00000000 		.word	back_event_handler
 1482 03f8 0C000000 		.word	.LC3
 1483 03fc 00000000 		.word	.LC2
 1484 0400 10000000 		.word	.LC4
 1485 0404 20000000 		.word	.LC5
 1486 0408 30000000 		.word	.LC6
 1487 040c 38000000 		.word	.LC7
 1488 0410 3C000000 		.word	.LC8
 1489 0414 48000000 		.word	.LC9
 1490 0418 54000000 		.word	.LC10
 1491 041c B8000000 		.word	.LC11
 1492 0420 D0000000 		.word	.LC12
 1493 0424 E4000000 		.word	.LC13
 1494 0428 00000000 		.word	switch_handler
 1495 042c F4000000 		.word	.LC14
 1496 0430 00010000 		.word	.LC15
 1497 0434 0C010000 		.word	.LC16
 1498 0438 14010000 		.word	.LC17
 1499 043c 1C010000 		.word	.LC18
 1500 0440 24010000 		.word	.LC19
 1501 0444 00000000 		.word	.LANCHOR0
 1502              		.cfi_endproc
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 61


 1503              	.LFE204:
 1505              		.global	root_page
 1506              		.section	.bss.root_page,"aw",%nobits
 1507              		.align	2
 1508              		.set	.LANCHOR0,. + 0
 1511              	root_page:
 1512 0000 00000000 		.space	4
 1513              		.text
 1514              	.Letext0:
 1515              		.file 8 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 1516              		.file 9 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 1517              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_anim.h"
 1518              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 1519              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 1520              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 1521              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 1522              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 1523              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 1524              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 1525              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 1526              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_label.h"
 1527              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_bar.h"
 1528              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/menu/lv_menu.h"
 1529              		.file 22 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/imgbtn/lv_imgbtn.h"
 1530              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_switch.h"
 1531              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/layouts/flex/lv_flex.h"
 1532              		.file 25 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/widgets/lv_img.h"
 1533              		.file 26 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_tree.h"
 1534              		.file 27 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/msgbox/lv_msgbox.h"
 1535              		.file 28 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 62


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_menu_5.c
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:19     .text.switch_handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:24     .text.switch_handler:00000000 switch_handler
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:128    .text.switch_handler:00000070 $d
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:133    .rodata.back_event_handler.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:140    .text.back_event_handler:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:145    .text.back_event_handler:00000000 back_event_handler
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:224    .text.back_event_handler:0000003c $d
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:230    .text.create_text:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:235    .text.create_text:00000000 create_text
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:347    .text.create_slider:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:352    .text.create_slider:00000000 create_slider
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:441    .text.create_switch:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:446    .text.create_switch:00000000 create_switch
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:488    .rodata.lv_example_menu_5.str1.4:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:544    .text.lv_example_menu_5:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:550    .text.lv_example_menu_5:00000000 lv_example_menu_5
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:1481   .text.lv_example_menu_5:000003f4 $d
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:1511   .bss.root_page:00000000 root_page
C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s:1507   .bss.root_page:00000000 $d

UNDEFINED SYMBOLS
lv_event_get_code
lv_event_get_user_data
lv_event_get_target
lv_obj_has_state
lv_menu_set_page
lv_menu_set_sidebar_page
lv_menu_get_cur_sidebar_page
lv_obj_get_child
lv_event_send
lv_menu_clear_history
lv_menu_back_btn_is_root
lv_msgbox_create
lv_obj_align
lv_menu_cont_create
lv_img_create
lv_img_set_src
lv_label_create
lv_label_set_text
lv_label_set_long_mode
lv_obj_set_flex_grow
lv_obj_add_flag
lv_obj_swap
lv_slider_create
lv_bar_set_range
lv_bar_set_value
lv_switch_create
lv_obj_add_state
lv_disp_get_default
lv_disp_get_scr_act
lv_menu_create
lv_obj_get_style_prop
lv_color_darken
lv_obj_set_style_bg_color
lv_menu_set_mode_root_back_btn
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccIgW6DC.s 			page 63


lv_obj_add_event_cb
lv_disp_get_hor_res
lv_disp_get_ver_res
lv_obj_set_size
lv_menu_page_create
lv_menu_get_main_header
lv_obj_set_style_pad_left
lv_obj_set_style_pad_right
lv_menu_separator_create
lv_menu_section_create
lv_menu_set_load_page_event
