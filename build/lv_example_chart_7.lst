ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_chart_7.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.add_data,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.thumb
  22              		.thumb_func
  24              	add_data:
  25              	.LVL0:
  26              	.LFB205:
  27              		.file 1 "lvgl/examples/widgets/chart/lv_example_chart_7.c"
   1:lvgl/examples/widgets/chart/lv_example_chart_7.c **** #include "../../lv_examples.h"
   2:lvgl/examples/widgets/chart/lv_example_chart_7.c **** #if LV_USE_CHART && LV_BUILD_EXAMPLES
   3:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
   4:lvgl/examples/widgets/chart/lv_example_chart_7.c **** static void draw_event_cb(lv_event_t * e)
   5:lvgl/examples/widgets/chart/lv_example_chart_7.c **** {
   6:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_draw_part_dsc_t * dsc = lv_event_get_draw_part_dsc(e);
   7:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     if(dsc->part == LV_PART_ITEMS) {
   8:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_obj_t * obj = lv_event_get_target(e);
   9:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_chart_series_t * ser = lv_chart_get_series_next(obj, NULL);
  10:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t cnt = lv_chart_get_point_count(obj);
  11:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*Make older value more transparent*/
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         dsc->rect_dsc->bg_opa = (LV_OPA_COVER *  dsc->id) / (cnt - 1);
  13:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  14:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*Make smaller values blue, higher values red*/
  15:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_coord_t * x_array = lv_chart_get_x_array(obj, ser);
  16:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_coord_t * y_array = lv_chart_get_y_array(obj, ser);
  17:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*dsc->id is the tells drawing order, but we need the ID of the point being drawn.*/
  18:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t start_point = lv_chart_get_x_start_point(obj, ser);
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t p_act = (start_point + dsc->id) % cnt; /*Consider start point to get the index of 
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
  22:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         dsc->rect_dsc->bg_color = lv_color_mix(lv_palette_main(LV_PALETTE_RED),
  24:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
  25:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                x_opa + y_opa);
  26:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     }
  27:lvgl/examples/widgets/chart/lv_example_chart_7.c **** }
  28:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  29:lvgl/examples/widgets/chart/lv_example_chart_7.c **** static void add_data(lv_timer_t * timer)
  30:lvgl/examples/widgets/chart/lv_example_chart_7.c **** {
  28              		.loc 1 30 1 view -0
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 2


  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 30 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              		.cfi_def_cfa_offset 16
  35              		.cfi_offset 4, -16
  36              		.cfi_offset 5, -12
  37              		.cfi_offset 6, -8
  38              		.cfi_offset 14, -4
  31:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     LV_UNUSED(timer);
  39              		.loc 1 31 5 is_stmt 1 view .LVU2
  32:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_t * chart = timer->user_data;
  40              		.loc 1 32 5 view .LVU3
  41              		.loc 1 32 16 is_stmt 0 view .LVU4
  42 0002 C668     		ldr	r6, [r0, #12]
  43              	.LVL1:
  33:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_next_value2(chart, lv_chart_get_series_next(chart, NULL), lv_rand(0, 200), lv_rand
  44              		.loc 1 33 5 is_stmt 1 view .LVU5
  45 0004 0021     		movs	r1, #0
  46 0006 3046     		mov	r0, r6
  47              	.LVL2:
  48              		.loc 1 33 5 is_stmt 0 view .LVU6
  49 0008 FFF7FEFF 		bl	lv_chart_get_series_next
  50              	.LVL3:
  51 000c 0446     		mov	r4, r0
  52              		.loc 1 33 76 view .LVU7
  53 000e C821     		movs	r1, #200
  54 0010 0020     		movs	r0, #0
  55 0012 FFF7FEFF 		bl	lv_rand
  56              	.LVL4:
  57 0016 0546     		mov	r5, r0
  58              		.loc 1 33 93 view .LVU8
  59 0018 4FF47A71 		mov	r1, #1000
  60 001c 0020     		movs	r0, #0
  61 001e FFF7FEFF 		bl	lv_rand
  62              	.LVL5:
  63              		.loc 1 33 5 view .LVU9
  64 0022 03B2     		sxth	r3, r0
  65 0024 2AB2     		sxth	r2, r5
  66 0026 2146     		mov	r1, r4
  67 0028 3046     		mov	r0, r6
  68 002a FFF7FEFF 		bl	lv_chart_set_next_value2
  69              	.LVL6:
  34:lvgl/examples/widgets/chart/lv_example_chart_7.c **** }
  70              		.loc 1 34 1 view .LVU10
  71 002e 70BD     		pop	{r4, r5, r6, pc}
  72              		.loc 1 34 1 view .LVU11
  73              		.cfi_endproc
  74              	.LFE205:
  76              		.section	.text.draw_event_cb,"ax",%progbits
  77              		.align	1
  78              		.syntax unified
  79              		.thumb
  80              		.thumb_func
  82              	draw_event_cb:
  83              	.LVL7:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 3


  84              	.LFB204:
   5:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_draw_part_dsc_t * dsc = lv_event_get_draw_part_dsc(e);
  85              		.loc 1 5 1 is_stmt 1 view -0
  86              		.cfi_startproc
  87              		@ args = 0, pretend = 0, frame = 0
  88              		@ frame_needed = 0, uses_anonymous_args = 0
   5:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_draw_part_dsc_t * dsc = lv_event_get_draw_part_dsc(e);
  89              		.loc 1 5 1 is_stmt 0 view .LVU13
  90 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
  91              		.cfi_def_cfa_offset 32
  92              		.cfi_offset 3, -32
  93              		.cfi_offset 4, -28
  94              		.cfi_offset 5, -24
  95              		.cfi_offset 6, -20
  96              		.cfi_offset 7, -16
  97              		.cfi_offset 8, -12
  98              		.cfi_offset 9, -8
  99              		.cfi_offset 14, -4
 100 0004 0546     		mov	r5, r0
   6:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     if(dsc->part == LV_PART_ITEMS) {
 101              		.loc 1 6 5 is_stmt 1 view .LVU14
   6:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     if(dsc->part == LV_PART_ITEMS) {
 102              		.loc 1 6 36 is_stmt 0 view .LVU15
 103 0006 FFF7FEFF 		bl	lv_event_get_draw_part_dsc
 104              	.LVL8:
   7:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_obj_t * obj = lv_event_get_target(e);
 105              		.loc 1 7 5 is_stmt 1 view .LVU16
   7:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_obj_t * obj = lv_event_get_target(e);
 106              		.loc 1 7 11 is_stmt 0 view .LVU17
 107 000a 436B     		ldr	r3, [r0, #52]
   7:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_obj_t * obj = lv_event_get_target(e);
 108              		.loc 1 7 7 view .LVU18
 109 000c B3F5A02F 		cmp	r3, #327680
 110 0010 01D0     		beq	.L6
 111              	.LVL9:
 112              	.L3:
  27:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 113              		.loc 1 27 1 view .LVU19
 114 0012 BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 115              	.LVL10:
 116              	.L6:
  27:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 117              		.loc 1 27 1 view .LVU20
 118 0016 0446     		mov	r4, r0
 119              	.LBB5:
   8:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_chart_series_t * ser = lv_chart_get_series_next(obj, NULL);
 120              		.loc 1 8 9 is_stmt 1 view .LVU21
   8:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_chart_series_t * ser = lv_chart_get_series_next(obj, NULL);
 121              		.loc 1 8 26 is_stmt 0 view .LVU22
 122 0018 2846     		mov	r0, r5
 123              	.LVL11:
   8:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_chart_series_t * ser = lv_chart_get_series_next(obj, NULL);
 124              		.loc 1 8 26 view .LVU23
 125 001a FFF7FEFF 		bl	lv_event_get_target
 126              	.LVL12:
 127 001e 0546     		mov	r5, r0
 128              	.LVL13:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 4


   9:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t cnt = lv_chart_get_point_count(obj);
 129              		.loc 1 9 9 is_stmt 1 view .LVU24
   9:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t cnt = lv_chart_get_point_count(obj);
 130              		.loc 1 9 35 is_stmt 0 view .LVU25
 131 0020 0021     		movs	r1, #0
 132 0022 FFF7FEFF 		bl	lv_chart_get_series_next
 133              	.LVL14:
   9:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t cnt = lv_chart_get_point_count(obj);
 134              		.loc 1 9 35 view .LVU26
 135 0026 8146     		mov	r9, r0
 136              	.LVL15:
  10:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*Make older value more transparent*/
 137              		.loc 1 10 9 is_stmt 1 view .LVU27
  10:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*Make older value more transparent*/
 138              		.loc 1 10 24 is_stmt 0 view .LVU28
 139 0028 2846     		mov	r0, r5
 140              	.LVL16:
  10:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*Make older value more transparent*/
 141              		.loc 1 10 24 view .LVU29
 142 002a FFF7FEFF 		bl	lv_chart_get_point_count
 143              	.LVL17:
 144 002e 0746     		mov	r7, r0
 145              	.LVL18:
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 146              		.loc 1 12 9 is_stmt 1 view .LVU30
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 147              		.loc 1 12 53 is_stmt 0 view .LVU31
 148 0030 A36B     		ldr	r3, [r4, #56]
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 149              		.loc 1 12 47 view .LVU32
 150 0032 C3EB0323 		rsb	r3, r3, r3, lsl #8
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 151              		.loc 1 12 66 view .LVU33
 152 0036 421E     		subs	r2, r0, #1
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 153              		.loc 1 12 59 view .LVU34
 154 0038 B3FBF2F3 		udiv	r3, r3, r2
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 155              		.loc 1 12 12 view .LVU35
 156 003c 2269     		ldr	r2, [r4, #16]
  12:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 157              		.loc 1 12 31 view .LVU36
 158 003e D370     		strb	r3, [r2, #3]
  15:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_coord_t * y_array = lv_chart_get_y_array(obj, ser);
 159              		.loc 1 15 9 is_stmt 1 view .LVU37
  15:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_coord_t * y_array = lv_chart_get_y_array(obj, ser);
 160              		.loc 1 15 32 is_stmt 0 view .LVU38
 161 0040 4946     		mov	r1, r9
 162 0042 2846     		mov	r0, r5
 163              	.LVL19:
  15:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_coord_t * y_array = lv_chart_get_y_array(obj, ser);
 164              		.loc 1 15 32 view .LVU39
 165 0044 FFF7FEFF 		bl	lv_chart_get_x_array
 166              	.LVL20:
 167 0048 8046     		mov	r8, r0
 168              	.LVL21:
  16:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*dsc->id is the tells drawing order, but we need the ID of the point being drawn.*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 5


 169              		.loc 1 16 9 is_stmt 1 view .LVU40
  16:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*dsc->id is the tells drawing order, but we need the ID of the point being drawn.*/
 170              		.loc 1 16 32 is_stmt 0 view .LVU41
 171 004a 4946     		mov	r1, r9
 172 004c 2846     		mov	r0, r5
 173              	.LVL22:
  16:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         /*dsc->id is the tells drawing order, but we need the ID of the point being drawn.*/
 174              		.loc 1 16 32 view .LVU42
 175 004e FFF7FEFF 		bl	lv_chart_get_y_array
 176              	.LVL23:
 177 0052 0646     		mov	r6, r0
 178              	.LVL24:
  18:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t p_act = (start_point + dsc->id) % cnt; /*Consider start point to get the index of 
 179              		.loc 1 18 9 is_stmt 1 view .LVU43
  18:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t p_act = (start_point + dsc->id) % cnt; /*Consider start point to get the index of 
 180              		.loc 1 18 32 is_stmt 0 view .LVU44
 181 0054 4946     		mov	r1, r9
 182 0056 2846     		mov	r0, r5
 183              	.LVL25:
  18:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         uint32_t p_act = (start_point + dsc->id) % cnt; /*Consider start point to get the index of 
 184              		.loc 1 18 32 view .LVU45
 185 0058 FFF7FEFF 		bl	lv_chart_get_x_start_point
 186              	.LVL26:
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
 187              		.loc 1 19 9 is_stmt 1 view .LVU46
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
 188              		.loc 1 19 44 is_stmt 0 view .LVU47
 189 005c A26B     		ldr	r2, [r4, #56]
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
 190              		.loc 1 19 39 view .LVU48
 191 005e 0244     		add	r2, r2, r0
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
 192              		.loc 1 19 18 view .LVU49
 193 0060 B2FBF7F0 		udiv	r0, r2, r7
 194              	.LVL27:
  19:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t x_opa = (x_array[p_act] * LV_OPA_50) / 200;
 195              		.loc 1 19 18 view .LVU50
 196 0064 07FB1022 		mls	r2, r7, r0, r2
 197              	.LVL28:
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
 198              		.loc 1 20 9 is_stmt 1 view .LVU51
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
 199              		.loc 1 20 34 is_stmt 0 view .LVU52
 200 0068 38F91230 		ldrsh	r3, [r8, r2, lsl #1]
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
 201              		.loc 1 20 42 view .LVU53
 202 006c C3EBC313 		rsb	r3, r3, r3, lsl #7
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
 203              		.loc 1 20 55 view .LVU54
 204 0070 2849     		ldr	r1, .L7
 205 0072 81FB0301 		smull	r0, r1, r1, r3
 206 0076 DD17     		asrs	r5, r3, #31
 207              	.LVL29:
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
 208              		.loc 1 20 55 view .LVU55
 209 0078 C5EBA115 		rsb	r5, r5, r1, asr #6
  20:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_opa_t y_opa = (y_array[p_act] * LV_OPA_50) / 1000;
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 6


 210              		.loc 1 20 18 view .LVU56
 211 007c EDB2     		uxtb	r5, r5
 212              	.LVL30:
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 213              		.loc 1 21 9 is_stmt 1 view .LVU57
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 214              		.loc 1 21 34 is_stmt 0 view .LVU58
 215 007e 36F91230 		ldrsh	r3, [r6, r2, lsl #1]
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 216              		.loc 1 21 42 view .LVU59
 217 0082 C3EBC313 		rsb	r3, r3, r3, lsl #7
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 218              		.loc 1 21 55 view .LVU60
 219 0086 244A     		ldr	r2, .L7+4
 220              	.LVL31:
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 221              		.loc 1 21 55 view .LVU61
 222 0088 82FB0312 		smull	r1, r2, r2, r3
 223 008c DF17     		asrs	r7, r3, #31
 224              	.LVL32:
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 225              		.loc 1 21 55 view .LVU62
 226 008e C7EBA217 		rsb	r7, r7, r2, asr #6
  21:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 227              		.loc 1 21 18 view .LVU63
 228 0092 FFB2     		uxtb	r7, r7
 229              	.LVL33:
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 230              		.loc 1 23 9 is_stmt 1 view .LVU64
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 231              		.loc 1 23 35 is_stmt 0 view .LVU65
 232 0094 0020     		movs	r0, #0
 233 0096 FFF7FEFF 		bl	lv_palette_main
 234              	.LVL34:
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 235              		.loc 1 23 35 view .LVU66
 236 009a 0646     		mov	r6, r0
 237              	.LVL35:
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 238              		.loc 1 23 35 view .LVU67
 239 009c 0520     		movs	r0, #5
 240 009e FFF7FEFF 		bl	lv_palette_main
 241              	.LVL36:
 242 00a2 EB19     		adds	r3, r5, r7
 243 00a4 DBB2     		uxtb	r3, r3
  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 244              		.loc 1 23 12 view .LVU68
 245 00a6 2469     		ldr	r4, [r4, #16]
 246              	.LVL37:
 247              	.LBB6:
 248              	.LBI6:
 249              		.file 2 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @file lv_color.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 7


   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifndef LV_COLOR_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "../lv_conf_internal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_assert.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_math.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include "lv_types.h"
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*Error checking*/
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 24
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_DEPTH 24 is deprecated. Use LV_COLOR_DEPTH 32 instead (lv_conf.h)"
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH != 16 && LV_COLOR_16_SWAP != 0
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "LV_COLOR_16_SWAP requires LV_COLOR_DEPTH == 16. Set it in lv_conf.h"
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #include <stdint.h>
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*********************
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      DEFINES
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *********************/
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_DEPTH);
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** LV_EXPORT_CONST_INT(LV_COLOR_16_SWAP);
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Opacity percentages.
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** enum {
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_TRANSP = 0,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_0      = 0,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_10     = 25,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_20     = 51,
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_30     = 76,
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_40     = 102,
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_50     = 127,
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_60     = 153,
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_70     = 178,
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_80     = 204,
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_90     = 229,
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_100    = 255,
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_OPA_COVER  = 255,
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** };
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_OPA_MIN 2    /*Opacities below this will be transparent*/
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_OPA_MAX 253  /*Opacities above this will fully cover*/
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 8


  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 8
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 16
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SIZE 32
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #error "Invalid LV_COLOR_DEPTH in lv_conf.h! Set it to 1, 8, 16 or 32!"
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if defined(__cplusplus) && !defined(_LV_COLOR_HAS_MODERN_CPP)
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * MSVC compiler's definition of the __cplusplus indicating 199711L regardless to C++ standard versi
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * see https://devblogs.microsoft.com/cppblog/msvc-now-correctly-reports-cplusplus
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** * so we use _MSC_VER macro instead of __cplusplus
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifdef _MSC_VER
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if _MSC_VER >= 1900 /*Visual Studio 2015*/
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if __cplusplus >= 201103L
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 1
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif /*__cplusplus*/
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #ifndef _LV_COLOR_HAS_MODERN_CPP
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_HAS_MODERN_CPP 0
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if _LV_COLOR_HAS_MODERN_CPP
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*Fix msvc compiler error C4576 inside C++ code*/
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER lv_color_t
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_MAKE_TYPE_HELPER (lv_color_t)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Macros for all existing color depths
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R1(c, v) (c).ch.red = (uint8_t)((v) & 0x1)
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G1(c, v) (c).ch.green = (uint8_t)((v) & 0x1)
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B1(c, v) (c).ch.blue = (uint8_t)((v) & 0x1)
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A1(c, v) do {} while(0)
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R1(c) (c).ch.red
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G1(c) (c).ch.green
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B1(c) (c).ch.blue
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A1(c) 0xFF
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER1 {0x00}
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE1(r8, g8, b8)  {(uint8_t)((b8 >> 7) | (g8 >> 7) | (r8 >> 7))}
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R8(c, v) (c).ch.red = (uint8_t)((v) & 0x7U)
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G8(c, v) (c).ch.green = (uint8_t)((v) & 0x7U)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B8(c, v) (c).ch.blue = (uint8_t)((v) & 0x3U)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 9


 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A8(c, v) do {} while(0)
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R8(c) (c).ch.red
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G8(c) (c).ch.green
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B8(c) (c).ch.blue
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A8(c) 0xFF
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER8 {{0x00, 0x00, 0x00}}
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE8(r8, g8, b8) {{(uint8_t)((b8 >> 6) & 0x3U), (uint8_t)((g8 >> 5) & 0x7U), (ui
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R16(c, v) (c).ch.red = (uint8_t)((v) & 0x1FU)
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) (c).ch.green = (uint8_t)((v) & 0x3FU)
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G16(c, v) {(c).ch.green_h = (uint8_t)(((v) >> 3) & 0x7); (c).ch.green_l = (ui
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B16(c, v) (c).ch.blue = (uint8_t)((v) & 0x1FU)
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A16(c, v) do {} while(0)
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R16(c) (c).ch.red
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (c).ch.green
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G16(c) (((c).ch.green_h << 3) + (c).ch.green_l)
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B16(c) (c).ch.blue
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A16(c) 0xFF
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16  {{0x00, 0x00, 0x00}}
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((b8 >> 3) & 0x1FU), (uint8_t)((g8 >> 2) & 0x3FU), 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER16 {{0x00, 0x00, 0x00, 0x00}}
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE16(r8, g8, b8) {{(uint8_t)((g8 >> 5) & 0x7U), (uint8_t)((r8 >> 3) & 0x1FU), (
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_R32(c, v) (c).ch.red = (uint8_t)((v) & 0xFF)
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_G32(c, v) (c).ch.green = (uint8_t)((v) & 0xFF)
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_B32(c, v) (c).ch.blue = (uint8_t)((v) & 0xFF)
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_SET_A32(c, v) (c).ch.alpha = (uint8_t)((v) & 0xFF)
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_R32(c) (c).ch.red
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_G32(c) (c).ch.green
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_B32(c) (c).ch.blue
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_GET_A32(c) (c).ch.alpha
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define _LV_COLOR_ZERO_INITIALIZER32  {{0x00, 0x00, 0x00, 0x00}}
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** # define LV_COLOR_MAKE32(r8, g8, b8) {{b8, g8, r8, 0xff}} /*Fix 0xff alpha*/
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*---------------------------------------
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Macros for the current color depth
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * to set/get values of the color channels
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *------------------------------------------*/
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_R(c, v) LV_CONCAT(LV_COLOR_SET_R, LV_COLOR_DEPTH)(c, v)
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_G(c, v) LV_CONCAT(LV_COLOR_SET_G, LV_COLOR_DEPTH)(c, v)
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_B(c, v) LV_CONCAT(LV_COLOR_SET_B, LV_COLOR_DEPTH)(c, v)
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_SET_A(c, v) LV_CONCAT(LV_COLOR_SET_A, LV_COLOR_DEPTH)(c, v)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 10


 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_R(c) LV_CONCAT(LV_COLOR_GET_R, LV_COLOR_DEPTH)(c)
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_G(c) LV_CONCAT(LV_COLOR_GET_G, LV_COLOR_DEPTH)(c)
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_B(c) LV_CONCAT(LV_COLOR_GET_B, LV_COLOR_DEPTH)(c)
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_GET_A(c) LV_CONCAT(LV_COLOR_GET_A, LV_COLOR_DEPTH)(c)
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define _LV_COLOR_ZERO_INITIALIZER LV_CONCAT(_LV_COLOR_ZERO_INITIALIZER, LV_COLOR_DEPTH)
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #define LV_COLOR_MAKE(r8, g8, b8) LV_CONCAT(LV_COLOR_MAKE, LV_COLOR_DEPTH)(r8, g8, b8)
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**********************
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *      TYPEDEFS
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  **********************/
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t full; /*must be declared first to set all bits of byte via initializer list*/
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     union {
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue : 1;
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green : 1;
 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red : 1;
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color1_t;
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue : 2;
 202:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green : 3;
 203:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red : 3;
 204:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 205:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t full;
 206:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color8_t;
 207:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 208:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 209:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 210:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 0
 211:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 212:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green : 6;
 213:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 214:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 215:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green_h : 3;
 216:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t red : 5;
 217:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t blue : 5;
 218:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint16_t green_l : 3;
 219:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 220:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 221:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint16_t full;
 222:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color16_t;
 223:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 224:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef union {
 225:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     struct {
 226:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t blue;
 227:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t green;
 228:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t red;
 229:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         uint8_t alpha;
 230:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     } ch;
 231:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t full;
 232:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color32_t;
 233:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 11


 234:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(uint, LV_COLOR_SIZE, _t) lv_color_int_t;
 235:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef LV_CONCAT3(lv_color, LV_COLOR_DEPTH, _t) lv_color_t;
 236:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 237:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef struct {
 238:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint16_t h;
 239:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t s;
 240:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint8_t v;
 241:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color_hsv_t;
 242:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 243:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 244:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*No idea where the guard is required but else throws warnings in the docs*/
 245:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef uint8_t lv_opa_t;
 246:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @endcond
 247:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 248:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** struct _lv_color_filter_dsc_t;
 249:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 250:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef lv_color_t (*lv_color_filter_cb_t)(const struct _lv_color_filter_dsc_t *, lv_color_t, lv_op
 251:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 252:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef struct _lv_color_filter_dsc_t {
 253:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_filter_cb_t filter_cb;
 254:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     void * user_data;
 255:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_color_filter_dsc_t;
 256:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 257:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** typedef enum {
 258:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_RED,
 259:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PINK,
 260:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_PURPLE,
 261:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_PURPLE,
 262:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_INDIGO,
 263:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE,
 264:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_BLUE,
 265:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_CYAN,
 266:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_TEAL,
 267:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREEN,
 268:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIGHT_GREEN,
 269:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_LIME,
 270:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_YELLOW,
 271:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_AMBER,
 272:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_ORANGE,
 273:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_DEEP_ORANGE,
 274:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BROWN,
 275:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_BLUE_GREY,
 276:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_GREY,
 277:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     _LV_PALETTE_LAST,
 278:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_PALETTE_NONE = 0xff,
 279:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** } lv_palette_t;
 280:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 281:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**********************
 282:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * GLOBAL PROTOTYPES
 283:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  **********************/
 284:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 285:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /*In color conversations:
 286:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * - When converting to bigger color type the LSB weight of 1 LSB is calculated
 287:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *   E.g. 16 bit Red has 5 bits
 288:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *         8 bit Red has 3 bits
 289:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        ----------------------
 290:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        8 bit red LSB = (2^5 - 1) / (2^3 - 1) = 31 / 7 = 4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 12


 291:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *
 292:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * - When calculating to smaller color type simply shift out the LSBs
 293:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *   E.g.  8 bit Red has 3 bits
 294:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        16 bit Red has 5 bits
 295:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *        ----------------------
 296:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  *         Shift right with 5 - 3 = 2
 297:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 298:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to1(lv_color_t color)
 299:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 300:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 301:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 302:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 303:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x4) || (LV_COLOR_GET_G(color) & 0x4) || (LV_COLOR_GET_B(color) & 0
 304:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 305:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 306:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 307:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 308:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 309:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 310:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x10) || (LV_COLOR_GET_G(color) & 0x20) || (LV_COLOR_GET_B(color) &
 311:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 312:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 313:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 314:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 315:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 316:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 317:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if((LV_COLOR_GET_R(color) & 0x80) || (LV_COLOR_GET_G(color) & 0x80) || (LV_COLOR_GET_B(color) &
 318:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 1;
 319:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 320:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else {
 321:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 322:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     }
 323:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 324:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 325:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 326:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint8_t lv_color_to8(lv_color_t color)
 327:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 328:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 329:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 330:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 331:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 332:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFF;
 333:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 334:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 335:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 336:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 337:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 2); /*5 - 3  = 2*/
 338:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 3); /*6 - 3  = 3*/
 339:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 3); /*5 - 2  = 3*/
 340:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 341:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 342:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color8_t ret;
 343:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R8(ret, LV_COLOR_GET_R(color) >> 5); /*8 - 3  = 5*/
 344:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G8(ret, LV_COLOR_GET_G(color) >> 5); /*8 - 3  = 5*/
 345:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B8(ret, LV_COLOR_GET_B(color) >> 6); /*8 - 2  = 6*/
 346:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 347:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 13


 348:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 349:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 350:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint16_t lv_color_to16(lv_color_t color)
 351:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 352:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 353:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 354:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0;
 355:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 356:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFFFF;
 357:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 358:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 359:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) * 4);  /*(2^5 - 1)/(2^3 - 1) = 31/7 = 4*/
 360:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) * 9);  /*(2^6 - 1)/(2^3 - 1) = 63/7 = 9*/
 361:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) * 10); /*(2^5 - 1)/(2^2 - 1) = 31/3 = 10*/
 362:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 363:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 364:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 365:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 366:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color16_t ret;
 367:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R16(ret, LV_COLOR_GET_R(color) >> 3); /*8 - 5  = 3*/
 368:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G16(ret, LV_COLOR_GET_G(color) >> 2); /*8 - 6  = 2*/
 369:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B16(ret, LV_COLOR_GET_B(color) >> 3); /*8 - 5  = 3*/
 370:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 371:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 372:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 373:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 374:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline uint32_t lv_color_to32(lv_color_t color)
 375:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 376:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 1
 377:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     if(color.full == 0)
 378:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFF000000;
 379:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     else
 380:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****         return 0xFFFFFFFF;
 381:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 8
 382:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 383:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, LV_COLOR_GET_R(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 384:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, LV_COLOR_GET_G(color) * 36); /*(2^8 - 1)/(2^3 - 1) = 255/7 = 36*/
 385:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, LV_COLOR_GET_B(color) * 85); /*(2^8 - 1)/(2^2 - 1) = 255/3 = 85*/
 386:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 387:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 388:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 16
 389:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /**
 390:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * The floating point math for conversion is:
 391:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *  valueto = valuefrom * ( (2^bitsto - 1) / (float)(2^bitsfrom - 1) )
 392:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * The faster integer math for conversion is:
 393:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *  valueto = ( valuefrom * multiplier + adder ) >> divisor
 394:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *   multiplier = FLOOR( ( (2^bitsto - 1) << divisor ) / (float)(2^bitsfrom - 1) )
 395:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 396:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * Find the first divisor where ( adder >> divisor ) <= 0
 397:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 398:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * 5-bit to 8-bit: ( 31 * multiplier + adder ) >> divisor = 255
 399:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (31)
 400:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       0           8      7        7       255
 401:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       1          16     14        7       255
 402:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       2          32     28        7       255
 403:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       3          65     25        3       255
 404:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       4         131     19        1       255
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 14


 405:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       5         263      7        0       255
 406:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *
 407:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * 6-bit to 8-bit: 255 = ( 63 * multiplier + adder ) >> divisor
 408:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      * divisor  multiplier  adder  min (0)  max (63)
 409:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       0           4      3        3       255
 410:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       1           8      6        3       255
 411:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       2          16     12        3       255
 412:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       3          32     24        3       255
 413:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       4          64     48        3       255
 414:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       5         129     33        1       255
 415:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      *       6         259      3        0       255
 416:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****      */
 417:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 418:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color32_t ret;
 419:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R32(ret, (LV_COLOR_GET_R(color) * 263 + 7) >> 5);
 420:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G32(ret, (LV_COLOR_GET_G(color) * 259 + 3) >> 6);
 421:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B32(ret, (LV_COLOR_GET_B(color) * 263 + 7) >> 5);
 422:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A32(ret, 0xFF);
 423:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret.full;
 424:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH == 32
 425:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return color.full;
 426:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 427:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** }
 428:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 429:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** //! @cond Doxygen_Suppress
 430:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 431:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** /**
 432:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * Mix two colors with a given ratio.
 433:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param c1 the first color to mix (usually the foreground)
 434:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param c2 the second color to mix (usually the background)
 435:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @param mix The ratio of the colors. 0: full `c2`, 255: full `c1`, 127: half `c1` and half`c2`
 436:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  * @return the mixed color
 437:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****  */
 438:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** static inline lv_color_t LV_ATTRIBUTE_FAST_MEM lv_color_mix(lv_color_t c1, lv_color_t c2, uint8_t m
 250              		.loc 2 438 48 is_stmt 1 view .LVU69
 251              	.LBB7:
 439:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** {
 440:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     lv_color_t ret;
 252              		.loc 2 440 5 view .LVU70
 441:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 442:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_DEPTH == 16 && LV_COLOR_MIX_ROUND_OFS == 0
 443:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 1
 444:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     c1.full = c1.full << 8 | c1.full >> 8;
 445:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     c2.full = c2.full << 8 | c2.full >> 8;
 446:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 447:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*Source: https://stackoverflow.com/a/50012418/1999969*/
 448:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     mix = (uint32_t)((uint32_t)mix + 4) >> 3;
 449:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t bg = (uint32_t)((uint32_t)c2.full | ((uint32_t)c2.full << 16)) &
 450:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                   0x7E0F81F; /*0b00000111111000001111100000011111*/
 451:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t fg = (uint32_t)((uint32_t)c1.full | ((uint32_t)c1.full << 16)) & 0x7E0F81F;
 452:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     uint32_t result = ((((fg - bg) * mix) >> 5) + bg) & 0x7E0F81F;
 453:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = (uint16_t)((result >> 16) | result);
 454:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #if LV_COLOR_16_SWAP == 1
 455:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = ret.full << 8 | ret.full >> 8;
 456:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 457:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #elif LV_COLOR_DEPTH != 1
 458:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 8, 16 or 32*/
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 15


 459:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_R(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_R(c1) * mix + LV_COLOR_GET_R(c2) *
 253              		.loc 2 459 5 view .LVU71
 254 00a8 C6F30745 		ubfx	r5, r6, #16, #8
 255              	.LVL38:
 256              		.loc 2 459 5 is_stmt 0 view .LVU72
 257 00ac C0F30741 		ubfx	r1, r0, #16, #8
 258 00b0 C3F1FF02 		rsb	r2, r3, #255
 259 00b4 02FB01F1 		mul	r1, r2, r1
 260 00b8 03FB0511 		mla	r1, r3, r5, r1
 261 00bc 01EB0125 		add	r5, r1, r1, lsl #8
 262 00c0 01EBC511 		add	r1, r1, r5, lsl #7
 263 00c4 C1F3C751 		ubfx	r1, r1, #23, #8
 264 00c8 0025     		movs	r5, #0
 265              		.loc 2 459 5 view .LVU73
 266 00ca 61F31745 		bfi	r5, r1, #16, #8
 267              	.LVL39:
 460:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 461:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_G(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_G(c1) * mix + LV_COLOR_GET_G(c2) *
 268              		.loc 2 461 5 is_stmt 1 view .LVU74
 269 00ce C6F30727 		ubfx	r7, r6, #8, #8
 270              	.LVL40:
 271              		.loc 2 461 5 is_stmt 0 view .LVU75
 272 00d2 C0F30721 		ubfx	r1, r0, #8, #8
 273 00d6 02FB01F1 		mul	r1, r2, r1
 274 00da 07FB0311 		mla	r1, r7, r3, r1
 275 00de 01EB0127 		add	r7, r1, r1, lsl #8
 276 00e2 01EBC711 		add	r1, r1, r7, lsl #7
 277 00e6 C1F3C751 		ubfx	r1, r1, #23, #8
 278 00ea 61F30F25 		bfi	r5, r1, #8, #8
 462:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 463:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_B(ret, LV_UDIV255((uint16_t)LV_COLOR_GET_B(c1) * mix + LV_COLOR_GET_B(c2) *
 279              		.loc 2 463 5 is_stmt 1 view .LVU76
 280 00ee F6B2     		uxtb	r6, r6
 281 00f0 C0B2     		uxtb	r0, r0
 282 00f2 00FB02F2 		mul	r2, r0, r2
 283 00f6 06FB0323 		mla	r3, r6, r3, r2
 284              	.LVL41:
 285              		.loc 2 463 5 is_stmt 0 view .LVU77
 286 00fa 03EB0322 		add	r2, r3, r3, lsl #8
 287 00fe 03EBC213 		add	r3, r3, r2, lsl #7
 288 0102 C3F3C753 		ubfx	r3, r3, #23, #8
 289 0106 63F30705 		bfi	r5, r3, #0, #8
 464:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****                                    (255 - mix) + LV_COLOR_MIX_ROUND_OFS));
 465:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     LV_COLOR_SET_A(ret, 0xFF);
 290              		.loc 2 465 5 is_stmt 1 view .LVU78
 291 010a 45F07F45 		orr	r5, r5, #-16777216
 292              	.LVL42:
 466:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #else
 467:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     /*LV_COLOR_DEPTH == 1*/
 468:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     ret.full = mix > LV_OPA_50 ? c1.full : c2.full;
 469:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** #endif
 470:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h **** 
 471:d:\kzc\stm32\h743ii_lcd\lvgl\src\misc\lv_color.h ****     return ret;
 293              		.loc 2 471 5 view .LVU79
 294              		.loc 2 471 5 is_stmt 0 view .LVU80
 295              	.LBE7:
 296              	.LBE6:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 16


  23:lvgl/examples/widgets/chart/lv_example_chart_7.c ****                                                lv_palette_main(LV_PALETTE_BLUE),
 297              		.loc 1 23 35 view .LVU81
 298 010e 6560     		str	r5, [r4, #4]
 299              	.LBE5:
  27:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
 300              		.loc 1 27 1 view .LVU82
 301 0110 7FE7     		b	.L3
 302              	.L8:
 303 0112 00BF     		.align	2
 304              	.L7:
 305 0114 1F85EB51 		.word	1374389535
 306 0118 D34D6210 		.word	274877907
 307              		.cfi_endproc
 308              	.LFE204:
 310              		.section	.text.lv_example_chart_7,"ax",%progbits
 311              		.align	1
 312              		.global	lv_example_chart_7
 313              		.syntax unified
 314              		.thumb
 315              		.thumb_func
 317              	lv_example_chart_7:
 318              	.LFB206:
  35:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  36:lvgl/examples/widgets/chart/lv_example_chart_7.c **** /**
  37:lvgl/examples/widgets/chart/lv_example_chart_7.c ****  * A scatter chart
  38:lvgl/examples/widgets/chart/lv_example_chart_7.c ****  */
  39:lvgl/examples/widgets/chart/lv_example_chart_7.c **** void lv_example_chart_7(void)
  40:lvgl/examples/widgets/chart/lv_example_chart_7.c **** {
 319              		.loc 1 40 1 is_stmt 1 view -0
 320              		.cfi_startproc
 321              		@ args = 0, pretend = 0, frame = 0
 322              		@ frame_needed = 0, uses_anonymous_args = 0
 323 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 324              		.cfi_def_cfa_offset 20
 325              		.cfi_offset 4, -20
 326              		.cfi_offset 5, -16
 327              		.cfi_offset 6, -12
 328              		.cfi_offset 7, -8
 329              		.cfi_offset 14, -4
 330 0002 85B0     		sub	sp, sp, #20
 331              		.cfi_def_cfa_offset 40
  41:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_t * chart = lv_chart_create(lv_scr_act());
 332              		.loc 1 41 5 view .LVU84
 333              	.LBB10:
 334              	.LBI10:
 335              		.file 3 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_disp.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @file lv_disp.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifndef LV_DISP_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #define LV_DISP_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 17


  12:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "../hal/lv_hal.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_obj.h"
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** #include "lv_theme.h"
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*********************
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      DEFINES
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *********************/
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  24:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *      TYPEDEFS
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** typedef enum {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** } lv_scr_load_anim_t;
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**********************
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * GLOBAL PROTOTYPES
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  **********************/
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the active screen
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * screen)
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Make a screen active
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 18


  69:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to a screen
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  81:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * layer)
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the theme of a display
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the theme of a display
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return the display's theme (can be NULL)
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background color of a display
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param color color of the background
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set the background image of a display
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Set opacity of the background
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param opa opacity (0..255)
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Switch screen with animation
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param scr pointer to the new screen to load
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 19


 126:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param time time of the animation
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param delay delay before the transition
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Manually trigger an activity on a display
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get display invalidation is enabled.
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return return true if invalidation is enabled
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @param disp pointer to a display
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /*------------------------------------------------
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * To improve backward compatibility
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Recommended only if you have one display
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  *------------------------------------------------*/
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** 
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** /**
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * Get the active screen of the default display
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  * @return pointer to the active screen
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****  */
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 20


 336              		.loc 3 182 26 view .LVU85
 337              	.LBB11:
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h **** {
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src/core\lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
 338              		.loc 3 184 5 view .LVU86
 339              		.loc 3 184 12 is_stmt 0 view .LVU87
 340 0004 FFF7FEFF 		bl	lv_disp_get_default
 341              	.LVL43:
 342 0008 FFF7FEFF 		bl	lv_disp_get_scr_act
 343              	.LVL44:
 344              	.LBE11:
 345              	.LBE10:
 346              		.loc 1 41 24 view .LVU88
 347 000c FFF7FEFF 		bl	lv_chart_create
 348              	.LVL45:
 349 0010 0646     		mov	r6, r0
 350              	.LVL46:
  42:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_set_size(chart, 200, 150);
 351              		.loc 1 42 5 is_stmt 1 view .LVU89
 352 0012 9622     		movs	r2, #150
 353 0014 C821     		movs	r1, #200
 354 0016 FFF7FEFF 		bl	lv_obj_set_size
 355              	.LVL47:
  43:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_align(chart, LV_ALIGN_CENTER, 0, 0);
 356              		.loc 1 43 5 view .LVU90
 357 001a 0023     		movs	r3, #0
 358 001c 1A46     		mov	r2, r3
 359 001e 0921     		movs	r1, #9
 360 0020 3046     		mov	r0, r6
 361 0022 FFF7FEFF 		bl	lv_obj_align
 362              	.LVL48:
  44:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_add_event_cb(chart, draw_event_cb, LV_EVENT_DRAW_PART_BEGIN, NULL);
 363              		.loc 1 44 5 view .LVU91
 364 0026 0023     		movs	r3, #0
 365 0028 1A22     		movs	r2, #26
 366 002a 2E49     		ldr	r1, .L13
 367 002c 3046     		mov	r0, r6
 368 002e FFF7FEFF 		bl	lv_obj_add_event_cb
 369              	.LVL49:
  45:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_obj_set_style_line_width(chart, 0, LV_PART_ITEMS);   /*Remove the lines*/
 370              		.loc 1 45 5 view .LVU92
 371 0032 4FF4A022 		mov	r2, #327680
 372 0036 0021     		movs	r1, #0
 373 0038 3046     		mov	r0, r6
 374 003a FFF7FEFF 		bl	lv_obj_set_style_line_width
 375              	.LVL50:
  46:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  47:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_type(chart, LV_CHART_TYPE_SCATTER);
 376              		.loc 1 47 5 view .LVU93
 377 003e 0321     		movs	r1, #3
 378 0040 3046     		mov	r0, r6
 379 0042 FFF7FEFF 		bl	lv_chart_set_type
 380              	.LVL51:
  48:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  49:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_axis_tick(chart, LV_CHART_AXIS_PRIMARY_X, 5, 5, 5, 1, true, 30);
 381              		.loc 1 49 5 view .LVU94
 382 0046 1E23     		movs	r3, #30
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 21


 383 0048 0393     		str	r3, [sp, #12]
 384 004a 0125     		movs	r5, #1
 385 004c 0295     		str	r5, [sp, #8]
 386 004e 0195     		str	r5, [sp, #4]
 387 0050 0524     		movs	r4, #5
 388 0052 0094     		str	r4, [sp]
 389 0054 2346     		mov	r3, r4
 390 0056 2246     		mov	r2, r4
 391 0058 0221     		movs	r1, #2
 392 005a 3046     		mov	r0, r6
 393 005c FFF7FEFF 		bl	lv_chart_set_axis_tick
 394              	.LVL52:
  50:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_axis_tick(chart, LV_CHART_AXIS_PRIMARY_Y, 10, 5, 6, 5, true, 50);
 395              		.loc 1 50 5 view .LVU95
 396 0060 3227     		movs	r7, #50
 397 0062 0397     		str	r7, [sp, #12]
 398 0064 0295     		str	r5, [sp, #8]
 399 0066 0194     		str	r4, [sp, #4]
 400 0068 0623     		movs	r3, #6
 401 006a 0093     		str	r3, [sp]
 402 006c 2346     		mov	r3, r4
 403 006e 0A22     		movs	r2, #10
 404 0070 0021     		movs	r1, #0
 405 0072 3046     		mov	r0, r6
 406 0074 FFF7FEFF 		bl	lv_chart_set_axis_tick
 407              	.LVL53:
  51:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  52:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_range(chart, LV_CHART_AXIS_PRIMARY_X, 0, 200);
 408              		.loc 1 52 5 view .LVU96
 409 0078 C823     		movs	r3, #200
 410 007a 0022     		movs	r2, #0
 411 007c 0221     		movs	r1, #2
 412 007e 3046     		mov	r0, r6
 413 0080 FFF7FEFF 		bl	lv_chart_set_range
 414              	.LVL54:
  53:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_range(chart, LV_CHART_AXIS_PRIMARY_Y, 0, 1000);
 415              		.loc 1 53 5 view .LVU97
 416 0084 4FF47A73 		mov	r3, #1000
 417 0088 0022     		movs	r2, #0
 418 008a 1146     		mov	r1, r2
 419 008c 3046     		mov	r0, r6
 420 008e FFF7FEFF 		bl	lv_chart_set_range
 421              	.LVL55:
  54:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  55:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_set_point_count(chart, 50);
 422              		.loc 1 55 5 view .LVU98
 423 0092 3946     		mov	r1, r7
 424 0094 3046     		mov	r0, r6
 425 0096 FFF7FEFF 		bl	lv_chart_set_point_count
 426              	.LVL56:
  56:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  57:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_chart_series_t * ser = lv_chart_add_series(chart, lv_palette_main(LV_PALETTE_RED), LV_CHART_
 427              		.loc 1 57 5 view .LVU99
 428              		.loc 1 57 31 is_stmt 0 view .LVU100
 429 009a 0020     		movs	r0, #0
 430 009c FFF7FEFF 		bl	lv_palette_main
 431              	.LVL57:
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 22


 432 00a0 0146     		mov	r1, r0
 433 00a2 0022     		movs	r2, #0
 434 00a4 3046     		mov	r0, r6
 435 00a6 FFF7FEFF 		bl	lv_chart_add_series
 436              	.LVL58:
 437 00aa 0746     		mov	r7, r0
 438              	.LVL59:
  58:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     uint32_t i;
 439              		.loc 1 58 5 is_stmt 1 view .LVU101
  59:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     for(i = 0; i < 50; i++) {
 440              		.loc 1 59 5 view .LVU102
 441              		.loc 1 59 11 is_stmt 0 view .LVU103
 442 00ac 0025     		movs	r5, #0
 443              		.loc 1 59 5 view .LVU104
 444 00ae 10E0     		b	.L10
 445              	.LVL60:
 446              	.L11:
  60:lvgl/examples/widgets/chart/lv_example_chart_7.c ****         lv_chart_set_next_value2(chart, ser, lv_rand(0, 200), lv_rand(0, 1000));
 447              		.loc 1 60 9 is_stmt 1 discriminator 3 view .LVU105
 448              		.loc 1 60 46 is_stmt 0 discriminator 3 view .LVU106
 449 00b0 C821     		movs	r1, #200
 450 00b2 0020     		movs	r0, #0
 451 00b4 FFF7FEFF 		bl	lv_rand
 452              	.LVL61:
 453 00b8 0446     		mov	r4, r0
 454              		.loc 1 60 63 discriminator 3 view .LVU107
 455 00ba 4FF47A71 		mov	r1, #1000
 456 00be 0020     		movs	r0, #0
 457 00c0 FFF7FEFF 		bl	lv_rand
 458              	.LVL62:
 459              		.loc 1 60 9 discriminator 3 view .LVU108
 460 00c4 03B2     		sxth	r3, r0
 461 00c6 22B2     		sxth	r2, r4
 462 00c8 3946     		mov	r1, r7
 463 00ca 3046     		mov	r0, r6
 464 00cc FFF7FEFF 		bl	lv_chart_set_next_value2
 465              	.LVL63:
  59:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     for(i = 0; i < 50; i++) {
 466              		.loc 1 59 24 is_stmt 1 discriminator 3 view .LVU109
  59:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     for(i = 0; i < 50; i++) {
 467              		.loc 1 59 25 is_stmt 0 discriminator 3 view .LVU110
 468 00d0 0135     		adds	r5, r5, #1
 469              	.LVL64:
 470              	.L10:
  59:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     for(i = 0; i < 50; i++) {
 471              		.loc 1 59 16 is_stmt 1 discriminator 1 view .LVU111
  59:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     for(i = 0; i < 50; i++) {
 472              		.loc 1 59 5 is_stmt 0 discriminator 1 view .LVU112
 473 00d2 312D     		cmp	r5, #49
 474 00d4 ECD9     		bls	.L11
  61:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     }
  62:lvgl/examples/widgets/chart/lv_example_chart_7.c **** 
  63:lvgl/examples/widgets/chart/lv_example_chart_7.c ****     lv_timer_create(add_data, 100, chart);
 475              		.loc 1 63 5 is_stmt 1 view .LVU113
 476 00d6 3246     		mov	r2, r6
 477 00d8 6421     		movs	r1, #100
 478 00da 0348     		ldr	r0, .L13+4
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 23


 479 00dc FFF7FEFF 		bl	lv_timer_create
 480              	.LVL65:
  64:lvgl/examples/widgets/chart/lv_example_chart_7.c **** }
 481              		.loc 1 64 1 is_stmt 0 view .LVU114
 482 00e0 05B0     		add	sp, sp, #20
 483              		.cfi_def_cfa_offset 20
 484              		@ sp needed
 485 00e2 F0BD     		pop	{r4, r5, r6, r7, pc}
 486              	.LVL66:
 487              	.L14:
 488              		.loc 1 64 1 view .LVU115
 489              		.align	2
 490              	.L13:
 491 00e4 00000000 		.word	draw_event_cb
 492 00e8 00000000 		.word	add_data
 493              		.cfi_endproc
 494              	.LFE206:
 496              		.text
 497              	.Letext0:
 498              		.file 4 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 499              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 500              		.file 6 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_types.h"
 501              		.file 7 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_timer.h"
 502              		.file 8 "c:\\tools\\gcc-arm-none-eabi\\lib\\gcc\\arm-none-eabi\\10.3.1\\include\\stddef.h"
 503              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 504              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\font\\lv_font.h"
 505              		.file 11 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_txt.h"
 506              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_bidi.h"
 507              		.file 13 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 508              		.file 14 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_img_buf.h"
 509              		.file 15 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj.h"
 510              		.file 16 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_rect.h"
 511              		.file 17 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_label.h"
 512              		.file 18 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_img.h"
 513              		.file 19 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_line.h"
 514              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_arc.h"
 515              		.file 21 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw_layer.h"
 516              		.file 22 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\draw\\lv_draw.h"
 517              		.file 23 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 518              		.file 24 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_group.h"
 519              		.file 25 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_scroll.h"
 520              		.file 26 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style.h"
 521              		.file 27 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_draw.h"
 522              		.file 28 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_class.h"
 523              		.file 29 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_event.h"
 524              		.file 30 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/extra/widgets/chart/lv_chart.h"
 525              		.file 31 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/hal/lv_hal_disp.h"
 526              		.file 32 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
 527              		.file 33 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/core/lv_obj_style_gen.h"
 528              		.file 34 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src/misc/lv_math.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s 			page 24


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_chart_7.c
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:19     .text.add_data:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:24     .text.add_data:00000000 add_data
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:77     .text.draw_event_cb:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:82     .text.draw_event_cb:00000000 draw_event_cb
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:305    .text.draw_event_cb:00000114 $d
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:311    .text.lv_example_chart_7:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:317    .text.lv_example_chart_7:00000000 lv_example_chart_7
C:\Users\OSD\AppData\Local\Temp\ccjiwT27.s:491    .text.lv_example_chart_7:000000e4 $d

UNDEFINED SYMBOLS
lv_chart_get_series_next
lv_rand
lv_chart_set_next_value2
lv_event_get_draw_part_dsc
lv_event_get_target
lv_chart_get_point_count
lv_chart_get_x_array
lv_chart_get_y_array
lv_chart_get_x_start_point
lv_palette_main
lv_disp_get_default
lv_disp_get_scr_act
lv_chart_create
lv_obj_set_size
lv_obj_align
lv_obj_add_event_cb
lv_obj_set_style_line_width
lv_chart_set_type
lv_chart_set_axis_tick
lv_chart_set_range
lv_chart_set_point_count
lv_chart_add_series
lv_timer_create
