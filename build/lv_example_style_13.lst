ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 1


   1              		.cpu cortex-m7
   2              		.arch armv7e-m
   3              		.fpu fpv5-d16
   4              		.eabi_attribute 28, 1
   5              		.eabi_attribute 20, 1
   6              		.eabi_attribute 21, 1
   7              		.eabi_attribute 23, 3
   8              		.eabi_attribute 24, 1
   9              		.eabi_attribute 25, 1
  10              		.eabi_attribute 26, 1
  11              		.eabi_attribute 30, 1
  12              		.eabi_attribute 34, 1
  13              		.eabi_attribute 18, 4
  14              		.file	"lv_example_style_13.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.lv_example_style_13,"ax",%progbits
  19              		.align	1
  20              		.global	lv_example_style_13
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	lv_example_style_13:
  26              	.LFB204:
  27              		.file 1 "lvgl/examples/styles/lv_example_style_13.c"
   1:lvgl/examples/styles/lv_example_style_13.c **** #include "../lv_examples.h"
   2:lvgl/examples/styles/lv_example_style_13.c **** #if LV_BUILD_EXAMPLES && LV_USE_IMG
   3:lvgl/examples/styles/lv_example_style_13.c **** 
   4:lvgl/examples/styles/lv_example_style_13.c **** /**
   5:lvgl/examples/styles/lv_example_style_13.c ****  * Add styles to parts and states
   6:lvgl/examples/styles/lv_example_style_13.c ****  */
   7:lvgl/examples/styles/lv_example_style_13.c **** void lv_example_style_13(void)
   8:lvgl/examples/styles/lv_example_style_13.c **** {
  28              		.loc 1 8 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 70B5     		push	{r4, r5, r6, lr}
  33              		.cfi_def_cfa_offset 16
  34              		.cfi_offset 4, -16
  35              		.cfi_offset 5, -12
  36              		.cfi_offset 6, -8
  37              		.cfi_offset 14, -4
   9:lvgl/examples/styles/lv_example_style_13.c ****     static lv_style_t style_indic;
  38              		.loc 1 9 5 view .LVU1
  10:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_init(&style_indic);
  39              		.loc 1 10 5 view .LVU2
  40 0002 234E     		ldr	r6, .L3
  41 0004 3046     		mov	r0, r6
  42 0006 FFF7FEFF 		bl	lv_style_init
  43              	.LVL0:
  11:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_bg_color(&style_indic, lv_palette_lighten(LV_PALETTE_RED, 3));
  44              		.loc 1 11 5 view .LVU3
  45 000a 0321     		movs	r1, #3
  46 000c 0020     		movs	r0, #0
  47 000e FFF7FEFF 		bl	lv_palette_lighten
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 2


  48              	.LVL1:
  49 0012 0146     		mov	r1, r0
  50 0014 3046     		mov	r0, r6
  51 0016 FFF7FEFF 		bl	lv_style_set_bg_color
  52              	.LVL2:
  12:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_bg_grad_color(&style_indic, lv_palette_main(LV_PALETTE_RED));
  53              		.loc 1 12 5 view .LVU4
  54 001a 0020     		movs	r0, #0
  55 001c FFF7FEFF 		bl	lv_palette_main
  56              	.LVL3:
  57 0020 0146     		mov	r1, r0
  58 0022 3046     		mov	r0, r6
  59 0024 FFF7FEFF 		bl	lv_style_set_bg_grad_color
  60              	.LVL4:
  13:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_bg_grad_dir(&style_indic, LV_GRAD_DIR_HOR);
  61              		.loc 1 13 5 view .LVU5
  62 0028 0221     		movs	r1, #2
  63 002a 3046     		mov	r0, r6
  64 002c FFF7FEFF 		bl	lv_style_set_bg_grad_dir
  65              	.LVL5:
  14:lvgl/examples/styles/lv_example_style_13.c **** 
  15:lvgl/examples/styles/lv_example_style_13.c ****     static lv_style_t style_indic_pr;
  66              		.loc 1 15 5 view .LVU6
  16:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_init(&style_indic_pr);
  67              		.loc 1 16 5 view .LVU7
  68 0030 184D     		ldr	r5, .L3+4
  69 0032 2846     		mov	r0, r5
  70 0034 FFF7FEFF 		bl	lv_style_init
  71              	.LVL6:
  17:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_shadow_color(&style_indic_pr, lv_palette_main(LV_PALETTE_RED));
  72              		.loc 1 17 5 view .LVU8
  73 0038 0020     		movs	r0, #0
  74 003a FFF7FEFF 		bl	lv_palette_main
  75              	.LVL7:
  76 003e 0146     		mov	r1, r0
  77 0040 2846     		mov	r0, r5
  78 0042 FFF7FEFF 		bl	lv_style_set_shadow_color
  79              	.LVL8:
  18:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_shadow_width(&style_indic_pr, 10);
  80              		.loc 1 18 5 view .LVU9
  81 0046 0A21     		movs	r1, #10
  82 0048 2846     		mov	r0, r5
  83 004a FFF7FEFF 		bl	lv_style_set_shadow_width
  84              	.LVL9:
  19:lvgl/examples/styles/lv_example_style_13.c ****     lv_style_set_shadow_spread(&style_indic_pr, 3);
  85              		.loc 1 19 5 view .LVU10
  86 004e 0321     		movs	r1, #3
  87 0050 2846     		mov	r0, r5
  88 0052 FFF7FEFF 		bl	lv_style_set_shadow_spread
  89              	.LVL10:
  20:lvgl/examples/styles/lv_example_style_13.c **** 
  21:lvgl/examples/styles/lv_example_style_13.c ****     /*Create an object with the new style_pr*/
  22:lvgl/examples/styles/lv_example_style_13.c ****     lv_obj_t * obj = lv_slider_create(lv_scr_act());
  90              		.loc 1 22 5 view .LVU11
  91              	.LBB12:
  92              	.LBI12:
  93              		.file 2 "lvgl/examples/styles/../../src/core/lv_disp.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 3


   1:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
   2:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @file lv_disp.h
   3:lvgl/examples/styles/../../src/core/lv_disp.h ****  *
   4:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
   5:lvgl/examples/styles/../../src/core/lv_disp.h **** 
   6:lvgl/examples/styles/../../src/core/lv_disp.h **** #ifndef LV_DISP_H
   7:lvgl/examples/styles/../../src/core/lv_disp.h **** #define LV_DISP_H
   8:lvgl/examples/styles/../../src/core/lv_disp.h **** 
   9:lvgl/examples/styles/../../src/core/lv_disp.h **** #ifdef __cplusplus
  10:lvgl/examples/styles/../../src/core/lv_disp.h **** extern "C" {
  11:lvgl/examples/styles/../../src/core/lv_disp.h **** #endif
  12:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  13:lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  14:lvgl/examples/styles/../../src/core/lv_disp.h ****  *      INCLUDES
  15:lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  16:lvgl/examples/styles/../../src/core/lv_disp.h **** #include "../hal/lv_hal.h"
  17:lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_obj.h"
  18:lvgl/examples/styles/../../src/core/lv_disp.h **** #include "lv_theme.h"
  19:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  20:lvgl/examples/styles/../../src/core/lv_disp.h **** /*********************
  21:lvgl/examples/styles/../../src/core/lv_disp.h ****  *      DEFINES
  22:lvgl/examples/styles/../../src/core/lv_disp.h ****  *********************/
  23:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  24:lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  25:lvgl/examples/styles/../../src/core/lv_disp.h ****  *      TYPEDEFS
  26:lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  27:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  28:lvgl/examples/styles/../../src/core/lv_disp.h **** typedef enum {
  29:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_NONE,
  30:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_LEFT,
  31:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_RIGHT,
  32:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_TOP,
  33:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OVER_BOTTOM,
  34:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_LEFT,
  35:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_RIGHT,
  36:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_TOP,
  37:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_MOVE_BOTTOM,
  38:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_IN,
  39:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_ON = LV_SCR_LOAD_ANIM_FADE_IN, /*For backward compatibility*/
  40:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_FADE_OUT,
  41:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_LEFT,
  42:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_RIGHT,
  43:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_TOP,
  44:lvgl/examples/styles/../../src/core/lv_disp.h ****     LV_SCR_LOAD_ANIM_OUT_BOTTOM,
  45:lvgl/examples/styles/../../src/core/lv_disp.h **** } lv_scr_load_anim_t;
  46:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  47:lvgl/examples/styles/../../src/core/lv_disp.h **** /**********************
  48:lvgl/examples/styles/../../src/core/lv_disp.h ****  * GLOBAL PROTOTYPES
  49:lvgl/examples/styles/../../src/core/lv_disp.h ****  **********************/
  50:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  51:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  52:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the active screen
  53:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which active screen should be get. (NULL to use the default
  54:lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  55:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen object (loaded by 'lv_scr_load()')
  56:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  57:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_act(lv_disp_t * disp);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 4


  58:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  59:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  60:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with a pointer to the previous screen. Only used during screen transitions.
  61:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which previous screen should be get. (NULL to use the default
  62:lvgl/examples/styles/../../src/core/lv_disp.h ****  * screen)
  63:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the previous screen object or NULL if not used now
  64:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  65:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_scr_prev(lv_disp_t * disp);
  66:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  67:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  68:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Make a screen active
  69:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to a screen
  70:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  71:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_load_scr(lv_obj_t * scr);
  72:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  73:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  74:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the top layer. (Same on every screen and it is above the normal screen layer)
  75:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which top layer should be get. (NULL to use the default screen)
  76:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the top layer object (transparent screen sized lv_obj)
  77:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  78:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_top(lv_disp_t * disp);
  79:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  80:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  81:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Return with the sys. layer. (Same on every screen and it is above the normal screen and the top
  82:lvgl/examples/styles/../../src/core/lv_disp.h ****  * layer)
  83:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to display which sys. layer should be retrieved. (NULL to use the default sc
  84:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the sys layer object (transparent screen sized lv_obj)
  85:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  86:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_obj_t * lv_disp_get_layer_sys(lv_disp_t * disp);
  87:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  88:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  89:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the theme of a display
  90:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  91:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  92:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_theme(lv_disp_t * disp, lv_theme_t * th);
  93:lvgl/examples/styles/../../src/core/lv_disp.h **** 
  94:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
  95:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the theme of a display
  96:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
  97:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return the display's theme (can be NULL)
  98:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
  99:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_theme_t * lv_disp_get_theme(lv_disp_t * disp);
 100:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 101:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 102:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background color of a display
 103:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 104:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param color color of the background
 105:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 106:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_color(lv_disp_t * disp, lv_color_t color);
 107:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 108:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 109:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set the background image of a display
 110:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 111:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param img_src path to file or pointer to an `lv_img_dsc_t` variable
 112:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 113:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_image(lv_disp_t * disp, const void  * img_src);
 114:lvgl/examples/styles/../../src/core/lv_disp.h **** 
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 5


 115:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 116:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Set opacity of the background
 117:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 118:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param opa opacity (0..255)
 119:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 120:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_set_bg_opa(lv_disp_t * disp, lv_opa_t opa);
 121:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 122:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 123:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Switch screen with animation
 124:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param scr pointer to the new screen to load
 125:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param anim_type type of the animation from `lv_scr_load_anim_t`, e.g. `LV_SCR_LOAD_ANIM_MOVE_LE
 126:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param time time of the animation
 127:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param delay delay before the transition
 128:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param auto_del true: automatically delete the old screen
 129:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 130:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_scr_load_anim(lv_obj_t * scr, lv_scr_load_anim_t anim_type, uint32_t time, uint32_t delay, 
 131:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 132:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 133:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get elapsed time since last user activity on a display (e.g. click)
 134:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to get the overall smallest inactivity)
 135:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return elapsed ticks (milliseconds) since the last activity
 136:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 137:lvgl/examples/styles/../../src/core/lv_disp.h **** uint32_t lv_disp_get_inactive_time(const lv_disp_t * disp);
 138:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 139:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 140:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Manually trigger an activity on a display
 141:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 142:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 143:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_trig_activity(lv_disp_t * disp);
 144:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 145:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 146:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Clean any CPU cache that is related to the display.
 147:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 148:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 149:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_clean_dcache(lv_disp_t * disp);
 150:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 151:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 152:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Temporarily enable and disable the invalidation of the display.
 153:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 154:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param en true: enable invalidation; false: invalidation
 155:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 156:lvgl/examples/styles/../../src/core/lv_disp.h **** void lv_disp_enable_invalidation(lv_disp_t * disp, bool en);
 157:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 158:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 159:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get display invalidation is enabled.
 160:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display (NULL to use the default display)
 161:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return return true if invalidation is enabled
 162:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 163:lvgl/examples/styles/../../src/core/lv_disp.h **** bool lv_disp_is_invalidation_enabled(lv_disp_t * disp);
 164:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 165:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 166:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get a pointer to the screen refresher timer to
 167:lvgl/examples/styles/../../src/core/lv_disp.h ****  * modify its parameters with `lv_timer_...` functions.
 168:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @param disp pointer to a display
 169:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the display refresher timer. (NULL on error)
 170:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 171:lvgl/examples/styles/../../src/core/lv_disp.h **** lv_timer_t * _lv_disp_get_refr_timer(lv_disp_t * disp);
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 6


 172:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 173:lvgl/examples/styles/../../src/core/lv_disp.h **** /*------------------------------------------------
 174:lvgl/examples/styles/../../src/core/lv_disp.h ****  * To improve backward compatibility
 175:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Recommended only if you have one display
 176:lvgl/examples/styles/../../src/core/lv_disp.h ****  *------------------------------------------------*/
 177:lvgl/examples/styles/../../src/core/lv_disp.h **** 
 178:lvgl/examples/styles/../../src/core/lv_disp.h **** /**
 179:lvgl/examples/styles/../../src/core/lv_disp.h ****  * Get the active screen of the default display
 180:lvgl/examples/styles/../../src/core/lv_disp.h ****  * @return pointer to the active screen
 181:lvgl/examples/styles/../../src/core/lv_disp.h ****  */
 182:lvgl/examples/styles/../../src/core/lv_disp.h **** static inline lv_obj_t * lv_scr_act(void)
  94              		.loc 2 182 26 view .LVU12
  95              	.LBB13:
 183:lvgl/examples/styles/../../src/core/lv_disp.h **** {
 184:lvgl/examples/styles/../../src/core/lv_disp.h ****     return lv_disp_get_scr_act(lv_disp_get_default());
  96              		.loc 2 184 5 view .LVU13
  97              		.loc 2 184 12 is_stmt 0 view .LVU14
  98 0056 FFF7FEFF 		bl	lv_disp_get_default
  99              	.LVL11:
 100 005a FFF7FEFF 		bl	lv_disp_get_scr_act
 101              	.LVL12:
 102              	.LBE13:
 103              	.LBE12:
 104              		.loc 1 22 22 view .LVU15
 105 005e FFF7FEFF 		bl	lv_slider_create
 106              	.LVL13:
 107 0062 0446     		mov	r4, r0
 108              	.LVL14:
  23:lvgl/examples/styles/lv_example_style_13.c ****     lv_obj_add_style(obj, &style_indic, LV_PART_INDICATOR);
 109              		.loc 1 23 5 is_stmt 1 view .LVU16
 110 0064 4FF40032 		mov	r2, #131072
 111 0068 3146     		mov	r1, r6
 112 006a FFF7FEFF 		bl	lv_obj_add_style
 113              	.LVL15:
  24:lvgl/examples/styles/lv_example_style_13.c ****     lv_obj_add_style(obj, &style_indic_pr, LV_PART_INDICATOR | LV_STATE_PRESSED);
 114              		.loc 1 24 5 view .LVU17
 115 006e 0A4A     		ldr	r2, .L3+8
 116 0070 2946     		mov	r1, r5
 117 0072 2046     		mov	r0, r4
 118 0074 FFF7FEFF 		bl	lv_obj_add_style
 119              	.LVL16:
  25:lvgl/examples/styles/lv_example_style_13.c ****     lv_slider_set_value(obj, 70, LV_ANIM_OFF);
 120              		.loc 1 25 5 view .LVU18
 121              	.LBB14:
 122              	.LBI14:
 123              		.file 3 "lvgl/examples/styles/../../src/widgets/lv_slider.h"
   1:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**
   2:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @file lv_slider.h
   3:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *
   4:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  */
   5:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
   6:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #ifndef LV_SLIDER_H
   7:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #define LV_SLIDER_H
   8:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
   9:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #ifdef __cplusplus
  10:lvgl/examples/styles/../../src/widgets/lv_slider.h **** extern "C" {
  11:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #endif
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 7


  12:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  13:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /*********************
  14:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *      INCLUDES
  15:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *********************/
  16:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #include "../lv_conf_internal.h"
  17:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  18:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #if LV_USE_SLIDER != 0
  19:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  20:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /*Testing of dependencies*/
  21:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #if LV_USE_BAR == 0
  22:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #error "lv_slider: lv_bar is required. Enable it in lv_conf.h (LV_USE_BAR 1)"
  23:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #endif
  24:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  25:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #include "../core/lv_obj.h"
  26:lvgl/examples/styles/../../src/widgets/lv_slider.h **** #include "lv_bar.h"
  27:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  28:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /*********************
  29:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *      DEFINES
  30:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *********************/
  31:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  32:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**********************
  33:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *      TYPEDEFS
  34:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  **********************/
  35:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  36:lvgl/examples/styles/../../src/widgets/lv_slider.h **** enum {
  37:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_NORMAL = LV_BAR_MODE_NORMAL,
  38:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_SYMMETRICAL = LV_BAR_MODE_SYMMETRICAL,
  39:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     LV_SLIDER_MODE_RANGE = LV_BAR_MODE_RANGE
  40:lvgl/examples/styles/../../src/widgets/lv_slider.h **** };
  41:lvgl/examples/styles/../../src/widgets/lv_slider.h **** typedef uint8_t lv_slider_mode_t;
  42:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  43:lvgl/examples/styles/../../src/widgets/lv_slider.h **** typedef struct {
  44:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     lv_bar_t bar;       /*Add the ancestor's type first*/
  45:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     lv_area_t left_knob_area;
  46:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     lv_area_t right_knob_area;
  47:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     int32_t * value_to_set; /*Which bar value to set*/
  48:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     uint8_t dragging : 1;       /*1: the slider is being dragged*/
  49:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     uint8_t left_knob_focus : 1; /*1: with encoder now the right knob can be adjusted*/
  50:lvgl/examples/styles/../../src/widgets/lv_slider.h **** } lv_slider_t;
  51:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  52:lvgl/examples/styles/../../src/widgets/lv_slider.h **** extern const lv_obj_class_t lv_slider_class;
  53:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  54:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**
  55:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * `type` field in `lv_obj_draw_part_dsc_t` if `class_p = lv_slider_class`
  56:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * Used in `LV_EVENT_DRAW_PART_BEGIN` and `LV_EVENT_DRAW_PART_END`
  57:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  */
  58:lvgl/examples/styles/../../src/widgets/lv_slider.h **** typedef enum {
  59:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB,           /**< The main (right) knob's rectangle*/
  60:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     LV_SLIDER_DRAW_PART_KNOB_LEFT,      /**< The left knob's rectangle*/
  61:lvgl/examples/styles/../../src/widgets/lv_slider.h **** } lv_slider_draw_part_type_t;
  62:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  63:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**********************
  64:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * GLOBAL PROTOTYPES
  65:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  **********************/
  66:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  67:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**
  68:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * Create a slider object
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 8


  69:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @param parent    pointer to an object, it will be the parent of the new slider.
  70:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @return          pointer to the created slider
  71:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  */
  72:lvgl/examples/styles/../../src/widgets/lv_slider.h **** lv_obj_t * lv_slider_create(lv_obj_t * parent);
  73:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  74:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /*=====================
  75:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * Setter functions
  76:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  *====================*/
  77:lvgl/examples/styles/../../src/widgets/lv_slider.h **** 
  78:lvgl/examples/styles/../../src/widgets/lv_slider.h **** /**
  79:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * Set a new value on the slider
  80:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @param obj       pointer to a slider object
  81:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @param value     the new value
  82:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  * @param anim      LV_ANIM_ON: set the value with an animation; LV_ANIM_OFF: change the value imme
  83:lvgl/examples/styles/../../src/widgets/lv_slider.h ****  */
  84:lvgl/examples/styles/../../src/widgets/lv_slider.h **** static inline void lv_slider_set_value(lv_obj_t * obj, int32_t value, lv_anim_enable_t anim)
 124              		.loc 3 84 20 view .LVU19
 125              	.LBB15:
  85:lvgl/examples/styles/../../src/widgets/lv_slider.h **** {
  86:lvgl/examples/styles/../../src/widgets/lv_slider.h ****     lv_bar_set_value(obj, value, anim);
 126              		.loc 3 86 5 view .LVU20
 127 0078 0022     		movs	r2, #0
 128 007a 4621     		movs	r1, #70
 129 007c 2046     		mov	r0, r4
 130 007e FFF7FEFF 		bl	lv_bar_set_value
 131              	.LVL17:
 132              		.loc 3 86 5 is_stmt 0 view .LVU21
 133              	.LBE15:
 134              	.LBE14:
  26:lvgl/examples/styles/lv_example_style_13.c ****     lv_obj_center(obj);
 135              		.loc 1 26 5 is_stmt 1 view .LVU22
 136              	.LBB16:
 137              	.LBI16:
 138              		.file 4 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\core\\lv_obj_pos.h"
   1:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
   2:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @file lv_obj_pos.h
   3:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *
   4:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
   5:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   6:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifndef LV_OBJ_POS_H
   7:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #define LV_OBJ_POS_H
   8:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
   9:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #ifdef __cplusplus
  10:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** extern "C" {
  11:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #endif
  12:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  13:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  14:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      INCLUDES
  15:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  16:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** #include "../misc/lv_area.h"
  17:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  18:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /*********************
  19:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      DEFINES
  20:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *********************/
  21:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  22:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  23:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *      TYPEDEFS
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 9


  24:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  25:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** struct _lv_obj_t;
  26:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  27:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef void (*lv_layout_update_cb_t)(struct _lv_obj_t *, void * user_data);
  28:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** typedef struct {
  29:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_layout_update_cb_t cb;
  30:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     void * user_data;
  31:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** } lv_layout_dsc_t;
  32:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  33:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**********************
  34:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * GLOBAL PROTOTYPES
  35:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  **********************/
  36:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  37:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  38:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the position of an object relative to the set alignment.
  39:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  40:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  41:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  42:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  43:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  44:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  45:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  46:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  47:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_pos(struct _lv_obj_t * obj, lv_coord_t x, lv_coord_t y);
  48:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  49:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  50:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the x coordinate of an object
  51:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  52:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x         new x coordinate
  53:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  54:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  55:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  56:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  57:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  58:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_x(struct _lv_obj_t * obj, lv_coord_t x);
  59:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  60:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  61:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the y coordinate of an object
  62:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  63:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y         new y coordinate
  64:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            With default alignment it's the distance from the top left corner
  65:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            E.g. LV_ALIGN_CENTER alignment it's the offset from the center of the parent
  66:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The position is interpreted on the content area of the parent
  67:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            The values can be set in pixel or in percentage of parent size with `lv_pct(v)`
  68:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  69:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_y(struct _lv_obj_t * obj, lv_coord_t y);
  70:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  71:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  72:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the size of an object.
  73:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  74:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  75:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
  76:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  77:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  78:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  79:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_PCT(x)     to set size in percentage of the parent's content area size 
  80:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 10


  81:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  82:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_size(struct _lv_obj_t * obj, lv_coord_t w, lv_coord_t h);
  83:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  84:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  85:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Recalculate the size of the object
  86:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  87:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          true: the size has been changed
  88:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
  89:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_refr_size(struct _lv_obj_t * obj);
  90:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
  91:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
  92:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width of an object
  93:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
  94:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the new width
  95:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
  96:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
  97:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
  98:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
  99:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 100:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 101:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_width(struct _lv_obj_t * obj, lv_coord_t w);
 102:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 103:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 104:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height of an object
 105:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 106:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the new height
 107:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            possible values are:
 108:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  pixel               simple set the size accordingly
 109:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  LV_SIZE_CONTENT     set the size to involve all children in the given direction
 110:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                  lv_pct(x)           to set size in percentage of the parent's content area size
 111:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  *                                      x should be in [0..1000]% range
 112:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 113:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_height(struct _lv_obj_t * obj, lv_coord_t h);
 114:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 115:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 116:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the width reduced by the left and right padding and the border width.
 117:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 118:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param w         the width without paddings in pixels
 119:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 120:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_width(struct _lv_obj_t * obj, lv_coord_t w);
 121:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 122:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 123:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set the height reduced by the top and bottom padding and the border width.
 124:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 125:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param h         the height without paddings in pixels
 126:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 127:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_content_height(struct _lv_obj_t * obj, lv_coord_t h);
 128:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 129:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 130:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Set a layout for an object
 131:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object
 132:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param layout    pointer to a layout descriptor to set
 133:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 134:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_layout(struct _lv_obj_t * obj, uint32_t layout);
 135:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 136:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 137:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Test whether the and object is positioned by a layout or not
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 11


 138:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to test
 139:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return true:    positioned by a layout; false: not positioned by a layout
 140:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 141:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** bool lv_obj_is_layout_positioned(const struct _lv_obj_t * obj);
 142:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 143:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 144:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Mark the object for layout update.
 145:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 146:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 147:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_mark_layout_as_dirty(struct _lv_obj_t * obj);
 148:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 149:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 150:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Update the layout of an object.
 151:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj      pointer to an object whose children needs to be updated
 152:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 153:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_update_layout(const struct _lv_obj_t * obj);
 154:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 155:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 156:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Register a new layout
 157:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param cb        the layout update callback
 158:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param user_data custom data that will be passed to `cb`
 159:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @return          the ID of the new layout
 160:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 161:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** uint32_t lv_layout_register(lv_layout_update_cb_t cb, void * user_data);
 162:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 163:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 164:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object.
 165:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 166:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 167:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 168:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_set_align(struct _lv_obj_t * obj, lv_align_t align);
 169:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 170:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 171:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Change the alignment of an object and set new coordinates.
 172:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Equivalent to:
 173:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_align(obj, align);
 174:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * lv_obj_set_pos(obj, x_ofs, y_ofs);
 175:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 176:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum) `LV_ALIGN_OUT_...` can't be used.
 177:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 178:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 179:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 180:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align(struct _lv_obj_t * obj, lv_align_t align, lv_coord_t x_ofs, lv_coord_t y_ofs);
 181:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 182:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
 183:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to an other object.
 184:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 185:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param base      pointer to an other object (if NULL `obj`s parent is used). 'obj' will be align
 186:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param align     type of alignment (see 'lv_align_t' enum)
 187:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param x_ofs     x coordinate offset after alignment
 188:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param y_ofs     y coordinate offset after alignment
 189:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the position or size of `base` changes `obj` needs to be aligned manually ag
 190:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 191:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** void lv_obj_align_to(struct _lv_obj_t * obj, const struct _lv_obj_t * base, lv_align_t align, lv_co
 192:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****                      lv_coord_t y_ofs);
 193:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** 
 194:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** /**
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 12


 195:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * Align an object to the center on its parent.
 196:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @param obj       pointer to an object to align
 197:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  * @note            if the parent size changes `obj` needs to be aligned manually again
 198:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****  */
 199:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** static inline void lv_obj_center(struct _lv_obj_t * obj)
 139              		.loc 4 199 20 view .LVU23
 140              	.LBB17:
 200:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h **** {
 201:d:\kzc\stm32\h743ii_lcd\lvgl\src\core\lv_obj_pos.h ****     lv_obj_align(obj, LV_ALIGN_CENTER, 0, 0);
 141              		.loc 4 201 5 view .LVU24
 142 0082 0023     		movs	r3, #0
 143 0084 1A46     		mov	r2, r3
 144 0086 0921     		movs	r1, #9
 145 0088 2046     		mov	r0, r4
 146 008a FFF7FEFF 		bl	lv_obj_align
 147              	.LVL18:
 148              		.loc 4 201 5 is_stmt 0 view .LVU25
 149              	.LBE17:
 150              	.LBE16:
  27:lvgl/examples/styles/lv_example_style_13.c **** }
 151              		.loc 1 27 1 view .LVU26
 152 008e 70BD     		pop	{r4, r5, r6, pc}
 153              	.LVL19:
 154              	.L4:
 155              		.loc 1 27 1 view .LVU27
 156              		.align	2
 157              	.L3:
 158 0090 00000000 		.word	.LANCHOR0
 159 0094 00000000 		.word	.LANCHOR1
 160 0098 20000200 		.word	131104
 161              		.cfi_endproc
 162              	.LFE204:
 164              		.section	.bss.style_indic.1,"aw",%nobits
 165              		.align	2
 166              		.set	.LANCHOR0,. + 0
 169              	style_indic.1:
 170 0000 00000000 		.space	8
 170      00000000 
 171              		.section	.bss.style_indic_pr.0,"aw",%nobits
 172              		.align	2
 173              		.set	.LANCHOR1,. + 0
 176              	style_indic_pr.0:
 177 0000 00000000 		.space	8
 177      00000000 
 178              		.text
 179              	.Letext0:
 180              		.file 5 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\machine\\_default_types.h"
 181              		.file 6 "c:\\tools\\gcc-arm-none-eabi\\arm-none-eabi\\include\\sys\\_stdint.h"
 182              		.file 7 "lvgl/examples/styles/../../src/misc/lv_anim.h"
 183              		.file 8 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_area.h"
 184              		.file 9 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_color.h"
 185              		.file 10 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style.h"
 186              		.file 11 "lvgl/examples/styles/../../src/core/lv_obj.h"
 187              		.file 12 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_ll.h"
 188              		.file 13 "lvgl/examples/styles/../../src/core/lv_group.h"
 189              		.file 14 "lvgl/examples/styles/../../src/core/lv_obj_scroll.h"
 190              		.file 15 "lvgl/examples/styles/../../src/core/lv_obj_style.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 13


 191              		.file 16 "lvgl/examples/styles/../../src/core/lv_obj_class.h"
 192              		.file 17 "lvgl/examples/styles/../../src/core/lv_event.h"
 193              		.file 18 "lvgl/examples/styles/../../src/hal/lv_hal_disp.h"
 194              		.file 19 "lvgl/examples/styles/../../src/widgets/lv_bar.h"
 195              		.file 20 "d:\\kzc\\stm32\\h743ii_lcd\\lvgl\\src\\misc\\lv_style_gen.h"
ARM GAS  C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s 			page 14


DEFINED SYMBOLS
                            *ABS*:00000000 lv_example_style_13.c
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:19     .text.lv_example_style_13:00000000 $t
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:25     .text.lv_example_style_13:00000000 lv_example_style_13
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:158    .text.lv_example_style_13:00000090 $d
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:165    .bss.style_indic.1:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:169    .bss.style_indic.1:00000000 style_indic.1
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:172    .bss.style_indic_pr.0:00000000 $d
C:\Users\OSD\AppData\Local\Temp\ccvFRnbe.s:176    .bss.style_indic_pr.0:00000000 style_indic_pr.0

UNDEFINED SYMBOLS
lv_style_init
lv_palette_lighten
lv_style_set_bg_color
lv_palette_main
lv_style_set_bg_grad_color
lv_style_set_bg_grad_dir
lv_style_set_shadow_color
lv_style_set_shadow_width
lv_style_set_shadow_spread
lv_disp_get_default
lv_disp_get_scr_act
lv_slider_create
lv_obj_add_style
lv_bar_set_value
lv_obj_align
